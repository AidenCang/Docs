{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e0d\u79ef\u8dec\u6b65\u65e0\u4ee5\u81f3 --- 2019 \u65b0\u7684\u4e00\u5e74\uff0c\u65b0\u7684\u5f00\u59cb\uff0c\u505a\u5f00\u53d1\u4e5f\u67095\u5e74\u6709\u4f59\uff0c\u5728\u5927\u516c\u53f8\u3001\u5c0f\u516c\u53f8\u90fd\u6709\u5de5\u4f5c\u7ecf\u9a8c\uff0c\u73b0\u5728\u5728\u4e00\u5bb6\u521b\u4e1a\u516c\u53f8\u505a\u7814\u53d1\u7ba1\u7406\u5de5\u4f5c\uff0c \u4e94\u5e74\u65f6\u95f4\uff0c\u65ad\u65ad\u7eed\u7eed\u5199\u8fc7\u4e0d\u5c11\u7684blog\uff0c\u6ca1\u6709\u6210\u4f53\u7cfb\u548c\u603b\u7ed3\uff0c\u5f88\u51cc\u4e71\uff0c\u5728\u5f88\u591a\u5e73\u53f0\u4e0a\u90fd\u53d1\u5e03\u8fc7\u81ea\u5df1\u7684\u6587\u7ae0\uff0c\u603b\u662f\u4e0d\u80fd\u575a\u6301 \u957f\u65f6\u95f4\u7684\u575a\u6301\u5199\u4f5c\uff0c\u4e5f\u6ca1\u6709\u628a\u81ea\u5df1\u7684\u7ecf\u9a8c\u603b\u5171\u7cfb\u7edf\u7684\u603b\u7ed3\uff0c\u5728\u5de5\u4f5c\u603b\u5f88\u591a\u4e1c\u897f\u90fd\u662f\u5728\u91cd\u590d\u7740\uff0c\u6ca1\u6709\u5427\u505a\u8fc7\u7684\u4e1c\u897f\u505a\u6210\u6a21\u677f \u6bcf\u4e00\u6b21\u9700\u8981\uff0c\u603b\u662f\u5230\u5904\u4e1c\u62fc\u897f\u51d1\uff0c\u767e\u5ea6\u3001Google\u5230\u5904\u67e5\u627e\uff0c\u6ca1\u6709\u4e00\u4e2areview\u7684\u8fc7\u7a0b\u3002 2019\uff0c\u5bf9\u81ea\u5df1\u8fc7\u53bb\u51e0\u5e74\u7684\u53cd\u601d\uff0c\u5bf9\u672a\u6765\u7684\u61a7\u61ac\uff0c\u89c4\u5212\u81ea\u5df1\u63a5\u4e0b\u6765\u8981\u505a\u7684flag: 1.\u82f1\u8bed\u73b0\u5728\u80fd\u591f\u9605\u8bfb\u82f1\u6587\u6587\u6863\uff0c\u6ca1\u6709\u538b\u529b\uff0c\u5728\u63a5\u4e0b\u6765\u4e00\u5e74\u7684\u65f6\u95f4\u91cc\u63d0\u9ad8\u81ea\u5df1\u7684\u53e3\u8bed\uff0c\u542c\u529b\uff0c2019\u5b8c\u6210\u80fd\u548c\u516c\u53f8\u5916\u56fd\u53cb\u4eba\u4f7f\u7528 \u82f1\u6587\u65e0\u969c\u788d\u5904\u7406\u5de5\u4f5c\u3001\u80fd\u591f\u4ea4\u8c08 2.\u6bcf\u5468\u575a\u6301\u953b\u70bc\u4e09\u6b21\u4ee5\u4e0a 3.\u5b9e\u73b0pyton\u5168\u6808\u5f00\u53d1\uff0c\u5728Android\u9886\u57df\u8fdb\u4e00\u6b65\u7a81\u7834","title":"Home"},{"location":"#-2019","text":"\u65b0\u7684\u4e00\u5e74\uff0c\u65b0\u7684\u5f00\u59cb\uff0c\u505a\u5f00\u53d1\u4e5f\u67095\u5e74\u6709\u4f59\uff0c\u5728\u5927\u516c\u53f8\u3001\u5c0f\u516c\u53f8\u90fd\u6709\u5de5\u4f5c\u7ecf\u9a8c\uff0c\u73b0\u5728\u5728\u4e00\u5bb6\u521b\u4e1a\u516c\u53f8\u505a\u7814\u53d1\u7ba1\u7406\u5de5\u4f5c\uff0c \u4e94\u5e74\u65f6\u95f4\uff0c\u65ad\u65ad\u7eed\u7eed\u5199\u8fc7\u4e0d\u5c11\u7684blog\uff0c\u6ca1\u6709\u6210\u4f53\u7cfb\u548c\u603b\u7ed3\uff0c\u5f88\u51cc\u4e71\uff0c\u5728\u5f88\u591a\u5e73\u53f0\u4e0a\u90fd\u53d1\u5e03\u8fc7\u81ea\u5df1\u7684\u6587\u7ae0\uff0c\u603b\u662f\u4e0d\u80fd\u575a\u6301 \u957f\u65f6\u95f4\u7684\u575a\u6301\u5199\u4f5c\uff0c\u4e5f\u6ca1\u6709\u628a\u81ea\u5df1\u7684\u7ecf\u9a8c\u603b\u5171\u7cfb\u7edf\u7684\u603b\u7ed3\uff0c\u5728\u5de5\u4f5c\u603b\u5f88\u591a\u4e1c\u897f\u90fd\u662f\u5728\u91cd\u590d\u7740\uff0c\u6ca1\u6709\u5427\u505a\u8fc7\u7684\u4e1c\u897f\u505a\u6210\u6a21\u677f \u6bcf\u4e00\u6b21\u9700\u8981\uff0c\u603b\u662f\u5230\u5904\u4e1c\u62fc\u897f\u51d1\uff0c\u767e\u5ea6\u3001Google\u5230\u5904\u67e5\u627e\uff0c\u6ca1\u6709\u4e00\u4e2areview\u7684\u8fc7\u7a0b\u3002 2019\uff0c\u5bf9\u81ea\u5df1\u8fc7\u53bb\u51e0\u5e74\u7684\u53cd\u601d\uff0c\u5bf9\u672a\u6765\u7684\u61a7\u61ac\uff0c\u89c4\u5212\u81ea\u5df1\u63a5\u4e0b\u6765\u8981\u505a\u7684flag: 1.\u82f1\u8bed\u73b0\u5728\u80fd\u591f\u9605\u8bfb\u82f1\u6587\u6587\u6863\uff0c\u6ca1\u6709\u538b\u529b\uff0c\u5728\u63a5\u4e0b\u6765\u4e00\u5e74\u7684\u65f6\u95f4\u91cc\u63d0\u9ad8\u81ea\u5df1\u7684\u53e3\u8bed\uff0c\u542c\u529b\uff0c2019\u5b8c\u6210\u80fd\u548c\u516c\u53f8\u5916\u56fd\u53cb\u4eba\u4f7f\u7528 \u82f1\u6587\u65e0\u969c\u788d\u5904\u7406\u5de5\u4f5c\u3001\u80fd\u591f\u4ea4\u8c08 2.\u6bcf\u5468\u575a\u6301\u953b\u70bc\u4e09\u6b21\u4ee5\u4e0a 3.\u5b9e\u73b0pyton\u5168\u6808\u5f00\u53d1\uff0c\u5728Android\u9886\u57df\u8fdb\u4e00\u6b65\u7a81\u7834","title":"\u4e0d\u79ef\u8dec\u6b65\u65e0\u4ee5\u81f3  --- 2019"},{"location":"authors-notes/","text":"Author's notes Hi, I'm Martin ( @squidfunk ) I'm a freelance polyglot software engineer and entrepreneur from Cologne, Germany with more than 12 years of experience in full-stack web development and system programming. If you're interested in my projects, please see my CV . Why another theme? Some time ago I wanted to release a project to the open, but it was in need of user documentation. I checked out the available tools and stuck with MkDocs, because it was so simple and easy to use. However, none of the available themes convinced me. I wanted to build something that was usable on all screen sizes from the ground up, something beautiful and practical at the same time. Google's Material Design appeared to be the perfect fit and this something became Material, a Material Design theme for MkDocs.","title":"Author's notes"},{"location":"authors-notes/#authors-notes","text":"","title":"Author's notes"},{"location":"authors-notes/#hi-im-martin-squidfunk","text":"I'm a freelance polyglot software engineer and entrepreneur from Cologne, Germany with more than 12 years of experience in full-stack web development and system programming. If you're interested in my projects, please see my CV .","title":"Hi, I'm Martin (@squidfunk)"},{"location":"authors-notes/#why-another-theme","text":"Some time ago I wanted to release a project to the open, but it was in need of user documentation. I checked out the available tools and stuck with MkDocs, because it was so simple and easy to use. However, none of the available themes convinced me. I wanted to build something that was usable on all screen sizes from the ground up, something beautiful and practical at the same time. Google's Material Design appeared to be the perfect fit and this something became Material, a Material Design theme for MkDocs.","title":"Why another theme?"},{"location":"compliance/","text":"Compliance with GDPR Material does not process any personal data Material is a theme for MkDocs, a static site generator. In itself, Material does not perform any tracking or processing of personal data. However, some of the third-party services that Material integrates with may actually be in breach with the General Data Protection Regulation (GDPR) and need to be evaluated carefully. Third-party services Google Fonts Material makes fonts easily configurable by relying on Google Fonts CDN. However, embedding fonts from Google is currently within a gray area as there's no official statement or ruling regarding GDPR compliance and the topic is still actively discussed . For this reason, if you need to ensure GDPR compiance, you should disable the usage of the Google Font CDN with: theme : font : false When Google Fonts are disabled, Material will default to Helvetica Neue and Monaco with their corresponding fall backs, relying on system fonts. You could however include your own, self-hosted webfont by overriding the fonts block. The icon fonts (Material and FontAwesome) are bundled with the theme, and thus self-hosted so there's no third-party involved. Google Analytics and Disqus Material comes with Google Analytics and Disqus integrations that need to be enabled explicitly . Disable both integrations in order to be in compliance with the GDPR.","title":"Compliance with GDPR"},{"location":"compliance/#compliance-with-gdpr","text":"","title":"Compliance with GDPR"},{"location":"compliance/#material-does-not-process-any-personal-data","text":"Material is a theme for MkDocs, a static site generator. In itself, Material does not perform any tracking or processing of personal data. However, some of the third-party services that Material integrates with may actually be in breach with the General Data Protection Regulation (GDPR) and need to be evaluated carefully.","title":"Material does not process any personal data"},{"location":"compliance/#third-party-services","text":"","title":"Third-party services"},{"location":"compliance/#google-fonts","text":"Material makes fonts easily configurable by relying on Google Fonts CDN. However, embedding fonts from Google is currently within a gray area as there's no official statement or ruling regarding GDPR compliance and the topic is still actively discussed . For this reason, if you need to ensure GDPR compiance, you should disable the usage of the Google Font CDN with: theme : font : false When Google Fonts are disabled, Material will default to Helvetica Neue and Monaco with their corresponding fall backs, relying on system fonts. You could however include your own, self-hosted webfont by overriding the fonts block. The icon fonts (Material and FontAwesome) are bundled with the theme, and thus self-hosted so there's no third-party involved.","title":"Google Fonts"},{"location":"compliance/#google-analytics-and-disqus","text":"Material comes with Google Analytics and Disqus integrations that need to be enabled explicitly . Disable both integrations in order to be in compliance with the GDPR.","title":"Google Analytics and Disqus"},{"location":"contributing/","text":"Contributing Interested in contributing to the Material theme? Want to report a bug? Before you do, please read the following guidelines. Submission context Got a question or problem? For quick questions there's no need to open an issue as you can reach us on gitter.im . Found a bug? If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository. Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines . Missing a feature? You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone, as the Material theme is highly opinionated. Please consider what kind of change it is: For a major feature , first open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Small features and bugs can be crafted and directly submitted as a Pull Request. However, there is no guarantee that your feature will make it into the master, as it's always a matter of opinion whether if benefits the overall functionality of the theme. Submission guidelines Submitting an issue Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue. Submitting a Pull Request (PR) Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development : Fork the project, set up the development environment , make your changes in a separate git branch and add descriptive messages to your commits. Build : Before submitting a pull requests, build the theme . This is a mandatory requirement for your PR to get accepted, as the theme should at all times be installable through GitHub. Pull Request : After building the theme, commit the compiled output, push your branch to GitHub and send a PR to mkdocs-material:master . If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Contributing"},{"location":"contributing/#contributing","text":"Interested in contributing to the Material theme? Want to report a bug? Before you do, please read the following guidelines.","title":"Contributing"},{"location":"contributing/#submission-context","text":"","title":"Submission context"},{"location":"contributing/#got-a-question-or-problem","text":"For quick questions there's no need to open an issue as you can reach us on gitter.im .","title":"Got a question or problem?"},{"location":"contributing/#found-a-bug","text":"If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository. Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines .","title":"Found a bug?"},{"location":"contributing/#missing-a-feature","text":"You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first, to be sure that it is of use for everyone, as the Material theme is highly opinionated. Please consider what kind of change it is: For a major feature , first open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Small features and bugs can be crafted and directly submitted as a Pull Request. However, there is no guarantee that your feature will make it into the master, as it's always a matter of opinion whether if benefits the overall functionality of the theme.","title":"Missing a feature?"},{"location":"contributing/#submission-guidelines","text":"","title":"Submission guidelines"},{"location":"contributing/#submitting-an-issue","text":"Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue.","title":"Submitting an issue"},{"location":"contributing/#submitting-a-pull-request-pr","text":"Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development : Fork the project, set up the development environment , make your changes in a separate git branch and add descriptive messages to your commits. Build : Before submitting a pull requests, build the theme . This is a mandatory requirement for your PR to get accepted, as the theme should at all times be installable through GitHub. Pull Request : After building the theme, commit the compiled output, push your branch to GitHub and send a PR to mkdocs-material:master . If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Submitting a Pull Request (PR)"},{"location":"customization/","text":"Customization A great starting point Project documentation is as diverse as the projects themselves and the Material theme is a good starting point for making it look great. However, as you write your documentation, you may reach a point where some small adjustments are necessary to preserve the desired style. Adding assets MkDocs provides several ways to interfere with themes. In order to make a few tweaks to an existing theme, you can just add your stylesheets and JavaScript files to the docs directory. Additional stylesheets If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate stylesheet. The easiest way is by creating a new stylesheet file in your docs directory: mkdir docs/stylesheets touch docs/stylesheets/extra.css Then, add the following line to your mkdocs.yml : extra_css : - stylesheets/extra.css Spin up the development server with mkdocs serve and start typing your changes in your additional stylesheet file \u2013 you can see them instantly after saving, as the MkDocs development server implements live reloading. Additional JavaScript The same is true for additional JavaScript. If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in your docs directory: mkdir docs/javascripts touch docs/javascripts/extra.js Then, add the following line to your mkdocs.yml : extra_javascript : - javascripts/extra.js Further assistance can be found in the MkDocs documentation . Extending the theme If you want to alter the HTML source (e.g. add or remove some part), you can extend the theme. From version 0.16 on MkDocs implements theme extension , an easy way to override parts of a theme without forking and changing the main theme. Setup and theme structure Reference the Material theme as usual in your mkdocs.yml , and create a new folder for overrides, e.g. theme , which you reference using custom_dir : theme : name : material custom_dir : theme Theme extension prerequisites As the custom_dir variable is used for the theme extension process, the Material theme needs to be installed via pip and referenced with the name parameter in your mkdocs.yml . The structure in the theme directory must mirror the directory structure of the original theme, as any file in the theme directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the theme directory. The directory layout of the Material theme is as follows: . \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # 3rd-party integrations \u2502 \u251c\u2500 language/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 hero.html # Hero teaser \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 toc-item.html # Table of contents item \u2502 \u2514\u2500 toc.html # Table of contents \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page Overriding partials In order to override the footer, we can replace the footer.html partial with our own partial. To do this, create the file partials/footer.html in the theme directory. MkDocs will now use the new partial when rendering the theme. This can be done with any file. Overriding template blocks Besides overriding partials, one can also override so called template blocks, which are defined inside the Material theme and wrap specific features. To override a template block, create a main.html inside the theme directory and define the block, e.g.: {% extends base.html %} {% block htmltitle %} title Lorem ipsum dolor sit amet /title {% endblock %} The Material theme provides the following template blocks: Block name Wrapped contents analytics Wraps the Google Analytics integration content Wraps the main content disqus Wraps the disqus integration extrahead Empty block to define additional meta tags fonts Wraps the webfont definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser htmltitle Wraps the title tag libs Wraps the JavaScript libraries, e.g. Modernizr scripts Wraps the JavaScript application logic source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) For more on this topic refer to the MkDocs documentation Theme development The Material theme uses Webpack as a build tool to leverage modern web technologies like Babel and SASS . If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the Material theme and recompile it. This is fairly easy. Environment setup In order to start development on the Material theme, a Node.js version of at least 8 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -r requirements.txt npm install Development mode The development server can be started with: npm run watch This will also start the MkDocs development server which will monitor changes on assets, templates and documentation. Point your browser to localhost:8000 and you should see this documentation in front of you. For example, changing the color palette is as simple as changing the $md-color-primary and $md-color-accent variables in src/assets/stylesheets/_config.scss : $ md-color-primary : $ clr-red-400 ; $ md-color-accent : $ clr-teal-a700 ; Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overriden when the theme is built. Build process When you've finished making your changes, you can build the theme by invoking: npm run build This triggers the production-level compilation and minification of all stylesheets and JavaScript sources. When the command exits, the final theme is located in the material directory. Add the theme_dir variable pointing to the aforementioned directory in your original mkdocs.yml . Now you can run mkdocs build and you should see your documentation with your changes to the original Material theme.","title":"Customization"},{"location":"customization/#customization","text":"","title":"Customization"},{"location":"customization/#a-great-starting-point","text":"Project documentation is as diverse as the projects themselves and the Material theme is a good starting point for making it look great. However, as you write your documentation, you may reach a point where some small adjustments are necessary to preserve the desired style.","title":"A great starting point"},{"location":"customization/#adding-assets","text":"MkDocs provides several ways to interfere with themes. In order to make a few tweaks to an existing theme, you can just add your stylesheets and JavaScript files to the docs directory.","title":"Adding assets"},{"location":"customization/#additional-stylesheets","text":"If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate stylesheet. The easiest way is by creating a new stylesheet file in your docs directory: mkdir docs/stylesheets touch docs/stylesheets/extra.css Then, add the following line to your mkdocs.yml : extra_css : - stylesheets/extra.css Spin up the development server with mkdocs serve and start typing your changes in your additional stylesheet file \u2013 you can see them instantly after saving, as the MkDocs development server implements live reloading.","title":"Additional stylesheets"},{"location":"customization/#additional-javascript","text":"The same is true for additional JavaScript. If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in your docs directory: mkdir docs/javascripts touch docs/javascripts/extra.js Then, add the following line to your mkdocs.yml : extra_javascript : - javascripts/extra.js Further assistance can be found in the MkDocs documentation .","title":"Additional JavaScript"},{"location":"customization/#extending-the-theme","text":"If you want to alter the HTML source (e.g. add or remove some part), you can extend the theme. From version 0.16 on MkDocs implements theme extension , an easy way to override parts of a theme without forking and changing the main theme.","title":"Extending the theme"},{"location":"customization/#setup-and-theme-structure","text":"Reference the Material theme as usual in your mkdocs.yml , and create a new folder for overrides, e.g. theme , which you reference using custom_dir : theme : name : material custom_dir : theme Theme extension prerequisites As the custom_dir variable is used for the theme extension process, the Material theme needs to be installed via pip and referenced with the name parameter in your mkdocs.yml . The structure in the theme directory must mirror the directory structure of the original theme, as any file in the theme directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the theme directory. The directory layout of the Material theme is as follows: . \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # 3rd-party integrations \u2502 \u251c\u2500 language/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 hero.html # Hero teaser \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 toc-item.html # Table of contents item \u2502 \u2514\u2500 toc.html # Table of contents \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page","title":"Setup and theme structure"},{"location":"customization/#overriding-partials","text":"In order to override the footer, we can replace the footer.html partial with our own partial. To do this, create the file partials/footer.html in the theme directory. MkDocs will now use the new partial when rendering the theme. This can be done with any file.","title":"Overriding partials"},{"location":"customization/#overriding-template-blocks","text":"Besides overriding partials, one can also override so called template blocks, which are defined inside the Material theme and wrap specific features. To override a template block, create a main.html inside the theme directory and define the block, e.g.: {% extends base.html %} {% block htmltitle %} title Lorem ipsum dolor sit amet /title {% endblock %} The Material theme provides the following template blocks: Block name Wrapped contents analytics Wraps the Google Analytics integration content Wraps the main content disqus Wraps the disqus integration extrahead Empty block to define additional meta tags fonts Wraps the webfont definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser htmltitle Wraps the title tag libs Wraps the JavaScript libraries, e.g. Modernizr scripts Wraps the JavaScript application logic source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) For more on this topic refer to the MkDocs documentation","title":"Overriding template blocks"},{"location":"customization/#theme-development","text":"The Material theme uses Webpack as a build tool to leverage modern web technologies like Babel and SASS . If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the Material theme and recompile it. This is fairly easy.","title":"Theme development"},{"location":"customization/#environment-setup","text":"In order to start development on the Material theme, a Node.js version of at least 8 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -r requirements.txt npm install","title":"Environment setup"},{"location":"customization/#development-mode","text":"The development server can be started with: npm run watch This will also start the MkDocs development server which will monitor changes on assets, templates and documentation. Point your browser to localhost:8000 and you should see this documentation in front of you. For example, changing the color palette is as simple as changing the $md-color-primary and $md-color-accent variables in src/assets/stylesheets/_config.scss : $ md-color-primary : $ clr-red-400 ; $ md-color-accent : $ clr-teal-a700 ; Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overriden when the theme is built.","title":"Development mode"},{"location":"customization/#build-process","text":"When you've finished making your changes, you can build the theme by invoking: npm run build This triggers the production-level compilation and minification of all stylesheets and JavaScript sources. When the command exits, the final theme is located in the material directory. Add the theme_dir variable pointing to the aforementioned directory in your original mkdocs.yml . Now you can run mkdocs build and you should see your documentation with your changes to the original Material theme.","title":"Build process"},{"location":"getting-started/","text":"markdown\b\u6837\u5f0f python --version # Python 2.7.13 pip --version # pip 9.0.1 \b\b\u5361\u7247\u6837\u5f0f Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you may be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and the Material theme through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not. \b\u4f7f\u7528\bJavaScript\u64cd\u4f5c\u6309\u94ae Default: indigo | \b\u5de6\u8fb9\b\u663e\u793a\u7684\u7ad6\u7ebf Click on a tile to change the primary color of the theme: Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) }) \u8868\u683c Default: en Available languages ar / Arabic ca / Catalan cs / Czech da / Danish nl / Dutch en / English fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hr / Croatian hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian fa / Persian pl / Polish pt / Portugese ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak es / Spanish sv / Swedish tr / Turkish uk / Ukrainian vi / Vietnamese zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) Submit a new language","title":"Getting started"},{"location":"getting-started/#markdown","text":"python --version # Python 2.7.13 pip --version # pip 9.0.1","title":"markdown\b\u6837\u5f0f"},{"location":"getting-started/#_1","text":"Installation on macOS When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are two possible solutions for this: Installing in user space (recommended): Provide the --user flag to the install command and pip will install the package in a user-site location. This is the recommended way. Switching to a homebrewed Python : Upgrade your Python installation to a self-contained solution by installing Python with Homebrew. This should eliminate a lot of problems you may be having with pip . Error: unrecognized theme 'material' If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. Homebrew or apt-get ) and the Material theme through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. Why is there an edit button at the top of every article? If the repo_url is set to a GitHub or BitBucket repository, and the repo_name is set to GitHub or BitBucket (implied by default), an edit button will appear at the top of every article. This is the automatic behavior that MkDocs implements. See the MkDocs documentation on more guidance regarding the edit_uri attribute, which defines whether the edit button is shown or not.","title":"\b\b\u5361\u7247\u6837\u5f0f"},{"location":"getting-started/#javascript","text":"Default: indigo | \b\u5de6\u8fb9\b\u663e\u793a\u7684\u7ad6\u7ebf Click on a tile to change the primary color of the theme: Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) })","title":"\b\u4f7f\u7528\bJavaScript\u64cd\u4f5c\u6309\u94ae"},{"location":"getting-started/#_2","text":"Default: en Available languages ar / Arabic ca / Catalan cs / Czech da / Danish nl / Dutch en / English fi / Finnish fr / French gl / Galician de / German gr / Greek he / Hebrew hi / Hindi hr / Croatian hu / Hungarian id / Indonesian it / Italian ja / Japanese kr / Korean no / Norwegian fa / Persian pl / Polish pt / Portugese ru / Russian sr / Serbian sh / Serbo-Croatian sk / Slovak es / Spanish sv / Swedish tr / Turkish uk / Ukrainian vi / Vietnamese zh / Chinese (Simplified) zh-Hant / Chinese (Traditional) zh-TW / Chinese (Taiwanese) Submit a new language","title":"\u8868\u683c"},{"location":"license/","text":"License MIT License Copyright 2016 - 2019 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright 2016 - 2019 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"release-notes/","text":"Release notes Upgrading To upgrade Material to the latest version, use pip : pip install --upgrade mkdocs-material To inspect the currently installed version, use the following command: pip show mkdocs-material Material 3.x to 4.x Material for MkDocs 4.x finally fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to the issue in which the problem was discovered and fixed. Material 2.x to 3.x Material for MkDocs 3.x requires MkDocs 1.0 because the way paths are resolved internally changed significantly. Furthermore, pages was renamed to nav , so remember to adjust your mkdocs.yml file. All extended templates should continue to work but in order to make them future-proof the url filter should be introduced on all paths. Please see the official release notes for further guidance. Material 1.x to 2.x Material for MkDocs 2.x requires MkDocs 0.17.1, as this version introduced changes to the way themes can define options. The following variables inside your project's mkdocs.yml need to be renamed: extra.feature becomes theme.feature extra.palette becomes theme.palette extra.font becomes theme.font extra.logo becomes theme.logo Favicon support has been dropped by MkDocs, it must now be defined in theme.favicon (previously site_favicon ). Localization is now separated into theme language and search language. While there can only be a single language on theme-level, the search supports multiple languages which can be separated by commas. See the getting started guide for more guidance. The search tokenizer can now be set through extra.search.tokenizer . Changelog 4.0.1 _ February 13, 2019 Fixed #762 , #816 : Glitch in sidebar when collapsing items Fixed #869 : Automatically expand details before printing 4.0.0 _ February 13, 2019 Added background on hover for table rows Removed Google Tag Manager and reverted to Google Analytics Removed blocks in partials - Jinja doesn't support them Fixed #911 : Chrome breaks layout if system language is Chinese [BREAKING] Fixed #976 : Removed FastClick 3.3.0 _ January 29, 2019 Moved Google Analytics integration into head using Google Tag Manager Fixed #972 : Unicode slugifier breaks table of contents blur on scroll Fixed #974 : Additional links in table of contents break blur on scroll 3.2.0 _ December 28, 2018 Added support for redirects using metadata refresh Fixed #921 : Load Google Analytics snippet asynchronously 3.1.0 _ November 17, 2018 Added support for Progressive Web App Manifest Fixed #915 : Search bug in Safari (upgraded Lunr.js) 3.0.6 _ October 26, 2018 Added Taiwanese translations Fixed #906 : JavaScript code blocks evaluated in search results 3.0.5 _ October 23, 2018 Added Croatian and Indonesian translations Fixed #899 : Skip-to-content link invalid from 2 nd level on Fixed #902 : Missing URL filter in footer for FontAwesome link 3.0.4 _ September 3, 2018 Updated Dutch translations Fixed #856 : Removed preconnect meta tag if Google Fonts are disabled 3.0.3 _ August 7, 2018 Fixed #841 : Additional path levels for extra CSS and JS 3.0.2 _ August 6, 2018 Fixed #839 : Lunr.js stemmer imports incorrect 3.0.1 _ August 5, 2018 Fixed #838 : Search result links incorrect 3.0.0 _ August 5, 2018 Upgraded MkDocs to 1.0 [BREAKING] Upgraded Python in official Docker image to 3.6 Added Serbian and Serbo-Croatian translations 2.9.4 _ July 29, 2018 Fixed build error after MkDocs upgrade 2.9.3 _ July 29, 2018 Added link to home for logo in drawer Fixed dependency problems between MkDocs and Tornado 2.9.2 _ June 29, 2018 Added Hindi and Czech translations 2.9.1 _ June 18, 2018 Added support for different spellings for theme color Fixed #799 : Added support for web font minification in production Fixed #800 : Added .highlighttable as an alias for .codehilitetable 2.9.0 _ June 13, 2018 Added support for theme color on Android Fixed #796 : Rendering of nested tabbed code blocks 2.8.0 _ June 10, 2018 Added support for grouping code blocks with tabs Added Material and FontAwesome icon fonts to distribution files (GDPR) Added note on compliance with GDPR Added Slovak translations Fixed #790 : Prefixed id attributes with __ to avoid name clashes 2.7.3 _ April 26, 2018 Added Finnish translations 2.7.2 _ April 9, 2018 Fixed rendering issue for details on Edge 2.7.1 _ March 21, 2018 Added Galician translations Fixed #730 : Scroll chasing error on home page if Disqus is enabled Fixed #736 : Reset drawer and search upon back button invocation 2.7.0 _ March 6, 2018 Added ability to set absolute URL for logo Added Hebrew translations 2.6.6 _ February 22, 2018 Added preconnect for Google Fonts for faster loading Fixed #710 : With tabs sidebar disappears if JavaScript is not available 2.6.5 _ February 22, 2018 Reverted --dev-addr flag removal from Dockerfile 2.6.4 _ February 21, 2018 Added Catalan translations Fixed incorrect margins for buttons in Firefox and Safari Replaced package manager yarn with npm 5.6 Reverted GitHub stars rounding method Removed --dev-addr flag from Dockerfile for Windows compatibility 2.6.3 _ February 18, 2018 Added Vietnamese translations 2.6.2 _ February 12, 2018 Added Arabic translations Fixed incorrect rounding of amount of GitHub stars Fixed double-layered borders for tables 2.6.1 _ February 11, 2018 Added ability to override Disqus integration using metadata Fixed #690 : Duplicate slashes in source file URLs Fixed #696 : Active page highlight not working with default palette Adjusted German translations 2.6.0 _ February 2, 2018 Moved default search configuration to default translation (English) Added support to automatically set text direction from translation Added support to disable search stop word filter in translation Added support to disable search trimmer in translation Added Persian translations Fixed support for Polish search Fixed disappearing GitHub, GitLab and Bitbucket repository icons 2.5.5 _ January 31, 2018 Added Hungarian translations 2.5.4 _ January 29, 2018 Fixed #683 : gh-deploy fails inside Docker 2.5.3 _ January 25, 2018 Added Ukrainian translations 2.5.2 _ January 22, 2018 Added default search language mappings for all localizations Fixed #673 : Error loading non-existent search language Fixed #675 : Uncaught reference error when search plugin disabled 2.5.1 _ January 20, 2018 Fixed permalink for main headline Improved missing translation handling with English as a fallback Improved accessibility with skip-to-content link 2.5.0 _ January 13, 2018 Added support for right-to-left languages 2.4.0 _ January 11, 2018 Added focus state for clipboard buttons Fixed #400 : Search bar steals tab focus Fixed search not closing on Enter when result is selected Fixed search not closing when losing focus due to Tab Fixed collapsed navigation links getting focus Fixed outline being cut off on Tab focus of navigation links Fixed bug with first search result navigation being ignored Removed search result navigation via Tab (use Up and Down ) Removed outline resets for links Improved general tabbing behavior on desktop 2.3.0 _ January 9, 2018 Added example (synonym: snippet ) style for Admonition Added synonym abstract for summary style for Admonition 2.2.6 _ December 27, 2017 Added Turkish translations Fixed unclickable area below header in case JavaScript is not available 2.2.5 _ December 18, 2017 Fixed #639 : Broken default favicon 2.2.4 _ December 18, 2017 Fixed #638 : Build breaks with Jinja 2.9 2.2.3 _ December 13, 2017 Fixed #630 : Admonition sets padding on any last child Adjusted Chinese (Traditional) translations 2.2.2 _ December 8, 2017 Added Dutch translations Adjusted targeted link and footnote offsets Simplified Admonition styles and fixed padding bug 2.2.1 _ December 2, 2017 Fixed #616 : Minor styling error with title-only admonition blocks Removed border for table of contents and improved spacing 2.2.0 _ November 22, 2017 Added support for hero teaser Added Portuguese translations Fixed #586 : Footnote backref target offset regression Fixed #605 : Search stemmers not correctly loaded 2.1.1 _ November 21, 2017 Replaced deprecated babel-preset-es2015 with babel-preset-env Refactored Gulp build pipeline with Webpack Removed right border on sidebars Fixed broken color transition on header 2.1.0 _ November 19, 2017 Added support for white as a primary color Added support for sliding site name and title Fixed redundant clipboard button when using line numbers on code blocks Improved header appearance by making it taller Improved tabs appearance Improved CSS customizability by leveraging inheritance Removed scroll shadows via background-attachment 2.0.4 _ November 5, 2017 Fixed details not opening with footnote reference 2.0.3 _ November 5, 2017 Added Japanese translations Fixed #540 : Jumping to anchor inside details doesn't open it Fixed active link colors in footer 2.0.2 _ November 1, 2017 Added Russian translations Fixed #542 : Horizontal scrollbar between 1220px and 1234px Fixed #553 : Metadata values only rendering first character Fixed #558 : Flash of unstyled content Fixed favicon regression caused by deprecation upstream 2.0.1 _ October 31, 2017 Fixed error when initializing search Fixed styles for link to edit the current page Fixed styles on nested admonition in details 2.0.0 _ October 31, 2017 Added support for MkDocs 0.17.1 theme configuration options Added support for easier configuration of search tokenizer Added support to disable search Added Korean translations Removed support for MkDocs 0.16.x [BREAKING] 1.12.2 _ October 26, 2017 Added Italian, Norwegian, French and Chinese translations 1.12.1 _ October 22, 2017 Added Polish, Swedish and Spanish translations Improved downward compatibility with custom partials Temporarily pinned MkDocs version within Docker image to 0.16.3 Fixed #519 : Missing theme configuration file 1.12.0 _ October 20, 2017 Added support for setting language(s) via mkdocs.yml Added support for default localization Added German and Danish translations Fixed #374 : Search bar misalignment on big screens 1.11.0 _ October 19, 2017 Added localization to clipboard Refactored localization logic 1.10.4 _ October 18, 2017 Improved print styles of code blocks Improved search UX (don't close on enter if no selection) Fixed #495 : Vertical scrollbar on short pages 1.10.3 _ October 11, 2017 Fixed #484 : Vertical scrollbar on some MathJax formulas Fixed #483 : Footnote backref target offset regression 1.10.2 _ October 6, 2017 Fixed #468 : Sidebar shows scrollbar if content is shorter (in Safari) 1.10.1 _ September 14, 2017 Fixed #455 : Bold code blocks rendered with normal font weight 1.10.0 _ September 1, 2017 Added support to make logo default icon configurable Fixed uninitialized overflow scrolling on main pane for iOS Fixed error in mobile navigation in case JavaScript is not available Fixed incorrect color transition for nested panes in mobile navigation Improved checkbox styles for Tasklist from PyMdown Extension package 1.9.0 _ August 29, 2017 Added info (synonym: todo ) style for Admonition Added question (synonym: help , faq ) style for Admonition Added support for Details from PyMdown Extensions package Improved Admonition styles to match Details Improved styles for social links in footer Replaced ligatures with Unicode code points to avoid broken layout Upgraded PyMdown Extensions package dependency to = 3.4 1.8.1 _ August 7, 2017 Fixed #421 : Missing pagination for GitHub API 1.8.0 _ August 2, 2017 Added support for lazy-loading of search results for better performance Added support for customization of search tokenizer/separator Fixed #424 : Search doesn't handle capital letters anymore Fixed #419 : Search doesn't work on whole words 1.7.5 _ July 25, 2017 Fixed #398 : Forms broken due to search shortcuts Improved search overall user experience Improved search matching and highlighting Improved search accessibility 1.7.4 _ June 21, 2017 Fixed functional link colors in table of contents for active palette Fixed #368 : Compatibility issues with IE11 1.7.3 _ June 7, 2017 Fixed error when setting language to Japanese for site search 1.7.2 _ June 6, 2017 Fixed offset of search box when repo_url is not set Fixed non-disappearing tooltip 1.7.1 _ June 1, 2017 Fixed wrong z-index order of header, overlay and drawer Fixed wrong offset of targeted footnote back references 1.7.0 _ June 1, 2017 Added \"copy to clipboard\" buttons to code blocks Added support for multilingual site search Fixed search term highlighting for non-latin languages 1.6.4 _ May 24, 2017 Fixed #337 : JavaScript error for GitHub organization URLs 1.6.3 _ May 16, 2017 Fixed #329 : Broken source stats for private or unknown GitHub repos 1.6.2 _ May 15, 2017 Fixed #316 : Fatal error for git clone on Windows Fixed #320 : Chrome 58 creates double underline for abbr tags Fixed #323 : Ligatures rendered inside code blocks Fixed miscalculated sidebar height due to missing margin collapse Changed deprecated MathJax CDN to Cloudflare 1.6.1 _ April 23, 2017 Fixed following of active/focused element if search input is focused Fixed layer order of search component elements 1.6.0 _ April 22, 2017 Added build test for Docker image on Travis Added search overlay for better user experience (focus) Added language from localizations to html tag Fixed #270 : source links broken for absolute URLs Fixed missing top spacing for first targeted element in content Fixed too small footnote divider when using larger font sizes 1.5.5 _ April 20, 2017 Fixed #282 : Browser search ( Meta + F ) is hijacked 1.5.4 _ April 8, 2017 Fixed broken highlighting for two or more search terms Fixed missing search results when only a h1 is present Fixed unresponsive overlay on Android 1.5.3 _ April 7, 2017 Fixed deprecated calls for template variables Fixed wrong palette color for focused search result Fixed JavaScript errors on 404 page Fixed missing top spacing on 404 page Fixed missing right spacing on overflow of source container 1.5.2 _ April 5, 2017 Added requirements as explicit dependencies in setup.py Fixed non-synchronized transitions in search form 1.5.1 _ March 30, 2017 Fixed rendering and offset of targetted footnotes Fixed #238 : Link on logo is not set to site_url 1.5.0 _ March 24, 2017 Added support for localization of search placeholder Added keyboard events for quick access of search Added keyboard events for search control Added opacity on hover for search buttons Added git hook to skip CI build on non-src changes Fixed non-resetting search placeholder when input is cleared Fixed error for unescaped parentheses in search term Fixed #229 : Button to clear search missing Fixed #231 : Escape key doesn't exit search Removed old-style figures from font feature settings 1.4.1 _ March 16, 2017 Fixed invalid destructuring attempt on NodeList (in Safari, Edge, IE) 1.4.0 _ March 16, 2017 Added support for grouping searched sections by documents Added support for highlighting of search terms Added support for localization of search results Fixed #216 : table of contents icon doesn't show if h1 is not present Reworked style and layout of search results for better usability 1.3.0 _ March 11, 2017 Added support for page-specific title and description using metadata Added support for linking source files to documentation Fixed jitter and offset of sidebar when zooming browser Fixed incorrectly initialized tablet sidebar height Fixed regression for #1 : GitHub stars break if repo_url ends with a / Fixed undesired white line below copyright footer due to base font scaling Fixed issue with whitespace in path for scripts Fixed #205 : support non-fixed (static) header Refactored footnote references for better visibility Reduced repaints to a minimum for non-tabs configuration Reduced contrast of edit button (slightly) 1.2.0 _ March 3, 2017 Added quote (synonym: cite ) style for Admonition Added help message to build pipeline Fixed wrong navigation link colors when applying palette Fixed #197 : Link missing in tabs navigation on deeply nested items Removed unnecessary dev dependencies 1.1.1 _ February 26, 2017 Fixed incorrectly displayed nested lists when using tabs 1.1.0 _ February 26, 2017 Added tabs navigation feature (optional) Added Disqus integration (optional) Added a high resolution Favicon with the new logo Added static type checking using Facebook's Flow Fixed #173 : Dictionary elements have no bottom spacing Fixed #175 : Tables cannot be set to 100% width Fixed race conditions in build related to asset revisioning Fixed accidentally re-introduced Permalink on top-level headline Fixed alignment of logo in drawer on IE11 Refactored styles related to tables Refactored and automated Docker build and PyPI release Refactored build scripts 1.0.5 _ February 18, 2017 Fixed #153 : Sidebar flows out of constrained area in Chrome 56 Fixed #159 : Footer jitter due to JavaScript if content is short 1.0.4 _ February 16, 2017 Fixed #142 : Documentation build errors if h1 is defined as raw HTML Fixed #164 : PyPI release does not build and install Fixed offsets of targeted headlines Increased sidebar font size by 0.12rem 1.0.3 _ January 22, 2017 Fixed #117 : Table of contents items don't blur on fast scrolling Refactored sidebar positioning logic Further reduction of repaints 1.0.2 _ January 15, 2017 Fixed #108 : Horizontal scrollbar in content area 1.0.1 _ January 14, 2017 Fixed massive repaints happening when scrolling Fixed footer back reference positions in case of overflow Fixed header logo from showing when the menu icon is rendered Changed scrollbar behavior to only show when content overflows 1.0.0 _ January 13, 2017 Introduced Webpack for more sophisticated JavaScript bundling Introduced ESLint and Stylelint for code style checks Introduced more accurate Material Design colors and shadows Introduced modular scales for harmonic font sizing Introduced git-hooks for better development workflow Rewrite of CSS using the BEM methodology and SassDoc guidelines Rewrite of JavaScript using ES6 and Babel as a transpiler Rewrite of Admonition, Permalinks and CodeHilite integration Rewrite of the complete typographical system Rewrite of Gulp asset pipeline in ES6 and separation of tasks Removed Bower as a dependency in favor of NPM Removed custom icon build in favor of the Material Design iconset Removed _blank targets on links due to vulnerability: http://bit.ly/1Mk2Rtw Removed unversioned assets from build directory Restructured templates into base templates and partials Added build and watch scripts in package.json Added support for Metadata and Footnotes Markdown extensions Added support for PyMdown Extensions package Added support for collapsible sections in navigation Added support for separate table of contents Added support for better accessibility through REM-based layout Added icons for GitHub, GitLab and BitBucket integrations Added more detailed documentation on specimen, extensions etc. Added a 404.html error page for deployment on GitHub Pages Fixed live reload chain in watch mode when saving a template Fixed variable references to work with MkDocs 0.16 0.2.4 _ June 26, 2016 Fixed improperly set default favicon Fixed #33 : Protocol relative URL for webfonts doesn't work with file:// Fixed #34 : IE11 on Windows 7 doesn't honor max-width on main tag Fixed #35 : Add styling for blockquotes 0.2.3 _ May 16, 2016 Fixed #25 : Highlight inline fenced blocks Fixed #26 : Better highlighting for keystrokes Fixed #30 : Suboptimal syntax highlighting for PHP 0.2.2 _ March 20, 2016 Fixed #15 : Document Pygments dependency for CodeHilite Fixed #16 : Favicon could not be set through mkdocs.yml Fixed #17 : Put version into own container for styling Fixed #20 : Fix rounded borders for tables 0.2.1 _ March 12, 2016 Fixed #10 : Invisible header after closing search bar with ESC key Fixed #13 : Table cells don't wrap Fixed empty list in table of contents when no headline is defined Corrected wrong path for static asset monitoring in Gulpfile.js Set up tracking of site search for Google Analytics 0.2.0 _ February 24, 2016 Fixed #6 : Include multiple color palettes via mkdocs.yml Fixed #7 : Better colors for links inside admonition notes and warnings Fixed #9 : Text for prev/next footer navigation should be customizable Refactored templates (replaced if / else with modifiers where possible) 0.1.3 _ February 21, 2016 Fixed #3 : Ordered lists within an unordered list have ::before content Fixed #4 : Click on Logo/Title without Github-Repository: \"None\" Fixed #5 : Page without headlines renders empty list in table of contents Moved Modernizr to top to ensure basic usability in IE8 0.1.2 _ February 16, 2016 Fixed styles for deep navigational hierarchies Fixed webfont delivery problem when hosted in subdirectories Fixed print styles in mobile/tablet configuration Added option to configure fonts in mkdocs.yml with fallbacks Changed styles for admonition notes and warnings Set download link to latest version if available Set up tracking of outgoing links and actions for Google Analytics 0.1.1 _ February 11, 2016 Fixed #1 : GitHub stars don't work if the repo_url ends with a / Updated NPM and Bower dependencies to most recent versions Changed footer/copyright link to Material theme to GitHub pages Made MkDocs building/serving in build process optional Set up continuous integration with Travis 0.1.0 _ February 9, 2016 Initial release","title":"Release notes"},{"location":"release-notes/#release-notes","text":"","title":"Release notes"},{"location":"release-notes/#upgrading","text":"To upgrade Material to the latest version, use pip : pip install --upgrade mkdocs-material To inspect the currently installed version, use the following command: pip show mkdocs-material","title":"Upgrading"},{"location":"release-notes/#material-3x-to-4x","text":"Material for MkDocs 4.x finally fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to the issue in which the problem was discovered and fixed.","title":"Material 3.x to 4.x"},{"location":"release-notes/#material-2x-to-3x","text":"Material for MkDocs 3.x requires MkDocs 1.0 because the way paths are resolved internally changed significantly. Furthermore, pages was renamed to nav , so remember to adjust your mkdocs.yml file. All extended templates should continue to work but in order to make them future-proof the url filter should be introduced on all paths. Please see the official release notes for further guidance.","title":"Material 2.x to 3.x"},{"location":"release-notes/#material-1x-to-2x","text":"Material for MkDocs 2.x requires MkDocs 0.17.1, as this version introduced changes to the way themes can define options. The following variables inside your project's mkdocs.yml need to be renamed: extra.feature becomes theme.feature extra.palette becomes theme.palette extra.font becomes theme.font extra.logo becomes theme.logo Favicon support has been dropped by MkDocs, it must now be defined in theme.favicon (previously site_favicon ). Localization is now separated into theme language and search language. While there can only be a single language on theme-level, the search supports multiple languages which can be separated by commas. See the getting started guide for more guidance. The search tokenizer can now be set through extra.search.tokenizer .","title":"Material 1.x to 2.x"},{"location":"release-notes/#changelog","text":"","title":"Changelog"},{"location":"release-notes/#401-_-february-13-2019","text":"Fixed #762 , #816 : Glitch in sidebar when collapsing items Fixed #869 : Automatically expand details before printing","title":"4.0.1 _ February 13, 2019"},{"location":"release-notes/#400-_-february-13-2019","text":"Added background on hover for table rows Removed Google Tag Manager and reverted to Google Analytics Removed blocks in partials - Jinja doesn't support them Fixed #911 : Chrome breaks layout if system language is Chinese [BREAKING] Fixed #976 : Removed FastClick","title":"4.0.0 _ February 13, 2019"},{"location":"release-notes/#330-_-january-29-2019","text":"Moved Google Analytics integration into head using Google Tag Manager Fixed #972 : Unicode slugifier breaks table of contents blur on scroll Fixed #974 : Additional links in table of contents break blur on scroll","title":"3.3.0 _ January 29, 2019"},{"location":"release-notes/#320-_-december-28-2018","text":"Added support for redirects using metadata refresh Fixed #921 : Load Google Analytics snippet asynchronously","title":"3.2.0 _ December 28, 2018"},{"location":"release-notes/#310-_-november-17-2018","text":"Added support for Progressive Web App Manifest Fixed #915 : Search bug in Safari (upgraded Lunr.js)","title":"3.1.0 _ November 17, 2018"},{"location":"release-notes/#306-_-october-26-2018","text":"Added Taiwanese translations Fixed #906 : JavaScript code blocks evaluated in search results","title":"3.0.6 _ October 26, 2018"},{"location":"release-notes/#305-_-october-23-2018","text":"Added Croatian and Indonesian translations Fixed #899 : Skip-to-content link invalid from 2 nd level on Fixed #902 : Missing URL filter in footer for FontAwesome link","title":"3.0.5 _ October 23, 2018"},{"location":"release-notes/#304-_-september-3-2018","text":"Updated Dutch translations Fixed #856 : Removed preconnect meta tag if Google Fonts are disabled","title":"3.0.4 _ September 3, 2018"},{"location":"release-notes/#303-_-august-7-2018","text":"Fixed #841 : Additional path levels for extra CSS and JS","title":"3.0.3 _ August 7, 2018"},{"location":"release-notes/#302-_-august-6-2018","text":"Fixed #839 : Lunr.js stemmer imports incorrect","title":"3.0.2 _ August 6, 2018"},{"location":"release-notes/#301-_-august-5-2018","text":"Fixed #838 : Search result links incorrect","title":"3.0.1 _ August 5, 2018"},{"location":"release-notes/#300-_-august-5-2018","text":"Upgraded MkDocs to 1.0 [BREAKING] Upgraded Python in official Docker image to 3.6 Added Serbian and Serbo-Croatian translations","title":"3.0.0 _ August 5, 2018"},{"location":"release-notes/#294-_-july-29-2018","text":"Fixed build error after MkDocs upgrade","title":"2.9.4 _ July 29, 2018"},{"location":"release-notes/#293-_-july-29-2018","text":"Added link to home for logo in drawer Fixed dependency problems between MkDocs and Tornado","title":"2.9.3 _ July 29, 2018"},{"location":"release-notes/#292-_-june-29-2018","text":"Added Hindi and Czech translations","title":"2.9.2 _ June 29, 2018"},{"location":"release-notes/#291-_-june-18-2018","text":"Added support for different spellings for theme color Fixed #799 : Added support for web font minification in production Fixed #800 : Added .highlighttable as an alias for .codehilitetable","title":"2.9.1 _ June 18, 2018"},{"location":"release-notes/#290-_-june-13-2018","text":"Added support for theme color on Android Fixed #796 : Rendering of nested tabbed code blocks","title":"2.9.0 _ June 13, 2018"},{"location":"release-notes/#280-_-june-10-2018","text":"Added support for grouping code blocks with tabs Added Material and FontAwesome icon fonts to distribution files (GDPR) Added note on compliance with GDPR Added Slovak translations Fixed #790 : Prefixed id attributes with __ to avoid name clashes","title":"2.8.0 _ June 10, 2018"},{"location":"release-notes/#273-_-april-26-2018","text":"Added Finnish translations","title":"2.7.3 _ April 26, 2018"},{"location":"release-notes/#272-_-april-9-2018","text":"Fixed rendering issue for details on Edge","title":"2.7.2 _ April 9, 2018"},{"location":"release-notes/#271-_-march-21-2018","text":"Added Galician translations Fixed #730 : Scroll chasing error on home page if Disqus is enabled Fixed #736 : Reset drawer and search upon back button invocation","title":"2.7.1 _ March 21, 2018"},{"location":"release-notes/#270-_-march-6-2018","text":"Added ability to set absolute URL for logo Added Hebrew translations","title":"2.7.0 _ March 6, 2018"},{"location":"release-notes/#266-_-february-22-2018","text":"Added preconnect for Google Fonts for faster loading Fixed #710 : With tabs sidebar disappears if JavaScript is not available","title":"2.6.6 _ February 22, 2018"},{"location":"release-notes/#265-_-february-22-2018","text":"Reverted --dev-addr flag removal from Dockerfile","title":"2.6.5 _ February 22, 2018"},{"location":"release-notes/#264-_-february-21-2018","text":"Added Catalan translations Fixed incorrect margins for buttons in Firefox and Safari Replaced package manager yarn with npm 5.6 Reverted GitHub stars rounding method Removed --dev-addr flag from Dockerfile for Windows compatibility","title":"2.6.4 _ February 21, 2018"},{"location":"release-notes/#263-_-february-18-2018","text":"Added Vietnamese translations","title":"2.6.3 _ February 18, 2018"},{"location":"release-notes/#262-_-february-12-2018","text":"Added Arabic translations Fixed incorrect rounding of amount of GitHub stars Fixed double-layered borders for tables","title":"2.6.2 _ February 12, 2018"},{"location":"release-notes/#261-_-february-11-2018","text":"Added ability to override Disqus integration using metadata Fixed #690 : Duplicate slashes in source file URLs Fixed #696 : Active page highlight not working with default palette Adjusted German translations","title":"2.6.1 _ February 11, 2018"},{"location":"release-notes/#260-_-february-2-2018","text":"Moved default search configuration to default translation (English) Added support to automatically set text direction from translation Added support to disable search stop word filter in translation Added support to disable search trimmer in translation Added Persian translations Fixed support for Polish search Fixed disappearing GitHub, GitLab and Bitbucket repository icons","title":"2.6.0 _ February 2, 2018"},{"location":"release-notes/#255-_-january-31-2018","text":"Added Hungarian translations","title":"2.5.5 _ January 31, 2018"},{"location":"release-notes/#254-_-january-29-2018","text":"Fixed #683 : gh-deploy fails inside Docker","title":"2.5.4 _ January 29, 2018"},{"location":"release-notes/#253-_-january-25-2018","text":"Added Ukrainian translations","title":"2.5.3 _ January 25, 2018"},{"location":"release-notes/#252-_-january-22-2018","text":"Added default search language mappings for all localizations Fixed #673 : Error loading non-existent search language Fixed #675 : Uncaught reference error when search plugin disabled","title":"2.5.2 _ January 22, 2018"},{"location":"release-notes/#251-_-january-20-2018","text":"Fixed permalink for main headline Improved missing translation handling with English as a fallback Improved accessibility with skip-to-content link","title":"2.5.1 _ January 20, 2018"},{"location":"release-notes/#250-_-january-13-2018","text":"Added support for right-to-left languages","title":"2.5.0 _ January 13, 2018"},{"location":"release-notes/#240-_-january-11-2018","text":"Added focus state for clipboard buttons Fixed #400 : Search bar steals tab focus Fixed search not closing on Enter when result is selected Fixed search not closing when losing focus due to Tab Fixed collapsed navigation links getting focus Fixed outline being cut off on Tab focus of navigation links Fixed bug with first search result navigation being ignored Removed search result navigation via Tab (use Up and Down ) Removed outline resets for links Improved general tabbing behavior on desktop","title":"2.4.0 _ January 11, 2018"},{"location":"release-notes/#230-_-january-9-2018","text":"Added example (synonym: snippet ) style for Admonition Added synonym abstract for summary style for Admonition","title":"2.3.0 _ January 9, 2018"},{"location":"release-notes/#226-_-december-27-2017","text":"Added Turkish translations Fixed unclickable area below header in case JavaScript is not available","title":"2.2.6 _ December 27, 2017"},{"location":"release-notes/#225-_-december-18-2017","text":"Fixed #639 : Broken default favicon","title":"2.2.5 _ December 18, 2017"},{"location":"release-notes/#224-_-december-18-2017","text":"Fixed #638 : Build breaks with Jinja 2.9","title":"2.2.4 _ December 18, 2017"},{"location":"release-notes/#223-_-december-13-2017","text":"Fixed #630 : Admonition sets padding on any last child Adjusted Chinese (Traditional) translations","title":"2.2.3 _ December 13, 2017"},{"location":"release-notes/#222-_-december-8-2017","text":"Added Dutch translations Adjusted targeted link and footnote offsets Simplified Admonition styles and fixed padding bug","title":"2.2.2 _ December 8, 2017"},{"location":"release-notes/#221-_-december-2-2017","text":"Fixed #616 : Minor styling error with title-only admonition blocks Removed border for table of contents and improved spacing","title":"2.2.1 _ December 2, 2017"},{"location":"release-notes/#220-_-november-22-2017","text":"Added support for hero teaser Added Portuguese translations Fixed #586 : Footnote backref target offset regression Fixed #605 : Search stemmers not correctly loaded","title":"2.2.0 _ November 22, 2017"},{"location":"release-notes/#211-_-november-21-2017","text":"Replaced deprecated babel-preset-es2015 with babel-preset-env Refactored Gulp build pipeline with Webpack Removed right border on sidebars Fixed broken color transition on header","title":"2.1.1 _ November 21, 2017"},{"location":"release-notes/#210-_-november-19-2017","text":"Added support for white as a primary color Added support for sliding site name and title Fixed redundant clipboard button when using line numbers on code blocks Improved header appearance by making it taller Improved tabs appearance Improved CSS customizability by leveraging inheritance Removed scroll shadows via background-attachment","title":"2.1.0 _ November 19, 2017"},{"location":"release-notes/#204-_-november-5-2017","text":"Fixed details not opening with footnote reference","title":"2.0.4 _ November 5, 2017"},{"location":"release-notes/#203-_-november-5-2017","text":"Added Japanese translations Fixed #540 : Jumping to anchor inside details doesn't open it Fixed active link colors in footer","title":"2.0.3 _ November 5, 2017"},{"location":"release-notes/#202-_-november-1-2017","text":"Added Russian translations Fixed #542 : Horizontal scrollbar between 1220px and 1234px Fixed #553 : Metadata values only rendering first character Fixed #558 : Flash of unstyled content Fixed favicon regression caused by deprecation upstream","title":"2.0.2 _ November 1, 2017"},{"location":"release-notes/#201-_-october-31-2017","text":"Fixed error when initializing search Fixed styles for link to edit the current page Fixed styles on nested admonition in details","title":"2.0.1 _ October 31, 2017"},{"location":"release-notes/#200-_-october-31-2017","text":"Added support for MkDocs 0.17.1 theme configuration options Added support for easier configuration of search tokenizer Added support to disable search Added Korean translations Removed support for MkDocs 0.16.x [BREAKING]","title":"2.0.0 _ October 31, 2017"},{"location":"release-notes/#1122-_-october-26-2017","text":"Added Italian, Norwegian, French and Chinese translations","title":"1.12.2 _ October 26, 2017"},{"location":"release-notes/#1121-_-october-22-2017","text":"Added Polish, Swedish and Spanish translations Improved downward compatibility with custom partials Temporarily pinned MkDocs version within Docker image to 0.16.3 Fixed #519 : Missing theme configuration file","title":"1.12.1 _ October 22, 2017"},{"location":"release-notes/#1120-_-october-20-2017","text":"Added support for setting language(s) via mkdocs.yml Added support for default localization Added German and Danish translations Fixed #374 : Search bar misalignment on big screens","title":"1.12.0 _ October 20, 2017"},{"location":"release-notes/#1110-_-october-19-2017","text":"Added localization to clipboard Refactored localization logic","title":"1.11.0 _ October 19, 2017"},{"location":"release-notes/#1104-_-october-18-2017","text":"Improved print styles of code blocks Improved search UX (don't close on enter if no selection) Fixed #495 : Vertical scrollbar on short pages","title":"1.10.4 _ October 18, 2017"},{"location":"release-notes/#1103-_-october-11-2017","text":"Fixed #484 : Vertical scrollbar on some MathJax formulas Fixed #483 : Footnote backref target offset regression","title":"1.10.3 _ October 11, 2017"},{"location":"release-notes/#1102-_-october-6-2017","text":"Fixed #468 : Sidebar shows scrollbar if content is shorter (in Safari)","title":"1.10.2 _ October 6, 2017"},{"location":"release-notes/#1101-_-september-14-2017","text":"Fixed #455 : Bold code blocks rendered with normal font weight","title":"1.10.1 _ September 14, 2017"},{"location":"release-notes/#1100-_-september-1-2017","text":"Added support to make logo default icon configurable Fixed uninitialized overflow scrolling on main pane for iOS Fixed error in mobile navigation in case JavaScript is not available Fixed incorrect color transition for nested panes in mobile navigation Improved checkbox styles for Tasklist from PyMdown Extension package","title":"1.10.0 _ September 1, 2017"},{"location":"release-notes/#190-_-august-29-2017","text":"Added info (synonym: todo ) style for Admonition Added question (synonym: help , faq ) style for Admonition Added support for Details from PyMdown Extensions package Improved Admonition styles to match Details Improved styles for social links in footer Replaced ligatures with Unicode code points to avoid broken layout Upgraded PyMdown Extensions package dependency to = 3.4","title":"1.9.0 _ August 29, 2017"},{"location":"release-notes/#181-_-august-7-2017","text":"Fixed #421 : Missing pagination for GitHub API","title":"1.8.1 _ August 7, 2017"},{"location":"release-notes/#180-_-august-2-2017","text":"Added support for lazy-loading of search results for better performance Added support for customization of search tokenizer/separator Fixed #424 : Search doesn't handle capital letters anymore Fixed #419 : Search doesn't work on whole words","title":"1.8.0 _ August 2, 2017"},{"location":"release-notes/#175-_-july-25-2017","text":"Fixed #398 : Forms broken due to search shortcuts Improved search overall user experience Improved search matching and highlighting Improved search accessibility","title":"1.7.5 _ July 25, 2017"},{"location":"release-notes/#174-_-june-21-2017","text":"Fixed functional link colors in table of contents for active palette Fixed #368 : Compatibility issues with IE11","title":"1.7.4 _ June 21, 2017"},{"location":"release-notes/#173-_-june-7-2017","text":"Fixed error when setting language to Japanese for site search","title":"1.7.3 _ June 7, 2017"},{"location":"release-notes/#172-_-june-6-2017","text":"Fixed offset of search box when repo_url is not set Fixed non-disappearing tooltip","title":"1.7.2 _ June 6, 2017"},{"location":"release-notes/#171-_-june-1-2017","text":"Fixed wrong z-index order of header, overlay and drawer Fixed wrong offset of targeted footnote back references","title":"1.7.1 _ June 1, 2017"},{"location":"release-notes/#170-_-june-1-2017","text":"Added \"copy to clipboard\" buttons to code blocks Added support for multilingual site search Fixed search term highlighting for non-latin languages","title":"1.7.0 _ June 1, 2017"},{"location":"release-notes/#164-_-may-24-2017","text":"Fixed #337 : JavaScript error for GitHub organization URLs","title":"1.6.4 _ May 24, 2017"},{"location":"release-notes/#163-_-may-16-2017","text":"Fixed #329 : Broken source stats for private or unknown GitHub repos","title":"1.6.3 _ May 16, 2017"},{"location":"release-notes/#162-_-may-15-2017","text":"Fixed #316 : Fatal error for git clone on Windows Fixed #320 : Chrome 58 creates double underline for abbr tags Fixed #323 : Ligatures rendered inside code blocks Fixed miscalculated sidebar height due to missing margin collapse Changed deprecated MathJax CDN to Cloudflare","title":"1.6.2 _ May 15, 2017"},{"location":"release-notes/#161-_-april-23-2017","text":"Fixed following of active/focused element if search input is focused Fixed layer order of search component elements","title":"1.6.1 _ April 23, 2017"},{"location":"release-notes/#160-_-april-22-2017","text":"Added build test for Docker image on Travis Added search overlay for better user experience (focus) Added language from localizations to html tag Fixed #270 : source links broken for absolute URLs Fixed missing top spacing for first targeted element in content Fixed too small footnote divider when using larger font sizes","title":"1.6.0 _ April 22, 2017"},{"location":"release-notes/#155-_-april-20-2017","text":"Fixed #282 : Browser search ( Meta + F ) is hijacked","title":"1.5.5 _ April 20, 2017"},{"location":"release-notes/#154-_-april-8-2017","text":"Fixed broken highlighting for two or more search terms Fixed missing search results when only a h1 is present Fixed unresponsive overlay on Android","title":"1.5.4 _ April 8, 2017"},{"location":"release-notes/#153-_-april-7-2017","text":"Fixed deprecated calls for template variables Fixed wrong palette color for focused search result Fixed JavaScript errors on 404 page Fixed missing top spacing on 404 page Fixed missing right spacing on overflow of source container","title":"1.5.3 _ April 7, 2017"},{"location":"release-notes/#152-_-april-5-2017","text":"Added requirements as explicit dependencies in setup.py Fixed non-synchronized transitions in search form","title":"1.5.2 _ April 5, 2017"},{"location":"release-notes/#151-_-march-30-2017","text":"Fixed rendering and offset of targetted footnotes Fixed #238 : Link on logo is not set to site_url","title":"1.5.1 _ March 30, 2017"},{"location":"release-notes/#150-_-march-24-2017","text":"Added support for localization of search placeholder Added keyboard events for quick access of search Added keyboard events for search control Added opacity on hover for search buttons Added git hook to skip CI build on non-src changes Fixed non-resetting search placeholder when input is cleared Fixed error for unescaped parentheses in search term Fixed #229 : Button to clear search missing Fixed #231 : Escape key doesn't exit search Removed old-style figures from font feature settings","title":"1.5.0 _ March 24, 2017"},{"location":"release-notes/#141-_-march-16-2017","text":"Fixed invalid destructuring attempt on NodeList (in Safari, Edge, IE)","title":"1.4.1 _ March 16, 2017"},{"location":"release-notes/#140-_-march-16-2017","text":"Added support for grouping searched sections by documents Added support for highlighting of search terms Added support for localization of search results Fixed #216 : table of contents icon doesn't show if h1 is not present Reworked style and layout of search results for better usability","title":"1.4.0 _ March 16, 2017"},{"location":"release-notes/#130-_-march-11-2017","text":"Added support for page-specific title and description using metadata Added support for linking source files to documentation Fixed jitter and offset of sidebar when zooming browser Fixed incorrectly initialized tablet sidebar height Fixed regression for #1 : GitHub stars break if repo_url ends with a / Fixed undesired white line below copyright footer due to base font scaling Fixed issue with whitespace in path for scripts Fixed #205 : support non-fixed (static) header Refactored footnote references for better visibility Reduced repaints to a minimum for non-tabs configuration Reduced contrast of edit button (slightly)","title":"1.3.0 _ March 11, 2017"},{"location":"release-notes/#120-_-march-3-2017","text":"Added quote (synonym: cite ) style for Admonition Added help message to build pipeline Fixed wrong navigation link colors when applying palette Fixed #197 : Link missing in tabs navigation on deeply nested items Removed unnecessary dev dependencies","title":"1.2.0 _ March 3, 2017"},{"location":"release-notes/#111-_-february-26-2017","text":"Fixed incorrectly displayed nested lists when using tabs","title":"1.1.1 _ February 26, 2017"},{"location":"release-notes/#110-_-february-26-2017","text":"Added tabs navigation feature (optional) Added Disqus integration (optional) Added a high resolution Favicon with the new logo Added static type checking using Facebook's Flow Fixed #173 : Dictionary elements have no bottom spacing Fixed #175 : Tables cannot be set to 100% width Fixed race conditions in build related to asset revisioning Fixed accidentally re-introduced Permalink on top-level headline Fixed alignment of logo in drawer on IE11 Refactored styles related to tables Refactored and automated Docker build and PyPI release Refactored build scripts","title":"1.1.0 _ February 26, 2017"},{"location":"release-notes/#105-_-february-18-2017","text":"Fixed #153 : Sidebar flows out of constrained area in Chrome 56 Fixed #159 : Footer jitter due to JavaScript if content is short","title":"1.0.5 _ February 18, 2017"},{"location":"release-notes/#104-_-february-16-2017","text":"Fixed #142 : Documentation build errors if h1 is defined as raw HTML Fixed #164 : PyPI release does not build and install Fixed offsets of targeted headlines Increased sidebar font size by 0.12rem","title":"1.0.4 _ February 16, 2017"},{"location":"release-notes/#103-_-january-22-2017","text":"Fixed #117 : Table of contents items don't blur on fast scrolling Refactored sidebar positioning logic Further reduction of repaints","title":"1.0.3 _ January 22, 2017"},{"location":"release-notes/#102-_-january-15-2017","text":"Fixed #108 : Horizontal scrollbar in content area","title":"1.0.2 _ January 15, 2017"},{"location":"release-notes/#101-_-january-14-2017","text":"Fixed massive repaints happening when scrolling Fixed footer back reference positions in case of overflow Fixed header logo from showing when the menu icon is rendered Changed scrollbar behavior to only show when content overflows","title":"1.0.1 _ January 14, 2017"},{"location":"release-notes/#100-_-january-13-2017","text":"Introduced Webpack for more sophisticated JavaScript bundling Introduced ESLint and Stylelint for code style checks Introduced more accurate Material Design colors and shadows Introduced modular scales for harmonic font sizing Introduced git-hooks for better development workflow Rewrite of CSS using the BEM methodology and SassDoc guidelines Rewrite of JavaScript using ES6 and Babel as a transpiler Rewrite of Admonition, Permalinks and CodeHilite integration Rewrite of the complete typographical system Rewrite of Gulp asset pipeline in ES6 and separation of tasks Removed Bower as a dependency in favor of NPM Removed custom icon build in favor of the Material Design iconset Removed _blank targets on links due to vulnerability: http://bit.ly/1Mk2Rtw Removed unversioned assets from build directory Restructured templates into base templates and partials Added build and watch scripts in package.json Added support for Metadata and Footnotes Markdown extensions Added support for PyMdown Extensions package Added support for collapsible sections in navigation Added support for separate table of contents Added support for better accessibility through REM-based layout Added icons for GitHub, GitLab and BitBucket integrations Added more detailed documentation on specimen, extensions etc. Added a 404.html error page for deployment on GitHub Pages Fixed live reload chain in watch mode when saving a template Fixed variable references to work with MkDocs 0.16","title":"1.0.0 _ January 13, 2017"},{"location":"release-notes/#024-_-june-26-2016","text":"Fixed improperly set default favicon Fixed #33 : Protocol relative URL for webfonts doesn't work with file:// Fixed #34 : IE11 on Windows 7 doesn't honor max-width on main tag Fixed #35 : Add styling for blockquotes","title":"0.2.4 _ June 26, 2016"},{"location":"release-notes/#023-_-may-16-2016","text":"Fixed #25 : Highlight inline fenced blocks Fixed #26 : Better highlighting for keystrokes Fixed #30 : Suboptimal syntax highlighting for PHP","title":"0.2.3 _ May 16, 2016"},{"location":"release-notes/#022-_-march-20-2016","text":"Fixed #15 : Document Pygments dependency for CodeHilite Fixed #16 : Favicon could not be set through mkdocs.yml Fixed #17 : Put version into own container for styling Fixed #20 : Fix rounded borders for tables","title":"0.2.2 _ March 20, 2016"},{"location":"release-notes/#021-_-march-12-2016","text":"Fixed #10 : Invisible header after closing search bar with ESC key Fixed #13 : Table cells don't wrap Fixed empty list in table of contents when no headline is defined Corrected wrong path for static asset monitoring in Gulpfile.js Set up tracking of site search for Google Analytics","title":"0.2.1 _ March 12, 2016"},{"location":"release-notes/#020-_-february-24-2016","text":"Fixed #6 : Include multiple color palettes via mkdocs.yml Fixed #7 : Better colors for links inside admonition notes and warnings Fixed #9 : Text for prev/next footer navigation should be customizable Refactored templates (replaced if / else with modifiers where possible)","title":"0.2.0 _ February 24, 2016"},{"location":"release-notes/#013-_-february-21-2016","text":"Fixed #3 : Ordered lists within an unordered list have ::before content Fixed #4 : Click on Logo/Title without Github-Repository: \"None\" Fixed #5 : Page without headlines renders empty list in table of contents Moved Modernizr to top to ensure basic usability in IE8","title":"0.1.3 _ February 21, 2016"},{"location":"release-notes/#012-_-february-16-2016","text":"Fixed styles for deep navigational hierarchies Fixed webfont delivery problem when hosted in subdirectories Fixed print styles in mobile/tablet configuration Added option to configure fonts in mkdocs.yml with fallbacks Changed styles for admonition notes and warnings Set download link to latest version if available Set up tracking of outgoing links and actions for Google Analytics","title":"0.1.2 _ February 16, 2016"},{"location":"release-notes/#011-_-february-11-2016","text":"Fixed #1 : GitHub stars don't work if the repo_url ends with a / Updated NPM and Bower dependencies to most recent versions Changed footer/copyright link to Material theme to GitHub pages Made MkDocs building/serving in build process optional Set up continuous integration with Travis","title":"0.1.1 _ February 11, 2016"},{"location":"release-notes/#010-_-february-9-2016","text":"Initial release","title":"0.1.0 _ February 9, 2016"},{"location":"specimen/","text":"Specimen Body copy Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero, mollis sed massa vel, ornare viverra ex . Mauris a ullamcorper lacus. Nullam urna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales pulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan tempor. Sed suscipit , orci non pretium pretium, quam mi gravida metus, vel venenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum eros. Nulla aliquam orci sit amet nisl posuere malesuada. Proin aliquet nulla velit, quis ultricies orci feugiat et. Ut tincidunt sollicitudin tincidunt. Aenean ullamcorper sit amet nulla at interdum. Headings The 3 rd level The 4 th level The 5 th level The 6 th level Headings with secondary text The 3 rd level with secondary text The 4 th level with secondary text The 5 th level with secondary text The 6 th level with secondary text Blockquotes Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie imperdiet consectetur. Blockquote nesting Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem libero fermentum urna, ut efficitur elit ligula et nunc. Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla. Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio. Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum. eu odio. Suspendisse rutrum facilisis risus , eu posuere neque commodo a. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo bibendum, sodales mauris ut, tincidunt massa. Other content blocks Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. var _extends = function ( target ) { for ( var i = 1 ; i arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Praesent at return target , sodales nibh vel, tempor felis. Fusce vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices. Donec consectetur mauris non neque imperdiet, eget volutpat libero. Lists Unordered lists Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Ordered lists Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam pellentesque lacinia eu vel odio. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed aliquet, neque at rutrum mollis, neque nisi tincidunt nibh. Pellentesque eget var _extends ornare tellus, ut gravida mi. var _extends = function ( target ) { for ( var i = 1 ; i arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Definition lists Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Code blocks Inline Morbi eget dapibus felis . Vivamus venenatis porttitor tortor sit amet rutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque aliquet quam enim , eu volutpat urna rutrum a. Nam vehicula nunc return target mauris, a ultricies libero efficitur sed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque eget ornare tellus, ut gravida mi. Fusce vel lacinia lacus. Listing 1 2 3 4 5 6 7 8 9 var _extends = function ( target ) { for ( var i = 1 ; i lt ; arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Horizontal rules Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Data tables Sollicitudo / Pellentesi consectetur adipiscing elit arcu sed Vivamus a pharetra yes yes yes yes yes Ornare viverra ex yes yes yes yes yes Mauris a ullamcorper yes yes partial yes yes Nullam urna elit yes yes yes yes yes Malesuada eget finibus yes yes yes yes yes Ullamcorper yes yes yes yes yes Vestibulum sodales yes - yes - yes Pulvinar nisl yes yes yes - - Pharetra aliquet est yes yes yes yes yes Sed suscipit yes yes yes yes yes Orci non pretium yes partial - - - Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Left Center Right Lorem dolor amet ipsum sit Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. Table with colgroups (Pandoc) Lorem ipsum dolor sit amet. Sed sagittis eleifend rutrum. Donec vitae suscipit est.","title":"Specimen"},{"location":"specimen/#specimen","text":"","title":"Specimen"},{"location":"specimen/#body-copy","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero, mollis sed massa vel, ornare viverra ex . Mauris a ullamcorper lacus. Nullam urna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales pulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan tempor. Sed suscipit , orci non pretium pretium, quam mi gravida metus, vel venenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum eros. Nulla aliquam orci sit amet nisl posuere malesuada. Proin aliquet nulla velit, quis ultricies orci feugiat et. Ut tincidunt sollicitudin tincidunt. Aenean ullamcorper sit amet nulla at interdum.","title":"Body copy"},{"location":"specimen/#headings","text":"","title":"Headings"},{"location":"specimen/#the-3rd-level","text":"","title":"The 3rd level"},{"location":"specimen/#the-4th-level","text":"","title":"The 4th level"},{"location":"specimen/#the-5th-level","text":"","title":"The 5th level"},{"location":"specimen/#the-6th-level","text":"","title":"The 6th level"},{"location":"specimen/#headings-with-secondary-text","text":"","title":"Headings with secondary text"},{"location":"specimen/#the-3rd-level-with-secondary-text","text":"","title":"The 3rd level with secondary text"},{"location":"specimen/#the-4th-level-with-secondary-text","text":"","title":"The 4th level with secondary text"},{"location":"specimen/#the-5th-level-with-secondary-text","text":"","title":"The 5th level with secondary text"},{"location":"specimen/#the-6th-level-with-secondary-text","text":"","title":"The 6th level with secondary text"},{"location":"specimen/#blockquotes","text":"Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie imperdiet consectetur.","title":"Blockquotes"},{"location":"specimen/#blockquote-nesting","text":"Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem libero fermentum urna, ut efficitur elit ligula et nunc. Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla. Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio. Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum. eu odio. Suspendisse rutrum facilisis risus , eu posuere neque commodo a. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo bibendum, sodales mauris ut, tincidunt massa.","title":"Blockquote nesting"},{"location":"specimen/#other-content-blocks","text":"Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. var _extends = function ( target ) { for ( var i = 1 ; i arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Praesent at return target , sodales nibh vel, tempor felis. Fusce vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices. Donec consectetur mauris non neque imperdiet, eget volutpat libero.","title":"Other content blocks"},{"location":"specimen/#lists","text":"","title":"Lists"},{"location":"specimen/#unordered-lists","text":"Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam.","title":"Unordered lists"},{"location":"specimen/#ordered-lists","text":"Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam pellentesque lacinia eu vel odio. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed aliquet, neque at rutrum mollis, neque nisi tincidunt nibh. Pellentesque eget var _extends ornare tellus, ut gravida mi. var _extends = function ( target ) { for ( var i = 1 ; i arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo.","title":"Ordered lists"},{"location":"specimen/#definition-lists","text":"Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris.","title":"Definition lists"},{"location":"specimen/#code-blocks","text":"","title":"Code blocks"},{"location":"specimen/#inline","text":"Morbi eget dapibus felis . Vivamus venenatis porttitor tortor sit amet rutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque aliquet quam enim , eu volutpat urna rutrum a. Nam vehicula nunc return target mauris, a ultricies libero efficitur sed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque eget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.","title":"Inline"},{"location":"specimen/#listing","text":"1 2 3 4 5 6 7 8 9 var _extends = function ( target ) { for ( var i = 1 ; i lt ; arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; };","title":"Listing"},{"location":"specimen/#horizontal-rules","text":"Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales.","title":"Horizontal rules"},{"location":"specimen/#data-tables","text":"Sollicitudo / Pellentesi consectetur adipiscing elit arcu sed Vivamus a pharetra yes yes yes yes yes Ornare viverra ex yes yes yes yes yes Mauris a ullamcorper yes yes partial yes yes Nullam urna elit yes yes yes yes yes Malesuada eget finibus yes yes yes yes yes Ullamcorper yes yes yes yes yes Vestibulum sodales yes - yes - yes Pulvinar nisl yes yes yes - - Pharetra aliquet est yes yes yes yes yes Sed suscipit yes yes yes yes yes Orci non pretium yes partial - - - Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Left Center Right Lorem dolor amet ipsum sit Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. Table with colgroups (Pandoc) Lorem ipsum dolor sit amet. Sed sagittis eleifend rutrum. Donec vitae suscipit est.","title":"Data tables"},{"location":"android/androidTools/","text":"Android IOS \u5f00\u53d1\u5e38\u4f7f\u7528\u5230\u7684\u5e93 Flutter\u6253\u5305\u8fc7\u7a0b Flutter\u6253\u5305\u8fc7\u7a0b JavaJar\u5305\u5206\u6790 Android IOS- Apk ipa\u5305\u7ed3\u6784 ipa\u76ee\u5f55\u7ed3\u6784\u53ca\u6784\u5efa\u8fc7\u7a0b ipaflutter\u5305\u7ed3\u6784 Android IOS\u4e2d\u690d\u5165\u4ee3\u7801 IOS\u4e2d\u690d\u5165\u4ee3\u7801 android\u9006\u5411\u57fa\u7840 java/smali/C++/arm implementation 'com.liulishuo.filedownloader:library:1.7.4' \u6a21\u62df\u5668 bluestacks\u3001nox Android \u5b89\u5168\u5f00\u53d1 https\u5b89\u5168 Android IOS\u9006\u5411 \u9006\u5411\u5de5\u7a0b So\u5206\u6790\u5de5\u5177 android-classyshark classyshark\u4f7f\u7528\u6559\u7a0b jni_helper","title":"AndroidTools"},{"location":"android/androidTools/#androidios","text":"","title":"Android&amp;IOS \u5f00\u53d1\u5e38\u4f7f\u7528\u5230\u7684\u5e93"},{"location":"android/androidTools/#flutter","text":"Flutter\u6253\u5305\u8fc7\u7a0b JavaJar\u5305\u5206\u6790","title":"Flutter\u6253\u5305\u8fc7\u7a0b"},{"location":"android/androidTools/#androidios-apkipa","text":"ipa\u76ee\u5f55\u7ed3\u6784\u53ca\u6784\u5efa\u8fc7\u7a0b ipaflutter\u5305\u7ed3\u6784","title":"Android&amp;IOS-&gt;Apk&amp;ipa\u5305\u7ed3\u6784"},{"location":"android/androidTools/#androidios_1","text":"IOS\u4e2d\u690d\u5165\u4ee3\u7801","title":"Android&amp;IOS\u4e2d\u690d\u5165\u4ee3\u7801"},{"location":"android/androidTools/#android","text":"java/smali/C++/arm implementation 'com.liulishuo.filedownloader:library:1.7.4'","title":"android\u9006\u5411\u57fa\u7840"},{"location":"android/androidTools/#bluestacksnox","text":"Android \u5b89\u5168\u5f00\u53d1 https\u5b89\u5168 Android IOS\u9006\u5411","title":"\u6a21\u62df\u5668 bluestacks\u3001nox"},{"location":"android/androidTools/#_1","text":"So\u5206\u6790\u5de5\u5177 android-classyshark classyshark\u4f7f\u7528\u6559\u7a0b jni_helper","title":"\u9006\u5411\u5de5\u7a0b"},{"location":"android/androidX/","text":"Android Android Jetpack \u4f7f\u7528\u5165\u95e8","title":"androidX"},{"location":"android/androidX/#android-android-jetpack","text":"","title":"Android Android Jetpack \u4f7f\u7528\u5165\u95e8"},{"location":"android/aws-android/awsamplify/","text":"","title":"Awsamplify"},{"location":"android/flutter/AndroidViewinit/","text":"FlutterActivityDelegate\u521d\u59cb\u5316UI\u76f8\u5173\u7684\u5185\u5bb9 FlutterUI\u63d0\u4f9b\u4e86Flutter for\b Android \u7684\u5305\uff0c FlutterActivity , FlutterFragmentActivity ,\u5728\b\u5e73\u53f0\u4fa7\u521d\u59cb\u5316Flutter engine\u4e2d\u7684\u4fe1\u606f\uff0c\u4e0a\u4e00\u7bc7\u4e2d\u5206\u6790\u4e86Dart\u6587\u4ef6\u52a0\u8f7dAndroid\u4fa7\u7684\u4ee3\u7801 Android\u52a0\u8f7dDart\u6587\u4ef6 \uff0c\u7b2c\u4e8c\u6b65\u5c31\u662f\u628aFlutter\u76f8\u5173\u7684\u4ee3\u7801\u7ed8\u5236\b\u51fa\u6765\uff0c\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u521d\u59cb\u5316: platform_view_android_jni.cc \u8fd9\u4e2a\u7c7b\u4f5c\u4e3aAndroid\u5e73\u53f0\u7684\bUI\b\u8c03\u7528\u7684JNI\u63a5\u53e3 \u6267\u884c\u4e0b\u8ff0\u7684\u4e09\u6b65\u64cd\u4f5c\uff0c\b\u80fd\u591f\u521b\u5efaFlutter engine\u6267\u884c\u73af\u5883\uff0c\u4f20\u9012\bAndroid\u7aef\u7684\bSurfaceView\u7ed9\u5230Flutter engine\uff0c\u65b9\u4fbf\b\bFlutter engine\u7ed8\u5236\u76f8\u5173\u7684UI\u754c\u9762\uff0c\b\u6267\u884c\u5b8c\u6210\u4e0a\u8ff0\u6b65\u9aa4\uff0cAndroid\u4fa7\u7684\b\bSurfaceView\u5df2\u7ecf\b\u6ce8\u5165\u5230\bflutter\u5f15\u64ce\u4e2d\uff0c\b\u540e\u7eed\u7684\u6587\u4ef6\b\u89c1\u63a7\u5236\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4\u5728\bflutter\b\u5f15\u64ce\u4e2d\u662f\u5982\u4f55\u5de5\u4f5c\u3002 1.\b\b\u8c03\u7528\u7684nativeAttach: io.flutter.embedding.engine.FlutterJNI engine/src/flutter/shell/platform/android/platform_view_android_jni.cc ,\b\u521d\u59cb\u5316flutter engine \u8fd0\u884c\u73af\u5883Platform\uff0cGPU\uff0cIO,UI,MessageLoop,\b\u521d\u59cb\u5316DartVM\uff0c\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cskia\b\uff0cICU\u7b49\uff0c \u52a0\u8f7d\u914d\u7f6e //engine/src/flutter/common/settings.cc 2.SurfaceView public void surfaceCreated(SurfaceHolder holder) {} public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {} public void surfaceDestroyed(SurfaceHolder holder) {} 3. nativeDetach \u5220\u9664 engine/src/flutter/shell/platform/android/android_shell_holder.cc \u6e05\u7406\u8fd0\u884c\u73af\u5883 \b FlutterActivityDelegate \b\u4f7f\u7528\u4ee3\u7406\u7c7b\u6765\u5904\u7406\u76f8\u5173\u7684\u4e8b\u4ef6\uff0cFlutter\u662f\u4e00\u4e2aUI\u5e93 \u521d\u59cb\u5316windown\b\u7a97\u53e3 \u83b7\u53d6Intent\u53c2\u6570 \u5168\u90e8Flutter\b\u62bd\u53d6\u5b8c\u6210 \u521d\u59cb\u5316FlutterView,\u4e3b\u8981\b\u7ba1\u7406SurfaceView\u7684\u521d\u59cb\u5316\uff0c\u6ce8\u518c\u7cfb\u7edf\b\u4e8b\u4ef6 \u6dfb\u52a0SurfaceView\u5230Activity\u7a97\u53e3 public final class FlutterActivityDelegate implements FlutterActivityEvents , Provider , PluginRegistry { public void onCreate ( Bundle savedInstanceState ) { !-- \b \u5224\u65ad\u5e73\u53f0 \b \u7279\u6027 \uff0c\b \u5904\u7406\u76f8\u5173 \b window \b \u903b\u8f91 -- if ( VERSION . SDK_INT = 21 ) { Window window = this . activity . getWindow (); window . addFlags (- 2147483648 ); window . setStatusBarColor ( 1073741824 ); window . getDecorView (). setSystemUiVisibility ( 1280 ); } !-- \b \u83b7\u53d6intent\u53c2\u6570 -- String [] args = getArgsFromIntent ( this . activity . getIntent ()); !-- \b \u5168\u90e8Flutter\u76f8\u5173\u7684\u6587\u4ef6\u521d\u59cb\u5316\u5b8c\u6210 -- FlutterMain . ensureInitializationComplete ( this . activity . getApplicationContext (), args ); this . flutterView = this . viewFactory . createFlutterView ( this . activity ); if ( this . flutterView == null ) { !-- FlutterNativeView\u4e3b\u8981\u7528\u4e8eFlutterView\u64cd\u4f5cJIN\u7684\u65b9\u6cd5\u903b\u8f91\u8fdb\u884c\u5c01\u88c5 -- FlutterNativeView nativeView = this . viewFactory . createFlutterNativeView (); this . flutterView = new FlutterView ( this . activity , ( AttributeSet ) null , nativeView ); this . flutterView . setLayoutParams ( matchParent ); !-- \b \u6dfb\u52a0 \b SurfaceView\u5230Activity\u7a97\u53e3\u4e2d -- this . activity . setContentView ( this . flutterView ); !-- \u63d2\u4ef6Flutter\u7684\u542f\u52a8\u754c\u9762 -- this . launchView = this . createLaunchView (); if ( this . launchView != null ) { this . addLaunchView (); } } if (! this . loadIntent ( this . activity . getIntent ())) { String appBundlePath = FlutterMain . findAppBundlePath ( this . activity . getApplicationContext ()); if ( appBundlePath != null ) { this . runBundle ( appBundlePath ); } } } FlutterView 1.\u521d\u59cb\u5316DartExecutor\u6267\u884c\u76f8\u5173\u7684\u903b\u8f91 2.\b\u8d1f\u8d23\u5904\u7406FlutterUI\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u521b\u5efaSurfaceView\u63d0\u4f9b\u7ed9DartVM\u6e32\u67d3FlutterUI\u4ee3\u7801 3.\u6ce8\u518c\u5e38\u89c4\u7684Platform\u4e8b\u4ef6 public FlutterView ( Context context , AttributeSet attrs , FlutterNativeView nativeView ) { //FlutterNativeView \bFlutterUI\u4e0eJNI\u4f20\u9012\u4fe1\u606f\u7684\u7c7b\uff0c\b\u786e\u4fdd\u4e0d\u4e3a\u7a7a if ( nativeView == null ) { this . mNativeView = new FlutterNativeView ( activity . getApplicationContext ()); } else { this . mNativeView = nativeView ; } this . dartExecutor = new DartExecutor ( this . mNativeView . getFlutterJNI ()); !-- \u5224\u65ad\u662f\u5426 \b\b \u5f00\u542f\u8f6f\u4ef6\u6e32\u67d3 engine / src / flutter / common / settings . cc -- this . mIsSoftwareRenderingEnabled = FlutterJNI . nativeGetIsSoftwareRenderingEnabled (); this . mAnimationScaleObserver = new FlutterView . AnimationScaleObserver ( new Handler ()); this . mMetrics = new FlutterView . ViewportMetrics (); !-- mSurfaceCallback\u56de\u8c03\u65b9\u6cd5 -- this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } }; !-- \u4f7f\u7528\u5e73\u53f0\u901a\u9053\u548cFlutter \b engine\u8fdb\u884c\u901a\u4fe1 -- this . navigationChannel = new NavigationChannel ( this . dartExecutor ); this . keyEventChannel = new KeyEventChannel ( this . dartExecutor ); this . lifecycleChannel = new LifecycleChannel ( this . dartExecutor ); this . systemChannel = new SystemChannel ( this . dartExecutor ); this . settingsChannel = new SettingsChannel ( this . dartExecutor ); this . mFlutterLocalizationChannel = new MethodChannel ( this , flutter/localization , JSONMethodCodec . INSTANCE ); PlatformPlugin platformPlugin = new PlatformPlugin ( activity ); MethodChannel flutterPlatformChannel = new MethodChannel ( this , flutter/platform , JSONMethodCodec . INSTANCE ); flutterPlatformChannel . setMethodCallHandler ( platformPlugin ); this . addActivityLifecycleListener ( platformPlugin ); this . mImm = ( InputMethodManager ) this . getContext (). getSystemService ( input_method ); this . mTextInputPlugin = new TextInputPlugin ( this ); this . androidKeyProcessor = new AndroidKeyProcessor ( this . keyEventChannel ); this . setLocales ( this . getResources (). getConfiguration ()); this . sendUserPlatformSettingsToDart (); } FlutterNativeView \u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528attach\u8c03\u7528 FlutterJNI \u4e2d\u7684nativeAttach\u8c03\u7528JNI\u65b9\u6cd5\u8fdb\u5165 platform_view_android_jni.cc \u521d\u59cb\u5316 AndroidShellHolder \uff0cFlutterNativeView\b\u4e3b\u8981\u5904\u7406UI\u548cJNI\u5c42\u7684\b\b\u903b\u8f91\uff0c\b FlutterJNI ,\u76f4\u63a5\u4e0eJNI\u901a\u4fe1\u7684\u903b\u8f91\uff0c\b\u8c03\u7528Attach\u5bf9Flutter engine\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u8c03\u7528\uff0c\u521d\u59cb\u5316\u73af\u5883 public FlutterNativeView ( Context context , boolean isBackgroundView ) { this . mNextReplyId = 1 ; this . mPendingReplies = new HashMap (); this . mContext = context ; this . mPluginRegistry = new FlutterPluginRegistry ( this , context ); this . mFlutterJNI = new FlutterJNI (); this . mFlutterJNI . setRenderSurface ( new FlutterNativeView . RenderSurfaceImpl ()); this . mFlutterJNI . setPlatformMessageHandler ( new FlutterNativeView . PlatformMessageHandlerImpl ()); this . mFlutterJNI . addEngineLifecycleListener ( new FlutterNativeView . EngineLifecycleListenerImpl ()); !-- \b\b \u4e3b\u8981\u529f\u80fd\u662f\u521d\u59cb\u5316AndroidShellHolder\u7684 \b\b \u7ba1\u7406\u7c7b -- this . attach ( this , isBackgroundView ); this . assertAttached (); this . mMessageHandlers = new HashMap (); } AndroidShellHolder engine/src/flutter/shell/platform/android/platform_view_android_jni.cc ,flutterView\u5728\b\u521d\u59cb\u5316\u65f6\u5b8c\u6210\b android_shell_holder \u7684\u521d\u59cb\u5316\uff0c\u65b9\u6cd5\u6ce8\u518c\u8fdb\u5165JNI\uff0c\b\u4e3b\u8981\u7684\u4f5c\u7528\u662f\u5bf9 AndroidShellHolder \u8fdb\u884c\u521d\u59cb \u4ece\u8fd9\u91cc\u5f00\u59cb\u5c31\u662f\u521d\u59cb\u5316\u76f8\u5173\u7684\u73af\u5883\uff0c\b\b\u5305\u62ec\bMessageLoop,\bPlatform,GPU,UI,IO\u7ebf\u7a0b\u8fdb\u884c\u521b\u5efa\uff0c\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0c\u521b\u5efaDartVM\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884cDart\b\u4ee3\u7801\u7684\u73af\u5883\u3002\u540e\u7eed\u6587\u4ef6\u56de\u8c03Flutter Engine\u8fdb\u884c\u521d\u59cb\u5316\u8fdb\u884c\u6269\u5c55 FlutterView \u672c\u5730SurfaceView\b\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u63d0\u4f9b\u7ed9Flutter\b\b\bUI\b\u7ed8\u5236\u7684\u63a5\u53e3\uff0c\bFlutter\u4f7f\u7528skia\u5f15\u64ce\u7ed8\u52362D\u56fe\u50cf\uff0c\u628aPlatform\b\u76f8\u5173\u7684View\u6ce8\u5165\u5230Flutter engine\u4e2d\u63d0\u4f9b\u53ef\u4ee5\u7ed8\u5236\u7684UI\u7ed9\bskia\u8fdb\u884c\u56fe\u50cf\u7ed8\u5236 this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } }; engine/src/flutter/shell/platform/android/platform_view_android_jni.cc ,android\u672c\u5730Surface\u521b\u5efa\u65f6\u8c03\u7528android\u672c\u5730\u7a97\u53e3\u8fdb\u884c\u7ed8\u5236ANativeWindow_fromSurface,\u4f7f\u7528AnativeWindow\u672c\u5730\u63a5\u53e3\u63d0\u4f9b\b\b\u7ed9\u672c\u5730\u63a5\u53e3\u4f7f\u7528 static void SurfaceCreated ( JNIEnv * env , jobject jcaller , jlong shell_holder , jobject jsurface ) { // Note: This frame ensures that any local references used by // ANativeWindow_fromSurface are released immediately. This is needed as a // workaround for https://code.google.com/p/android/issues/detail?id=68174 fml :: jni :: ScopedJavaLocalFrame scoped_local_reference_frame ( env ); auto window = fml :: MakeRefCounted AndroidNativeWindow ( ANativeWindow_fromSurface ( env , jsurface )); ANDROID_SHELL_HOLDER - GetPlatformView ()- NotifyCreated ( std :: move ( window )); } static void SurfaceChanged ( JNIEnv * env , jobject jcaller , jlong shell_holder , jint width , jint height ) { ANDROID_SHELL_HOLDER - GetPlatformView ()- NotifyChanged ( SkISize :: Make ( width , height )); } static void SurfaceDestroyed ( JNIEnv * env , jobject jcaller , jlong shell_holder ) { ANDROID_SHELL_HOLDER - GetPlatformView ()- NotifyDestroyed (); } \u81f3\u6b64\uff0cAndroid\u7aef\u7684View\u7684\u521d\u59cb\u5316\u5c31\u5df2\u7ecf\u5b8c\u6210\uff0c\u7b49\u5f85DartVM\u6267\u884c\u76f8\u5173\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u76f8\u5173\u7684\u7ed8\u5236\u5de5\u4f5c,Android\u7aef\u7684 View \u7684\u521d\u59cb\u5316\u6bd4\u8f83\u7b80\u5355\uff0c\u540e\u7eed\u518d\u5bf9JNI\u5c42\u7684\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u3002","title":"Android\u521d\u59cb\u5316View"},{"location":"android/flutter/AndroidViewinit/#flutteractivitydelegateui","text":"FlutterUI\u63d0\u4f9b\u4e86Flutter for\b Android \u7684\u5305\uff0c FlutterActivity , FlutterFragmentActivity ,\u5728\b\u5e73\u53f0\u4fa7\u521d\u59cb\u5316Flutter engine\u4e2d\u7684\u4fe1\u606f\uff0c\u4e0a\u4e00\u7bc7\u4e2d\u5206\u6790\u4e86Dart\u6587\u4ef6\u52a0\u8f7dAndroid\u4fa7\u7684\u4ee3\u7801 Android\u52a0\u8f7dDart\u6587\u4ef6 \uff0c\u7b2c\u4e8c\u6b65\u5c31\u662f\u628aFlutter\u76f8\u5173\u7684\u4ee3\u7801\u7ed8\u5236\b\u51fa\u6765\uff0c\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u521d\u59cb\u5316: platform_view_android_jni.cc \u8fd9\u4e2a\u7c7b\u4f5c\u4e3aAndroid\u5e73\u53f0\u7684\bUI\b\u8c03\u7528\u7684JNI\u63a5\u53e3 \u6267\u884c\u4e0b\u8ff0\u7684\u4e09\u6b65\u64cd\u4f5c\uff0c\b\u80fd\u591f\u521b\u5efaFlutter engine\u6267\u884c\u73af\u5883\uff0c\u4f20\u9012\bAndroid\u7aef\u7684\bSurfaceView\u7ed9\u5230Flutter engine\uff0c\u65b9\u4fbf\b\bFlutter engine\u7ed8\u5236\u76f8\u5173\u7684UI\u754c\u9762\uff0c\b\u6267\u884c\u5b8c\u6210\u4e0a\u8ff0\u6b65\u9aa4\uff0cAndroid\u4fa7\u7684\b\bSurfaceView\u5df2\u7ecf\b\u6ce8\u5165\u5230\bflutter\u5f15\u64ce\u4e2d\uff0c\b\u540e\u7eed\u7684\u6587\u4ef6\b\u89c1\u63a7\u5236\u4e0a\u9762\u4e24\u4e2a\u6b65\u9aa4\u5728\bflutter\b\u5f15\u64ce\u4e2d\u662f\u5982\u4f55\u5de5\u4f5c\u3002","title":"FlutterActivityDelegate\u521d\u59cb\u5316UI\u76f8\u5173\u7684\u5185\u5bb9"},{"location":"android/flutter/AndroidViewinit/#1nativeattach","text":"io.flutter.embedding.engine.FlutterJNI engine/src/flutter/shell/platform/android/platform_view_android_jni.cc ,\b\u521d\u59cb\u5316flutter engine \u8fd0\u884c\u73af\u5883Platform\uff0cGPU\uff0cIO,UI,MessageLoop,\b\u521d\u59cb\u5316DartVM\uff0c\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cskia\b\uff0cICU\u7b49\uff0c \u52a0\u8f7d\u914d\u7f6e //engine/src/flutter/common/settings.cc","title":"1.\b\b\u8c03\u7528\u7684nativeAttach:"},{"location":"android/flutter/AndroidViewinit/#2surfaceview","text":"public void surfaceCreated(SurfaceHolder holder) {} public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) {} public void surfaceDestroyed(SurfaceHolder holder) {}","title":"2.SurfaceView"},{"location":"android/flutter/AndroidViewinit/#3-nativedetach","text":"\u5220\u9664 engine/src/flutter/shell/platform/android/android_shell_holder.cc \u6e05\u7406\u8fd0\u884c\u73af\u5883 \b","title":"3. nativeDetach"},{"location":"android/flutter/AndroidViewinit/#flutteractivitydelegate","text":"\b\u4f7f\u7528\u4ee3\u7406\u7c7b\u6765\u5904\u7406\u76f8\u5173\u7684\u4e8b\u4ef6\uff0cFlutter\u662f\u4e00\u4e2aUI\u5e93 \u521d\u59cb\u5316windown\b\u7a97\u53e3 \u83b7\u53d6Intent\u53c2\u6570 \u5168\u90e8Flutter\b\u62bd\u53d6\u5b8c\u6210 \u521d\u59cb\u5316FlutterView,\u4e3b\u8981\b\u7ba1\u7406SurfaceView\u7684\u521d\u59cb\u5316\uff0c\u6ce8\u518c\u7cfb\u7edf\b\u4e8b\u4ef6 \u6dfb\u52a0SurfaceView\u5230Activity\u7a97\u53e3 public final class FlutterActivityDelegate implements FlutterActivityEvents , Provider , PluginRegistry { public void onCreate ( Bundle savedInstanceState ) { !-- \b \u5224\u65ad\u5e73\u53f0 \b \u7279\u6027 \uff0c\b \u5904\u7406\u76f8\u5173 \b window \b \u903b\u8f91 -- if ( VERSION . SDK_INT = 21 ) { Window window = this . activity . getWindow (); window . addFlags (- 2147483648 ); window . setStatusBarColor ( 1073741824 ); window . getDecorView (). setSystemUiVisibility ( 1280 ); } !-- \b \u83b7\u53d6intent\u53c2\u6570 -- String [] args = getArgsFromIntent ( this . activity . getIntent ()); !-- \b \u5168\u90e8Flutter\u76f8\u5173\u7684\u6587\u4ef6\u521d\u59cb\u5316\u5b8c\u6210 -- FlutterMain . ensureInitializationComplete ( this . activity . getApplicationContext (), args ); this . flutterView = this . viewFactory . createFlutterView ( this . activity ); if ( this . flutterView == null ) { !-- FlutterNativeView\u4e3b\u8981\u7528\u4e8eFlutterView\u64cd\u4f5cJIN\u7684\u65b9\u6cd5\u903b\u8f91\u8fdb\u884c\u5c01\u88c5 -- FlutterNativeView nativeView = this . viewFactory . createFlutterNativeView (); this . flutterView = new FlutterView ( this . activity , ( AttributeSet ) null , nativeView ); this . flutterView . setLayoutParams ( matchParent ); !-- \b \u6dfb\u52a0 \b SurfaceView\u5230Activity\u7a97\u53e3\u4e2d -- this . activity . setContentView ( this . flutterView ); !-- \u63d2\u4ef6Flutter\u7684\u542f\u52a8\u754c\u9762 -- this . launchView = this . createLaunchView (); if ( this . launchView != null ) { this . addLaunchView (); } } if (! this . loadIntent ( this . activity . getIntent ())) { String appBundlePath = FlutterMain . findAppBundlePath ( this . activity . getApplicationContext ()); if ( appBundlePath != null ) { this . runBundle ( appBundlePath ); } } }","title":"FlutterActivityDelegate"},{"location":"android/flutter/AndroidViewinit/#flutterview","text":"1.\u521d\u59cb\u5316DartExecutor\u6267\u884c\u76f8\u5173\u7684\u903b\u8f91 2.\b\u8d1f\u8d23\u5904\u7406FlutterUI\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u521b\u5efaSurfaceView\u63d0\u4f9b\u7ed9DartVM\u6e32\u67d3FlutterUI\u4ee3\u7801 3.\u6ce8\u518c\u5e38\u89c4\u7684Platform\u4e8b\u4ef6 public FlutterView ( Context context , AttributeSet attrs , FlutterNativeView nativeView ) { //FlutterNativeView \bFlutterUI\u4e0eJNI\u4f20\u9012\u4fe1\u606f\u7684\u7c7b\uff0c\b\u786e\u4fdd\u4e0d\u4e3a\u7a7a if ( nativeView == null ) { this . mNativeView = new FlutterNativeView ( activity . getApplicationContext ()); } else { this . mNativeView = nativeView ; } this . dartExecutor = new DartExecutor ( this . mNativeView . getFlutterJNI ()); !-- \u5224\u65ad\u662f\u5426 \b\b \u5f00\u542f\u8f6f\u4ef6\u6e32\u67d3 engine / src / flutter / common / settings . cc -- this . mIsSoftwareRenderingEnabled = FlutterJNI . nativeGetIsSoftwareRenderingEnabled (); this . mAnimationScaleObserver = new FlutterView . AnimationScaleObserver ( new Handler ()); this . mMetrics = new FlutterView . ViewportMetrics (); !-- mSurfaceCallback\u56de\u8c03\u65b9\u6cd5 -- this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } }; !-- \u4f7f\u7528\u5e73\u53f0\u901a\u9053\u548cFlutter \b engine\u8fdb\u884c\u901a\u4fe1 -- this . navigationChannel = new NavigationChannel ( this . dartExecutor ); this . keyEventChannel = new KeyEventChannel ( this . dartExecutor ); this . lifecycleChannel = new LifecycleChannel ( this . dartExecutor ); this . systemChannel = new SystemChannel ( this . dartExecutor ); this . settingsChannel = new SettingsChannel ( this . dartExecutor ); this . mFlutterLocalizationChannel = new MethodChannel ( this , flutter/localization , JSONMethodCodec . INSTANCE ); PlatformPlugin platformPlugin = new PlatformPlugin ( activity ); MethodChannel flutterPlatformChannel = new MethodChannel ( this , flutter/platform , JSONMethodCodec . INSTANCE ); flutterPlatformChannel . setMethodCallHandler ( platformPlugin ); this . addActivityLifecycleListener ( platformPlugin ); this . mImm = ( InputMethodManager ) this . getContext (). getSystemService ( input_method ); this . mTextInputPlugin = new TextInputPlugin ( this ); this . androidKeyProcessor = new AndroidKeyProcessor ( this . keyEventChannel ); this . setLocales ( this . getResources (). getConfiguration ()); this . sendUserPlatformSettingsToDart (); }","title":"FlutterView"},{"location":"android/flutter/AndroidViewinit/#flutternativeview","text":"\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528attach\u8c03\u7528 FlutterJNI \u4e2d\u7684nativeAttach\u8c03\u7528JNI\u65b9\u6cd5\u8fdb\u5165 platform_view_android_jni.cc \u521d\u59cb\u5316 AndroidShellHolder \uff0cFlutterNativeView\b\u4e3b\u8981\u5904\u7406UI\u548cJNI\u5c42\u7684\b\b\u903b\u8f91\uff0c\b FlutterJNI ,\u76f4\u63a5\u4e0eJNI\u901a\u4fe1\u7684\u903b\u8f91\uff0c\b\u8c03\u7528Attach\u5bf9Flutter engine\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u8c03\u7528\uff0c\u521d\u59cb\u5316\u73af\u5883 public FlutterNativeView ( Context context , boolean isBackgroundView ) { this . mNextReplyId = 1 ; this . mPendingReplies = new HashMap (); this . mContext = context ; this . mPluginRegistry = new FlutterPluginRegistry ( this , context ); this . mFlutterJNI = new FlutterJNI (); this . mFlutterJNI . setRenderSurface ( new FlutterNativeView . RenderSurfaceImpl ()); this . mFlutterJNI . setPlatformMessageHandler ( new FlutterNativeView . PlatformMessageHandlerImpl ()); this . mFlutterJNI . addEngineLifecycleListener ( new FlutterNativeView . EngineLifecycleListenerImpl ()); !-- \b\b \u4e3b\u8981\u529f\u80fd\u662f\u521d\u59cb\u5316AndroidShellHolder\u7684 \b\b \u7ba1\u7406\u7c7b -- this . attach ( this , isBackgroundView ); this . assertAttached (); this . mMessageHandlers = new HashMap (); }","title":"FlutterNativeView"},{"location":"android/flutter/AndroidViewinit/#androidshellholder","text":"engine/src/flutter/shell/platform/android/platform_view_android_jni.cc ,flutterView\u5728\b\u521d\u59cb\u5316\u65f6\u5b8c\u6210\b android_shell_holder \u7684\u521d\u59cb\u5316\uff0c\u65b9\u6cd5\u6ce8\u518c\u8fdb\u5165JNI\uff0c\b\u4e3b\u8981\u7684\u4f5c\u7528\u662f\u5bf9 AndroidShellHolder \u8fdb\u884c\u521d\u59cb \u4ece\u8fd9\u91cc\u5f00\u59cb\u5c31\u662f\u521d\u59cb\u5316\u76f8\u5173\u7684\u73af\u5883\uff0c\b\b\u5305\u62ec\bMessageLoop,\bPlatform,GPU,UI,IO\u7ebf\u7a0b\u8fdb\u884c\u521b\u5efa\uff0c\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0c\u521b\u5efaDartVM\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884cDart\b\u4ee3\u7801\u7684\u73af\u5883\u3002\u540e\u7eed\u6587\u4ef6\u56de\u8c03Flutter Engine\u8fdb\u884c\u521d\u59cb\u5316\u8fdb\u884c\u6269\u5c55","title":"AndroidShellHolder"},{"location":"android/flutter/AndroidViewinit/#flutterview_1","text":"\u672c\u5730SurfaceView\b\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u63d0\u4f9b\u7ed9Flutter\b\b\bUI\b\u7ed8\u5236\u7684\u63a5\u53e3\uff0c\bFlutter\u4f7f\u7528skia\u5f15\u64ce\u7ed8\u52362D\u56fe\u50cf\uff0c\u628aPlatform\b\u76f8\u5173\u7684View\u6ce8\u5165\u5230Flutter engine\u4e2d\u63d0\u4f9b\u53ef\u4ee5\u7ed8\u5236\u7684UI\u7ed9\bskia\u8fdb\u884c\u56fe\u50cf\u7ed8\u5236 this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } }; engine/src/flutter/shell/platform/android/platform_view_android_jni.cc ,android\u672c\u5730Surface\u521b\u5efa\u65f6\u8c03\u7528android\u672c\u5730\u7a97\u53e3\u8fdb\u884c\u7ed8\u5236ANativeWindow_fromSurface,\u4f7f\u7528AnativeWindow\u672c\u5730\u63a5\u53e3\u63d0\u4f9b\b\b\u7ed9\u672c\u5730\u63a5\u53e3\u4f7f\u7528 static void SurfaceCreated ( JNIEnv * env , jobject jcaller , jlong shell_holder , jobject jsurface ) { // Note: This frame ensures that any local references used by // ANativeWindow_fromSurface are released immediately. This is needed as a // workaround for https://code.google.com/p/android/issues/detail?id=68174 fml :: jni :: ScopedJavaLocalFrame scoped_local_reference_frame ( env ); auto window = fml :: MakeRefCounted AndroidNativeWindow ( ANativeWindow_fromSurface ( env , jsurface )); ANDROID_SHELL_HOLDER - GetPlatformView ()- NotifyCreated ( std :: move ( window )); } static void SurfaceChanged ( JNIEnv * env , jobject jcaller , jlong shell_holder , jint width , jint height ) { ANDROID_SHELL_HOLDER - GetPlatformView ()- NotifyChanged ( SkISize :: Make ( width , height )); } static void SurfaceDestroyed ( JNIEnv * env , jobject jcaller , jlong shell_holder ) { ANDROID_SHELL_HOLDER - GetPlatformView ()- NotifyDestroyed (); } \u81f3\u6b64\uff0cAndroid\u7aef\u7684View\u7684\u521d\u59cb\u5316\u5c31\u5df2\u7ecf\u5b8c\u6210\uff0c\u7b49\u5f85DartVM\u6267\u884c\u76f8\u5173\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u76f8\u5173\u7684\u7ed8\u5236\u5de5\u4f5c,Android\u7aef\u7684 View \u7684\u521d\u59cb\u5316\u6bd4\u8f83\u7b80\u5355\uff0c\u540e\u7eed\u518d\u5bf9JNI\u5c42\u7684\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u3002","title":"FlutterView"},{"location":"android/flutter/Architecture/","text":"MVVM","title":"Architecture"},{"location":"android/flutter/ComplieMode/","text":"\u6df1\u5165\u7406\u89e3flutter\u7684\u7f16\u8bd1\u539f\u7406\u4e0e\u4f18\u5316 flutter \u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4ec0\u4e48\u662fFlutter\uff1f\u5b83\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u5305\u542b\u54ea\u51e0\u90e8\u5206\uff0c\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\uff0c\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\u7684\u5462\uff1fFlutter\u5982\u4f55\u505a\u5230Debug\u6a21\u5f0fHot Reload\u5feb\u901f\u751f\u6548\u53d8\u66f4\uff0cRelease\u6a21\u5f0f\u539f\u751f\u4f53\u9a8c\u7684\u5462\uff1fFlutter\u5de5\u7a0b\u548c\u6211\u4eec\u7684Android/iOS\u5de5\u7a0b\u6709\u4f55\u5dee\u522b\uff0c \u95ee\u9898\u80cc\u666f \u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4ec0\u4e48\u662fFlutter\uff1f\u5b83\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u5305\u542b\u54ea\u51e0\u90e8\u5206\uff0c\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\uff0c\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\u7684\u5462\uff1fFlutter\u5982\u4f55\u505a\u5230Debug\u6a21\u5f0fHot Reload\u5feb\u901f\u751f\u6548\u53d8\u66f4\uff0cRelease\u6a21\u5f0f\u539f\u751f\u4f53\u9a8c\u7684\u5462\uff1fFlutter\u5de5\u7a0b\u548c\u6211\u4eec\u7684Android/iOS\u5de5\u7a0b\u6709\u4f55\u5dee\u522b\uff0c\u5173\u7cfb\u5982\u4f55\uff0c\u53c8\u662f\u5982\u4f55\u5d4c\u5165Android/iOS\u7684\u5462\uff1fFlutter\u7684\u6e32\u67d3\u548c\u4e8b\u4ef6\u4f20\u9012\u673a\u5236\u5982\u4f55\u5de5\u4f5c\uff1fFlutter\u652f\u6301\u70ed\u66f4\u65b0\u5417\uff1fFlutter\u5b98\u65b9\u5e76\u672a\u63d0\u4f9biOS\u4e0b\u7684armv7\u652f\u6301\uff0c\u786e\u5b9e\u5982\u6b64\u5417\uff1f\u5728\u4f7f\u7528Flutter\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u4e86engine\u7684bug\uff0c\u5982\u4f55\u53bb\u4fee\u6539\u548c\u751f\u6548\uff1f\u6784\u5efa\u7f13\u6162\u6216\u51fa\u9519\u53c8\u5982\u4f55\u53bb\u5b9a\u4f4d\uff0c\u4fee\u6539\u548c\u751f\u6548\u5462\uff1f \u51e1\u6b64\u79cd\u79cd\uff0c\u90fd\u9700\u8981\u5bf9Flutter\u4ece\u8bbe\u8ba1\uff0c\u5f00\u53d1\u6784\u5efa\uff0c\u5230\u6700\u7ec8\u8fd0\u884c\u6709\u4e00\u4e2a\u5168\u5c40\u89c6\u89d2\u7684\u89c2\u5bdf\u3002 \u672c\u6587\u5c06\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684hello_flutter\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e0bFlutter\u76f8\u5173\u539f\u7406\u53ca\u5b9a\u5236\u4e0e\u4f18\u5316\u3002 Flutter\u7b80\u4ecb FlutterArchitecture Flutter\u7684\u67b6\u6784\u4e3b\u8981\u5206\u6210\u4e09\u5c42:Framework\uff0cEngine\u548cEmbedder\u3002 Framework\u4f7f\u7528dart\u5b9e\u73b0\uff0c\u5305\u62ecMaterial Design\u98ce\u683c\u7684Widget,Cupertino(\u9488\u5bf9iOS)\u98ce\u683c\u7684Widgets\uff0c\u6587\u672c/\u56fe\u7247/\u6309\u94ae\u7b49\u57fa\u7840Widgets\uff0c\u6e32\u67d3\uff0c\u52a8\u753b\uff0c\u624b\u52bf\u7b49\u3002\u6b64\u90e8\u5206\u7684\u6838\u5fc3\u4ee3\u7801\u662f:flutter\u4ed3\u5e93\u4e0b\u7684flutter package\uff0c\u4ee5\u53casky_engine\u4ed3\u5e93\u4e0b\u7684io,async,ui(dart:ui\u5e93\u63d0\u4f9b\u4e86Flutter\u6846\u67b6\u548c\u5f15\u64ce\u4e4b\u95f4\u7684\u63a5\u53e3)\u7b49package\u3002 Engine\u4f7f\u7528C++\u5b9e\u73b0\uff0c\u4e3b\u8981\u5305\u62ec:Skia,Dart\u548cText\u3002Skia\u662f\u5f00\u6e90\u7684\u4e8c\u7ef4\u56fe\u5f62\u5e93\uff0c\u63d0\u4f9b\u4e86\u9002\u7528\u4e8e\u591a\u79cd\u8f6f\u786c\u4ef6\u5e73\u53f0\u7684\u901a\u7528API\u3002\u5176\u5df2\u4f5c\u4e3aGoogle Chrome\uff0cChrome OS\uff0cAndroid, Mozilla Firefox, Firefox OS\u7b49\u5176\u4ed6\u4f17\u591a\u4ea7\u54c1\u7684\u56fe\u5f62\u5f15\u64ce\uff0c\u652f\u6301\u5e73\u53f0\u8fd8\u5305\u62ecWindows7+,macOS 10.10.5+,iOS8+,Android4.1+,Ubuntu14.04+\u7b49\u3002Dart\u90e8\u5206\u4e3b\u8981\u5305\u62ec:Dart Runtime\uff0cGarbage Collection(GC)\uff0c\u5982\u679c\u662fDebug\u6a21\u5f0f\u7684\u8bdd\uff0c\u8fd8\u5305\u62ecJIT(Just In Time)\u652f\u6301\u3002Release\u548cProfile\u6a21\u5f0f\u4e0b\uff0c\u662fAOT(Ahead Of Time)\u7f16\u8bd1\u6210\u4e86\u539f\u751f\u7684arm\u4ee3\u7801\uff0c\u5e76\u4e0d\u5b58\u5728JIT\u90e8\u5206\u3002Text\u5373\u6587\u672c\u6e32\u67d3\uff0c\u5176\u6e32\u67d3\u5c42\u6b21\u5982\u4e0b:\u884d\u751f\u81eaminikin\u7684libtxt\u5e93(\u7528\u4e8e\u5b57\u4f53\u9009\u62e9\uff0c\u5206\u9694\u884c)\u3002HartBuzz\u7528\u4e8e\u5b57\u5f62\u9009\u62e9\u548c\u6210\u578b\u3002Skia\u4f5c\u4e3a\u6e32\u67d3/GPU\u540e\u7aef\uff0c\u5728Android\u548cFuchsia\u4e0a\u4f7f\u7528FreeType\u6e32\u67d3\uff0c\u5728iOS\u4e0a\u4f7f\u7528CoreGraphics\u6765\u6e32\u67d3\u5b57\u4f53\u3002 Embedder\u662f\u4e00\u4e2a\u5d4c\u5165\u5c42\uff0c\u5373\u628aFlutter\u5d4c\u5165\u5230\u5404\u4e2a\u5e73\u53f0\u4e0a\u53bb\uff0c\u8fd9\u91cc\u505a\u7684\u4e3b\u8981\u5de5\u4f5c\u5305\u62ec\u6e32\u67d3Surface\u8bbe\u7f6e,\u7ebf\u7a0b\u8bbe\u7f6e\uff0c\u4ee5\u53ca\u63d2\u4ef6\u7b49\u3002\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\uff0cFlutter\u7684\u5e73\u53f0\u76f8\u5173\u5c42\u5f88\u4f4e\uff0c\u5e73\u53f0(\u5982iOS)\u53ea\u662f\u63d0\u4f9b\u4e00\u4e2a\u753b\u5e03\uff0c\u5269\u4f59\u7684\u6240\u6709\u6e32\u67d3\u76f8\u5173\u7684\u903b\u8f91\u90fd\u5728Flutter\u5185\u90e8\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5b83\u5177\u6709\u4e86\u5f88\u597d\u7684\u8de8\u7aef\u4e00\u81f4\u6027\u3002 Flutter\u5de5\u7a0b\u7ed3\u6784 \u672c\u6587\u4f7f\u7528\u5f00\u53d1\u73af\u5883\u4e3aflutter beta v0.3.1\uff0c\u5bf9\u5e94\u7684engine commit:09d05a389\u3002 \u4ee5hello_flutter\u5de5\u7a0b\u4e3a\u4f8b\uff0cFlutter\u5de5\u7a0b\u7ed3\u6784\u5982\u4e0b\u6240\u793a: Flutter File Structure \u5176\u4e2dios\u4e3aiOS\u90e8\u5206\u4ee3\u7801\uff0c\u4f7f\u7528CocoaPods\u7ba1\u7406\u4f9d\u8d56\uff0candroid\u4e3aAndroid\u90e8\u5206\u4ee3\u7801\uff0c\u4f7f\u7528Gradle\u7ba1\u7406\u4f9d\u8d56\uff0clib\u4e3adart\u4ee3\u7801\uff0c\u4f7f\u7528pub\u7ba1\u7406\u4f9d\u8d56\u3002\u7c7b\u4f3ciOS\u4e2dCocoapods\u5bf9\u5e94\u7684Podfile\u548cPodfile.lock\uff0cpub\u4e0b\u5219\u662fpubspec.yaml\u548cpubspec.lock\u3002 Flutter\u6a21\u5f0f \u5bf9\u4e8eFlutter\uff0c\u5b83\u652f\u6301\u5e38\u89c1\u7684debug,release,profile\u7b49\u6a21\u5f0f\uff0c\u4f46\u5b83\u53c8\u6709\u5176\u4e0d\u4e00\u6837\u3002 Debug\u6a21\u5f0f\uff1a\u5bf9\u5e94\u4e86Dart\u7684JIT\u6a21\u5f0f\uff0c\u53c8\u79f0\u68c0\u67e5\u6a21\u5f0f\u6216\u8005\u6162\u901f\u6a21\u5f0f\u3002\u652f\u6301\u8bbe\u5907\uff0c\u6a21\u62df\u5668(iOS/Android)\uff0c\u6b64\u6a21\u5f0f\u4e0b\u6253\u5f00\u4e86\u65ad\u8a00\uff0c\u5305\u62ec\u6240\u6709\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u670d\u52a1\u6269\u5c55\u548cObservatory\u7b49\u8c03\u8bd5\u8f85\u52a9\u3002\u6b64\u6a21\u5f0f\u4e3a\u5feb\u901f\u5f00\u53d1\u548c\u8fd0\u884c\u505a\u4e86\u4f18\u5316\uff0c\u4f46\u5e76\u672a\u5bf9\u6267\u884c\u901f\u5ea6\uff0c\u5305\u5927\u5c0f\u548c\u90e8\u7f72\u505a\u4f18\u5316\u3002Debug\u6a21\u5f0f\u4e0b\uff0c\u7f16\u8bd1\u4f7f\u7528JIT\u6280\u672f\uff0c\u652f\u6301\u5e7f\u53d7\u6b22\u8fce\u7684\u4e9a\u79d2\u7ea7\u6709\u72b6\u6001\u7684hot reload\u3002 Release\u6a21\u5f0f\uff1a\u5bf9\u5e94\u4e86Dart\u7684AOT\u6a21\u5f0f\uff0c\u6b64\u6a21\u5f0f\u76ee\u6807\u5373\u4e3a\u90e8\u7f72\u5230\u7ec8\u7aef\u7528\u6237\u3002\u53ea\u652f\u6301\u771f\u673a\uff0c\u4e0d\u5305\u62ec\u6a21\u62df\u5668\u3002\u5173\u95ed\u4e86\u6240\u6709\u65ad\u8a00\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u53bb\u6389\u4e86\u8c03\u8bd5\u4fe1\u606f\uff0c\u5173\u95ed\u4e86\u6240\u6709\u8c03\u8bd5\u5de5\u5177\u3002\u4e3a\u5feb\u901f\u542f\u52a8\uff0c\u5feb\u901f\u6267\u884c\uff0c\u5305\u5927\u5c0f\u505a\u4e86\u4f18\u5316\u3002\u7981\u6b62\u4e86\u6240\u6709\u8c03\u8bd5\u8f85\u52a9\u624b\u6bb5\uff0c\u670d\u52a1\u6269\u5c55\u3002 Profile\u6a21\u5f0f\uff1a\u7c7b\u4f3cRelease\u6a21\u5f0f\uff0c\u53ea\u662f\u591a\u4e86\u5bf9\u4e8eProfile\u6a21\u5f0f\u7684\u670d\u52a1\u6269\u5c55\u7684\u652f\u6301\uff0c\u652f\u6301\u8ddf\u8e2a\uff0c\u4ee5\u53ca\u6700\u5c0f\u5316\u4f7f\u7528\u8ddf\u8e2a\u4fe1\u606f\u9700\u8981\u7684\u4f9d\u8d56\uff0c\u4f8b\u5982\uff0cobservatory\u53ef\u4ee5\u8fde\u63a5\u4e0a\u8fdb\u7a0b\u3002Profile\u5e76\u4e0d\u652f\u6301\u6a21\u62df\u5668\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u6a21\u62df\u5668\u4e0a\u7684\u8bca\u65ad\u5e76\u4e0d\u4ee3\u8868\u771f\u5b9e\u7684\u6027\u80fd\u3002 \u9274\u4e8eProfile\u540cRelease\u5728\u7f16\u8bd1\u539f\u7406\u7b49\u4e0a\u65e0\u5dee\u5f02\uff0c\u672c\u6587\u53ea\u8ba8\u8bbaDebug\u548cRelease\u6a21\u5f0f\u3002 \u4e8b\u5b9e\u4e0aflutter\u4e0b\u7684iOS/Android\u5de5\u7a0b\u672c\u8d28\u4e0a\u4f9d\u7136\u662f\u4e00\u4e2a\u6807\u51c6\u7684iOS/Android\u7684\u5de5\u7a0b\uff0cflutter\u53ea\u662f\u901a\u8fc7\u5728BuildPhase\u4e2d\u6dfb\u52a0shell\u6765\u751f\u6210\u548c\u5d4c\u5165App.framework\u548cFlutter.framework(iOS),\u901a\u8fc7gradle\u6765\u6dfb\u52a0flutter.jar\u548cvm/isolate_snapshot_data/instr(Android)\u6765\u5c06Flutter\u76f8\u5173\u4ee3\u7801\u7f16\u8bd1\u548c\u5d4c\u5165\u539f\u751fApp\u800c\u5df2\u3002\u56e0\u6b64\u672c\u6587\u4e3b\u8981\u8ba8\u8bba\u56e0flutter\u5f15\u5165\u7684\u6784\u5efa\uff0c\u8fd0\u884c\u7b49\u539f\u7406\u3002\u7f16\u8bd1target\u867d\u7136\u5305\u62ecarm,x64,x86,arm64\uff0c\u4f46\u56e0\u539f\u7406\u7c7b\u4f3c\uff0c\u672c\u6587\u53ea\u8ba8\u8bbaarm\u76f8\u5173(\u5982\u65e0\u7279\u6b8a\u8bf4\u660e\uff0candroid\u9ed8\u8ba4\u4e3aarmv7)\u3002 Flutter\u4ee3\u7801\u7684\u7f16\u8bd1\u4e0e\u8fd0\u884c(iOS) Release\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1 release\u6a21\u5f0f\u4e0b\uff0cflutter\u4e0biOS\u5de5\u7a0b\u4e2ddart\u4ee3\u7801\u6784\u5efa\u94fe\u8def\u5982\u4e0b\u6240\u793a: iOS compile and embed \u5176\u4e2dgen_snapshot\u662fdart\u7f16\u8bd1\u5668\uff0c\u91c7\u7528\u4e86tree shaking(\u7c7b\u4f3c\u4f9d\u8d56\u6811\u903b\u8f91\uff0c\u53ef\u751f\u6210\u6700\u5c0f\u5305\uff0c\u4e5f\u56e0\u800c\u5728Flutter\u4e2d\u7981\u6b62\u4e86dart\u652f\u6301\u7684\u53cd\u5c04\u7279\u6027)\u7b49\u6280\u672f,\u7528\u4e8e\u751f\u6210\u6c47\u7f16\u5f62\u5f0f\u7684\u673a\u5668\u4ee3\u7801\uff0c\u518d\u901a\u8fc7xcrun\u7b49\u7f16\u8bd1\u5de5\u5177\u94fe\u751f\u6210\u6700\u7ec8\u7684App.framework\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u7684dart\u4ee3\u7801\uff0c\u5305\u62ec\u4e1a\u52a1\u4ee3\u7801\uff0c\u4e09\u65b9package\u4ee3\u7801\uff0c\u5b83\u4eec\u6240\u4f9d\u8d56\u7684flutter\u6846\u67b6\u4ee3\u7801\uff0c\u6700\u7ec8\u5c06\u4f1a\u53d8\u6210App.framework\u3002 tree shaking\u529f\u80fd\u4f4d\u4e8egen_snapshot\u4e2d\uff0c\u5bf9\u5e94\u903b\u8f91\u53c2\u89c1: engine/src/third_party/dart/runtime/vm/compiler/aot/precompiler.cc dart\u4ee3\u7801\u6700\u7ec8\u5bf9\u5e94\u5230App.framework\u4e2d\u7684\u7b26\u53f7\u5982\u4e0b\u6240\u793a: dart code to symbol in App.framework \u4e8b\u5b9e\u4e0a\uff0c\u7c7b\u4f3cAndroid Release\u4e0b\u7684\u4ea7\u7269(\u89c1\u4e0b\u6587)\uff0cApp.framework\u4e5f\u5305\u542b\u4e86kDartVmSnapshotData\uff0ckDartVmSnapshotInstructions\uff0ckDartIsolateSnapshotData\uff0ckDartIsolateSnapshotInstructions\u56db\u4e2a\u90e8\u5206\u3002\u4e3a\u4ec0\u4e48iOS\u4f7f\u7528App.framework\u8fd9\u79cd\u65b9\u5f0f\uff0c\u800c\u4e0d\u662fAndroid\u7684\u56db\u4e2a\u6587\u4ef6\u7684\u65b9\u5f0f\u5462\uff1f\u539f\u56e0\u5728\u4e8e\u5728iOS\u4e0b\uff0c\u56e0\u4e3a\u7cfb\u7edf\u7684\u9650\u5236\uff0cFlutter\u5f15\u64ce\u4e0d\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u5c06\u67d0\u5185\u5b58\u9875\u6807\u8bb0\u4e3a\u53ef\u6267\u884c\uff0c\u800cAndroid\u662f\u53ef\u4ee5\u7684\u3002 Flutter.framework\u5bf9\u5e94\u4e86Flutter\u67b6\u6784\u4e2d\u7684engine\u90e8\u5206\uff0c\u4ee5\u53caEmbedder\u3002\u5b9e\u9645\u4e2dFlutter.framework\u4f4d\u4e8eflutter\u4ed3\u5e93\u7684/bin/cache/artifacts/engine/ios*\u4e0b\uff0c\u9ed8\u8ba4\u4ecegoogle\u4ed3\u5e93\u62c9\u53d6\u3002\u5f53\u9700\u8981\u81ea\u5b9a\u4e49\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ef\u901a\u8fc7\u4e0b\u8f7dengine\u6e90\u7801\uff0c\u5229\u7528Ninja\u6784\u5efa\u7cfb\u7edf\u6765\u751f\u6210\u3002 Flutter\u76f8\u5173\u4ee3\u7801\u7684\u6700\u7ec8\u4ea7\u7269\u662f:App.framework(dart\u4ee3\u7801\u751f\u6210)\u548cFlutter.framework(\u5f15\u64ce)\u3002\u4eceXcode\u5de5\u7a0b\u7684\u89c6\u89d2\u770b\uff0cGenerated.xcconfig\u63cf\u8ff0\u4e86Flutter\u76f8\u5173\u73af\u5883\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540eRunner\u5de5\u7a0b\u8bbe\u7f6e\u4e2d\u7684Build Phases\u65b0\u589e\u7684xcode_backend.sh\u5b9e\u73b0\u4e86Flutter.framework\u7684\u62f7\u8d1d(\u4eceFlutter\u4ed3\u5e93\u7684\u5f15\u64ce\u5230Runner\u5de5\u7a0b\u6839\u76ee\u5f55\u4e0b\u7684Flutter\u76ee\u5f55)\u4e0e\u5d4c\u5165\u548cApp.framework\u7684\u7f16\u8bd1\u4e0e\u5d4c\u5165\u3002\u6700\u7ec8\u751f\u6210\u7684Runner.app\u4e2dFlutter\u76f8\u5173\u5185\u5bb9\u5982\u4e0b\u6240\u793a: Flutter in Runner Release \u5176\u4e2dflutter_assets\u662f\u76f8\u5173\u7684\u8d44\u6e90\uff0c\u4ee3\u7801\u5219\u662f\u4f4d\u4e8eFrameworks\u4e0b\u7684App.framework\u548cFlutter.framework\u3002 Release\u6a21\u5f0f\u4e0b\u7684\u8fd0\u884c Flutter\u76f8\u5173\u7684\u6e32\u67d3\uff0c\u4e8b\u4ef6\uff0c\u901a\u4fe1\u5904\u7406\u903b\u8f91\u5982\u4e0b\u6240\u793a: Render and event logic \u5176\u4e2ddart\u4e2d\u7684main\u51fd\u6570\u8c03\u7528\u6808\u5982\u4e0b: main in dart callstack Debug\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1 Debug\u6a21\u5f0f\u4e0bflutter\u7684\u7f16\u8bd1\uff0c\u7ed3\u6784\u7c7b\u4f3cRelease\u6a21\u5f0f\uff0c\u5dee\u5f02\u4e3b\u8981\u8868\u73b0\u4e3a\u4e24\u70b9: 1.Flutter.framework \u56e0\u4e3a\u662fDebug\uff0c\u6b64\u6a21\u5f0f\u4e0bFramework\u4e2d\u662f\u6709JIT\u652f\u6301\u7684\uff0c\u800c\u5728Release\u6a21\u5f0f\u4e0b\u5e76\u6ca1\u6709JIT\u90e8\u5206\u3002 2.App.framework \u4e0d\u540c\u4e8eAOT\u6a21\u5f0f\u4e0b\u7684App.framework\u662fDart\u4ee3\u7801\u5bf9\u5e94\u7684\u672c\u5730\u673a\u5668\u4ee3\u7801\uff0cJIT\u6a21\u5f0f\u4e0b\uff0cApp.framework\u53ea\u6709\u51e0\u4e2a\u7b80\u5355\u7684API\uff0c\u5176Dart\u4ee3\u7801\u5b58\u5728\u4e8esnapshot_blob.bin\u6587\u4ef6\u91cc\u3002\u8fd9\u90e8\u5206\u7684snapshot\u662f\u811a\u672c\u5feb\u7167\uff0c\u91cc\u9762\u662f\u7b80\u5355\u7684\u6807\u8bb0\u5316\u7684\u6e90\u4ee3\u7801\u3002\u6240\u6709\u7684\u6ce8\u91ca\uff0c\u7a7a\u767d\u5b57\u7b26\u90fd\u88ab\u79fb\u9664\uff0c\u5e38\u91cf\u4e5f\u88ab\u89c4\u8303\u5316\uff0c\u4e5f\u6ca1\u6709\u673a\u5668\u7801\uff0ctree shaking\u6216\u8005\u662f\u6df7\u6dc6\u3002 App.framework\u4e2d\u7684\u7b26\u53f7\u8868\u5982\u4e0b\u6240\u793a: App in debug symbols \u5bf9Runner.app/flutter_assets/snapshot_blob.bin\u6267\u884cstrings\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u5185\u5bb9: snapshot bin strings Debug\u6a21\u5f0f\u4e0bmain\u5165\u53e3\u7684\u8c03\u7528\u5806\u6808\u5982\u4e0b: debug isolate main callstack Flutter\u4ee3\u7801\u7684\u7f16\u8bd1\u4e0e\u8fd0\u884c(Android) \u9274\u4e8eAndroid\u548ciOS\u9664\u4e86\u90e8\u5206\u5e73\u53f0\u76f8\u5173\u7684\u7279\u6027\u5916\uff0c\u5176\u4ed6\u903b\u8f91\u5982Release\u5bf9\u5e94AOT\uff0cDebug\u5bf9\u5e94JIT\u7b49\u5747\u7c7b\u4f3c\uff0c\u6b64\u5904\u53ea\u6d89\u53ca\u4e24\u8005\u4e0d\u540c\u3002 Release\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1 release\u6a21\u5f0f\u4e0b\uff0cflutter\u4e0bAndroid\u5de5\u7a0b\u4e2ddart\u4ee3\u7801\u6574\u4e2a\u6784\u5efa\u94fe\u8def\u5982\u4e0b\u6240\u793a: android release build flow \u5176\u4e2dvm/isolate_snapshot_data/instr\u5185\u5bb9\u5747\u4e3aarm\u6307\u4ee4\uff0c\u5c06\u4f1a\u5728\u8fd0\u884c\u65f6\u88abengine\u8f7d\u5165\uff0c\u5e76\u6807\u8bb0vm/isolate_snapshot_instr\u4e3a\u53ef\u6267\u884c\u3002vm_\u4e2d\u6d89\u53caruntime\u7b49\u670d\u52a1(\u5982gc)\uff0c\u7528\u4e8e\u521d\u59cb\u5316DartVM\uff0c\u8c03\u7528\u5165\u53e3\u89c1Dart_Initialize(dart_api.h)\u3002isolate__\u5219\u662f\u5bf9\u5e94\u4e86\u6211\u4eec\u7684App\u4ee3\u7801\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684isolate,\u8c03\u7528\u5165\u53e3\u89c1Dart_CreateIsolate(dart_api.h)\u3002flutter.jar\u7c7b\u4f3ciOS\u7684Flutter.framework\uff0c\u5305\u62ec\u4e86engine\u90e8\u5206\u7684\u4ee3\u7801(Flutter.jar\u4e2d\u7684libflutter.so)\uff0c\u4ee5\u53ca\u4e00\u5957\u5c06Flutter\u5d4c\u5165Android\u7684\u7c7b\u548c\u63a5\u53e3(FlutterMain,FlutterView,FlutterNativeView\u7b49)\u3002\u5b9e\u9645\u4e2dflutter.jar\u4f4d\u4e8eflutter\u4ed3\u5e93\u7684/bin/cache/artifacts/engine/android*\u4e0b\uff0c\u9ed8\u8ba4\u4ecegoogle\u4ed3\u5e93\u62c9\u53d6\u3002\u5f53\u9700\u8981\u81ea\u5b9a\u4e49\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ef\u901a\u8fc7\u4e0b\u8f7dengine\u6e90\u7801\uff0c\u5229\u7528Ninja\u6784\u5efa\u7cfb\u7edf\u6765\u751f\u6210flutter.jar\u3002 \u4ee5isolate_snapshot_data/instr\u4e3a\u4f8b\uff0c\u6267\u884cdisarm\u547d\u4ee4\u7ed3\u679c\u5982\u4e0b: isolate snapshot data disarm isolate snapshot instr disarm) \u5176Apk\u7ed3\u6784\u5982\u4e0b\u6240\u793a: Flutter android release apk structure APK\u65b0\u5b89\u88c5\u4e4b\u540e\uff0c\u4f1a\u6839\u636e\u4e00\u4e2ats\u7684\u5224\u65ad(packageinfo\u4e2d\u7684versionCode\u7ed3\u5408lastUpdateTime)\u6765\u51b3\u5b9a\u662f\u5426\u62f7\u8d1dAPK\u4e2d\u7684assets\uff0c\u62f7\u8d1d\u540e\u5185\u5bb9\u5982\u4e0b\u6240\u793a: app flutter isolate/vm_snapshot_data/instr\u5747\u6700\u540e\u4f4d\u4e8eapp\u7684\u672c\u5730data\u76ee\u5f55\u4e0b\uff0c\u800c\u8fd9\u90e8\u5206\u53c8\u5c5e\u4e8e\u53ef\u5199\u5185\u5bb9\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7d\u5e76\u66ff\u6362\u7684\u65b9\u5f0f\uff0c\u5b8c\u6210App\u7684\u6574\u4e2a\u66ff\u6362\u548c\u66f4\u65b0\u3002 Release\u6a21\u5f0f\u4e0b\u7684\u8fd0\u884c Render Event in release mode Debug\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1 \u7c7b\u4f3ciOS\u7684Debug/Release\u7684\u5dee\u522b\uff0cAndroid\u7684Debug\u4e0eRelease\u7684\u5dee\u5f02\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e24\u90e8\u5206: 1.flutter.jar \u533a\u522b\u540ciOS 2.App\u4ee3\u7801\u90e8\u5206 \u4f4d\u4e8eflutter_assets\u4e0b\u7684snapshot_blob.bin\uff0c\u540ciOS\u3002 \u5728\u4ecb\u7ecd\u4e86iOS/Android\u4e0b\u7684Flutter\u7f16\u8bd1\u539f\u7406\u540e\uff0c\u4e0b\u9762\u7740\u91cd\u63cf\u8ff0\u4e0b\u5982\u4f55\u5b9a\u5236flutter/engine\u4ee5\u5b8c\u6210\u5b9a\u5236\u548c\u4f18\u5316\u3002\u9274\u4e8eFlutter\u5904\u4e8e\u654f\u6377\u7684\u8fed\u4ee3\u4e2d\uff0c\u73b0\u5728\u7684\u95ee\u9898\u540e\u7eed\u4e0d\u4e00\u5b9a\u662f\u95ee\u9898\uff0c\u56e0\u800c\u6b64\u90e8\u5206\u5e76\u4e0d\u662f\u8981\u53bb\u89e3\u51b3\u591a\u5c11\u95ee\u9898\uff0c\u800c\u662f\u9009\u53d6\u4e0d\u540c\u7c7b\u522b\u7684\u95ee\u9898\u6765\u8bf4\u660e\u89e3\u51b3\u601d\u8def\u3002 Flutter\u6784\u5efa\u76f8\u5173\u7684\u5b9a\u5236\u4e0e\u4f18\u5316 Flutter\u662f\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u9664\u4e86\u4e0a\u8ff0\u63d0\u5230\u7684\u4e09\u5c42\u67b6\u6784\u4e2d\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u5305\u62ecFlutter Android Studio(Intellij)\u63d2\u4ef6\uff0cpub\u4ed3\u5e93\u7ba1\u7406\u7b49\u3002\u4f46\u6211\u4eec\u7684\u5b9a\u5236\u548c\u4f18\u5316\u5f80\u5f80\u662f\u5728flutter\u7684\u5de5\u5177\u94fe\u76f8\u5173\uff0c\u5177\u4f53\u4ee3\u7801\u4f4d\u4e8eflutter\u4ed3\u5e93\u7684flutter_tools\u5305\u3002\u63a5\u4e0b\u6765\u4e3e\u4f8b\u8bf4\u660e\u4e0b\u5982\u4f55\u5bf9\u8fd9\u90e8\u5206\u505a\u5b9a\u5236\u3002 Android\u90e8\u5206 \u76f8\u5173\u5185\u5bb9\u5305\u62ecflutter.jar\uff0clibflutter.so(\u4f4d\u4e8eflutter.jar\u4e0b)\uff0cgen_snapshot\uff0cflutter.gradle\uff0cflutter(flutter_tools)\u3002 1.\u9650\u5b9aAndroid\u4e2dtarget\u4e3aarmeabi \u6b64\u90e8\u5206\u5c5e\u4e8e\u6784\u5efa\u76f8\u5173\uff0c\u903b\u8f91\u4f4d\u4e8eflutter.gradle\u4e0b\u3002\u5f53App\u662f\u901a\u8fc7armeabi\u652f\u6301armv7/arm64\u7684\u65f6\u5019\uff0c\u9700\u8981\u4fee\u6539flutter\u7684\u9ed8\u8ba4\u903b\u8f91\u3002\u5982\u4e0b\u6240\u793a: android support armeabi only \u56e0\u4e3agradle\u672c\u8eab\u7684\u7279\u70b9\uff0c\u6b64\u90e8\u5206\u4fee\u6539\u540e\u76f4\u63a5\u6784\u5efa\u5373\u53ef\u751f\u6548\u3002 2.\u8bbe\u5b9aAndroid\u542f\u52a8\u65f6\u9ed8\u8ba4\u4f7f\u7528\u7b2c\u4e00\u4e2alaunchable-activity \u6b64\u90e8\u5206\u5c5e\u4e8eflutter_tools\u76f8\u5173\uff0c\u4fee\u6539\u5982\u4e0b: android launchable activity \u8fd9\u91cc\u7684\u91cd\u70b9\u4e0d\u662f\u5982\u4f55\u53bb\u4fee\u6539\uff0c\u800c\u662f\u5982\u4f55\u53bb\u8ba9\u4fee\u6539\u751f\u6548\u3002\u539f\u7406\u4e0a\u6765\u8bf4\uff0cflutter run/build/analyze/test/upgrade\u7b49\u547d\u4ee4\u5b9e\u9645\u4e0a\u6267\u884c\u7684\u90fd\u662fflutter(flutter_repo_dir/bin/flutter)\u8fd9\u4e00\u811a\u672c\uff0c\u518d\u901a\u8fc7\u811a\u672c\u901a\u8fc7dart\u6267\u884cflutter_tools.snapshot(\u901a\u8fc7packages/flutter_tools\u751f\u6210)\u3002\u5176\u903b\u8f91\u5982\u4e0b: if [[ ! -f \"SNAPSHOT_PATH\" ]] || [[ ! -s \"STAMP_PATH\" ]] || [[ \"(cat \"STAMP_PATH\")\" != \"revision\" ]] || [[ \"FLUTTER_TOOLS_DIR/pubspec.yaml\" -nt \" FLUTTER_TOOLS_DIR/pubspec.lock\" ]]; then rm -f \" FLUTTER_TOOLS_DIR/pubspec.lock\" ]]; then rm -f \" FLUTTER_ROOT/version\" touch \" FLUTTER_ROOT/bin/cache/.dartignore\" \" FLUTTER_ROOT/bin/cache/.dartignore\" \" FLUTTER_ROOT/bin/internal/update_dart_sdk.sh\" echo Building flutter tool... if [[ \" TRAVIS\" == \"true\" ]] || [[ \" TRAVIS\" == \"true\" ]] || [[ \" BOT\" == \"true\" ]] || [[ \" CONTINUOUS_INTEGRATION\" == \"true\" ]] || [[ \" CONTINUOUS_INTEGRATION\" == \"true\" ]] || [[ \" CHROME_HEADLESS\" == \"1\" ]] || [[ \" APPVEYOR\" == \"true\" ]] || [[ \" APPVEYOR\" == \"true\" ]] || [[ \" CI\" == \"true\" ]]; then PUB_ENVIRONMENT=\" PUB_ENVIRONMENT:flutter_bot\" fi export PUB_ENVIRONMENT=\" PUB_ENVIRONMENT:flutter_bot\" fi export PUB_ENVIRONMENT=\" PUB_ENVIRONMENT:flutter_install\" if [[ -d $FLUTTER_ROOT/.pub-cache ]]; then export PUB_CACHE= ${PUB_CACHE:- $FLUTTER_ROOT/.pub-cache } fi while : ; do cd $FLUTTER_TOOLS_DIR $PUB upgrade --verbosity=error --no-packages-dir amp; amp; break echo Error: Unable to pub upgrade flutter tool. Retrying in five seconds... sleep 5 done $DART --snapshot= $SNAPSHOT_PATH --packages= $FLUTTER_TOOLS_DIR/.packages $SCRIPT_PATH echo $revision gt; $STAMP_PATH fi \u4e0d\u96be\u770b\u51fa\u8981\u91cd\u65b0\u6784\u5efaflutter_tools\uff0c\u53ef\u4ee5\u5220\u9664flutter_repo_dir/bin/cache/flutter_tools.stamp(\u8fd9\u6837\u91cd\u65b0\u751f\u6210\u4e00\u6b21)\uff0c\u6216\u8005\u5c4f\u853d\u6389if/fi\u5224\u65ad(\u6bcf\u4e00\u6b21\u90fd\u4f1a\u91cd\u65b0\u751f\u6210)\u3002 3.\u5982\u4f55\u5728Android\u5de5\u7a0bDebug\u6a21\u5f0f\u4e0b\u4f7f\u7528release\u6a21\u5f0f\u7684flutter \u5f53\u5f00\u53d1\u8005\u5728\u7814\u53d1\u4e2d\u53d1\u73b0flutter\u6709\u4e9b\u5361\u987f\u65f6\uff0c\u731c\u6d4b\u53ef\u80fd\u662f\u903b\u8f91\u7684\u539f\u56e0\uff0c\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u662fDebug\u4e0b\u7684flutter\u3002\u6b64\u65f6\u53ef\u4ee5\u6784\u5efarelease\u4e0b\u7684apk\uff0c\u4e5f\u53ef\u4ee5\u5c06flutter\u5f3a\u5236\u4fee\u6539\u4e3arelease\u6a21\u5f0f\u5982\u4e0b: flutter in android always release iOS\u90e8\u5206 \u76f8\u5173\u5185\u5bb9\u5305\u62ec:Flutter.framework\uff0cgen_snapshot\uff0cxcode_backend.sh\uff0cflutter(flutter_tools)\u3002 1.\u4f18\u5316\u6784\u5efa\u8fc7\u7a0b\u4e2d\u53cd\u590d\u66ff\u6362Flutter.framework\u5bfc\u81f4\u7684\u91cd\u65b0\u7f16\u8bd1 \u6b64\u90e8\u5206\u903b\u8f91\u5c5e\u4e8e\u6784\u5efa\u76f8\u5173\uff0c\u4f4d\u4e8excode_backend.sh\u4e2d\uff0cFlutter\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u6b21\u83b7\u53d6\u5230\u6b63\u786e\u7684Flutter.framework,\u6bcf\u6b21\u90fd\u4f1a\u57fa\u4e8e\u914d\u7f6e(\u89c1Generated.xcconfig\u914d\u7f6e)\u67e5\u627e\u548c\u66ff\u6362Flutter.framework\uff0c\u4f46\u8fd9\u4e5f\u5bfc\u81f4\u4e86\u5de5\u7a0b\u4e2d\u5bf9\u6b64Framework\u6709\u4f9d\u8d56\u90e8\u5206\u4ee3\u7801\u7684\u91cd\u65b0\u7f16\u8bd1\uff0c\u4fee\u6539\u5982\u4e0b: xcode_backend not always replace Flutter 2.\u5982\u4f55\u5728iOS\u5de5\u7a0bDebug\u6a21\u5f0f\u4e0b\u4f7f\u7528release\u6a21\u5f0f\u7684flutter \u53ea\u9700\u8981\u5c06Generated.xcconfig\u4e2d\u7684FLUTTER_BUILD_MODE\u4fee\u6539\u4e3arelease\uff0cFLUTTER_FRAMEWORK_DIR\u4fee\u6539\u4e3arelease\u5bf9\u5e94\u7684\u8def\u5f84\u5373\u53ef\u3002 3.armv7\u7684\u652f\u6301 \u539f\u59cb\u6587\u7ae0\u8bf7\u53c2\u89c1: https://github.com/flutter/engine/wiki/iOS-Builds-Supporting-ARMv7 \u4e8b\u5b9e\u4e0aflutter\u672c\u8eab\u662f\u652f\u6301iOS\u4e0b\u7684armv7\u7684\uff0c\u4f46\u76ee\u524d\u5e76\u672a\u63d0\u4f9b\u5b98\u65b9\u652f\u6301\uff0c\u9700\u8981\u81ea\u884c\u4fee\u6539\u76f8\u5173\u903b\u8f91\uff0c\u5177\u4f53\u5982\u4e0b: a.\u9ed8\u8ba4\u7684\u903b\u8f91\u53ef\u4ee5\u751f\u6210Flutter.framework(arm64) b.\u4fee\u6539flutter\u4ee5\u4f7f\u5f97flutter_tools\u53ef\u4ee5\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\uff0c\u4fee\u6539build_aot.dart\u548cmac.dart\uff0c\u5c06\u76f8\u5173\u9488\u5bf9iOS\u7684arm64\u4fee\u6539\u4e3aarmv7,\u4fee\u6539gen_snapshot\u4e3ai386\u67b6\u6784\u3002 \u5176\u4e2di386\u67b6\u6784\u4e0b\u7684gen_snapshot\u53ef\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u751f\u6210: ./flutter/tools/gn --runtime-mode=debug --ios --ios-cpu=arm ninja -C out/ios_debug_arm \u8fd9\u91cc\u6709\u4e00\u4e2a\u9690\u542b\u903b\u8f91: \u6784\u5efagen_snapshot\u7684CPU\u76f8\u5173\u9884\u5b9a\u4e49\u5b8f( x86_64 /__i386\u7b49)\uff0c\u76ee\u6807gen_snapshot\u7684arch\uff0c\u6700\u7ec8\u7684App.framework\u7684\u67b6\u6784\u6574\u4f53\u4e0a\u8981\u4fdd\u6301\u4e00\u81f4\u3002\u5373x86_64- x86_64- arm64\u6216\u8005i386- i386- armv7\u3002 c.\u5728iPhone4S\u4e0a\uff0c\u4f1a\u53d1\u751f\u56e0gen_snapshot\u751f\u6210\u4e0d\u88ab\u652f\u6301\u7684SDIV\u6307\u4ee4\u800c\u9020\u6210EXC_BAD_INSTRUCTION(EXC_ARM_UNDEFINED)\u9519\u8bef\uff0c\u53ef\u901a\u8fc7\u7ed9gen_snapshot\u6dfb\u52a0\u53c2\u6570--no-use-integer-division\u5b9e\u73b0(\u4f4d\u4e8ebuild_aot.dart)\u3002\u5176\u80cc\u540e\u7684\u903b\u8f91\u5982\u4e0b\u56fe\u6240\u793a: iPhone 4s crash logic d.\u57fa\u4e8ea\u548cb\u751f\u6210\u7684Flutter.framework,\u5c06\u5176lipo create\u751f\u6210\u540c\u65f6\u652f\u6301armv7\u548carm64\u7684Flutter.framework\u3002 e.\u4fee\u6539Flutter.framework\u4e0b\u7684Info.plist\uff0c\u79fb\u9664 UIRequiredDeviceCapabilities arm64 \u540c\u7406\uff0c\u5bf9\u4e8eApp.framework\u4e5f\u8981\u4f5c\u6b64\u64cd\u4f5c\uff0c\u4ee5\u514d\u4e0a\u67b6\u540e\u4f1a\u53d7\u5230App Thining\u7684\u5f71\u54cd\u3002 flutter_tools\u7684\u8c03\u8bd5 \u4f8b\u5982\u6211\u4eec\u60f3\u4e86\u89e3flutter\u5728\u6784\u5efadebug\u6a21\u5f0f\u4e0b\u7684apk\u7684\u65f6\u5019\uff0c\u5177\u4f53\u6267\u884c\u7684\u903b\u8f91\u5982\u4f55\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u601d\u8def\u8d70: a.\u4e86\u89e3flutter_tools\u7684\u547d\u4ee4\u884c\u53c2\u6570 Flutter tools print args b.\u4ee5dart\u5de5\u7a0b\u5f62\u5f0f\u6253\u5f00packages/flutter_tools\uff0c\u57fa\u4e8e\u83b7\u5f97\u7684\u53c2\u6570\u4fee\u6539flutter_tools.dart\uff0c\u8bbe\u7f6e\u547d\u4ee4\u884cdart app\u5373\u53ef\u5f00\u59cb\u8c03\u8bd5\u3002 edit flutter_tools dart and debug it with given args \u5b9a\u5236engine\u4e0e\u8c03\u8bd5 \u5047\u8bbe\u6211\u4eec\u5728flutter beta v0.3.1\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9a\u5236\u4e0e\u4e1a\u52a1\u5f00\u53d1\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7a33\u5b9a\uff0c\u4e00\u5b9a\u5468\u671f\u5185\u5e76\u4e0d\u5347\u7ea7SDK\uff0c\u800c\u6b64\u65f6\uff0cflutter\u5728master\u4e0a\u4fee\u6539\u4e86\u67d0\u4e2av0.3.1\u4e0a\u5c31\u6709\u7684bug\uff0c\u8bb0\u4e3afix_bug_commit\u3002\u5982\u4f55\u624d\u80fd\u8ddf\u8e2a\u548c\u7ba1\u7406\u8fd9\u79cd\u60c5\u5f62\u5462\uff1f 1.flutter beta v0.3.1\u6307\u5b9a\u4e86\u5176\u5bf9\u5e94\u7684engine commit\u4e3a:09d05a389\uff0c\u89c1flutter/bin/internal/engine.version\u3002 2.\u83b7\u53d6engine\u4ee3\u7801 3.\u56e0\u4e3a2\u4e2d\u62ff\u5230\u7684\u662fmaster\u4ee3\u7801\uff0c\u800c\u6211\u4eec\u9700\u8981\u7684\u662f\u7279\u5b9acommit(09d05a389)\u5bf9\u5e94\u7684\u4ee3\u7801\u5e93\uff0c\u56e0\u800c\u4ece\u6b64commit\u62c9\u51fa\u65b0\u5206\u652f:custom_beta_v0.3.1\u3002 4.\u57fa\u4e8ecustom_beta_v0.3.1(commit:09d05a389)\uff0c\u6267\u884cgclient sync\uff0c\u5373\u53ef\u62ff\u5230\u5bf9\u5e94flutter beta v0.3.1\u7684\u6240\u6709engine\u4ee3\u7801\u3002 5.\u4f7f\u7528git cherry-pick fix_bug_commit\u5c06master\u7684\u4fee\u6539\u540c\u6b65\u5230custom_beta_v0.3.1\uff0c\u5982\u679c\u4fee\u6539\u6709\u5f88\u591a\u5bf9\u6700\u65b0\u4fee\u6539\u7684\u4f9d\u8d56\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3002 6.\u5bf9\u4e8eiOS\u76f8\u5173\u7684\u4fee\u6539\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: ./flutter/tools/gn --runtime-mode=debug --ios --ios-cpu=arm ninja -C out/ios_debug_arm ./flutter/tools/gn --runtime-mode=release --ios --ios-cpu=arm ninja -C out/ios_release_arm ./flutter/tools/gn --runtime-mode=profile --ios --ios-cpu=arm ninja -C out/ios_profile_arm ./flutter/tools/gn --runtime-mode=debug --ios --ios-cpu=arm64 ninja -C out/ios_debug ./flutter/tools/gn --runtime-mode=release --ios --ios-cpu=arm64 ninja -C out/ios_release ./flutter/tools/gn --runtime-mode=profile --ios --ios-cpu=arm64 ninja -C out/ios_profile \u5373\u53ef\u751f\u6210\u9488\u5bf9iOS\u7684arm/arm64 debug/release/profile\u7684\u4ea7\u7269\u3002\u53ef\u7528\u6784\u5efa\u4ea7\u7269\u66ff\u6362flutter/bin/cache/artifacts/engine/ios*\u4e0b\u7684Flutter.framework\u548cgen_snapshot\u3002 \u5982\u679c\u9700\u8981\u8c03\u8bd5Flutter.framework\u6e90\u4ee3\u7801\uff0c\u6784\u5efa\u7684\u65f6\u5019\u547d\u4ee4\u5982\u4e0b: ./flutter/tools/gn --runtime-mode=debug --unoptimized --ios --ios-cpu=arm64 ninja -C out/ios_debug_unopt \u7528\u751f\u6210\u4ea7\u7269\u66ff\u6362\u6389flutter\u4e2d\u7684Flutter.framework\u548cgen_snapshot\uff0c\u5373\u53ef\u8c03\u8bd5engine\u6e90\u4ee3\u7801\u3002 7.\u5bf9\u4e8eAndroid\u76f8\u5173\u7684\u4fee\u6539\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: ./flutter/tools/gn --runtime-mode=debug --android --android-cpu=arm ninja -C out/android_debug ./flutter/tools/gn --runtime-mode=release --android --android-cpu=arm ninja -C out/android_release ./flutter/tools/gn --runtime-mode=profile --android --android-cpu=arm ninja -C out/android_profile \u5373\u53ef\u751f\u6210\u9488\u5bf9Android\u7684arm debug/release/profile\u7684\u4ea7\u7269\u3002\u53ef\u7528\u6784\u5efa\u4ea7\u7269\u66ff\u6362flutter/bin/cache/artifacts/engine/android*\u4e0b\u7684gen_snapshot\u548cflutter.jar\u3002 Flutter \u7684\u4e24\u79cd\u7f16\u8bd1\u6a21\u5f0f 2018\u5e7408\u670802\u65e5 16:07:19 H.A.N \u9605\u8bfb\u6570\uff1a1835\u66f4\u591a \u6240\u5c5e\u4e13\u680f\uff1a Flutter\u5b66\u4e60\u5b9e\u8df5\u6307\u5357 \u7248\u6743\u58f0\u660e\uff1a\u672c\u6587\u4e3a\u535a\u4e3b\u539f\u521b\u6587\u7ae0\uff0c\u672a\u7ecf\u535a\u4e3b\u5141\u8bb8\u4e0d\u5f97\u8f6c\u8f7d\u3002 https://blog.csdn.net/u010960265/article/details/81361711 \u4f7f\u7528 Flutter \u6784\u5efa\u8fc7 App \u7684\u4eba\u4e00\u5b9a\u6709\u4e00\u4e2a\u56f0\u60d1\uff0c\u5c31\u662f Flutter \u7f16\u8bd1\u51fa\u7684\u4ea7\u7269\u5230\u5e95\u662f\u4ec0\u4e48\u73a9\u610f\u3002\u6709\u65f6\u5019\u5206\u4e3a\u51e0\u4e2a\u6587\u4ef6\uff0c\u6709\u65f6\u5019\u662f\u4e00\u4e2a\u52a8\u6001\u5e93\uff0c\u771f\u7684\u53eb\u4eba\u6478\u4e0d\u7740\u5934\u8111\u3002 \u672c\u6587\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b Flutter \u7684\u7f16\u8bd1\u6a21\u5f0f\u3002 \u7f16\u8bd1\u6a21\u5f0f\u7684\u5206\u7c7b \u7f16\u7a0b\u8bed\u8a00\u8981\u8fbe\u5230\u53ef\u8fd0\u884c\u7684\u76ee\u7684\u9700\u8981\u7ecf\u8fc7\u7f16\u8bd1\uff0c\u4e00\u822c\u5730\u6765\u8bf4\uff0c\u7f16\u8bd1\u6a21\u5f0f\u5206\u4e3a\u4e24\u7c7b\uff1aJIT \u548c AOT\u3002 JIT JIT \u5168\u79f0 Just In Time (\u5373\u65f6\u7f16\u8bd1\uff09\uff0c\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f v8\uff0c\u5b83\u53ef\u4ee5\u5373\u65f6\u7f16\u8bd1\u5e76\u8fd0\u884c JavaScript\u3002\u6240\u4ee5\u4f60\u53ea\u9700\u8981\u8f93\u5165\u6e90\u4ee3\u7801\u5b57\u7b26\u4e32\uff0cv8 \u5c31\u53ef\u4ee5\u5e2e\u4f60\u7f16\u8bd1\u5e76\u8fd0\u884c\u4ee3\u7801\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u652f\u6301 JIT \u7684\u8bed\u8a00\u4e00\u822c\u80fd\u591f\u652f\u6301\u81ea\u7701\u51fd\u6570\uff08eval\uff09\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u6267\u884c\u4ee3\u7801\u3002 JIT \u6a21\u5f0f\u7684\u4f18\u52bf\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u53ef\u4ee5\u52a8\u6001\u4e0b\u53d1\u548c\u6267\u884c\u4ee3\u7801\uff0c\u800c\u4e0d\u7528\u7ba1\u7528\u6237\u7684\u673a\u5668\u662f\u4ec0\u4e48\u67b6\u6784\uff0c\u4e3a\u5e94\u7528\u7684\u7528\u6237\u63d0\u4f9b\u4e30\u5bcc\u800c\u52a8\u6001\u5730\u5185\u5bb9\u3002 \u4f46 JIT \u7684\u52a3\u52bf\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u5927\u91cf\u5b57\u7b26\u4e32\u7684\u4ee3\u7801\u5f88\u5bb9\u6613\u8ba9 JIT \u7f16\u8bd1\u5668\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u548c\u5185\u5b58\u8fdb\u884c\u7f16\u8bd1\uff0c\u7ed9\u7528\u6237\u5e26\u6765\u7684\u76f4\u63a5\u611f\u53d7\u5c31\u662f\u5e94\u7528\u542f\u52a8\u6162\u3002 AOT AOT \u5168\u79f0 Ahead Of Time\uff08\u4e8b\u524d\u7f16\u8bd1\uff09\uff0c\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f C/C++\uff0cLLVM \u6216 GCC \u901a\u8fc7\u7f16\u8bd1\u5e76\u751f\u6210 C/C++ \u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u7136\u540e\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u901a\u8fc7\u7528\u6237\u5b89\u88c5\u5e76\u53d6\u5f97\u6267\u884c\u6743\u9650\u540e\u624d\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u52a0\u8f7d\u6267\u884c\u3002 AOT \u7684\u4f18\u52bf\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4e8b\u5148\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u52a0\u8f7d\u548c\u6267\u884c\u7684\u901f\u5ea6\u90fd\u4f1a\u975e\u5e38\u5feb\u3002\uff08\u6240\u4ee5\u7f16\u7a0b\u8bed\u8a00\u901f\u5ea6\u6392\u884c\u699c\u4e0a\u524d\u5217\u90fd\u662f AOT \u7f16\u8bd1\u7c7b\u8bed\u8a00\uff09\u8fd9\u6837\u7684\u901f\u5ea6\u53ef\u4ee5\u5728\u5bc6\u96c6\u8ba1\u7b97\u573a\u666f\u4e0b\u7ed9\u7528\u6237\u5e26\u6765\u975e\u5e38\u597d\u7684\u4f53\u9a8c\uff0c\u6bd4\u5982\u5927\u578b\u6e38\u620f\u7684\u5f15\u64ce\u6e32\u67d3\u548c\u903b\u8f91\u6267\u884c\u3002 \u4f46\u662f AOT \u7684\u52a3\u52bf\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u7f16\u8bd1\u9700\u8981\u533a\u5206\u7528\u6237\u673a\u5668\u7684\u67b6\u6784\uff0c\u751f\u6210\u4e0d\u540c\u67b6\u6784\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002\u9664\u4e86\u67b6\u6784\uff0c\u4e8c\u8fdb\u5236\u4ee3\u7801\u672c\u8eab\u4e5f\u4f1a\u8ba9\u7528\u6237\u4e0b\u8f7d\u7684\u5b89\u88c5\u5305\u6bd4\u8f83\u5927\u3002\u4e8c\u8fdb\u5236\u4ee3\u7801\u4e00\u822c\u9700\u8981\u53d6\u5f97\u6267\u884c\u6743\u9650\u624d\u53ef\u4ee5\u6267\u884c\uff0c\u6240\u4ee5\u65e0\u6cd5\u5728\u6743\u9650\u6bd4\u8f83\u4e25\u683c\u7684\u7cfb\u7edf\u4e2d\u8fdb\u884c\u52a8\u6001\u66f4\u65b0\uff08\u5982 iOS\uff09\u3002 Dart\u7684\u7f16\u8bd1\u6a21\u5f0f Flutter \u4f7f\u7528 Dart \u4f5c\u4e3a\u7f16\u7a0b\u8bed\u8a00\uff0c\u81ea\u7136\u5176\u7f16\u8bd1\u6a21\u5f0f\u4e5f\u8131\u79bb\u4e0d\u4e86 Dart \u7684\u5e72\u7cfb\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e0b Dart \u6240\u652f\u6301\u7684\u7f16\u8bd1\u6a21\u5f0f\u3002 Script\uff1a\u6700\u666e\u901a\u7684 JIT \u6a21\u5f0f\uff0c\u5728 PC \u547d\u4ee4\u884c\u8c03\u7528 Dart VM \u6267\u884c Dart \u6e90\u4ee3\u7801\u6587\u4ef6\u5373\u662f\u8fd9\u79cd\u6a21\u5f0f\uff1b Script Snapshot\uff1aJIT \u6a21\u5f0f\uff0c\u548c\u4e0a\u4e00\u4e2a\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u8f7d\u5165\u7684\u662f\u5df2\u7ecf token \u5316\u7684 Dart \u6e90\u4ee3\u7801\uff0c\u63d0\u524d\u6267\u884c\u4e86\u4e0a\u4e00\u6b65\u7684 lexer \u6b65\u9aa4\uff1b Application Snapshot\uff1aJIT \u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u6765\u6e90\u4e8e Dart VM \u76f4\u63a5\u8f7d\u5165\u6e90\u7801\u540e dump \u51fa\u6570\u636e\u3002Dart VM \u901a\u8fc7\u8fd9\u79cd\u6570\u636e\u542f\u52a8\u4f1a\u66f4\u5feb\u3002\u4e0d\u8fc7\u503c\u5f97\u4e00\u63d0\u7684\u662f\u8fd9\u79cd\u6a21\u5f0f\u662f\u533a\u5206\u67b6\u6784\u7684\uff0c\u5728 x64 \u4e0a\u751f\u6210\u7684\u6570\u636e\u4e0d\u53ef\u4ee5\u7ed9 arm \u4f7f\u7528; AOT\uff1aAOT\u6a21\u5f0f\uff0c\u76f4\u63a5\u5c06 Dart \u6e90\u7801\u7f16\u8bd1\u51fa .S \u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u6c47\u7f16\u5668\u751f\u6210\u5bf9\u5e94\u67b6\u6784\u7684\u4ee3\u7801\u3002 \u603b\u7ed3\u4e00\u4e0b\u521a\u624d\u7684\u5217\u8868\uff0c\u53ef\u4ee5\u53d1\u73b0\uff1a \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 Flutter\u7684\u7f16\u8bd1\u6a21\u5f0f Flutter \u5b8c\u5168\u91c7\u7528\u4e86 Dart\uff0c\u6309\u9053\u7406\u6765\u8bf4\u7f16\u8bd1\u6a21\u5f0f\u4e00\u81f4\u624d\u662f\uff0c\u4f46\u662f\u4e8b\u5b9e\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u7531\u4e8e Android \u548c iOS\u5e73\u53f0\u7684\u751f\u6001\u5dee\u5f02\uff0cFlutter \u4e5f\u884d\u751f\u51fa\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u7f16\u8bd1\u6a21\u5f0f\u3002 Script\uff1a\u540c Dart Script \u6a21\u5f0f\u4e00\u81f4\uff0c\u867d\u7136 Flutter \u652f\u6301\uff0c\u4f46\u6682\u672a\u770b\u5230\u4f7f\u7528\uff0c\u6bd5\u7adf\u5f71\u54cd\u542f\u52a8\u901f\u5ea6\uff1b Script Snapshot\uff1a\u540c Dart Script Snapshot \u4e00\u81f4\uff0c\u540c\u6837\u652f\u6301\u4f46\u672a\u4f7f\u7528\uff0cFlutter \u6709\u5927\u91cf\u7684\u89c6\u56fe\u6e32\u67d3\u903b\u8f91\uff0c\u7eaf JIT \u6a21\u5f0f\u5f71\u54cd\u6267\u884c\u901f\u5ea6\uff1b Kernel Snapshot\uff1aDart \u7684 bytecode\u6a21\u5f0f\uff0c\u4e0e Application Snapshot \u4e0d\u540c\uff0cbytecode \u6a21\u5f0f\u662f\u4e0d\u533a\u5206\u67b6\u6784\u7684\u3002Kernel Snapshot \u5728 Flutter \u9879\u76ee\u5185\u4e5f\u53eb Core Snapshot\u3002bytecode\u6a21\u5f0f\u53ef\u4ee5\u5f52\u7c7b\u4e3a AOT \u7f16\u8bd1\uff1b Core JIT\uff1aDart \u7684\u4e00\u79cd\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff0c\u5c06\u6307\u4ee4\u4ee3\u7801\u548c heap \u6570\u636e\u6253\u5305\u6210\u6587\u4ef6\uff0c\u7136\u540e\u5728 VM \u548c isolate \u542f\u52a8\u65f6\u8f7d\u5165\uff0c\u76f4\u63a5\u6807\u8bb0\u5185\u5b58\u53ef\u6267\u884c\uff0c\u53ef\u4ee5\u8bf4\u8fd9\u662f\u4e00\u79cd AOT \u6a21\u5f0f\u3002Core JIT \u4e5f\u88ab\u53eb\u505a AOTBlob\uff1b AOT Assembly: \u5373 Dart \u7684 AOT \u6a21\u5f0f\u3002\u76f4\u63a5\u751f\u6210\u6c47\u7f16\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u7531\u5404\u5e73\u53f0\u81ea\u884c\u6c47\u7f16\u3002 \u53ef\u4ee5\u770b\u51fa\u6765\uff0cFlutter \u5c06 Dart \u7684\u7f16\u8bd1\u6a21\u5f0f\u590d\u6742\u5316\u4e86\uff0c\u591a\u4e86\u4e0d\u5c11\u6982\u5ff5\uff0c\u8981\u4e00\u4e0b\u53d9\u8ff0\u6e05\u695a\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7740\u91cd\u4ece Flutter \u5e94\u7528\u5f00\u53d1\u7684\u5404\u4e2a\u9636\u6bb5\u6765\u89e3\u8bfb\u3002 \u5f00\u53d1\u9636\u6bb5\u7684\u7f16\u8bd1\u6a21\u5f0f \u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u6211\u4eec\u9700\u8981 Flutter \u7684 Hot Reload \u548c Hot Restart \u529f\u80fd\uff0c\u65b9\u4fbf UI \u5feb\u901f\u6210\u578b\u3002\u540c\u65f6\uff0c\u6846\u67b6\u5c42\u4e5f\u9700\u8981\u6bd4\u8f83\u9ad8\u7684\u6027\u80fd\u6765\u8fdb\u884c\u89c6\u56fe\u6e32\u67d3\u5c55\u73b0\u3002\u56e0\u6b64\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0cFlutter \u4f7f\u7528\u4e86 Kernel Snapshot \u6a21\u5f0f\u7f16\u8bd1\u3002 \u5728\u6253\u5305\u4ea7\u7269\u4e2d\uff0c\u4f60\u5c06\u53d1\u73b0\u51e0\u6837\u4e1c\u897f\uff1a isolate_snapshot_data\uff1a\u7528\u4e8e\u52a0\u901f isolate \u542f\u52a8\uff0c\u4e1a\u52a1\u65e0\u5173\u4ee3\u7801\uff0c\u56fa\u5b9a\uff0c\u4ec5\u548c flutter engine \u7248\u672c\u6709\u5173\uff1b platform.dill\uff1a\u548c Dart VM \u76f8\u5173\u7684 kernel \u4ee3\u7801\uff0c\u4ec5\u548c Dart \u7248\u672c\u4ee5\u53ca engine \u7f16\u8bd1\u7248\u672c\u6709\u5173\u3002\u56fa\u5b9a\uff0c\u4e1a\u52a1\u65e0\u5173\u4ee3\u7801\uff1b vm_snapshot_data: \u7528\u4e8e\u52a0\u901f Dart VM \u542f\u52a8\u7684\u4ea7\u7269\uff0c\u4e1a\u52a1\u65e0\u5173\u4ee3\u7801\uff0c\u4ec5\u548c flutter engine \u7248\u672c\u6709\u5173\uff1b kernel_blob.bin\uff1a\u4e1a\u52a1\u4ee3\u7801\u4ea7\u7269 \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \u751f\u4ea7\u9636\u6bb5\u7684\u7f16\u8bd1\u6a21\u5f0f \u5728\u751f\u4ea7\u9636\u6bb5\uff0c\u5e94\u7528\u9700\u8981\u7684\u662f\u975e\u5e38\u5feb\u7684\u901f\u5ea6\uff0c\u6240\u4ee5 Android \u548c iOS target \u6beb\u65e0\u610f\u5916\u5730\u90fd\u9009\u62e9\u4e86 AOT \u6253\u5305\u3002\u4e0d\u8fc7\u7531\u4e8e\u5e73\u53f0\u7279\u6027\u4e0d\u540c\uff0c\u6253\u5305\u6a21\u5f0f\u4e5f\u662f\u5929\u58e4\u4e4b\u522b\u3002 \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \u9996\u5148\u6211\u4eec\u5f88\u5bb9\u6613\u8ba4\u8bc6\u5230 iOS \u5e73\u53f0\u4e0a\u505a\u6cd5\u7684\u539f\u56e0\uff1aApp Store \u5ba1\u6838\u6761\u4f8b\u4e0d\u5141\u8bb8\u52a8\u6001\u4e0b\u53d1\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002 \u6240\u4ee5\u5728 iOS \u4e0a\uff0c\u9664\u4e86 JavaScript\uff0c\u5176\u4ed6\u8bed\u8a00\u8fd0\u884c\u65f6\u7684\u5b9e\u73b0\u90fd\u9009\u62e9\u4e86 AOT\uff08\u6bd4\u5982 OpenJDK \u5728 iOS \u5b9e\u73b0\u5c31\u662f AOT\uff09\u3002 \u5728 Android \u4e0a\uff0cFlutter \u7684\u505a\u6cd5\u6709\u70b9\u610f\u601d\uff1a\u652f\u6301\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u8def\u5b50\u3002 Core JIT \u7684\u6253\u5305\u4ea7\u7269\u6709 4 \u4e2a\uff1aisolate_snapshot_data\u3001vm_snapshot_data\u3001isolate_snapshot_instr\u3001vm_snapshot_instr\u3002\u6211\u4eec\u4e0d\u8ba4\u8bc6\u7684\u4ea7\u7269\u53ea\u6709 2 \u4e2a\uff1aisolate_snapshot_instr \u548c vm_snapshot_instr\uff0c\u5176\u5b9e\u5b83\u4fe9\u4ee3\u8868\u7740 VM \u548c isolate \u542f\u52a8\u540e\u6240\u627f\u8f7d\u7684\u6307\u4ee4\u7b49\u6570\u636e\u3002\u5728\u8f7d\u5165\u540e\uff0c\u76f4\u63a5\u5c06\u8be5\u5757\u5185\u5b58\u6267\u884c\u5373\u53ef\u3002 Android \u7684 AOT Assembly \u6253\u5305\u65b9\u5f0f\u5f88\u5bb9\u6613\u8ba9\u4eba\u60f3\u5230\u9700\u8981\u652f\u6301\u591a\u67b6\u6784\uff0c\u65e0\u7591\u589e\u5927\u4e86\u4ee3\u7801\u5305\uff0c\u5e76\u4e14\u8be5\u5904\u4ee3\u7801\u9700\u8981\u4ece JNI \u8c03\u7528\uff0c\u8fdc\u4e0d\u5982 Core JIT \u7684 Java API \u65b9\u4fbf\u3002\u6240\u4ee5 Android \u4e0a\u9ed8\u8ba4\u4f7f\u7528 Core JIT \u6253\u5305\uff0c\u800c\u4e0d\u662f AOT Assembly\u3002 Flutter Engine \u5bf9\u7f16\u8bd1\u6a21\u5f0f\u7684\u652f\u6301 \u5728\u6211\u7684\u4e0a\u7bc7\u6587\u7ae0\uff1aFlutter\u539f\u7406\u7b80\u89e3 \u4e2d\u63d0\u5230\uff0cEngine \u627f\u8f7d\u4e86 Dart \u8fd0\u884c\u65f6\uff0c\u6beb\u65e0\u7591\u95ee Engine \u9700\u8981\u548c\u6253\u5305\u51fa\u6765\u7684\u4ee3\u7801\u5bf9\u7684\u4e0a\u53f7\u624d\u884c\u3002 \u5728 Engine \u7684\u7f16\u8bd1\u6a21\u5f0f\u4e2d\uff0cFlutter \u662f\u8fd9\u6837\u9009\u62e9\u7684\uff1a \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cFlutter \u7684\u7f16\u8bd1\u6a21\u5f0f\u662f\u5b8c\u5168\u6839\u636e Engine \u7684\u652f\u6301\u5ea6\u6765\u8bbe\u8ba1\u7684\u3002 \u7ed3\u8bba Flutter \u662f\u4e00\u79cd\u9ad8\u6027\u80fd\u7684\u3001\u53ef\u8de8\u5e73\u53f0\u7684\u3001\u52a8\u6001\u5316\u5e94\u7528\u5f00\u53d1\u65b9\u6848\u3002 \u5728 iOS \u548c Android \u5e73\u53f0\u4e0a\uff0c\u52a8\u6001\u5316\u5b8c\u5168\u53ef\u7531 Kernel Snapshot \u6253\u5305\u5b9e\u73b0\uff0c\u5e76\u4e14\u4ea7\u7269\u662f\u4e00\u81f4\u901a\u7528\u7684\u3002\u4e0d\u8fc7\u76ee\u524d\u901a\u8fc7\u6253\u5305\u5de5\u5177\u8fdb\u884c\u4e86\u9609\u5272\uff0c\u53ea\u80fd\u751f\u6210 debug \u4ea7\u7269\u3002 \u5e76\u4e14\u5982\u679c\u4e0d\u9700\u8981\u52a8\u6001\u5316\uff0c\u540c\u6837\u53ef\u4ee5\u6253\u5305\u51fa\u62e5\u6709\u66f4\u9ad8\u6267\u884c\u6027\u80fd\u7684\u4e8c\u8fdb\u5236\u5e93\u6587\u4ef6\u4f7f\u7528\u3002\u8fd9\u4e2a\u7279\u6027\u76ee\u524d\u5c31\u5df2\u7ecf\u652f\u6301\uff0c\u6709\u4e86\u7406\u8bba\u7684\u652f\u6301\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7740\u624b\u505a\u6539\u9020\u7684\u4e8b\u4e86\u3002","title":"\u7f16\u8bd1\u6a21\u5f0f"},{"location":"android/flutter/ComplieMode/#flutter","text":"","title":"\u6df1\u5165\u7406\u89e3flutter\u7684\u7f16\u8bd1\u539f\u7406\u4e0e\u4f18\u5316"},{"location":"android/flutter/ComplieMode/#flutter_1","text":"\u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4ec0\u4e48\u662fFlutter\uff1f\u5b83\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u5305\u542b\u54ea\u51e0\u90e8\u5206\uff0c\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\uff0c\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\u7684\u5462\uff1fFlutter\u5982\u4f55\u505a\u5230Debug\u6a21\u5f0fHot Reload\u5feb\u901f\u751f\u6548\u53d8\u66f4\uff0cRelease\u6a21\u5f0f\u539f\u751f\u4f53\u9a8c\u7684\u5462\uff1fFlutter\u5de5\u7a0b\u548c\u6211\u4eec\u7684Android/iOS\u5de5\u7a0b\u6709\u4f55\u5dee\u522b\uff0c","title":"flutter"},{"location":"android/flutter/ComplieMode/#_1","text":"\u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4ec0\u4e48\u662fFlutter\uff1f\u5b83\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u5305\u542b\u54ea\u51e0\u90e8\u5206\uff0c\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\uff0c\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\u7684\u5462\uff1fFlutter\u5982\u4f55\u505a\u5230Debug\u6a21\u5f0fHot Reload\u5feb\u901f\u751f\u6548\u53d8\u66f4\uff0cRelease\u6a21\u5f0f\u539f\u751f\u4f53\u9a8c\u7684\u5462\uff1fFlutter\u5de5\u7a0b\u548c\u6211\u4eec\u7684Android/iOS\u5de5\u7a0b\u6709\u4f55\u5dee\u522b\uff0c\u5173\u7cfb\u5982\u4f55\uff0c\u53c8\u662f\u5982\u4f55\u5d4c\u5165Android/iOS\u7684\u5462\uff1fFlutter\u7684\u6e32\u67d3\u548c\u4e8b\u4ef6\u4f20\u9012\u673a\u5236\u5982\u4f55\u5de5\u4f5c\uff1fFlutter\u652f\u6301\u70ed\u66f4\u65b0\u5417\uff1fFlutter\u5b98\u65b9\u5e76\u672a\u63d0\u4f9biOS\u4e0b\u7684armv7\u652f\u6301\uff0c\u786e\u5b9e\u5982\u6b64\u5417\uff1f\u5728\u4f7f\u7528Flutter\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u4e86engine\u7684bug\uff0c\u5982\u4f55\u53bb\u4fee\u6539\u548c\u751f\u6548\uff1f\u6784\u5efa\u7f13\u6162\u6216\u51fa\u9519\u53c8\u5982\u4f55\u53bb\u5b9a\u4f4d\uff0c\u4fee\u6539\u548c\u751f\u6548\u5462\uff1f \u51e1\u6b64\u79cd\u79cd\uff0c\u90fd\u9700\u8981\u5bf9Flutter\u4ece\u8bbe\u8ba1\uff0c\u5f00\u53d1\u6784\u5efa\uff0c\u5230\u6700\u7ec8\u8fd0\u884c\u6709\u4e00\u4e2a\u5168\u5c40\u89c6\u89d2\u7684\u89c2\u5bdf\u3002 \u672c\u6587\u5c06\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684hello_flutter\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u4e0bFlutter\u76f8\u5173\u539f\u7406\u53ca\u5b9a\u5236\u4e0e\u4f18\u5316\u3002","title":"\u95ee\u9898\u80cc\u666f"},{"location":"android/flutter/ComplieMode/#flutter_2","text":"FlutterArchitecture Flutter\u7684\u67b6\u6784\u4e3b\u8981\u5206\u6210\u4e09\u5c42:Framework\uff0cEngine\u548cEmbedder\u3002 Framework\u4f7f\u7528dart\u5b9e\u73b0\uff0c\u5305\u62ecMaterial Design\u98ce\u683c\u7684Widget,Cupertino(\u9488\u5bf9iOS)\u98ce\u683c\u7684Widgets\uff0c\u6587\u672c/\u56fe\u7247/\u6309\u94ae\u7b49\u57fa\u7840Widgets\uff0c\u6e32\u67d3\uff0c\u52a8\u753b\uff0c\u624b\u52bf\u7b49\u3002\u6b64\u90e8\u5206\u7684\u6838\u5fc3\u4ee3\u7801\u662f:flutter\u4ed3\u5e93\u4e0b\u7684flutter package\uff0c\u4ee5\u53casky_engine\u4ed3\u5e93\u4e0b\u7684io,async,ui(dart:ui\u5e93\u63d0\u4f9b\u4e86Flutter\u6846\u67b6\u548c\u5f15\u64ce\u4e4b\u95f4\u7684\u63a5\u53e3)\u7b49package\u3002 Engine\u4f7f\u7528C++\u5b9e\u73b0\uff0c\u4e3b\u8981\u5305\u62ec:Skia,Dart\u548cText\u3002Skia\u662f\u5f00\u6e90\u7684\u4e8c\u7ef4\u56fe\u5f62\u5e93\uff0c\u63d0\u4f9b\u4e86\u9002\u7528\u4e8e\u591a\u79cd\u8f6f\u786c\u4ef6\u5e73\u53f0\u7684\u901a\u7528API\u3002\u5176\u5df2\u4f5c\u4e3aGoogle Chrome\uff0cChrome OS\uff0cAndroid, Mozilla Firefox, Firefox OS\u7b49\u5176\u4ed6\u4f17\u591a\u4ea7\u54c1\u7684\u56fe\u5f62\u5f15\u64ce\uff0c\u652f\u6301\u5e73\u53f0\u8fd8\u5305\u62ecWindows7+,macOS 10.10.5+,iOS8+,Android4.1+,Ubuntu14.04+\u7b49\u3002Dart\u90e8\u5206\u4e3b\u8981\u5305\u62ec:Dart Runtime\uff0cGarbage Collection(GC)\uff0c\u5982\u679c\u662fDebug\u6a21\u5f0f\u7684\u8bdd\uff0c\u8fd8\u5305\u62ecJIT(Just In Time)\u652f\u6301\u3002Release\u548cProfile\u6a21\u5f0f\u4e0b\uff0c\u662fAOT(Ahead Of Time)\u7f16\u8bd1\u6210\u4e86\u539f\u751f\u7684arm\u4ee3\u7801\uff0c\u5e76\u4e0d\u5b58\u5728JIT\u90e8\u5206\u3002Text\u5373\u6587\u672c\u6e32\u67d3\uff0c\u5176\u6e32\u67d3\u5c42\u6b21\u5982\u4e0b:\u884d\u751f\u81eaminikin\u7684libtxt\u5e93(\u7528\u4e8e\u5b57\u4f53\u9009\u62e9\uff0c\u5206\u9694\u884c)\u3002HartBuzz\u7528\u4e8e\u5b57\u5f62\u9009\u62e9\u548c\u6210\u578b\u3002Skia\u4f5c\u4e3a\u6e32\u67d3/GPU\u540e\u7aef\uff0c\u5728Android\u548cFuchsia\u4e0a\u4f7f\u7528FreeType\u6e32\u67d3\uff0c\u5728iOS\u4e0a\u4f7f\u7528CoreGraphics\u6765\u6e32\u67d3\u5b57\u4f53\u3002 Embedder\u662f\u4e00\u4e2a\u5d4c\u5165\u5c42\uff0c\u5373\u628aFlutter\u5d4c\u5165\u5230\u5404\u4e2a\u5e73\u53f0\u4e0a\u53bb\uff0c\u8fd9\u91cc\u505a\u7684\u4e3b\u8981\u5de5\u4f5c\u5305\u62ec\u6e32\u67d3Surface\u8bbe\u7f6e,\u7ebf\u7a0b\u8bbe\u7f6e\uff0c\u4ee5\u53ca\u63d2\u4ef6\u7b49\u3002\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\uff0cFlutter\u7684\u5e73\u53f0\u76f8\u5173\u5c42\u5f88\u4f4e\uff0c\u5e73\u53f0(\u5982iOS)\u53ea\u662f\u63d0\u4f9b\u4e00\u4e2a\u753b\u5e03\uff0c\u5269\u4f59\u7684\u6240\u6709\u6e32\u67d3\u76f8\u5173\u7684\u903b\u8f91\u90fd\u5728Flutter\u5185\u90e8\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5b83\u5177\u6709\u4e86\u5f88\u597d\u7684\u8de8\u7aef\u4e00\u81f4\u6027\u3002","title":"Flutter\u7b80\u4ecb"},{"location":"android/flutter/ComplieMode/#flutter_3","text":"\u672c\u6587\u4f7f\u7528\u5f00\u53d1\u73af\u5883\u4e3aflutter beta v0.3.1\uff0c\u5bf9\u5e94\u7684engine commit:09d05a389\u3002 \u4ee5hello_flutter\u5de5\u7a0b\u4e3a\u4f8b\uff0cFlutter\u5de5\u7a0b\u7ed3\u6784\u5982\u4e0b\u6240\u793a: Flutter File Structure \u5176\u4e2dios\u4e3aiOS\u90e8\u5206\u4ee3\u7801\uff0c\u4f7f\u7528CocoaPods\u7ba1\u7406\u4f9d\u8d56\uff0candroid\u4e3aAndroid\u90e8\u5206\u4ee3\u7801\uff0c\u4f7f\u7528Gradle\u7ba1\u7406\u4f9d\u8d56\uff0clib\u4e3adart\u4ee3\u7801\uff0c\u4f7f\u7528pub\u7ba1\u7406\u4f9d\u8d56\u3002\u7c7b\u4f3ciOS\u4e2dCocoapods\u5bf9\u5e94\u7684Podfile\u548cPodfile.lock\uff0cpub\u4e0b\u5219\u662fpubspec.yaml\u548cpubspec.lock\u3002","title":"Flutter\u5de5\u7a0b\u7ed3\u6784"},{"location":"android/flutter/ComplieMode/#flutter_4","text":"\u5bf9\u4e8eFlutter\uff0c\u5b83\u652f\u6301\u5e38\u89c1\u7684debug,release,profile\u7b49\u6a21\u5f0f\uff0c\u4f46\u5b83\u53c8\u6709\u5176\u4e0d\u4e00\u6837\u3002 Debug\u6a21\u5f0f\uff1a\u5bf9\u5e94\u4e86Dart\u7684JIT\u6a21\u5f0f\uff0c\u53c8\u79f0\u68c0\u67e5\u6a21\u5f0f\u6216\u8005\u6162\u901f\u6a21\u5f0f\u3002\u652f\u6301\u8bbe\u5907\uff0c\u6a21\u62df\u5668(iOS/Android)\uff0c\u6b64\u6a21\u5f0f\u4e0b\u6253\u5f00\u4e86\u65ad\u8a00\uff0c\u5305\u62ec\u6240\u6709\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u670d\u52a1\u6269\u5c55\u548cObservatory\u7b49\u8c03\u8bd5\u8f85\u52a9\u3002\u6b64\u6a21\u5f0f\u4e3a\u5feb\u901f\u5f00\u53d1\u548c\u8fd0\u884c\u505a\u4e86\u4f18\u5316\uff0c\u4f46\u5e76\u672a\u5bf9\u6267\u884c\u901f\u5ea6\uff0c\u5305\u5927\u5c0f\u548c\u90e8\u7f72\u505a\u4f18\u5316\u3002Debug\u6a21\u5f0f\u4e0b\uff0c\u7f16\u8bd1\u4f7f\u7528JIT\u6280\u672f\uff0c\u652f\u6301\u5e7f\u53d7\u6b22\u8fce\u7684\u4e9a\u79d2\u7ea7\u6709\u72b6\u6001\u7684hot reload\u3002 Release\u6a21\u5f0f\uff1a\u5bf9\u5e94\u4e86Dart\u7684AOT\u6a21\u5f0f\uff0c\u6b64\u6a21\u5f0f\u76ee\u6807\u5373\u4e3a\u90e8\u7f72\u5230\u7ec8\u7aef\u7528\u6237\u3002\u53ea\u652f\u6301\u771f\u673a\uff0c\u4e0d\u5305\u62ec\u6a21\u62df\u5668\u3002\u5173\u95ed\u4e86\u6240\u6709\u65ad\u8a00\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u53bb\u6389\u4e86\u8c03\u8bd5\u4fe1\u606f\uff0c\u5173\u95ed\u4e86\u6240\u6709\u8c03\u8bd5\u5de5\u5177\u3002\u4e3a\u5feb\u901f\u542f\u52a8\uff0c\u5feb\u901f\u6267\u884c\uff0c\u5305\u5927\u5c0f\u505a\u4e86\u4f18\u5316\u3002\u7981\u6b62\u4e86\u6240\u6709\u8c03\u8bd5\u8f85\u52a9\u624b\u6bb5\uff0c\u670d\u52a1\u6269\u5c55\u3002 Profile\u6a21\u5f0f\uff1a\u7c7b\u4f3cRelease\u6a21\u5f0f\uff0c\u53ea\u662f\u591a\u4e86\u5bf9\u4e8eProfile\u6a21\u5f0f\u7684\u670d\u52a1\u6269\u5c55\u7684\u652f\u6301\uff0c\u652f\u6301\u8ddf\u8e2a\uff0c\u4ee5\u53ca\u6700\u5c0f\u5316\u4f7f\u7528\u8ddf\u8e2a\u4fe1\u606f\u9700\u8981\u7684\u4f9d\u8d56\uff0c\u4f8b\u5982\uff0cobservatory\u53ef\u4ee5\u8fde\u63a5\u4e0a\u8fdb\u7a0b\u3002Profile\u5e76\u4e0d\u652f\u6301\u6a21\u62df\u5668\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u6a21\u62df\u5668\u4e0a\u7684\u8bca\u65ad\u5e76\u4e0d\u4ee3\u8868\u771f\u5b9e\u7684\u6027\u80fd\u3002 \u9274\u4e8eProfile\u540cRelease\u5728\u7f16\u8bd1\u539f\u7406\u7b49\u4e0a\u65e0\u5dee\u5f02\uff0c\u672c\u6587\u53ea\u8ba8\u8bbaDebug\u548cRelease\u6a21\u5f0f\u3002 \u4e8b\u5b9e\u4e0aflutter\u4e0b\u7684iOS/Android\u5de5\u7a0b\u672c\u8d28\u4e0a\u4f9d\u7136\u662f\u4e00\u4e2a\u6807\u51c6\u7684iOS/Android\u7684\u5de5\u7a0b\uff0cflutter\u53ea\u662f\u901a\u8fc7\u5728BuildPhase\u4e2d\u6dfb\u52a0shell\u6765\u751f\u6210\u548c\u5d4c\u5165App.framework\u548cFlutter.framework(iOS),\u901a\u8fc7gradle\u6765\u6dfb\u52a0flutter.jar\u548cvm/isolate_snapshot_data/instr(Android)\u6765\u5c06Flutter\u76f8\u5173\u4ee3\u7801\u7f16\u8bd1\u548c\u5d4c\u5165\u539f\u751fApp\u800c\u5df2\u3002\u56e0\u6b64\u672c\u6587\u4e3b\u8981\u8ba8\u8bba\u56e0flutter\u5f15\u5165\u7684\u6784\u5efa\uff0c\u8fd0\u884c\u7b49\u539f\u7406\u3002\u7f16\u8bd1target\u867d\u7136\u5305\u62ecarm,x64,x86,arm64\uff0c\u4f46\u56e0\u539f\u7406\u7c7b\u4f3c\uff0c\u672c\u6587\u53ea\u8ba8\u8bbaarm\u76f8\u5173(\u5982\u65e0\u7279\u6b8a\u8bf4\u660e\uff0candroid\u9ed8\u8ba4\u4e3aarmv7)\u3002","title":"Flutter\u6a21\u5f0f"},{"location":"android/flutter/ComplieMode/#flutterios","text":"Release\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1 release\u6a21\u5f0f\u4e0b\uff0cflutter\u4e0biOS\u5de5\u7a0b\u4e2ddart\u4ee3\u7801\u6784\u5efa\u94fe\u8def\u5982\u4e0b\u6240\u793a:","title":"Flutter\u4ee3\u7801\u7684\u7f16\u8bd1\u4e0e\u8fd0\u884c(iOS)"},{"location":"android/flutter/ComplieMode/#ios-compile-and-embed","text":"\u5176\u4e2dgen_snapshot\u662fdart\u7f16\u8bd1\u5668\uff0c\u91c7\u7528\u4e86tree shaking(\u7c7b\u4f3c\u4f9d\u8d56\u6811\u903b\u8f91\uff0c\u53ef\u751f\u6210\u6700\u5c0f\u5305\uff0c\u4e5f\u56e0\u800c\u5728Flutter\u4e2d\u7981\u6b62\u4e86dart\u652f\u6301\u7684\u53cd\u5c04\u7279\u6027)\u7b49\u6280\u672f,\u7528\u4e8e\u751f\u6210\u6c47\u7f16\u5f62\u5f0f\u7684\u673a\u5668\u4ee3\u7801\uff0c\u518d\u901a\u8fc7xcrun\u7b49\u7f16\u8bd1\u5de5\u5177\u94fe\u751f\u6210\u6700\u7ec8\u7684App.framework\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u7684dart\u4ee3\u7801\uff0c\u5305\u62ec\u4e1a\u52a1\u4ee3\u7801\uff0c\u4e09\u65b9package\u4ee3\u7801\uff0c\u5b83\u4eec\u6240\u4f9d\u8d56\u7684flutter\u6846\u67b6\u4ee3\u7801\uff0c\u6700\u7ec8\u5c06\u4f1a\u53d8\u6210App.framework\u3002 tree shaking\u529f\u80fd\u4f4d\u4e8egen_snapshot\u4e2d\uff0c\u5bf9\u5e94\u903b\u8f91\u53c2\u89c1: engine/src/third_party/dart/runtime/vm/compiler/aot/precompiler.cc dart\u4ee3\u7801\u6700\u7ec8\u5bf9\u5e94\u5230App.framework\u4e2d\u7684\u7b26\u53f7\u5982\u4e0b\u6240\u793a: dart code to symbol in App.framework \u4e8b\u5b9e\u4e0a\uff0c\u7c7b\u4f3cAndroid Release\u4e0b\u7684\u4ea7\u7269(\u89c1\u4e0b\u6587)\uff0cApp.framework\u4e5f\u5305\u542b\u4e86kDartVmSnapshotData\uff0ckDartVmSnapshotInstructions\uff0ckDartIsolateSnapshotData\uff0ckDartIsolateSnapshotInstructions\u56db\u4e2a\u90e8\u5206\u3002\u4e3a\u4ec0\u4e48iOS\u4f7f\u7528App.framework\u8fd9\u79cd\u65b9\u5f0f\uff0c\u800c\u4e0d\u662fAndroid\u7684\u56db\u4e2a\u6587\u4ef6\u7684\u65b9\u5f0f\u5462\uff1f\u539f\u56e0\u5728\u4e8e\u5728iOS\u4e0b\uff0c\u56e0\u4e3a\u7cfb\u7edf\u7684\u9650\u5236\uff0cFlutter\u5f15\u64ce\u4e0d\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u5c06\u67d0\u5185\u5b58\u9875\u6807\u8bb0\u4e3a\u53ef\u6267\u884c\uff0c\u800cAndroid\u662f\u53ef\u4ee5\u7684\u3002 Flutter.framework\u5bf9\u5e94\u4e86Flutter\u67b6\u6784\u4e2d\u7684engine\u90e8\u5206\uff0c\u4ee5\u53caEmbedder\u3002\u5b9e\u9645\u4e2dFlutter.framework\u4f4d\u4e8eflutter\u4ed3\u5e93\u7684/bin/cache/artifacts/engine/ios*\u4e0b\uff0c\u9ed8\u8ba4\u4ecegoogle\u4ed3\u5e93\u62c9\u53d6\u3002\u5f53\u9700\u8981\u81ea\u5b9a\u4e49\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ef\u901a\u8fc7\u4e0b\u8f7dengine\u6e90\u7801\uff0c\u5229\u7528Ninja\u6784\u5efa\u7cfb\u7edf\u6765\u751f\u6210\u3002 Flutter\u76f8\u5173\u4ee3\u7801\u7684\u6700\u7ec8\u4ea7\u7269\u662f:App.framework(dart\u4ee3\u7801\u751f\u6210)\u548cFlutter.framework(\u5f15\u64ce)\u3002\u4eceXcode\u5de5\u7a0b\u7684\u89c6\u89d2\u770b\uff0cGenerated.xcconfig\u63cf\u8ff0\u4e86Flutter\u76f8\u5173\u73af\u5883\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540eRunner\u5de5\u7a0b\u8bbe\u7f6e\u4e2d\u7684Build Phases\u65b0\u589e\u7684xcode_backend.sh\u5b9e\u73b0\u4e86Flutter.framework\u7684\u62f7\u8d1d(\u4eceFlutter\u4ed3\u5e93\u7684\u5f15\u64ce\u5230Runner\u5de5\u7a0b\u6839\u76ee\u5f55\u4e0b\u7684Flutter\u76ee\u5f55)\u4e0e\u5d4c\u5165\u548cApp.framework\u7684\u7f16\u8bd1\u4e0e\u5d4c\u5165\u3002\u6700\u7ec8\u751f\u6210\u7684Runner.app\u4e2dFlutter\u76f8\u5173\u5185\u5bb9\u5982\u4e0b\u6240\u793a:","title":"iOS compile and embed"},{"location":"android/flutter/ComplieMode/#flutter-in-runner-release","text":"\u5176\u4e2dflutter_assets\u662f\u76f8\u5173\u7684\u8d44\u6e90\uff0c\u4ee3\u7801\u5219\u662f\u4f4d\u4e8eFrameworks\u4e0b\u7684App.framework\u548cFlutter.framework\u3002","title":"Flutter in Runner Release"},{"location":"android/flutter/ComplieMode/#release","text":"Flutter\u76f8\u5173\u7684\u6e32\u67d3\uff0c\u4e8b\u4ef6\uff0c\u901a\u4fe1\u5904\u7406\u903b\u8f91\u5982\u4e0b\u6240\u793a: Render and event logic \u5176\u4e2ddart\u4e2d\u7684main\u51fd\u6570\u8c03\u7528\u6808\u5982\u4e0b: main in dart callstack","title":"Release\u6a21\u5f0f\u4e0b\u7684\u8fd0\u884c"},{"location":"android/flutter/ComplieMode/#debug","text":"Debug\u6a21\u5f0f\u4e0bflutter\u7684\u7f16\u8bd1\uff0c\u7ed3\u6784\u7c7b\u4f3cRelease\u6a21\u5f0f\uff0c\u5dee\u5f02\u4e3b\u8981\u8868\u73b0\u4e3a\u4e24\u70b9: 1.Flutter.framework \u56e0\u4e3a\u662fDebug\uff0c\u6b64\u6a21\u5f0f\u4e0bFramework\u4e2d\u662f\u6709JIT\u652f\u6301\u7684\uff0c\u800c\u5728Release\u6a21\u5f0f\u4e0b\u5e76\u6ca1\u6709JIT\u90e8\u5206\u3002 2.App.framework \u4e0d\u540c\u4e8eAOT\u6a21\u5f0f\u4e0b\u7684App.framework\u662fDart\u4ee3\u7801\u5bf9\u5e94\u7684\u672c\u5730\u673a\u5668\u4ee3\u7801\uff0cJIT\u6a21\u5f0f\u4e0b\uff0cApp.framework\u53ea\u6709\u51e0\u4e2a\u7b80\u5355\u7684API\uff0c\u5176Dart\u4ee3\u7801\u5b58\u5728\u4e8esnapshot_blob.bin\u6587\u4ef6\u91cc\u3002\u8fd9\u90e8\u5206\u7684snapshot\u662f\u811a\u672c\u5feb\u7167\uff0c\u91cc\u9762\u662f\u7b80\u5355\u7684\u6807\u8bb0\u5316\u7684\u6e90\u4ee3\u7801\u3002\u6240\u6709\u7684\u6ce8\u91ca\uff0c\u7a7a\u767d\u5b57\u7b26\u90fd\u88ab\u79fb\u9664\uff0c\u5e38\u91cf\u4e5f\u88ab\u89c4\u8303\u5316\uff0c\u4e5f\u6ca1\u6709\u673a\u5668\u7801\uff0ctree shaking\u6216\u8005\u662f\u6df7\u6dc6\u3002 App.framework\u4e2d\u7684\u7b26\u53f7\u8868\u5982\u4e0b\u6240\u793a: App in debug symbols \u5bf9Runner.app/flutter_assets/snapshot_blob.bin\u6267\u884cstrings\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u5185\u5bb9: snapshot bin strings Debug\u6a21\u5f0f\u4e0bmain\u5165\u53e3\u7684\u8c03\u7528\u5806\u6808\u5982\u4e0b: debug isolate main callstack Flutter\u4ee3\u7801\u7684\u7f16\u8bd1\u4e0e\u8fd0\u884c(Android) \u9274\u4e8eAndroid\u548ciOS\u9664\u4e86\u90e8\u5206\u5e73\u53f0\u76f8\u5173\u7684\u7279\u6027\u5916\uff0c\u5176\u4ed6\u903b\u8f91\u5982Release\u5bf9\u5e94AOT\uff0cDebug\u5bf9\u5e94JIT\u7b49\u5747\u7c7b\u4f3c\uff0c\u6b64\u5904\u53ea\u6d89\u53ca\u4e24\u8005\u4e0d\u540c\u3002 Release\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1 release\u6a21\u5f0f\u4e0b\uff0cflutter\u4e0bAndroid\u5de5\u7a0b\u4e2ddart\u4ee3\u7801\u6574\u4e2a\u6784\u5efa\u94fe\u8def\u5982\u4e0b\u6240\u793a: android release build flow \u5176\u4e2dvm/isolate_snapshot_data/instr\u5185\u5bb9\u5747\u4e3aarm\u6307\u4ee4\uff0c\u5c06\u4f1a\u5728\u8fd0\u884c\u65f6\u88abengine\u8f7d\u5165\uff0c\u5e76\u6807\u8bb0vm/isolate_snapshot_instr\u4e3a\u53ef\u6267\u884c\u3002vm_\u4e2d\u6d89\u53caruntime\u7b49\u670d\u52a1(\u5982gc)\uff0c\u7528\u4e8e\u521d\u59cb\u5316DartVM\uff0c\u8c03\u7528\u5165\u53e3\u89c1Dart_Initialize(dart_api.h)\u3002isolate__\u5219\u662f\u5bf9\u5e94\u4e86\u6211\u4eec\u7684App\u4ee3\u7801\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684isolate,\u8c03\u7528\u5165\u53e3\u89c1Dart_CreateIsolate(dart_api.h)\u3002flutter.jar\u7c7b\u4f3ciOS\u7684Flutter.framework\uff0c\u5305\u62ec\u4e86engine\u90e8\u5206\u7684\u4ee3\u7801(Flutter.jar\u4e2d\u7684libflutter.so)\uff0c\u4ee5\u53ca\u4e00\u5957\u5c06Flutter\u5d4c\u5165Android\u7684\u7c7b\u548c\u63a5\u53e3(FlutterMain,FlutterView,FlutterNativeView\u7b49)\u3002\u5b9e\u9645\u4e2dflutter.jar\u4f4d\u4e8eflutter\u4ed3\u5e93\u7684/bin/cache/artifacts/engine/android*\u4e0b\uff0c\u9ed8\u8ba4\u4ecegoogle\u4ed3\u5e93\u62c9\u53d6\u3002\u5f53\u9700\u8981\u81ea\u5b9a\u4e49\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ef\u901a\u8fc7\u4e0b\u8f7dengine\u6e90\u7801\uff0c\u5229\u7528Ninja\u6784\u5efa\u7cfb\u7edf\u6765\u751f\u6210flutter.jar\u3002 \u4ee5isolate_snapshot_data/instr\u4e3a\u4f8b\uff0c\u6267\u884cdisarm\u547d\u4ee4\u7ed3\u679c\u5982\u4e0b: isolate snapshot data disarm isolate snapshot instr disarm) \u5176Apk\u7ed3\u6784\u5982\u4e0b\u6240\u793a: Flutter android release apk structure APK\u65b0\u5b89\u88c5\u4e4b\u540e\uff0c\u4f1a\u6839\u636e\u4e00\u4e2ats\u7684\u5224\u65ad(packageinfo\u4e2d\u7684versionCode\u7ed3\u5408lastUpdateTime)\u6765\u51b3\u5b9a\u662f\u5426\u62f7\u8d1dAPK\u4e2d\u7684assets\uff0c\u62f7\u8d1d\u540e\u5185\u5bb9\u5982\u4e0b\u6240\u793a: app flutter isolate/vm_snapshot_data/instr\u5747\u6700\u540e\u4f4d\u4e8eapp\u7684\u672c\u5730data\u76ee\u5f55\u4e0b\uff0c\u800c\u8fd9\u90e8\u5206\u53c8\u5c5e\u4e8e\u53ef\u5199\u5185\u5bb9\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7d\u5e76\u66ff\u6362\u7684\u65b9\u5f0f\uff0c\u5b8c\u6210App\u7684\u6574\u4e2a\u66ff\u6362\u548c\u66f4\u65b0\u3002 Release\u6a21\u5f0f\u4e0b\u7684\u8fd0\u884c Render Event in release mode Debug\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1 \u7c7b\u4f3ciOS\u7684Debug/Release\u7684\u5dee\u522b\uff0cAndroid\u7684Debug\u4e0eRelease\u7684\u5dee\u5f02\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e24\u90e8\u5206: 1.flutter.jar \u533a\u522b\u540ciOS 2.App\u4ee3\u7801\u90e8\u5206 \u4f4d\u4e8eflutter_assets\u4e0b\u7684snapshot_blob.bin\uff0c\u540ciOS\u3002 \u5728\u4ecb\u7ecd\u4e86iOS/Android\u4e0b\u7684Flutter\u7f16\u8bd1\u539f\u7406\u540e\uff0c\u4e0b\u9762\u7740\u91cd\u63cf\u8ff0\u4e0b\u5982\u4f55\u5b9a\u5236flutter/engine\u4ee5\u5b8c\u6210\u5b9a\u5236\u548c\u4f18\u5316\u3002\u9274\u4e8eFlutter\u5904\u4e8e\u654f\u6377\u7684\u8fed\u4ee3\u4e2d\uff0c\u73b0\u5728\u7684\u95ee\u9898\u540e\u7eed\u4e0d\u4e00\u5b9a\u662f\u95ee\u9898\uff0c\u56e0\u800c\u6b64\u90e8\u5206\u5e76\u4e0d\u662f\u8981\u53bb\u89e3\u51b3\u591a\u5c11\u95ee\u9898\uff0c\u800c\u662f\u9009\u53d6\u4e0d\u540c\u7c7b\u522b\u7684\u95ee\u9898\u6765\u8bf4\u660e\u89e3\u51b3\u601d\u8def\u3002 Flutter\u6784\u5efa\u76f8\u5173\u7684\u5b9a\u5236\u4e0e\u4f18\u5316 Flutter\u662f\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u9664\u4e86\u4e0a\u8ff0\u63d0\u5230\u7684\u4e09\u5c42\u67b6\u6784\u4e2d\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u5305\u62ecFlutter Android Studio(Intellij)\u63d2\u4ef6\uff0cpub\u4ed3\u5e93\u7ba1\u7406\u7b49\u3002\u4f46\u6211\u4eec\u7684\u5b9a\u5236\u548c\u4f18\u5316\u5f80\u5f80\u662f\u5728flutter\u7684\u5de5\u5177\u94fe\u76f8\u5173\uff0c\u5177\u4f53\u4ee3\u7801\u4f4d\u4e8eflutter\u4ed3\u5e93\u7684flutter_tools\u5305\u3002\u63a5\u4e0b\u6765\u4e3e\u4f8b\u8bf4\u660e\u4e0b\u5982\u4f55\u5bf9\u8fd9\u90e8\u5206\u505a\u5b9a\u5236\u3002 Android\u90e8\u5206 \u76f8\u5173\u5185\u5bb9\u5305\u62ecflutter.jar\uff0clibflutter.so(\u4f4d\u4e8eflutter.jar\u4e0b)\uff0cgen_snapshot\uff0cflutter.gradle\uff0cflutter(flutter_tools)\u3002 1.\u9650\u5b9aAndroid\u4e2dtarget\u4e3aarmeabi \u6b64\u90e8\u5206\u5c5e\u4e8e\u6784\u5efa\u76f8\u5173\uff0c\u903b\u8f91\u4f4d\u4e8eflutter.gradle\u4e0b\u3002\u5f53App\u662f\u901a\u8fc7armeabi\u652f\u6301armv7/arm64\u7684\u65f6\u5019\uff0c\u9700\u8981\u4fee\u6539flutter\u7684\u9ed8\u8ba4\u903b\u8f91\u3002\u5982\u4e0b\u6240\u793a: android support armeabi only \u56e0\u4e3agradle\u672c\u8eab\u7684\u7279\u70b9\uff0c\u6b64\u90e8\u5206\u4fee\u6539\u540e\u76f4\u63a5\u6784\u5efa\u5373\u53ef\u751f\u6548\u3002 2.\u8bbe\u5b9aAndroid\u542f\u52a8\u65f6\u9ed8\u8ba4\u4f7f\u7528\u7b2c\u4e00\u4e2alaunchable-activity \u6b64\u90e8\u5206\u5c5e\u4e8eflutter_tools\u76f8\u5173\uff0c\u4fee\u6539\u5982\u4e0b: android launchable activity \u8fd9\u91cc\u7684\u91cd\u70b9\u4e0d\u662f\u5982\u4f55\u53bb\u4fee\u6539\uff0c\u800c\u662f\u5982\u4f55\u53bb\u8ba9\u4fee\u6539\u751f\u6548\u3002\u539f\u7406\u4e0a\u6765\u8bf4\uff0cflutter run/build/analyze/test/upgrade\u7b49\u547d\u4ee4\u5b9e\u9645\u4e0a\u6267\u884c\u7684\u90fd\u662fflutter(flutter_repo_dir/bin/flutter)\u8fd9\u4e00\u811a\u672c\uff0c\u518d\u901a\u8fc7\u811a\u672c\u901a\u8fc7dart\u6267\u884cflutter_tools.snapshot(\u901a\u8fc7packages/flutter_tools\u751f\u6210)\u3002\u5176\u903b\u8f91\u5982\u4e0b: if [[ ! -f \"SNAPSHOT_PATH\" ]] || [[ ! -s \"STAMP_PATH\" ]] || [[ \"(cat \"STAMP_PATH\")\" != \"revision\" ]] || [[ \"FLUTTER_TOOLS_DIR/pubspec.yaml\" -nt \" FLUTTER_TOOLS_DIR/pubspec.lock\" ]]; then rm -f \" FLUTTER_TOOLS_DIR/pubspec.lock\" ]]; then rm -f \" FLUTTER_ROOT/version\" touch \" FLUTTER_ROOT/bin/cache/.dartignore\" \" FLUTTER_ROOT/bin/cache/.dartignore\" \" FLUTTER_ROOT/bin/internal/update_dart_sdk.sh\" echo Building flutter tool... if [[ \" TRAVIS\" == \"true\" ]] || [[ \" TRAVIS\" == \"true\" ]] || [[ \" BOT\" == \"true\" ]] || [[ \" CONTINUOUS_INTEGRATION\" == \"true\" ]] || [[ \" CONTINUOUS_INTEGRATION\" == \"true\" ]] || [[ \" CHROME_HEADLESS\" == \"1\" ]] || [[ \" APPVEYOR\" == \"true\" ]] || [[ \" APPVEYOR\" == \"true\" ]] || [[ \" CI\" == \"true\" ]]; then PUB_ENVIRONMENT=\" PUB_ENVIRONMENT:flutter_bot\" fi export PUB_ENVIRONMENT=\" PUB_ENVIRONMENT:flutter_bot\" fi export PUB_ENVIRONMENT=\" PUB_ENVIRONMENT:flutter_install\" if [[ -d $FLUTTER_ROOT/.pub-cache ]]; then export PUB_CACHE= ${PUB_CACHE:- $FLUTTER_ROOT/.pub-cache } fi while : ; do cd $FLUTTER_TOOLS_DIR $PUB upgrade --verbosity=error --no-packages-dir amp; amp; break echo Error: Unable to pub upgrade flutter tool. Retrying in five seconds... sleep 5 done $DART --snapshot= $SNAPSHOT_PATH --packages= $FLUTTER_TOOLS_DIR/.packages $SCRIPT_PATH echo $revision gt; $STAMP_PATH fi \u4e0d\u96be\u770b\u51fa\u8981\u91cd\u65b0\u6784\u5efaflutter_tools\uff0c\u53ef\u4ee5\u5220\u9664flutter_repo_dir/bin/cache/flutter_tools.stamp(\u8fd9\u6837\u91cd\u65b0\u751f\u6210\u4e00\u6b21)\uff0c\u6216\u8005\u5c4f\u853d\u6389if/fi\u5224\u65ad(\u6bcf\u4e00\u6b21\u90fd\u4f1a\u91cd\u65b0\u751f\u6210)\u3002 3.\u5982\u4f55\u5728Android\u5de5\u7a0bDebug\u6a21\u5f0f\u4e0b\u4f7f\u7528release\u6a21\u5f0f\u7684flutter \u5f53\u5f00\u53d1\u8005\u5728\u7814\u53d1\u4e2d\u53d1\u73b0flutter\u6709\u4e9b\u5361\u987f\u65f6\uff0c\u731c\u6d4b\u53ef\u80fd\u662f\u903b\u8f91\u7684\u539f\u56e0\uff0c\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u662fDebug\u4e0b\u7684flutter\u3002\u6b64\u65f6\u53ef\u4ee5\u6784\u5efarelease\u4e0b\u7684apk\uff0c\u4e5f\u53ef\u4ee5\u5c06flutter\u5f3a\u5236\u4fee\u6539\u4e3arelease\u6a21\u5f0f\u5982\u4e0b: flutter in android always release iOS\u90e8\u5206 \u76f8\u5173\u5185\u5bb9\u5305\u62ec:Flutter.framework\uff0cgen_snapshot\uff0cxcode_backend.sh\uff0cflutter(flutter_tools)\u3002 1.\u4f18\u5316\u6784\u5efa\u8fc7\u7a0b\u4e2d\u53cd\u590d\u66ff\u6362Flutter.framework\u5bfc\u81f4\u7684\u91cd\u65b0\u7f16\u8bd1 \u6b64\u90e8\u5206\u903b\u8f91\u5c5e\u4e8e\u6784\u5efa\u76f8\u5173\uff0c\u4f4d\u4e8excode_backend.sh\u4e2d\uff0cFlutter\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u6b21\u83b7\u53d6\u5230\u6b63\u786e\u7684Flutter.framework,\u6bcf\u6b21\u90fd\u4f1a\u57fa\u4e8e\u914d\u7f6e(\u89c1Generated.xcconfig\u914d\u7f6e)\u67e5\u627e\u548c\u66ff\u6362Flutter.framework\uff0c\u4f46\u8fd9\u4e5f\u5bfc\u81f4\u4e86\u5de5\u7a0b\u4e2d\u5bf9\u6b64Framework\u6709\u4f9d\u8d56\u90e8\u5206\u4ee3\u7801\u7684\u91cd\u65b0\u7f16\u8bd1\uff0c\u4fee\u6539\u5982\u4e0b: xcode_backend not always replace Flutter 2.\u5982\u4f55\u5728iOS\u5de5\u7a0bDebug\u6a21\u5f0f\u4e0b\u4f7f\u7528release\u6a21\u5f0f\u7684flutter \u53ea\u9700\u8981\u5c06Generated.xcconfig\u4e2d\u7684FLUTTER_BUILD_MODE\u4fee\u6539\u4e3arelease\uff0cFLUTTER_FRAMEWORK_DIR\u4fee\u6539\u4e3arelease\u5bf9\u5e94\u7684\u8def\u5f84\u5373\u53ef\u3002 3.armv7\u7684\u652f\u6301 \u539f\u59cb\u6587\u7ae0\u8bf7\u53c2\u89c1: https://github.com/flutter/engine/wiki/iOS-Builds-Supporting-ARMv7 \u4e8b\u5b9e\u4e0aflutter\u672c\u8eab\u662f\u652f\u6301iOS\u4e0b\u7684armv7\u7684\uff0c\u4f46\u76ee\u524d\u5e76\u672a\u63d0\u4f9b\u5b98\u65b9\u652f\u6301\uff0c\u9700\u8981\u81ea\u884c\u4fee\u6539\u76f8\u5173\u903b\u8f91\uff0c\u5177\u4f53\u5982\u4e0b: a.\u9ed8\u8ba4\u7684\u903b\u8f91\u53ef\u4ee5\u751f\u6210Flutter.framework(arm64) b.\u4fee\u6539flutter\u4ee5\u4f7f\u5f97flutter_tools\u53ef\u4ee5\u6bcf\u6b21\u91cd\u65b0\u6784\u5efa\uff0c\u4fee\u6539build_aot.dart\u548cmac.dart\uff0c\u5c06\u76f8\u5173\u9488\u5bf9iOS\u7684arm64\u4fee\u6539\u4e3aarmv7,\u4fee\u6539gen_snapshot\u4e3ai386\u67b6\u6784\u3002 \u5176\u4e2di386\u67b6\u6784\u4e0b\u7684gen_snapshot\u53ef\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u751f\u6210: ./flutter/tools/gn --runtime-mode=debug --ios --ios-cpu=arm ninja -C out/ios_debug_arm \u8fd9\u91cc\u6709\u4e00\u4e2a\u9690\u542b\u903b\u8f91: \u6784\u5efagen_snapshot\u7684CPU\u76f8\u5173\u9884\u5b9a\u4e49\u5b8f( x86_64 /__i386\u7b49)\uff0c\u76ee\u6807gen_snapshot\u7684arch\uff0c\u6700\u7ec8\u7684App.framework\u7684\u67b6\u6784\u6574\u4f53\u4e0a\u8981\u4fdd\u6301\u4e00\u81f4\u3002\u5373x86_64- x86_64- arm64\u6216\u8005i386- i386- armv7\u3002 c.\u5728iPhone4S\u4e0a\uff0c\u4f1a\u53d1\u751f\u56e0gen_snapshot\u751f\u6210\u4e0d\u88ab\u652f\u6301\u7684SDIV\u6307\u4ee4\u800c\u9020\u6210EXC_BAD_INSTRUCTION(EXC_ARM_UNDEFINED)\u9519\u8bef\uff0c\u53ef\u901a\u8fc7\u7ed9gen_snapshot\u6dfb\u52a0\u53c2\u6570--no-use-integer-division\u5b9e\u73b0(\u4f4d\u4e8ebuild_aot.dart)\u3002\u5176\u80cc\u540e\u7684\u903b\u8f91\u5982\u4e0b\u56fe\u6240\u793a: iPhone 4s crash logic d.\u57fa\u4e8ea\u548cb\u751f\u6210\u7684Flutter.framework,\u5c06\u5176lipo create\u751f\u6210\u540c\u65f6\u652f\u6301armv7\u548carm64\u7684Flutter.framework\u3002 e.\u4fee\u6539Flutter.framework\u4e0b\u7684Info.plist\uff0c\u79fb\u9664 UIRequiredDeviceCapabilities arm64 \u540c\u7406\uff0c\u5bf9\u4e8eApp.framework\u4e5f\u8981\u4f5c\u6b64\u64cd\u4f5c\uff0c\u4ee5\u514d\u4e0a\u67b6\u540e\u4f1a\u53d7\u5230App Thining\u7684\u5f71\u54cd\u3002 flutter_tools\u7684\u8c03\u8bd5 \u4f8b\u5982\u6211\u4eec\u60f3\u4e86\u89e3flutter\u5728\u6784\u5efadebug\u6a21\u5f0f\u4e0b\u7684apk\u7684\u65f6\u5019\uff0c\u5177\u4f53\u6267\u884c\u7684\u903b\u8f91\u5982\u4f55\uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u601d\u8def\u8d70: a.\u4e86\u89e3flutter_tools\u7684\u547d\u4ee4\u884c\u53c2\u6570 Flutter tools print args b.\u4ee5dart\u5de5\u7a0b\u5f62\u5f0f\u6253\u5f00packages/flutter_tools\uff0c\u57fa\u4e8e\u83b7\u5f97\u7684\u53c2\u6570\u4fee\u6539flutter_tools.dart\uff0c\u8bbe\u7f6e\u547d\u4ee4\u884cdart app\u5373\u53ef\u5f00\u59cb\u8c03\u8bd5\u3002 edit flutter_tools dart and debug it with given args \u5b9a\u5236engine\u4e0e\u8c03\u8bd5 \u5047\u8bbe\u6211\u4eec\u5728flutter beta v0.3.1\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9a\u5236\u4e0e\u4e1a\u52a1\u5f00\u53d1\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7a33\u5b9a\uff0c\u4e00\u5b9a\u5468\u671f\u5185\u5e76\u4e0d\u5347\u7ea7SDK\uff0c\u800c\u6b64\u65f6\uff0cflutter\u5728master\u4e0a\u4fee\u6539\u4e86\u67d0\u4e2av0.3.1\u4e0a\u5c31\u6709\u7684bug\uff0c\u8bb0\u4e3afix_bug_commit\u3002\u5982\u4f55\u624d\u80fd\u8ddf\u8e2a\u548c\u7ba1\u7406\u8fd9\u79cd\u60c5\u5f62\u5462\uff1f 1.flutter beta v0.3.1\u6307\u5b9a\u4e86\u5176\u5bf9\u5e94\u7684engine commit\u4e3a:09d05a389\uff0c\u89c1flutter/bin/internal/engine.version\u3002 2.\u83b7\u53d6engine\u4ee3\u7801 3.\u56e0\u4e3a2\u4e2d\u62ff\u5230\u7684\u662fmaster\u4ee3\u7801\uff0c\u800c\u6211\u4eec\u9700\u8981\u7684\u662f\u7279\u5b9acommit(09d05a389)\u5bf9\u5e94\u7684\u4ee3\u7801\u5e93\uff0c\u56e0\u800c\u4ece\u6b64commit\u62c9\u51fa\u65b0\u5206\u652f:custom_beta_v0.3.1\u3002 4.\u57fa\u4e8ecustom_beta_v0.3.1(commit:09d05a389)\uff0c\u6267\u884cgclient sync\uff0c\u5373\u53ef\u62ff\u5230\u5bf9\u5e94flutter beta v0.3.1\u7684\u6240\u6709engine\u4ee3\u7801\u3002 5.\u4f7f\u7528git cherry-pick fix_bug_commit\u5c06master\u7684\u4fee\u6539\u540c\u6b65\u5230custom_beta_v0.3.1\uff0c\u5982\u679c\u4fee\u6539\u6709\u5f88\u591a\u5bf9\u6700\u65b0\u4fee\u6539\u7684\u4f9d\u8d56\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3002 6.\u5bf9\u4e8eiOS\u76f8\u5173\u7684\u4fee\u6539\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: ./flutter/tools/gn --runtime-mode=debug --ios --ios-cpu=arm ninja -C out/ios_debug_arm ./flutter/tools/gn --runtime-mode=release --ios --ios-cpu=arm ninja -C out/ios_release_arm ./flutter/tools/gn --runtime-mode=profile --ios --ios-cpu=arm ninja -C out/ios_profile_arm ./flutter/tools/gn --runtime-mode=debug --ios --ios-cpu=arm64 ninja -C out/ios_debug ./flutter/tools/gn --runtime-mode=release --ios --ios-cpu=arm64 ninja -C out/ios_release ./flutter/tools/gn --runtime-mode=profile --ios --ios-cpu=arm64 ninja -C out/ios_profile \u5373\u53ef\u751f\u6210\u9488\u5bf9iOS\u7684arm/arm64 debug/release/profile\u7684\u4ea7\u7269\u3002\u53ef\u7528\u6784\u5efa\u4ea7\u7269\u66ff\u6362flutter/bin/cache/artifacts/engine/ios*\u4e0b\u7684Flutter.framework\u548cgen_snapshot\u3002 \u5982\u679c\u9700\u8981\u8c03\u8bd5Flutter.framework\u6e90\u4ee3\u7801\uff0c\u6784\u5efa\u7684\u65f6\u5019\u547d\u4ee4\u5982\u4e0b: ./flutter/tools/gn --runtime-mode=debug --unoptimized --ios --ios-cpu=arm64 ninja -C out/ios_debug_unopt \u7528\u751f\u6210\u4ea7\u7269\u66ff\u6362\u6389flutter\u4e2d\u7684Flutter.framework\u548cgen_snapshot\uff0c\u5373\u53ef\u8c03\u8bd5engine\u6e90\u4ee3\u7801\u3002 7.\u5bf9\u4e8eAndroid\u76f8\u5173\u7684\u4fee\u6539\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801: ./flutter/tools/gn --runtime-mode=debug --android --android-cpu=arm ninja -C out/android_debug ./flutter/tools/gn --runtime-mode=release --android --android-cpu=arm ninja -C out/android_release ./flutter/tools/gn --runtime-mode=profile --android --android-cpu=arm ninja -C out/android_profile \u5373\u53ef\u751f\u6210\u9488\u5bf9Android\u7684arm debug/release/profile\u7684\u4ea7\u7269\u3002\u53ef\u7528\u6784\u5efa\u4ea7\u7269\u66ff\u6362flutter/bin/cache/artifacts/engine/android*\u4e0b\u7684gen_snapshot\u548cflutter.jar\u3002","title":"Debug\u6a21\u5f0f\u4e0b\u7684\u7f16\u8bd1"},{"location":"android/flutter/ComplieMode/#flutter_5","text":"2018\u5e7408\u670802\u65e5 16:07:19 H.A.N \u9605\u8bfb\u6570\uff1a1835\u66f4\u591a \u6240\u5c5e\u4e13\u680f\uff1a Flutter\u5b66\u4e60\u5b9e\u8df5\u6307\u5357 \u7248\u6743\u58f0\u660e\uff1a\u672c\u6587\u4e3a\u535a\u4e3b\u539f\u521b\u6587\u7ae0\uff0c\u672a\u7ecf\u535a\u4e3b\u5141\u8bb8\u4e0d\u5f97\u8f6c\u8f7d\u3002 https://blog.csdn.net/u010960265/article/details/81361711 \u4f7f\u7528 Flutter \u6784\u5efa\u8fc7 App \u7684\u4eba\u4e00\u5b9a\u6709\u4e00\u4e2a\u56f0\u60d1\uff0c\u5c31\u662f Flutter \u7f16\u8bd1\u51fa\u7684\u4ea7\u7269\u5230\u5e95\u662f\u4ec0\u4e48\u73a9\u610f\u3002\u6709\u65f6\u5019\u5206\u4e3a\u51e0\u4e2a\u6587\u4ef6\uff0c\u6709\u65f6\u5019\u662f\u4e00\u4e2a\u52a8\u6001\u5e93\uff0c\u771f\u7684\u53eb\u4eba\u6478\u4e0d\u7740\u5934\u8111\u3002 \u672c\u6587\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b Flutter \u7684\u7f16\u8bd1\u6a21\u5f0f\u3002 \u7f16\u8bd1\u6a21\u5f0f\u7684\u5206\u7c7b \u7f16\u7a0b\u8bed\u8a00\u8981\u8fbe\u5230\u53ef\u8fd0\u884c\u7684\u76ee\u7684\u9700\u8981\u7ecf\u8fc7\u7f16\u8bd1\uff0c\u4e00\u822c\u5730\u6765\u8bf4\uff0c\u7f16\u8bd1\u6a21\u5f0f\u5206\u4e3a\u4e24\u7c7b\uff1aJIT \u548c AOT\u3002 JIT JIT \u5168\u79f0 Just In Time (\u5373\u65f6\u7f16\u8bd1\uff09\uff0c\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f v8\uff0c\u5b83\u53ef\u4ee5\u5373\u65f6\u7f16\u8bd1\u5e76\u8fd0\u884c JavaScript\u3002\u6240\u4ee5\u4f60\u53ea\u9700\u8981\u8f93\u5165\u6e90\u4ee3\u7801\u5b57\u7b26\u4e32\uff0cv8 \u5c31\u53ef\u4ee5\u5e2e\u4f60\u7f16\u8bd1\u5e76\u8fd0\u884c\u4ee3\u7801\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u652f\u6301 JIT \u7684\u8bed\u8a00\u4e00\u822c\u80fd\u591f\u652f\u6301\u81ea\u7701\u51fd\u6570\uff08eval\uff09\uff0c\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u6267\u884c\u4ee3\u7801\u3002 JIT \u6a21\u5f0f\u7684\u4f18\u52bf\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u53ef\u4ee5\u52a8\u6001\u4e0b\u53d1\u548c\u6267\u884c\u4ee3\u7801\uff0c\u800c\u4e0d\u7528\u7ba1\u7528\u6237\u7684\u673a\u5668\u662f\u4ec0\u4e48\u67b6\u6784\uff0c\u4e3a\u5e94\u7528\u7684\u7528\u6237\u63d0\u4f9b\u4e30\u5bcc\u800c\u52a8\u6001\u5730\u5185\u5bb9\u3002 \u4f46 JIT \u7684\u52a3\u52bf\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u5927\u91cf\u5b57\u7b26\u4e32\u7684\u4ee3\u7801\u5f88\u5bb9\u6613\u8ba9 JIT \u7f16\u8bd1\u5668\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u548c\u5185\u5b58\u8fdb\u884c\u7f16\u8bd1\uff0c\u7ed9\u7528\u6237\u5e26\u6765\u7684\u76f4\u63a5\u611f\u53d7\u5c31\u662f\u5e94\u7528\u542f\u52a8\u6162\u3002 AOT AOT \u5168\u79f0 Ahead Of Time\uff08\u4e8b\u524d\u7f16\u8bd1\uff09\uff0c\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f C/C++\uff0cLLVM \u6216 GCC \u901a\u8fc7\u7f16\u8bd1\u5e76\u751f\u6210 C/C++ \u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u7136\u540e\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u901a\u8fc7\u7528\u6237\u5b89\u88c5\u5e76\u53d6\u5f97\u6267\u884c\u6743\u9650\u540e\u624d\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b\u52a0\u8f7d\u6267\u884c\u3002 AOT \u7684\u4f18\u52bf\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4e8b\u5148\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u52a0\u8f7d\u548c\u6267\u884c\u7684\u901f\u5ea6\u90fd\u4f1a\u975e\u5e38\u5feb\u3002\uff08\u6240\u4ee5\u7f16\u7a0b\u8bed\u8a00\u901f\u5ea6\u6392\u884c\u699c\u4e0a\u524d\u5217\u90fd\u662f AOT \u7f16\u8bd1\u7c7b\u8bed\u8a00\uff09\u8fd9\u6837\u7684\u901f\u5ea6\u53ef\u4ee5\u5728\u5bc6\u96c6\u8ba1\u7b97\u573a\u666f\u4e0b\u7ed9\u7528\u6237\u5e26\u6765\u975e\u5e38\u597d\u7684\u4f53\u9a8c\uff0c\u6bd4\u5982\u5927\u578b\u6e38\u620f\u7684\u5f15\u64ce\u6e32\u67d3\u548c\u903b\u8f91\u6267\u884c\u3002 \u4f46\u662f AOT \u7684\u52a3\u52bf\u4e5f\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u7f16\u8bd1\u9700\u8981\u533a\u5206\u7528\u6237\u673a\u5668\u7684\u67b6\u6784\uff0c\u751f\u6210\u4e0d\u540c\u67b6\u6784\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002\u9664\u4e86\u67b6\u6784\uff0c\u4e8c\u8fdb\u5236\u4ee3\u7801\u672c\u8eab\u4e5f\u4f1a\u8ba9\u7528\u6237\u4e0b\u8f7d\u7684\u5b89\u88c5\u5305\u6bd4\u8f83\u5927\u3002\u4e8c\u8fdb\u5236\u4ee3\u7801\u4e00\u822c\u9700\u8981\u53d6\u5f97\u6267\u884c\u6743\u9650\u624d\u53ef\u4ee5\u6267\u884c\uff0c\u6240\u4ee5\u65e0\u6cd5\u5728\u6743\u9650\u6bd4\u8f83\u4e25\u683c\u7684\u7cfb\u7edf\u4e2d\u8fdb\u884c\u52a8\u6001\u66f4\u65b0\uff08\u5982 iOS\uff09\u3002 Dart\u7684\u7f16\u8bd1\u6a21\u5f0f Flutter \u4f7f\u7528 Dart \u4f5c\u4e3a\u7f16\u7a0b\u8bed\u8a00\uff0c\u81ea\u7136\u5176\u7f16\u8bd1\u6a21\u5f0f\u4e5f\u8131\u79bb\u4e0d\u4e86 Dart \u7684\u5e72\u7cfb\u3002\u9996\u5148\u6211\u4eec\u9700\u8981\u4e86\u89e3\u4e00\u4e0b Dart \u6240\u652f\u6301\u7684\u7f16\u8bd1\u6a21\u5f0f\u3002 Script\uff1a\u6700\u666e\u901a\u7684 JIT \u6a21\u5f0f\uff0c\u5728 PC \u547d\u4ee4\u884c\u8c03\u7528 Dart VM \u6267\u884c Dart \u6e90\u4ee3\u7801\u6587\u4ef6\u5373\u662f\u8fd9\u79cd\u6a21\u5f0f\uff1b Script Snapshot\uff1aJIT \u6a21\u5f0f\uff0c\u548c\u4e0a\u4e00\u4e2a\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u8f7d\u5165\u7684\u662f\u5df2\u7ecf token \u5316\u7684 Dart \u6e90\u4ee3\u7801\uff0c\u63d0\u524d\u6267\u884c\u4e86\u4e0a\u4e00\u6b65\u7684 lexer \u6b65\u9aa4\uff1b Application Snapshot\uff1aJIT \u6a21\u5f0f\uff0c\u8fd9\u79cd\u6a21\u5f0f\u6765\u6e90\u4e8e Dart VM \u76f4\u63a5\u8f7d\u5165\u6e90\u7801\u540e dump \u51fa\u6570\u636e\u3002Dart VM \u901a\u8fc7\u8fd9\u79cd\u6570\u636e\u542f\u52a8\u4f1a\u66f4\u5feb\u3002\u4e0d\u8fc7\u503c\u5f97\u4e00\u63d0\u7684\u662f\u8fd9\u79cd\u6a21\u5f0f\u662f\u533a\u5206\u67b6\u6784\u7684\uff0c\u5728 x64 \u4e0a\u751f\u6210\u7684\u6570\u636e\u4e0d\u53ef\u4ee5\u7ed9 arm \u4f7f\u7528; AOT\uff1aAOT\u6a21\u5f0f\uff0c\u76f4\u63a5\u5c06 Dart \u6e90\u7801\u7f16\u8bd1\u51fa .S \u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u6c47\u7f16\u5668\u751f\u6210\u5bf9\u5e94\u67b6\u6784\u7684\u4ee3\u7801\u3002 \u603b\u7ed3\u4e00\u4e0b\u521a\u624d\u7684\u5217\u8868\uff0c\u53ef\u4ee5\u53d1\u73b0\uff1a \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 Flutter\u7684\u7f16\u8bd1\u6a21\u5f0f Flutter \u5b8c\u5168\u91c7\u7528\u4e86 Dart\uff0c\u6309\u9053\u7406\u6765\u8bf4\u7f16\u8bd1\u6a21\u5f0f\u4e00\u81f4\u624d\u662f\uff0c\u4f46\u662f\u4e8b\u5b9e\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u7531\u4e8e Android \u548c iOS\u5e73\u53f0\u7684\u751f\u6001\u5dee\u5f02\uff0cFlutter \u4e5f\u884d\u751f\u51fa\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u7f16\u8bd1\u6a21\u5f0f\u3002 Script\uff1a\u540c Dart Script \u6a21\u5f0f\u4e00\u81f4\uff0c\u867d\u7136 Flutter \u652f\u6301\uff0c\u4f46\u6682\u672a\u770b\u5230\u4f7f\u7528\uff0c\u6bd5\u7adf\u5f71\u54cd\u542f\u52a8\u901f\u5ea6\uff1b Script Snapshot\uff1a\u540c Dart Script Snapshot \u4e00\u81f4\uff0c\u540c\u6837\u652f\u6301\u4f46\u672a\u4f7f\u7528\uff0cFlutter \u6709\u5927\u91cf\u7684\u89c6\u56fe\u6e32\u67d3\u903b\u8f91\uff0c\u7eaf JIT \u6a21\u5f0f\u5f71\u54cd\u6267\u884c\u901f\u5ea6\uff1b Kernel Snapshot\uff1aDart \u7684 bytecode\u6a21\u5f0f\uff0c\u4e0e Application Snapshot \u4e0d\u540c\uff0cbytecode \u6a21\u5f0f\u662f\u4e0d\u533a\u5206\u67b6\u6784\u7684\u3002Kernel Snapshot \u5728 Flutter \u9879\u76ee\u5185\u4e5f\u53eb Core Snapshot\u3002bytecode\u6a21\u5f0f\u53ef\u4ee5\u5f52\u7c7b\u4e3a AOT \u7f16\u8bd1\uff1b Core JIT\uff1aDart \u7684\u4e00\u79cd\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff0c\u5c06\u6307\u4ee4\u4ee3\u7801\u548c heap \u6570\u636e\u6253\u5305\u6210\u6587\u4ef6\uff0c\u7136\u540e\u5728 VM \u548c isolate \u542f\u52a8\u65f6\u8f7d\u5165\uff0c\u76f4\u63a5\u6807\u8bb0\u5185\u5b58\u53ef\u6267\u884c\uff0c\u53ef\u4ee5\u8bf4\u8fd9\u662f\u4e00\u79cd AOT \u6a21\u5f0f\u3002Core JIT \u4e5f\u88ab\u53eb\u505a AOTBlob\uff1b AOT Assembly: \u5373 Dart \u7684 AOT \u6a21\u5f0f\u3002\u76f4\u63a5\u751f\u6210\u6c47\u7f16\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u7531\u5404\u5e73\u53f0\u81ea\u884c\u6c47\u7f16\u3002 \u53ef\u4ee5\u770b\u51fa\u6765\uff0cFlutter \u5c06 Dart \u7684\u7f16\u8bd1\u6a21\u5f0f\u590d\u6742\u5316\u4e86\uff0c\u591a\u4e86\u4e0d\u5c11\u6982\u5ff5\uff0c\u8981\u4e00\u4e0b\u53d9\u8ff0\u6e05\u695a\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7740\u91cd\u4ece Flutter \u5e94\u7528\u5f00\u53d1\u7684\u5404\u4e2a\u9636\u6bb5\u6765\u89e3\u8bfb\u3002 \u5f00\u53d1\u9636\u6bb5\u7684\u7f16\u8bd1\u6a21\u5f0f \u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u6211\u4eec\u9700\u8981 Flutter \u7684 Hot Reload \u548c Hot Restart \u529f\u80fd\uff0c\u65b9\u4fbf UI \u5feb\u901f\u6210\u578b\u3002\u540c\u65f6\uff0c\u6846\u67b6\u5c42\u4e5f\u9700\u8981\u6bd4\u8f83\u9ad8\u7684\u6027\u80fd\u6765\u8fdb\u884c\u89c6\u56fe\u6e32\u67d3\u5c55\u73b0\u3002\u56e0\u6b64\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0cFlutter \u4f7f\u7528\u4e86 Kernel Snapshot \u6a21\u5f0f\u7f16\u8bd1\u3002 \u5728\u6253\u5305\u4ea7\u7269\u4e2d\uff0c\u4f60\u5c06\u53d1\u73b0\u51e0\u6837\u4e1c\u897f\uff1a isolate_snapshot_data\uff1a\u7528\u4e8e\u52a0\u901f isolate \u542f\u52a8\uff0c\u4e1a\u52a1\u65e0\u5173\u4ee3\u7801\uff0c\u56fa\u5b9a\uff0c\u4ec5\u548c flutter engine \u7248\u672c\u6709\u5173\uff1b platform.dill\uff1a\u548c Dart VM \u76f8\u5173\u7684 kernel \u4ee3\u7801\uff0c\u4ec5\u548c Dart \u7248\u672c\u4ee5\u53ca engine \u7f16\u8bd1\u7248\u672c\u6709\u5173\u3002\u56fa\u5b9a\uff0c\u4e1a\u52a1\u65e0\u5173\u4ee3\u7801\uff1b vm_snapshot_data: \u7528\u4e8e\u52a0\u901f Dart VM \u542f\u52a8\u7684\u4ea7\u7269\uff0c\u4e1a\u52a1\u65e0\u5173\u4ee3\u7801\uff0c\u4ec5\u548c flutter engine \u7248\u672c\u6709\u5173\uff1b kernel_blob.bin\uff1a\u4e1a\u52a1\u4ee3\u7801\u4ea7\u7269 \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \u751f\u4ea7\u9636\u6bb5\u7684\u7f16\u8bd1\u6a21\u5f0f \u5728\u751f\u4ea7\u9636\u6bb5\uff0c\u5e94\u7528\u9700\u8981\u7684\u662f\u975e\u5e38\u5feb\u7684\u901f\u5ea6\uff0c\u6240\u4ee5 Android \u548c iOS target \u6beb\u65e0\u610f\u5916\u5730\u90fd\u9009\u62e9\u4e86 AOT \u6253\u5305\u3002\u4e0d\u8fc7\u7531\u4e8e\u5e73\u53f0\u7279\u6027\u4e0d\u540c\uff0c\u6253\u5305\u6a21\u5f0f\u4e5f\u662f\u5929\u58e4\u4e4b\u522b\u3002 \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \u9996\u5148\u6211\u4eec\u5f88\u5bb9\u6613\u8ba4\u8bc6\u5230 iOS \u5e73\u53f0\u4e0a\u505a\u6cd5\u7684\u539f\u56e0\uff1aApp Store \u5ba1\u6838\u6761\u4f8b\u4e0d\u5141\u8bb8\u52a8\u6001\u4e0b\u53d1\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u4ee3\u7801\u3002 \u6240\u4ee5\u5728 iOS \u4e0a\uff0c\u9664\u4e86 JavaScript\uff0c\u5176\u4ed6\u8bed\u8a00\u8fd0\u884c\u65f6\u7684\u5b9e\u73b0\u90fd\u9009\u62e9\u4e86 AOT\uff08\u6bd4\u5982 OpenJDK \u5728 iOS \u5b9e\u73b0\u5c31\u662f AOT\uff09\u3002 \u5728 Android \u4e0a\uff0cFlutter \u7684\u505a\u6cd5\u6709\u70b9\u610f\u601d\uff1a\u652f\u6301\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u8def\u5b50\u3002 Core JIT \u7684\u6253\u5305\u4ea7\u7269\u6709 4 \u4e2a\uff1aisolate_snapshot_data\u3001vm_snapshot_data\u3001isolate_snapshot_instr\u3001vm_snapshot_instr\u3002\u6211\u4eec\u4e0d\u8ba4\u8bc6\u7684\u4ea7\u7269\u53ea\u6709 2 \u4e2a\uff1aisolate_snapshot_instr \u548c vm_snapshot_instr\uff0c\u5176\u5b9e\u5b83\u4fe9\u4ee3\u8868\u7740 VM \u548c isolate \u542f\u52a8\u540e\u6240\u627f\u8f7d\u7684\u6307\u4ee4\u7b49\u6570\u636e\u3002\u5728\u8f7d\u5165\u540e\uff0c\u76f4\u63a5\u5c06\u8be5\u5757\u5185\u5b58\u6267\u884c\u5373\u53ef\u3002 Android \u7684 AOT Assembly \u6253\u5305\u65b9\u5f0f\u5f88\u5bb9\u6613\u8ba9\u4eba\u60f3\u5230\u9700\u8981\u652f\u6301\u591a\u67b6\u6784\uff0c\u65e0\u7591\u589e\u5927\u4e86\u4ee3\u7801\u5305\uff0c\u5e76\u4e14\u8be5\u5904\u4ee3\u7801\u9700\u8981\u4ece JNI \u8c03\u7528\uff0c\u8fdc\u4e0d\u5982 Core JIT \u7684 Java API \u65b9\u4fbf\u3002\u6240\u4ee5 Android \u4e0a\u9ed8\u8ba4\u4f7f\u7528 Core JIT \u6253\u5305\uff0c\u800c\u4e0d\u662f AOT Assembly\u3002 Flutter Engine \u5bf9\u7f16\u8bd1\u6a21\u5f0f\u7684\u652f\u6301 \u5728\u6211\u7684\u4e0a\u7bc7\u6587\u7ae0\uff1aFlutter\u539f\u7406\u7b80\u89e3 \u4e2d\u63d0\u5230\uff0cEngine \u627f\u8f7d\u4e86 Dart \u8fd0\u884c\u65f6\uff0c\u6beb\u65e0\u7591\u95ee Engine \u9700\u8981\u548c\u6253\u5305\u51fa\u6765\u7684\u4ee3\u7801\u5bf9\u7684\u4e0a\u53f7\u624d\u884c\u3002 \u5728 Engine \u7684\u7f16\u8bd1\u6a21\u5f0f\u4e2d\uff0cFlutter \u662f\u8fd9\u6837\u9009\u62e9\u7684\uff1a \u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0 \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cFlutter \u7684\u7f16\u8bd1\u6a21\u5f0f\u662f\u5b8c\u5168\u6839\u636e Engine \u7684\u652f\u6301\u5ea6\u6765\u8bbe\u8ba1\u7684\u3002","title":"Flutter \u7684\u4e24\u79cd\u7f16\u8bd1\u6a21\u5f0f"},{"location":"android/flutter/ComplieMode/#_2","text":"Flutter \u662f\u4e00\u79cd\u9ad8\u6027\u80fd\u7684\u3001\u53ef\u8de8\u5e73\u53f0\u7684\u3001\u52a8\u6001\u5316\u5e94\u7528\u5f00\u53d1\u65b9\u6848\u3002 \u5728 iOS \u548c Android \u5e73\u53f0\u4e0a\uff0c\u52a8\u6001\u5316\u5b8c\u5168\u53ef\u7531 Kernel Snapshot \u6253\u5305\u5b9e\u73b0\uff0c\u5e76\u4e14\u4ea7\u7269\u662f\u4e00\u81f4\u901a\u7528\u7684\u3002\u4e0d\u8fc7\u76ee\u524d\u901a\u8fc7\u6253\u5305\u5de5\u5177\u8fdb\u884c\u4e86\u9609\u5272\uff0c\u53ea\u80fd\u751f\u6210 debug \u4ea7\u7269\u3002 \u5e76\u4e14\u5982\u679c\u4e0d\u9700\u8981\u52a8\u6001\u5316\uff0c\u540c\u6837\u53ef\u4ee5\u6253\u5305\u51fa\u62e5\u6709\u66f4\u9ad8\u6267\u884c\u6027\u80fd\u7684\u4e8c\u8fdb\u5236\u5e93\u6587\u4ef6\u4f7f\u7528\u3002\u8fd9\u4e2a\u7279\u6027\u76ee\u524d\u5c31\u5df2\u7ecf\u652f\u6301\uff0c\u6709\u4e86\u7406\u8bba\u7684\u652f\u6301\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7740\u624b\u505a\u6539\u9020\u7684\u4e8b\u4e86\u3002","title":"\u7ed3\u8bba"},{"location":"android/flutter/DartVM/","text":"\u521b\u5efa\u4e00\u4e2aDartVM\u4f5c\u4e3aroot ioslate \u4f5c\u4e3awindow\u7684\b\u5173\u8054\u64cd\u4f5c: auto vm = blink::DartVM::ForProcess(settings); //1. \u8bbe\u7f6eDartSnapshot\u7684\u76f8\u5173\u8fd0\u884c\u53c2\u6570 //2. \u542f\u52a8DartVM\u865a\u62df\u673a fml :: RefPtr DartVM DartVM :: ForProcess ( Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) { std :: lock_guard std :: mutex lock ( gVMMutex ); std :: call_once ( gVMInitialization , [ settings , // vm_snapshot , // isolate_snapshot , // shared_snapshot // ]() mutable { if ( ! vm_snapshot ) { vm_snapshot = DartSnapshot :: VMSnapshotFromSettings ( settings ); } if ( ! ( vm_snapshot vm_snapshot - IsValid ())) { FML_LOG ( ERROR ) VM snapshot must be valid. ; return ; } if ( ! isolate_snapshot ) { isolate_snapshot = DartSnapshot :: IsolateSnapshotFromSettings ( settings ); } if ( ! ( isolate_snapshot isolate_snapshot - IsValid ())) { FML_LOG ( ERROR ) Isolate snapshot must be valid. ; return ; } if ( ! shared_snapshot ) { shared_snapshot = DartSnapshot :: Empty (); } // \u865a\u62df\u673a\u7684\u521b\u5efa gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); }); return gVM ; } \b\u8c03\u7528 MakeRefCounted \u5bf9\u865a\u62df\u673a\u5f15\u7528\u7684\u7ba1\u7406,\u8c03\u7528DartVM\u6784\u9020\u51fd\u6570 engine/src/flutter/runtime/dart_vm.cc // \u865a\u62df\u673a\u7684\u521b\u5efa gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); // 1.\u6784\u9020\u65b9\u6cd5\u51fa\u5165ioslate\u76f8\u5173\u7684\u53c2\u6570\uff0csetting\u4e2d\u7684\u914d\u7f6e\u53c2\u6570 // 2.\u5224\u65ad\u542f\u52a8\u7684DartVM\u6a21\u5f0f // 3.\u521d\u59cb\u5316FlutterUI\u76f8\u5173\u7684\u7c7b DartUI::InitForGlobal(); UI\u76f8\u5173\u7684\u6587\u4ef6engine/src/flutter/lib/ui/dart_ui.gni\uff0c/engine/src/flutter/lib/ui/ui.dart // 4.\u771f\u6b63\u521d\u59cb\u5316\u521d\u59cb\u5316DartVM:engine/src/third_party/dart/runtime/include/dart_api.h DartVM\u64cd\u4f5c\u63a5\u53e3 // char* init_error = Dart_Initialize( params); // 5.\u6dfb\u52a0\u865a\u62df\u673a\u56de\u8c03 // 6.// \u6dfb\u52a0\u52a0\u8f7d\u7684\u7c7b\u5e93\u8d44\u6e90\u5230Kernel\u4e2d,\u914d\u7f6e\u6587\u4ef6engine/src/flutter/common/settings.h DartVM :: DartVM ( const Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) : settings_ ( settings ), vm_snapshot_ ( std :: move ( vm_snapshot )), isolate_snapshot_ ( std :: move ( isolate_snapshot )), shared_snapshot_ ( std :: move ( shared_snapshot )), weak_factory_ ( this ) { TRACE_EVENT0 ( flutter , DartVMInitializer ); FML_DLOG ( INFO ) Attempting Dart VM launch for mode: ( IsRunningPrecompiledCode () ? AOT : Interpreter ); { TRACE_EVENT0 ( flutter , dart::bin::BootstrapDartIo ); dart :: bin :: BootstrapDartIo (); if ( ! settings . temp_directory_path . empty ()) { dart :: bin :: SetSystemTempDirectory ( settings . temp_directory_path . c_str ()); } } std :: vector const char * args ; // Instruct the VM to ignore unrecognized flags. // There is a lot of diversity in a lot of combinations when it // comes to the arguments the VM supports. And, if the VM comes across a flag // it does not recognize, it exits immediately. args . push_back ( --ignore-unrecognized-flags ); for ( auto * const profiler_flag : ProfilingFlags ( settings . enable_dart_profiling )) { args . push_back ( profiler_flag ); } PushBackAll ( args , kDartLanguageArgs , arraysize ( kDartLanguageArgs )); if ( IsRunningPrecompiledCode ()) { PushBackAll ( args , kDartPrecompilationArgs , arraysize ( kDartPrecompilationArgs )); } // Enable Dart assertions if we are not running precompiled code. We run non- // precompiled code only in the debug product mode. bool enable_asserts = ! settings . disable_dart_asserts ; #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DYNAMIC_PROFILE || \\ FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DYNAMIC_RELEASE enable_asserts = false ; #endif #if !OS_FUCHSIA if ( IsRunningPrecompiledCode ()) { enable_asserts = false ; } #endif // !OS_FUCHSIA #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // Debug mode uses the JIT, disable code page write protection to avoid // memory page protection changes before and after every compilation. PushBackAll ( args , kDartWriteProtectCodeArgs , arraysize ( kDartWriteProtectCodeArgs )); #endif if ( enable_asserts ) { PushBackAll ( args , kDartAssertArgs , arraysize ( kDartAssertArgs )); } if ( settings . start_paused ) { PushBackAll ( args , kDartStartPausedArgs , arraysize ( kDartStartPausedArgs )); } if ( settings . endless_trace_buffer || settings . trace_startup ) { // If we are tracing startup, make sure the trace buffer is endless so we // don t lose early traces. PushBackAll ( args , kDartEndlessTraceBufferArgs , arraysize ( kDartEndlessTraceBufferArgs )); } if ( settings . trace_systrace ) { PushBackAll ( args , kDartSystraceTraceBufferArgs , arraysize ( kDartSystraceTraceBufferArgs )); PushBackAll ( args , kDartTraceStreamsArgs , arraysize ( kDartTraceStreamsArgs )); } if ( settings . trace_startup ) { PushBackAll ( args , kDartTraceStartupArgs , arraysize ( kDartTraceStartupArgs )); } #if defined(OS_FUCHSIA) PushBackAll ( args , kDartFuchsiaTraceArgs , arraysize ( kDartFuchsiaTraceArgs )); PushBackAll ( args , kDartTraceStreamsArgs , arraysize ( kDartTraceStreamsArgs )); #endif for ( size_t i = 0 ; i settings . dart_flags . size (); i ++ ) args . push_back ( settings . dart_flags [ i ]. c_str ()); char * flags_error = Dart_SetVMFlags ( args . size (), args . data ()); if ( flags_error ) { FML_LOG ( FATAL ) Error while setting Dart VM flags: flags_error ; :: free ( flags_error ); } // \u521d\u59cb\u5316FlutterUI\u76f8\u5173\u7684\u7c7b\u5e93 DartUI :: InitForGlobal (); Dart_SetFileModifiedCallback ( DartFileModifiedCallback ); // \u771f\u6b63\u5b9e\u73b0\u865a\u62df\u673a,\u8c03\u7528\u63a5\u53e3 { TRACE_EVENT0 ( flutter , Dart_Initialize ); Dart_InitializeParams params = {}; params . version = DART_INITIALIZE_PARAMS_CURRENT_VERSION ; params . vm_snapshot_data = vm_snapshot_ - GetData () - GetSnapshotPointer (); params . vm_snapshot_instructions = vm_snapshot_ - GetInstructionsIfPresent (); params . create = reinterpret_cast decltype ( params . create ) ( DartIsolate :: DartIsolateCreateCallback ); params . shutdown = reinterpret_cast decltype ( params . shutdown ) ( DartIsolate :: DartIsolateShutdownCallback ); params . cleanup = reinterpret_cast decltype ( params . cleanup ) ( DartIsolate :: DartIsolateCleanupCallback ); params . thread_exit = ThreadExitCallback ; params . get_service_assets = GetVMServiceAssetsArchiveCallback ; params . entropy_source = DartIO :: EntropySource ; // engine/src/third_party/dart/runtime/include/dart_api.h DartVM\u64cd\u4f5c\u63a5\u53e3 // \u771f\u6b63\u521d\u59cb\u5316DartVM char * init_error = Dart_Initialize ( params ); if ( init_error ) { FML_LOG ( FATAL ) Error while initializing the Dart VM: init_error ; :: free ( init_error ); } // Send the earliest available timestamp in the application lifecycle to // timeline. The difference between this timestamp and the time we render // the very first frame gives us a good idea about Flutter s startup time. // Use a duration event so about:tracing will consider this event when // deciding the earliest event to use as time 0. if ( blink :: engine_main_enter_ts != 0 ) { Dart_TimelineEvent ( FlutterEngineMainEnter , // label blink :: engine_main_enter_ts , // timestamp0 blink :: engine_main_enter_ts , // timestamp1_or_async_id Dart_Timeline_Event_Duration , // event type 0 , // argument_count nullptr , // argument_names nullptr // argument_values ); } } // Allow streaming of stdout and stderr by the Dart vm. Dart_SetServiceStreamCallbacks ( ServiceStreamListenCallback , ServiceStreamCancelCallback ); Dart_SetEmbedderInformationCallback ( EmbedderInformationCallback ); // \u6dfb\u52a0\u52a0\u8f7d\u7684\u7c7b\u5e93\u8d44\u6e90\u5230Kernel\u4e2d,\u914d\u7f6e\u6587\u4ef6engine/src/flutter/common/settings.h if ( settings . dart_library_sources_kernel != nullptr ) { std :: unique_ptr fml :: Mapping dart_library_sources = settings . dart_library_sources_kernel (); // Set sources for dart:* libraries for debugging. Dart_SetDartLibrarySourcesKernel ( dart_library_sources - GetMapping (), dart_library_sources - GetSize ()); } } DartVM\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528 DartUI::InitForGlobal(); ,\u521b\u5efa\u4e00\u4e2a\b\u7ba1\u7406FlutterUI\u76f8\u5173\u7684\u63a5\u53e3 /engine/src/flutter/lib/ui/dart_ui.cc // Dart\u5c42UI\u76f8\u5173\u7684\u64cd\u4f5c\u7c7b\u521d\u59cb\u5316\u5165\u53e3,\u63d0\u4f9bUI\u76f8\u5173\u8054\u7684API // \u521b\u5efa\u4e24\u4e2aDartLibraryNatives\uff0cDart\u8c03\u7528JNI\u76f8\u5173\u65b9\u6cd5 // 1.\u521b\u5efa\u4e00\u4e2a\u548cUI\u76f8\u5173\u7684DartLibraryNatives // 2.\u521b\u5efa\u4e00\u4e2a\u548cUI\u4e0d\u76f8\u5173\u7684DartLibraryNatives void DartUI :: InitForGlobal () { if ( ! g_natives ) { g_natives = new tonic :: DartLibraryNatives (); //engine/src/third_party/tonic/dart_library_natives.cc // \u6ce8\u518c\u753b\u7b14\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5 engine/src/flutter/lib/ui/painting Canvas :: RegisterNatives ( g_natives ); CanvasGradient :: RegisterNatives ( g_natives ); CanvasImage :: RegisterNatives ( g_natives ); CanvasPath :: RegisterNatives ( g_natives ); CanvasPathMeasure :: RegisterNatives ( g_natives ); Codec :: RegisterNatives ( g_natives ); // engine/src/flutter/lib/ui/dart_runtime_hooks.cc DartVM\u6784\u9020\u51fd\u6570 DartRuntimeHooks :: RegisterNatives ( g_natives ); // \u6ce8\u518c\u753b\u7b14\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5 engine/src/flutter/lib/ui/painting EngineLayer :: RegisterNatives ( g_natives ); FontCollection :: RegisterNatives ( g_natives ); FrameInfo :: RegisterNatives ( g_natives ); ImageFilter :: RegisterNatives ( g_natives ); ImageShader :: RegisterNatives ( g_natives ); //engine/src/flutter/lib/ui/isolate_name_server IsolateNameServerNatives :: RegisterNatives ( g_natives ); Paragraph :: RegisterNatives ( g_natives ); ParagraphBuilder :: RegisterNatives ( g_natives ); Picture :: RegisterNatives ( g_natives ); PictureRecorder :: RegisterNatives ( g_natives ); Scene :: RegisterNatives ( g_natives ); SceneBuilder :: RegisterNatives ( g_natives ); SceneHost :: RegisterNatives ( g_natives ); SemanticsUpdate :: RegisterNatives ( g_natives ); SemanticsUpdateBuilder :: RegisterNatives ( g_natives ); Versions :: RegisterNatives ( g_natives ); Vertices :: RegisterNatives ( g_natives ); // \u521d\u59cb\u5316Window\u7c7b Window :: RegisterNatives ( g_natives ); // Secondary isolates do not provide UI-related APIs. g_natives_secondary = new tonic :: DartLibraryNatives (); DartRuntimeHooks :: RegisterNatives ( g_natives_secondary ); IsolateNameServerNatives :: RegisterNatives ( g_natives_secondary ); } }","title":"\u521d\u59cb\u5316DartVM"},{"location":"android/flutter/DartVMServiceProtocol/","text":"DartVMServiceProtocol","title":"DartVMServiceProtocol"},{"location":"android/flutter/DevResource/","text":"\u5982\u4f55\u5728Android\u548ciOS\u4e2d\u96c6\u6210Flutter\uff1f JDFlutter \u4eac\u4e1c\u8de8\u5e73\u53f0\u5f00\u53d1\u6846\u67b6\uff01 AndroidStudio And IOS \u4ecb\u7ecdFlutter\u5de5\u5177\u5305\u5b89\u88c5\u3001\u63a7\u4ef6\u3001\u6587\u4ef6\u4e0e\u7f51\u7edc\u3001\u5305\u4e0e\u63d2\u4ef6\u3001\u56fd\u9645\u5316\u3001Flutter\u6838\u5fc3\u7cfb\u7edf Flutter UI currentElement\u548cBuildContext RenderObject\u4e0eRenderBox Flutter\u4ece\u542f\u52a8\u5230\u663e\u793a Flutter\u6559\u7a0b \u4ecb\u7ecdDart\u57fa\u672c\u7684\u8bed\u6cd5\u3001\u6253\u5305\u3001Redux\u3001\u4e3b\u9898\u3001\u56fd\u9645\u5316 Flutter\u5f00\u53d1\u5b9e\u6218\u8be6\u89e3\u7cfb\u5217\u6559\u7a0b Android\u6781\u81f4\u538b\u7f29 \b\u5f00\u53d1\u8d44\u6599\u94fe\u63a5 \u4e2d\u6587\u5f00\u53d1\u793e\u533a dart\u8bed\u8a00 dart dart \bpackage\u5e93 package flutter\u5f00\u53d1UI\u5e93: flutterchina/flukit flutter demo Flutter io Flutter\u6846\u67b6\u6982\u89c8 Dart\u7684\u8d44\u6e90\u6c47\u603b Dart\u8bed\u8a00\u5b98\u65b9\u7f51\u7ad9\u4e0a\u7684\u8d44\u6599\u3001\u6587\u6863\u5f88\u4e30\u5bcc\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u4e00\u4e9b\u5b98\u65b9\u7f51\u7ad9\u7684\u94fe\u63a5\u6c47\u603b\u3002 \u5b98\u65b9\u7f51\u7ad9 \u6700\u65b0\u52a8\u6001 \uff1a twitter Google+ Dartisans \u793e\u7fa4 \uff08Google Groups\uff09 Stackoverflow \u95ee\u7b54\u652f\u6301 \u5728\u7ebf\u8bd5\u7528 \uff1a API \u6587\u6863 \uff1a FAQ \u6240\u6709\u6587\u7ae0 \uff1a \u8bed\u8a00\u5411\u5bfc \u7c7b\u5e93\u5411\u5bfc Web\u5f00\u53d1\u5411\u5bfc \u4ee3\u7801\u98ce\u683c\u6307\u5357 \u8bed\u8a00\u89c4\u8303 \u5305\u7ba1\u7406\u5de5\u5177Pub Bugs \u548c Feature \u5217\u8868 Dart \u4e0e JavaScript\u3001C#\u3001Python \u5bf9\u6bd4\uff1asynonym.dartlang.org/ Dart VM\u3001 V8 \u548c dart2js \u6027\u80fd\u5bf9\u6bd4\uff1a link Github \u4e0a\u5404\u79cd Dart \u9879\u76ee\uff1a link [\u5de5\u5177]\uff1a SDK \uff0cSDK \u5305\u542b Dart VM\u3001dart2js\u3001Pub\u3001\u5e93\u548c\u5de5\u5177\u3002 Dartium :\u5185\u5d4c Dart VM \u7684 Chromium \uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u76f4\u63a5\u6267\u884c dart \u4ee3\u7801\u3002 Dart Editor \u57fa\u4e8e Eclipse \u7684\u5168\u529f\u80fd IDE\uff0c\u5305\u542b\u4ee5\u4e0a\u6240\u6709\u3002 \u56fd\u5185\u955c\u50cf\u4e0b\u8f7d\u5730\u5740 [\u975e\u5b98\u65b9\u8d44\u6e90]\uff1a Seth Ladd \u7684\u535a\u5ba2 \uff0cDart \u5b98\u65b9\u6210\u5458\u4e2d\u6700\u6d3b\u8dc3\u7684\u5ba3\u4f20\u5458\uff0c\u4ed6\u7684\u535a\u5ba2\u4e0a\u5199\u6709\u5927\u91cf\u5173\u4e8e Dart \u7684\u6587\u7ae0\u3002 Chris Strom \u7684\u535a\u5ba2 \uff0c\u300aDart for Hipsters\u300b\u7684\u4f5c\u8005\uff0c\u6709\u8bb8\u591a Dart \u7684\u6587\u7ae0\u3002 Dartwatch \uff0c\u300aDart in Action\u300b\u7684\u4f5c\u8005\u521b\u5efa\u7684\u5173\u4e8e Dart \u7684\u7f51\u7ad9\u3002 [15\u5206\u949f\u770b\u4ee3\u7801\u5b66 Dart]\uff1aLearn Dart in Y Minutes learnxinyminutes.com/docs/dart/ \u6398\u91d1flutter\u8ba8\u8bba\u793e\u533a \b\b\u5e38\u89c1\u95ee\u9898 AndroidStudio \b\u5bfc\u5165Github\u4e0a\u7684\b\u5f00\u6e90\u5e93\u662f\u51fa\u73b0\u9519\u8bef\u89e3\u51b3\u65b9\u6848 Link : Flutter | \u5982\u4f55\u4f18\u96c5\u7684\u89e3\u51b3\u4f9d\u8d56\u7248\u672c\u51b2\u7a81 Link \uff0c iirokrankka.com Flutter \u9519\u8bef\u548c\u89e3\u51b3\u6c47\u603b Link AndroidStudio\u5bfc\u5165Flutter\u9879\u76ee\u7684\u95ee\u9898 Link Flutter\u5e94\u7528\u7ed3\u6784\u5206\u6790\uff0ciOS/Android\u7684ipa/apk\u7ed3\u6784\u5206\u6790 FlutterPluginRegistrar Flutter\u6742\u75c7 Flutter\u5728\u6df7\u5408\u9879\u76ee\u4e2d\u7684\u6784\u5efa\u548c\u96c6\u6210 Flutter\u53d1\u5e03\u914d\u7f6e","title":"\u8d44\u6599"},{"location":"android/flutter/DevResource/#androidiosflutter","text":"JDFlutter \u4eac\u4e1c\u8de8\u5e73\u53f0\u5f00\u53d1\u6846\u67b6\uff01 AndroidStudio And IOS \u4ecb\u7ecdFlutter\u5de5\u5177\u5305\u5b89\u88c5\u3001\u63a7\u4ef6\u3001\u6587\u4ef6\u4e0e\u7f51\u7edc\u3001\u5305\u4e0e\u63d2\u4ef6\u3001\u56fd\u9645\u5316\u3001Flutter\u6838\u5fc3\u7cfb\u7edf Flutter UI currentElement\u548cBuildContext RenderObject\u4e0eRenderBox Flutter\u4ece\u542f\u52a8\u5230\u663e\u793a Flutter\u6559\u7a0b \u4ecb\u7ecdDart\u57fa\u672c\u7684\u8bed\u6cd5\u3001\u6253\u5305\u3001Redux\u3001\u4e3b\u9898\u3001\u56fd\u9645\u5316 Flutter\u5f00\u53d1\u5b9e\u6218\u8be6\u89e3\u7cfb\u5217\u6559\u7a0b Android\u6781\u81f4\u538b\u7f29","title":"\u5982\u4f55\u5728Android\u548ciOS\u4e2d\u96c6\u6210Flutter\uff1f"},{"location":"android/flutter/DevResource/#_1","text":"\u4e2d\u6587\u5f00\u53d1\u793e\u533a dart\u8bed\u8a00 dart dart \bpackage\u5e93 package flutter\u5f00\u53d1UI\u5e93: flutterchina/flukit flutter demo Flutter io Flutter\u6846\u67b6\u6982\u89c8","title":"\b\u5f00\u53d1\u8d44\u6599\u94fe\u63a5"},{"location":"android/flutter/DevResource/#dart","text":"Dart\u8bed\u8a00\u5b98\u65b9\u7f51\u7ad9\u4e0a\u7684\u8d44\u6599\u3001\u6587\u6863\u5f88\u4e30\u5bcc\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u4e00\u4e9b\u5b98\u65b9\u7f51\u7ad9\u7684\u94fe\u63a5\u6c47\u603b\u3002 \u5b98\u65b9\u7f51\u7ad9 \u6700\u65b0\u52a8\u6001 \uff1a twitter Google+ Dartisans \u793e\u7fa4 \uff08Google Groups\uff09 Stackoverflow \u95ee\u7b54\u652f\u6301 \u5728\u7ebf\u8bd5\u7528 \uff1a API \u6587\u6863 \uff1a FAQ \u6240\u6709\u6587\u7ae0 \uff1a \u8bed\u8a00\u5411\u5bfc \u7c7b\u5e93\u5411\u5bfc Web\u5f00\u53d1\u5411\u5bfc \u4ee3\u7801\u98ce\u683c\u6307\u5357 \u8bed\u8a00\u89c4\u8303 \u5305\u7ba1\u7406\u5de5\u5177Pub Bugs \u548c Feature \u5217\u8868 Dart \u4e0e JavaScript\u3001C#\u3001Python \u5bf9\u6bd4\uff1asynonym.dartlang.org/ Dart VM\u3001 V8 \u548c dart2js \u6027\u80fd\u5bf9\u6bd4\uff1a link Github \u4e0a\u5404\u79cd Dart \u9879\u76ee\uff1a link [\u5de5\u5177]\uff1a SDK \uff0cSDK \u5305\u542b Dart VM\u3001dart2js\u3001Pub\u3001\u5e93\u548c\u5de5\u5177\u3002 Dartium :\u5185\u5d4c Dart VM \u7684 Chromium \uff0c\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u76f4\u63a5\u6267\u884c dart \u4ee3\u7801\u3002 Dart Editor \u57fa\u4e8e Eclipse \u7684\u5168\u529f\u80fd IDE\uff0c\u5305\u542b\u4ee5\u4e0a\u6240\u6709\u3002 \u56fd\u5185\u955c\u50cf\u4e0b\u8f7d\u5730\u5740 [\u975e\u5b98\u65b9\u8d44\u6e90]\uff1a Seth Ladd \u7684\u535a\u5ba2 \uff0cDart \u5b98\u65b9\u6210\u5458\u4e2d\u6700\u6d3b\u8dc3\u7684\u5ba3\u4f20\u5458\uff0c\u4ed6\u7684\u535a\u5ba2\u4e0a\u5199\u6709\u5927\u91cf\u5173\u4e8e Dart \u7684\u6587\u7ae0\u3002 Chris Strom \u7684\u535a\u5ba2 \uff0c\u300aDart for Hipsters\u300b\u7684\u4f5c\u8005\uff0c\u6709\u8bb8\u591a Dart \u7684\u6587\u7ae0\u3002 Dartwatch \uff0c\u300aDart in Action\u300b\u7684\u4f5c\u8005\u521b\u5efa\u7684\u5173\u4e8e Dart \u7684\u7f51\u7ad9\u3002 [15\u5206\u949f\u770b\u4ee3\u7801\u5b66 Dart]\uff1aLearn Dart in Y Minutes learnxinyminutes.com/docs/dart/ \u6398\u91d1flutter\u8ba8\u8bba\u793e\u533a","title":"Dart\u7684\u8d44\u6e90\u6c47\u603b"},{"location":"android/flutter/DevResource/#_2","text":"AndroidStudio \b\u5bfc\u5165Github\u4e0a\u7684\b\u5f00\u6e90\u5e93\u662f\u51fa\u73b0\u9519\u8bef\u89e3\u51b3\u65b9\u6848 Link : Flutter | \u5982\u4f55\u4f18\u96c5\u7684\u89e3\u51b3\u4f9d\u8d56\u7248\u672c\u51b2\u7a81 Link \uff0c iirokrankka.com Flutter \u9519\u8bef\u548c\u89e3\u51b3\u6c47\u603b Link AndroidStudio\u5bfc\u5165Flutter\u9879\u76ee\u7684\u95ee\u9898 Link Flutter\u5e94\u7528\u7ed3\u6784\u5206\u6790\uff0ciOS/Android\u7684ipa/apk\u7ed3\u6784\u5206\u6790 FlutterPluginRegistrar Flutter\u6742\u75c7 Flutter\u5728\u6df7\u5408\u9879\u76ee\u4e2d\u7684\u6784\u5efa\u548c\u96c6\u6210 Flutter\u53d1\u5e03\u914d\u7f6e","title":"\b\b\u5e38\u89c1\u95ee\u9898"},{"location":"android/flutter/EngineCompile/","text":"Flutter Engine \u7f16\u8bd1\u6784\u5efa \u4ecb\u7ecd \u5728\u524d\u9762 \u7f16\u8bd1\u73af\u5883\u5b89\u88c5 \uff0c GNTools\u5de5\u5177\u539f\u7406 , Ninja\u7f16\u8bd1\u5de5\u5177\u539f\u7406 \u7684\u7406\u89e3,\u5df2\u7ecf\u4e86\u89e3\u4e86Flutter Engine\u76f8\u5173\u7684\u4e00\u4e0b\u6982\u5ff5\uff0c\u63a5\u4e0b\u6765\uff0c\u7ee7\u7eed\u5206\u6790\u6267\u884c\u7f16\u8bd1\u547d\u4ee4\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u6587\u4ef6\uff0c\u548c\u76f8\u5173\u7684\u903b\u8f91\uff0c\u6709\u4e0e\u7bc7\u5e45\u95ee\u9898\uff0c\u53ea\u4ecb\u7ecd\u76f8\u5173\u7684\u8fd9\u4e9b\u903b\u8f91\u548c\u6784\u5efa\u7684\u6587\u4ef6\u8bf4\u660e(\u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45,....)\uff0c\u6574\u4e2a\u601d\u7ef4\u67b6\u6784\u6253\u901a\u4e86\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u65f6\u95f4\u95ee\u9898\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u514b\u670d\u3002\u3002\u3002\u3002\u3002\u3002\u3002 \u51c6\u5907\u5de5\u4f5c \u4f18\u70b9 1.\u53ef\u8bfb\u6027\u597d 2.\u901f\u5ea6\u66f4\u5feb 3.\u4fee\u6539gn \u4e4b\u540e \u6784\u5efaninja\u6587\u4ef6\u65f6\u5019\u4f1a\u81ea\u52a8\u66f4\u65b0 4.\u4f9d\u8d56\u5206\u660e \u4e24\u79cd\u6587\u4ef6\u7c7b\u578b BUILID.gn : \u91c7\u7528\u5c42\u7ea7\u7ed3\u6784 \u6587\u4ef6\u6839\u76ee\u5f55\u4e0b\u901a\u5e38\u6709\u4e00\u4e2aBUILD.gn\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u6240\u6709\u7684\u4ee3\u7801\u6a21\u5757\u7ec4\u88c5\u7684\u96c6\u5408 .gni :\u4e00\u822c\u7528\u6765\u6dfb\u52a0\u4e00\u4e9b\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u5728gn\u6587\u4ef6\u4e2dimport\u8fd9\u4e9b\u6587\u4ef6\u6216\u8005\u91cc\u9762\u5b9a\u4e49\u7684\u53d8\u91cf\u53c2\u6570\u503c GNTools \u662f\u4e00\u6b3e\u6784\u5efa\u7cfb\u7edf\uff0c\u7528\u4e8e\u7f16\u8bd1\u5927\u89c4\u6a21\u4ee3\u7801\u751f\u6210ninja\u6587\u4ef6 Ninja \u6e90\u4ee3\u7801\u5206\u6790\u3001\u4f18\u5316\u3001\u7f16\u8bd1\u7cfb\u7edf Flutter Engine Complie Engine\u7f16\u8bd1\u5b98\u65b9\u6559\u7a0b \u9884\u5904\u7406\u7f16\u8bd1\u6587\u4ef6 \u4f7f\u7528\u4e0d\u540c\u7684\u53c2\u6570\u6307\u5b9a\u6211\u4eec\u51c6\u5907\u8981\u6784\u5efa\u7684flutter\u5f15\u64ce\u652f\u6301\u7684\u5e73\u53f0(Windows,Linux,Mac,Android,IOS,Web,Embedder)\uff0c\u5728\u540c\u4e00\u4e2a\u5e73\u53f0\u4e0a\u652f\u6301\u4e0d\u540c\u7684\u6a21\u5f0f(debug,release,profile),\u63a5\u4e0b\u6765\u6211\u4eec\u600e\u4e48\u73a9\u8fd9\u4e2a\u7cfb\u7edf\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u7684\u652f\u6301\u5e93\uff0c\u548c\u540c\u4e00\u5e73\u53f0\u4e0a\u7684\u4e0d\u540c\u6a21\u5f0f \u9884\u5904\u7406\u7f16\u8bd1\u6587\u4ef6\u4e0d\u540c\u5e73\u53f0\u7684\u7f16\u8bd1\u811a\u672c ./flutter/tools/gn --android --unoptimized for device-side executables. ./flutter/tools/gn --android --android-cpu x86 --unoptimized for x86 emulators. ./flutter/tools/gn --android --android-cpu x64 --unoptimized for x64 emulators. ./flutter/tools/gn --unoptimized for host-side executables, needed to compile the code. ./flutter/tools/gn --ios --unoptimized ./flutter/tools/gn --ios --simulator --unoptimized ./flutter/tools/gn --unoptimized python .\\flutter\\tools\\gn --unoptimized web\u7f16\u8bd1 felt\u5de5\u5177 \u901a\u8fc7\u8fd9\u4e9b\u4e0a\u8ff0\u7684\u547d\u4ee4\uff0c\u8ddf\u8e2a\u547d\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b: ./flutter/tools/gn --android --unoptimized \uff0c\u53c2\u52a0 Flutter Engine \u7f16\u8bd1\u6a21\u5f0f flutter/tools/gn python\u811a\u672c\u4e0b\u5217\u4ee3\u7801 --android \u6307\u5b9a\u5e73\u53f0 --android-cpu x86 cpu\u67b6\u6784 --unoptimized \u662f\u5426\u9700\u8981\u4f18\u5316 \u6267\u884c\u4e0b\u5217\u811a\u672c\u4e3b\u8981\u662f\u5728\u6784\u5efa GN \u6784\u5efa\u811a\u672c\u53c2\u6570: SRC_ROOT = os . path . dirname ( os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ )))) /* \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u5224\u65ad\u5e73\u53f0\u7684\u8f93\u51fa\u8def\u5f84 */ def get_out_dir ( args ): if args . target_os is not None : target_dir = [ args . target_os ] else : target_dir = [ host ] ........ return os . path . join ( args . out_dir , out , _ . join ( target_dir )) def to_command_line ( gn_args ): def merge ( key , value ): if type ( value ) is bool : return %s = %s % ( key , true if value else false ) return %s = %s % ( key , value ) return [ merge ( x , y ) for x , y in gn_args . iteritems ()] def cpu_for_target_arch ( arch ): if arch in [ ia32 , arm , armv6 , armv5te , mips , simarm , simarmv6 , simarmv5te , simmips , simdbc , armsimdbc ]: return x86 if arch in [ x64 , arm64 , simarm64 , simdbc64 , armsimdbc64 ]: return x64 def to_gn_args ( args ): gn_args = {} # Skia GN args. gn_args [ skia_enable_flutter_defines ] = True # Enable Flutter API guards in Skia. gn_args [ skia_use_dng_sdk ] = False # RAW image handling. gn_args [ skia_use_sfntly ] = False # PDF handling depedency. ............... return gn_args def parse_args ( args ): args = args [ 1 :] parser = argparse . ArgumentParser ( description = A script run` gn gen`. ) parser . add_argument ( --unoptimized , default = False , action = store_true ) parser . add_argument ( --runtime-mode , type = str , choices = [ debug , profile , release ], default = debug ) .......... return parser . parse_args ( args ) def main ( argv ): args = parse_args ( argv ) if sys . platform . startswith (( cygwin , win )): subdir = win elif sys . platform == darwin : subdir = mac-x64 elif sys . platform . startswith ( linux ): subdir = linux-x64 else : raise Error ( Unknown platform: + sys . platform ) command = [ %s /buildtools/ %s /gn % ( SRC_ROOT , subdir ), gen , --check , ] if sys . platform == darwin : # On the Mac, also generate Xcode projects for ease of editing. command . append ( --ide=xcode ) if sys . platform . startswith ( win ): # On Windows, also generate Visual Studio project for ease of editing. command . append ( --ide=vs ) gn_args = to_command_line ( to_gn_args ( args )) out_dir = get_out_dir ( args ) print gn gen --check in %s % out_dir command . append ( out_dir ) command . append ( --args= %s % . join ( gn_args )) gn_call_result = subprocess . call ( command , cwd = SRC_ROOT ) print command [ 1 ] if gn_call_result == 0 : # Generate/Replace the compile commands database in out. compile_cmd_gen_cmd = [ ninja , -C , out_dir , -t , compdb , cc , cxx , objc , objcxx , asm , ] print compile_cmd_gen_cmd [ 2 ] \u8c03\u7528 `GN` \u751f\u6210\u6784\u5efa\u6587\u4ef6 contents = subprocess . check_output ( compile_cmd_gen_cmd , cwd = SRC_ROOT ) compile_commands = open ( %s /out/compile_commands.json % SRC_ROOT , w+ ) compile_commands . write ( contents ) compile_commands . close () return gn_call_result if __name__ == __main__ : sys . exit ( main ( sys . argv )) \u751f\u6210\u7684GN\u547d\u4ee4\u53c2\u6570 ./flutter/tools/gn --android --unoptimized \u901a\u8fc7\u8c03\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 .ng \u6587\u4ef6\u5f00\u59cb\u5206\u6790\u6574\u4e2a\u6e90\u7801\u9879\u76ee\u7684\u4f9d\u8d56\u6811 command = [ %s/buildtools/%s/gn % ( SRC_ROOT, subdir ) , gen , --check , ] .gn\u6587\u4ef6\u7684\u67e5\u627e\u8fc7\u7a0b \u5728\u5f15\u64ce\u7684\u76ee\u5f55\u4e0b engine/src \u67e5\u627e\u5165\u53e3\u7684 .gn \u6587\u4ef6,\u4f7f\u7528 src/tools/gn \u5de5\u5177\u67e5\u627e\u6839\u76ee\u5f55\u6811\u4e0b\u7684\u6e90\u6587\u4ef6\u6811\u548c\u5f00\u59cb\u914d\u7f6e\u6570\u636e # The location of the build configuration file. buildconfig = //build/config/BUILDCONFIG.gn # The secondary source root is a parallel directory tree where # GN build files are placed when they can not be placed directly # in the source tree, e.g. for third party source trees. secondary_source = //build/secondary/ # The set of targets known to pass gn check . When all targets pass, remove # this. check_targets = [ //dart/* , //flow/* , //flutter/* , //glue/* , //mojo/* , //skia/* , //sky/* , ] [1] \u5904\u4f7f\u7528\u6253\u5370\u547d\u4ee4\u8f93\u51fa\u8fd9\u4e9b\u6784\u5efa\u547d\u4ee4\u751f\u6210\u7684\u53c2\u6570\u7c7b\u578b,\u901a\u8fc7\u67e5\u770b\u751f\u6210\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5c31\u80fd\u591f\u7406\u89e3\u5728 Flutter Engine \u7f16\u8bd1\u6a21\u5f0f \u63d0\u5230\u7684\u4e0d\u540c\u6a21\u5f0f\uff0c\u662f\u600e\u4e48\u7ec4\u7ec7\u4ee3\u7801\u548c\u76f8\u5173\u7684\u7f16\u8bd1\u6587\u4ef6\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u57fa\u672c\u7684\u601d\u8def\u548c\u6846\u67b6\u7406\u89e3\u4e86\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u662f GN \u5de5\u5177\u8c03\u7528 BUILD.gn \u76f8\u5173\u7684\u6587\u4ef6\uff0c\u63d0\u4f9b\u7ed9Ninja\u53bb\u7f16\u8bd1\u7684\u6587\u4ef6 [2] \u5904\u6784\u5efa\u7684\u547d\u4ee4 [ ninja , -C , out/android_debug_unopt , -t , compdb , cc , cxx , objc , objcxx , asm ] \u5728[1]\u6784\u5efa\u7684\u547d\u4ee4\u4e2d\u6307\u5b9a\u4f7f\u7528\u7684 GN \u8def\u5f84 'buildtools/mac-x64/gn' \u63a5\u7740\u4f1a\u8c03\u7528\u6267\u884c /engine/src# ./flutter/tools/gn \u7684Build.gn\u6587\u4ef6 engine/src/BUILD.gn ,\u4f1a\u6839\u636e\u5f53\u524d\u76ee\u5f55\u4e2d\u7684 BUILD.gn \u6587\u4ef6\u914d\u7f6e\u4e00\u5c42\u4e00\u5c42\u7684\u76ee\u5f55\u53bb\u67e5\u627e\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u7684 BUILD.gn ,\u6587\u4ef6\u6bcf\u4e00\u4e2a\u76ee\u5f55\u4e2d\u90fd\u4f1a\u5b9a\u4e49\u5f53\u524d\u76ee\u5f55\u7f16\u8bd1\u7684\u89c4\u5219\u548c\u4f9d\u8d56\u53c2\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u9897\u5012\u6302\u7684\u6811\uff1a\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u914d\u7f6e\uff0c\u914d\u7f6e\u7236\u8282\u70b9\uff0c\u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u6a21\u5757\uff0c\u5c31\u5728\u4e0a\u4e00\u7ea7\u6a21\u5757\u4e2d\u628a\u4e0b\u4e00\u7ea7\u7684 BUILD.gn \u6587\u4ef6\u5f15\u7528\u5c31\u80fd\u591f\u5411\u4e0b\u5305\u542b\u9700\u8981\u7684\u6587\u4ef6\u4f9d\u8d56\u3002\u6700\u7ec8\u751f\u6210 ninja \u7684\u914d\u7f6e\u6587\u4ef6\u3002 /* This target will be built if no target is specified when invoking ninja. */ group ( default ) { testonly = true deps = [ //flutter , ] } group ( dist ) { testonly = true deps = [ //flutter:dist , ] } \u5982\u4f55\u914d\u7f6e OS , CPU , \u7f16\u8bd1\u5de5\u5177\u94fe \u5728 engine/src/build/config/BUILDCONFIG.gn \u6587\u4ef6\u4e2d\u4e3b\u8981\u914d\u7f6e\u5185\u5bb9: \u6307\u5b9aFlutter\u6e90\u7801\u76ee\u5f55 \u6307\u5b9a\u5e73\u53f0\u67b6\u6784 \u6307\u5b9a\u4e00\u4e9b\u6784\u5efa\u6807\u8bc6 \u6307\u5b9a\u7cfb\u7edf(Window,Mac,Linux,Android,ios) \u6307\u5b9a\u5de5\u5177\u94fe\u7684\u4f7f\u7528 \u7b2c\u4e09\u65b9\u5f00\u6e90\u5e93\u7684\u4f7f\u7528 \u6307\u5b9aflutter\u7684\u6839\u76ee\u5f55 # Set the root of the engine project. flutter_root = //flutter \u6307\u5b9a\u5e73\u53f0 \u4f7f\u7528\u7684\u53d8\u91cf - host_os, host_cpu, host_toolchain - target_os, target_cpu, default_toolchain - current_os, current_cpu, current_toolchain. build Flag declare_args () { # How many symbols to include in the build. This affects the performance of # the build since the symbols are large and dealing with them is slow. # 2 means regular build with symbols. # 1 means minimal symbols, usually enough for backtraces only. # 0 means no symbols. # -1 means auto-set (off in release, regular in debug). symbol_level = -1 # Component build. is_component_build = false # Official build. is_official_build = false # Debug build. is_debug = true # Whether we re a traditional desktop unix. is_desktop_linux = current_os == linux current_os ! = chromeos # Set to true when compiling with the Clang compiler. Typically this is used # to configure warnings. is_clang = current_os == mac || current_os == ios || current_os == linux || current_os == chromeos # Compile for Address Sanitizer to find memory bugs. is_asan = false # Compile for Leak Sanitizer to find leaks. is_lsan = false # Compile for Memory Sanitizer to find uninitialized reads. is_msan = false # Compile for Thread Sanitizer to find threading bugs. is_tsan = false # Compile for Undefined Behavior Sanitizer. is_ubsan = false if ( current_os == chromeos ) { # Allows the target toolchain to be injected as arguments. This is needed # to support the CrOS build system which supports per-build-configuration # toolchains. cros_use_custom_toolchain = false } # DON T ADD MORE FLAGS HERE. Read the comment above. } \u6307\u5b9a\u5e73\u53f0 Windows,Linux,Mac,Android,IOS,Web,embedder f ( current_os == mac ) { is_android = false is_chromeos = false is_fuchsia = false is_fuchsia_host = false is_ios = false is_linux = false is_mac = true is_posix = true is_win = false } else if ( current_os == android ) { is_android = true is_chromeos = false is_fuchsia = false is_fuchsia_host = false is_ios = false is_linux = false is_mac = false is_posix = true is_win = false } ............ \u5de5\u5177\u94fe\u8bbe\u7f6e import ( //build/toolchain/custom/custom.gni ) # Define this to allow Fuchsia s fork of harfbuzz to build. # shlib_toolchain is a Fuchsia-specific symbol and not used by Flutter. shlib_toolchain = false if ( custom_toolchain ! = ) { assert ( custom_sysroot ! = ) assert ( custom_target_triple ! = ) host_toolchain = //build/toolchain/linux:clang_ $host_cpu set_default_toolchain ( //build/toolchain/custom ) } else if ( is_win ) { # On windows we use the same toolchain for host and target by default. host_toolchain = //build/toolchain/win: $current_cpu set_default_toolchain ( $host_toolchain ) } else if ( is_android ) { if ( host_os == linux ) { # Use clang for the x86/64 Linux host builds. if ( host_cpu == x86 || host_cpu == x64 ) { host_toolchain = //build/toolchain/linux:clang_ $host_cpu } else { host_toolchain = //build/toolchain/linux: $host_cpu } } else if ( host_os == mac ) { host_toolchain = //build/toolchain/mac:clang_ $host_cpu } else if ( host_os == win ) { host_toolchain = //build/toolchain/win: $current_cpu } else { assert ( false, Unknown host for android cross compile ) } if ( is_clang ) { set_default_toolchain ( //build/toolchain/android:clang_ $current_cpu ) } else { set_default_toolchain ( //build/toolchain/android: $current_cpu ) } } else if ( is_linux ) { if ( is_clang ) { host_toolchain = //build/toolchain/linux:clang_ $host_cpu set_default_toolchain ( //build/toolchain/linux:clang_ $current_cpu ) } else { host_toolchain = //build/toolchain/linux: $host_cpu set_default_toolchain ( //build/toolchain/linux: $current_cpu ) } if ( is_chromeos cros_use_custom_toolchain ) { set_default_toolchain ( //build/toolchain/cros:target ) } } else if ( is_mac ) { host_toolchain = //build/toolchain/mac:clang_x64 set_default_toolchain ( host_toolchain ) } else if ( is_ios ) { import ( //build/config/ios/ios_sdk.gni ) # For use_ios_simulator host_toolchain = //build/toolchain/mac:clang_ $host_cpu if ( use_ios_simulator ) { set_default_toolchain ( //build/toolchain/mac:ios_clang_x64 ) } else { set_default_toolchain ( //build/toolchain/mac:ios_clang_arm ) } } else if ( is_fuchsia ) { if ( host_os == mac ) { host_toolchain = //build/toolchain/mac:clang_ $host_cpu } else { host_toolchain = //build/toolchain/linux:clang_ $host_cpu } set_default_toolchain ( //build/toolchain/fuchsia ) } else { assert ( false, Toolchain not set because of unknown platform. ) } # Sets default dependencies for executable and shared_library targets. # # Variables # no_default_deps: If true, no standard dependencies will be added. if ( is_android || ( is_linux current_cpu ! = x86 )) { foreach ( _target_type, [ executable , loadable_module , shared_library , ]) { template ( _target_type ) { target ( _target_type, target_name ) { forward_variables_from ( invoker, * , [ no_default_deps ]) if ( !defined ( deps )) { deps = [] } if ( !defined ( invoker.no_default_deps ) || !invoker.no_default_deps ) { deps += [ //third_party/libcxx ] } } } } } COMPONENT \u914d\u7f6e \u6307\u5b9a\u9700\u8981\u4f9d\u8d56\u7684\u5171\u4eab\u5e93\u548c\u6e90\u6587\u4ef6\u76ee\u5f55\uff0c\u6240\u6709\u7684\u4f9d\u8d56\u914d\u7f6e\u6587\u4ef6\u9876\u5c42\u6587\u4ef6\u76ee\u5f55 //build/config/sanitizers:deps //build/config/sanitizers:deps if ( is_component_build ) { component_mode = shared_library } else { component_mode = source_set } if ( defined ( invoker.deps )) { deps = invoker.deps + [ //build/config/sanitizers:deps ] } else { deps = [ //build/config/sanitizers:deps , ] } ....engine/src/build/config/sanitizers/BUILD.gn \u6307\u5b9a\u7b2c\u4e09\u65b9\u5e93\u7684\u4f9d\u8d56.... # Contains the dependencies needed for sanitizers to link into executables and # shared_libraries. Unconditionally depend upon this target as it is empty if # |is_asan|, |is_lsan|, |is_tsan|, |is_msan| and |use_custom_libcxx| are false. group ( deps ) { deps = [ //third_party/instrumented_libraries:deps , ] if ( is_asan || is_lsan || is_tsan || is_msan ) { public_configs = [ :sanitizer_options_link_helper ] deps += [ :options_sources ] } if ( use_custom_libcxx ) { deps += [ //buildtools/third_party/libc++:libcxx_proxy ] } } \u4f7f\u7528gn\u547d\u4ee4\u548c\u53c2\u6570\u4e4b\u540e\u751f\u6210\u7f16\u8bd1\u6e05\u5355\u6587\u4ef6 [ buildtools/mac-x64/gn , gen , --check , --ide=xcode , out/android_debug_unopt , --args=skia_enable_pdf=false enable_lto=false use_clang_static_analyzer=false full_dart_sdk=false dart_runtime_mode= develop skia_use_fontconfig=false skia_use_dng_sdk=false skia_enable_flutter_defines=true use_goma=false dart_custom_version_for_pub= flutter embedder_for_target=false is_official_build=true host_cpu= x86 # \u7f16\u8bd1\u4e3b\u673a\u67b6\u6784 is_clang=true skia_use_sfntly=false dart_target_arch= arm flutter_runtime_mode= debug goma_dir= None android_full_debug=true target_os= android # \u751f\u6210\u7684\u76ee\u6807\u5e73\u53f0 mac_sdk_path= skia_use_x11=false enable_coverage=false target_cpu= arm # \u76ee\u6807cpu\u67b6\u6784 skia_use_expat=true dart_lib_export_symbols=false is_debug=true # debug\u6a21\u5f0f flutter_aot=false # \u4e0d\u9700\u8981\u4f18\u5316 ] \u63a5\u7740\u8fdb\u5165 //Flutter \u76ee\u5f55\u67e5\u627e`# Copyright 2013 The Flutter Authors. All rights reserved. import ( $flutter_root /common/config.gni ) import ( //third_party/dart/build/dart/dart_action.gni ) !-- # Temporary snapshot copy rules until we can use the full SDK. -- _flutter_sdk_snapshots = [ [ dart2js , //third_party/dart/utils/compiler:dart2js , ] , [ kernel_worker , //third_party/dart/utils/bazel:kernel_worker , ] , ] group ( flutter ) { testonly = true public_deps = [ $flutter_root /lib/snapshot:generate_snapshot_bin , $flutter_root /lib/snapshot:kernel_platform_files , $flutter_root /shell/platform/embedder:flutter_engine , $flutter_root /sky , ] if ( current_toolchain == host_toolchain ) { public_deps += [ $flutter_root /shell/testing ] } if ( !is_fuchsia !is_fuchsia_host ) { if ( current_toolchain == host_toolchain ) { public_deps += [ $flutter_root /frontend_server , //third_party/dart:create_sdk , $flutter_root /lib/stub_ui:stub_ui , :dart2js_platform_files , :flutter_dartdevc_kernel_sdk , ] foreach ( snapshot, _flutter_sdk_snapshots ) { public_deps += [ :copy_flutter_ ${ snapshot [0] } _snapshot ] } } } !-- # If on the host, compile all unittests targets. -- if ( current_toolchain == host_toolchain ) { if ( is_mac ) { public_deps += [ $flutter_root /shell/platform/darwin:flutter_channels_unittests ] } public_deps += [ $flutter_root /flow:flow_unittests , $flutter_root /fml:fml_unittests , $flutter_root /runtime:runtime_unittests , $flutter_root /shell/common:shell_unittests , $flutter_root /shell/platform/embedder:embedder_unittests , $flutter_root /shell/platform/embedder:embedder_a11y_unittests , # TODO(cbracken) build these into a different kernel blob in the embedder tests and load that in a test in embedder_unittests $flutter_root /synchronization:synchronization_unittests , $flutter_root /third_party/txt:txt_unittests , ] if ( !is_win ) { public_deps += [ $flutter_root /shell/common:shell_benchmarks ] } } } config ( config ) { include_dirs = [ .. ] } group ( dist ) { testonly = true deps = [ $flutter_root /sky/dist , ] } foreach ( snapshot, _flutter_sdk_snapshots ) { copy ( copy_flutter_ ${ snapshot [0] } _snapshot ) { deps = [ snapshot [ 1 ] , ] sources = [ $root_gen_dir / ${ snapshot [0] } .dart.snapshot , ] outputs = [ $root_out_dir /dart-sdk/bin/snapshots/flutter_{{source_file_part}} , ] } } copy ( dart2js_platform_files ) { deps = [ //third_party/dart/utils/compiler:compile_dart2js_platform ] sources = [ $root_out_dir /dart2js_outline.dill , $root_out_dir /dart2js_platform.dill , ] outputs = [ $root_out_dir /flutter_patched_sdk/{{source_file_part}} , ] } prebuilt_dart_action ( flutter_dartdevc_kernel_sdk ) { deps = [ //third_party/dart:create_sdk , ] packages = //third_party/dart/.packages script = //third_party/dart/pkg/dev_compiler/tool/kernel_sdk.dart inputs = [ //third_party/dart/pkg/dev_compiler/tool/kernel_sdk.dart , ] outputs = [ $target_gen_dir /kernel/amd/dart_sdk.js , $target_gen_dir /kernel/amd/dart_sdk.js.map , $target_gen_dir /kernel/common/dart_sdk.js , $target_gen_dir /kernel/common/dart_sdk.js.map , $target_gen_dir /kernel/es6/dart_sdk.js , $target_gen_dir /kernel/es6/dart_sdk.js.map , $target_gen_dir /kernel/legacy/dart_sdk.js , $target_gen_dir /kernel/legacy/dart_sdk.js.map , ] libraries_path = rebase_path ( $flutter_root /lib/snapshot/libraries.json ) output_path = rebase_path ( $target_gen_dir /kernel/flutter_ddc_sdk.dill ) args = [ --output= $output_path , --libraries= $libraries_path , ] } ninja\u914d\u7f6e\u6587\u4ef6 \u901a\u8fc7 GN \u5de5\u5177\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u4e4b\u540e\u4f1a\u5728 out \u76ee\u5f55\u4e2d\u751f\u6210\u76f8\u5173\u7684 Ninja \u914d\u7f6e\u6587\u4ef6 GN\u4ea7\u751f\u7684\u6587\u4ef6\u8bf4\u660e args.gn # \u4f7f\u7528 GN \u5de5\u5177\u6784\u5efa\u662f\u751f\u6210\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u53ef\u4ee5\u9a8c\u8bc1\u914d\u7f6e\u53c2\u6570\u662f\u5426\u6b63\u786e build.ninja # Ninja \u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u662f\u9ed8\u8ba4\u7684\u7f16\u8bd1\u811a\u672c build.ninja.d # GN \u4ea7\u751f\u6784\u5efa\u6587\u4ef6\u67e5\u627e\u7684\u6587\u4ef6\u8def\u5f84 \u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u76ee\u5f55\u7684\u5185\u5bb9,\u8be6\u7ec6\u7684\u7f16\u8bd1\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5728\u4e0b\u4e00\u7bc7\u4e2d\u5728\u8fdb\u884c\u8be6\u7ec6\u8bf4\u660e \u279c android_debug_unopt_x86 git: ( master ) \u2717 tree -L 3 . \u251c\u2500\u2500 all.xcworkspace \u2502 \u2514\u2500\u2500 contents.xcworkspacedata \u251c\u2500\u2500 args.gn # \u4f7f\u7528`GN`\u5de5\u5177\u6784\u5efa\u662f\u751f\u6210\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u53ef\u4ee5\u9a8c\u8bc1\u914d\u7f6e\u53c2\u6570\u662f\u5426\u6b63\u786e \u251c\u2500\u2500 build.ninja # Ninja \u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u662f\u9ed8\u8ba4\u7684\u7f16\u8bd1\u811a\u672c \u251c\u2500\u2500 build.ninja.d # GN \u4ea7\u751f\u6784\u5efa\u6587\u4ef6\u67e5\u627e\u7684\u6587\u4ef6\u8def\u5f84 \u251c\u2500\u2500 clang_x64 \u2502 \u251c\u2500\u2500 obj \u2502 \u2502 \u2514\u2500\u2500 third_party \u2502 \u2514\u2500\u2500 toolchain.ninja \u251c\u2500\u2500 clang_x86 \u2502 \u251c\u2500\u2500 obj \u2502 \u2502 \u2514\u2500\u2500 third_party \u2502 \u2514\u2500\u2500 toolchain.ninja \u251c\u2500\u2500 dart-sdk \u2502 \u2514\u2500\u2500 bin \u2502 \u2514\u2500\u2500 snapshots \u251c\u2500\u2500 gyp-mac-tool \u251c\u2500\u2500 obj \u2502 \u251c\u2500\u2500 flutter \u2502 \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u251c\u2500\u2500 benchmarking \u2502 \u2502 \u251c\u2500\u2500 common \u2502 \u2502 \u251c\u2500\u2500 flow \u2502 \u2502 \u251c\u2500\u2500 fml \u2502 \u2502 \u251c\u2500\u2500 lib \u2502 \u2502 \u251c\u2500\u2500 runtime \u2502 \u2502 \u251c\u2500\u2500 shell \u2502 \u2502 \u251c\u2500\u2500 synchronization \u2502 \u2502 \u251c\u2500\u2500 testing \u2502 \u2502 \u251c\u2500\u2500 third_party \u2502 \u2502 \u2514\u2500\u2500 vulkan \u2502 \u2514\u2500\u2500 third_party \u2502 \u251c\u2500\u2500 android_tools \u2502 \u251c\u2500\u2500 benchmark \u2502 \u251c\u2500\u2500 boringssl \u2502 \u251c\u2500\u2500 cpu-features \u2502 \u251c\u2500\u2500 dart \u2502 \u251c\u2500\u2500 expat \u2502 \u251c\u2500\u2500 freetype2 \u2502 \u251c\u2500\u2500 googletest \u2502 \u251c\u2500\u2500 harfbuzz \u2502 \u251c\u2500\u2500 icu \u2502 \u251c\u2500\u2500 libcxx \u2502 \u251c\u2500\u2500 libcxxabi \u2502 \u251c\u2500\u2500 libjpeg-turbo \u2502 \u251c\u2500\u2500 libpng \u2502 \u251c\u2500\u2500 libwebp \u2502 \u251c\u2500\u2500 rapidjson \u2502 \u251c\u2500\u2500 skia \u2502 \u251c\u2500\u2500 tonic \u2502 \u2514\u2500\u2500 zlib \u251c\u2500\u2500 products.xcodeproj \u2502 \u2514\u2500\u2500 project.pbxproj \u2514\u2500\u2500 toolchain.ninja 45 directories, 9 files args.gn skia_enable_pdf = false enable_lto = false use_clang_static_analyzer = false full_dart_sdk = false dart_runtime_mode = develop skia_use_fontconfig = false skia_use_dng_sdk = false skia_enable_flutter_defines = true use_goma = false dart_custom_version_for_pub = flutter embedder_for_target = false is_official_build = true host_cpu = x86 is_clang = true skia_use_sfntly = false dart_target_arch = x86 flutter_runtime_mode = debug goma_dir = None android_full_debug = true target_os = android mac_sdk_path = skia_use_x11 = false enable_coverage = false target_cpu = x86 skia_use_expat = true dart_lib_export_symbols = false is_debug = true flutter_aot = false build.ninja \u8bb0\u5f55\u7f16\u8bd1\u7684\u76f8\u5173\u8fde\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u6765\u8ddf\u8e2a\u6e90\u4ee3\u7801\u7684\u53d8\u5316\u4fe1\u606f ninja_required_version = 1 .7.2 rule gn command = ../../buildtools/mac-x64/gn --root = ../.. -q --check --ide = xcode gen . description = Regenerating ninja files build build.ninja: gn generator = 1 depfile = build.ninja.d subninja toolchain.ninja subninja clang_x64/toolchain.ninja subninja clang_x86/toolchain.ninja build default: phony obj/default.stamp build dist: phony obj/dist.stamp build flutter: phony obj/flutter/flutter.stamp build _http: phony obj/flutter/sky/packages/sky_engine/_http.stamp build android: phony obj/flutter/shell/platform/android/android.stamp build android_arch_lifecycle_common: phony obj/flutter/shell/platform/android/android_arch_lifecycle_common.stamp build all: phony $ obj/default.stamp $ obj/dist.stamp $ ........... obj/third_party/zlib/libzlib_x86_simd.a default default build.ninja.d \u8be5\u6587\u4ef6\u4e2d\u8bb0\u5f55\u4e86 GN \u6587\u4ef6\u4fdd\u5b58\u7684\u6784\u5efa\u6587\u4ef6\u7684\u8def\u5f84,\u5728GN\u5b8c\u6210\u4e4b\u540e\u751f\u6210\u7684\u6587\u4ef6\u4f9d\u8d56\u8def\u5f84\u4e2d\u7684\u6587\u4ef6\u53ef\u4ee5\u5728\u6587\u4ef6\u4e2d\u627e\u5230\uff0c\u8fd9\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f16\u8bd1\u662f\u7684\u6240\u6709\u6587\u4ef6\u4f1a\u4ece\u8fd9\u4e9b\u6587\u4ef6\u7684\u8def\u5f84\u4e2d\u6ce8\u610f\u67e5\u627e build.ninja: ../../BUILD.gn ../../build/compiled_action.gni ../../build/config/BUILD.gn ......... ../../third_party/tonic/scopes/BUILD.gn ../../third_party/tonic/typed_data/BUILD.gn ../../third_party/zlib/BUILD.gn \u603b\u7ed3 \u6211\u4eec\u5206\u6790\u4e86\u4f7f\u7528 GN \u5de5\u5177\u5bf9\u76f8\u5173\u7684\u6e90\u6587\u4ef6\u548c\u914d\u7f6e\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff0c\u4e0d\u540c\u5e73\u53f0\u7248\u672c\uff0c\u7edf\u4e00\u5e73\u53f0\u7684\u4e0d\u540c\u6a21\u5f0f\u7684\u7f16\u8bd1\u4f9d\u8d56\u6587\u4ef6\u6709\u6240\u4e0d\u540c\uff0c\u6700\u7ec8\u6700\u5728out\u76ee\u5f55\u4e2d\u751f\u6210\u7ed9 ninja \u7f16\u8bd1\u5668\u9700\u8981\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u8fc7\u6e90\u6587\u4ef6\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u66f4\u80fd\u591f\u7406\u89e3FlutterEngine\u76ee\u5f55\u4e0b\u7684\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784\u548c\u4f7f\u7528\u5230\u7684\u5185\u5bb9\u4f9d\u8d56\uff0c\u914d\u7f6e\u53c2\u6570\u548c\u751f\u6210\u7684\u6e05\u5355\u6587\u4ef6\uff0c\u63a5\u4e0b\u4e86\u5c31\u9700\u8981\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u7f16\u8bd1\u547d\u4ee4\u548c\u53c2\u6570\uff0c\u4ee5\u53ca\u751f\u6210\u7684\u6587\u4ef6\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e0b\u4e00\u7bc7\u7684\u5b66\u4e60\u6765\u8bfbFlutter\u7f16\u8bd1\u4ea7\u7269\u548c\u4f5c\u7528\u6709\u4e00\u4e2a\u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u3002 \u6267\u884c\u7f16\u8bd1\u547d\u4ee4 NinjaComplie ninja -C out/android_debug_unopt_x86 \u5f00\u59cb\u7f16\u8bd1 android_debug_unopt_x86 \u76ee\u5f55\u4e0b GN \u751f\u6210\u7684\u6784\u5efa\u6587\u4ef6\u5173\u8054\u7684\u6e90\u6587\u4ef6,\u8bfb\u53d6 android_debug_unopt_x86 \u76ee\u5f55\u4e0b\u7684 engine/src/out/android_debug_unopt_x86/build.ninja \u4ece\u8be5\u6587\u4ef6\u5f00\u59cb\u67e5\u627e","title":"Engine\u7f16\u8bd1\u6784\u5efa"},{"location":"android/flutter/EngineCompile/#flutter-engine","text":"","title":"Flutter Engine \u7f16\u8bd1\u6784\u5efa"},{"location":"android/flutter/EngineCompile/#_1","text":"\u5728\u524d\u9762 \u7f16\u8bd1\u73af\u5883\u5b89\u88c5 \uff0c GNTools\u5de5\u5177\u539f\u7406 , Ninja\u7f16\u8bd1\u5de5\u5177\u539f\u7406 \u7684\u7406\u89e3,\u5df2\u7ecf\u4e86\u89e3\u4e86Flutter Engine\u76f8\u5173\u7684\u4e00\u4e0b\u6982\u5ff5\uff0c\u63a5\u4e0b\u6765\uff0c\u7ee7\u7eed\u5206\u6790\u6267\u884c\u7f16\u8bd1\u547d\u4ee4\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u6587\u4ef6\uff0c\u548c\u76f8\u5173\u7684\u903b\u8f91\uff0c\u6709\u4e0e\u7bc7\u5e45\u95ee\u9898\uff0c\u53ea\u4ecb\u7ecd\u76f8\u5173\u7684\u8fd9\u4e9b\u903b\u8f91\u548c\u6784\u5efa\u7684\u6587\u4ef6\u8bf4\u660e(\u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45,....)\uff0c\u6574\u4e2a\u601d\u7ef4\u67b6\u6784\u6253\u901a\u4e86\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u65f6\u95f4\u95ee\u9898\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u514b\u670d\u3002\u3002\u3002\u3002\u3002\u3002\u3002","title":"\u4ecb\u7ecd"},{"location":"android/flutter/EngineCompile/#_2","text":"\u4f18\u70b9 1.\u53ef\u8bfb\u6027\u597d 2.\u901f\u5ea6\u66f4\u5feb 3.\u4fee\u6539gn \u4e4b\u540e \u6784\u5efaninja\u6587\u4ef6\u65f6\u5019\u4f1a\u81ea\u52a8\u66f4\u65b0 4.\u4f9d\u8d56\u5206\u660e \u4e24\u79cd\u6587\u4ef6\u7c7b\u578b BUILID.gn : \u91c7\u7528\u5c42\u7ea7\u7ed3\u6784 \u6587\u4ef6\u6839\u76ee\u5f55\u4e0b\u901a\u5e38\u6709\u4e00\u4e2aBUILD.gn\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u6240\u6709\u7684\u4ee3\u7801\u6a21\u5757\u7ec4\u88c5\u7684\u96c6\u5408 .gni :\u4e00\u822c\u7528\u6765\u6dfb\u52a0\u4e00\u4e9b\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u5728gn\u6587\u4ef6\u4e2dimport\u8fd9\u4e9b\u6587\u4ef6\u6216\u8005\u91cc\u9762\u5b9a\u4e49\u7684\u53d8\u91cf\u53c2\u6570\u503c GNTools \u662f\u4e00\u6b3e\u6784\u5efa\u7cfb\u7edf\uff0c\u7528\u4e8e\u7f16\u8bd1\u5927\u89c4\u6a21\u4ee3\u7801\u751f\u6210ninja\u6587\u4ef6 Ninja \u6e90\u4ee3\u7801\u5206\u6790\u3001\u4f18\u5316\u3001\u7f16\u8bd1\u7cfb\u7edf Flutter Engine Complie Engine\u7f16\u8bd1\u5b98\u65b9\u6559\u7a0b","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"android/flutter/EngineCompile/#_3","text":"\u4f7f\u7528\u4e0d\u540c\u7684\u53c2\u6570\u6307\u5b9a\u6211\u4eec\u51c6\u5907\u8981\u6784\u5efa\u7684flutter\u5f15\u64ce\u652f\u6301\u7684\u5e73\u53f0(Windows,Linux,Mac,Android,IOS,Web,Embedder)\uff0c\u5728\u540c\u4e00\u4e2a\u5e73\u53f0\u4e0a\u652f\u6301\u4e0d\u540c\u7684\u6a21\u5f0f(debug,release,profile),\u63a5\u4e0b\u6765\u6211\u4eec\u600e\u4e48\u73a9\u8fd9\u4e2a\u7cfb\u7edf\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u7684\u652f\u6301\u5e93\uff0c\u548c\u540c\u4e00\u5e73\u53f0\u4e0a\u7684\u4e0d\u540c\u6a21\u5f0f \u9884\u5904\u7406\u7f16\u8bd1\u6587\u4ef6\u4e0d\u540c\u5e73\u53f0\u7684\u7f16\u8bd1\u811a\u672c ./flutter/tools/gn --android --unoptimized for device-side executables. ./flutter/tools/gn --android --android-cpu x86 --unoptimized for x86 emulators. ./flutter/tools/gn --android --android-cpu x64 --unoptimized for x64 emulators. ./flutter/tools/gn --unoptimized for host-side executables, needed to compile the code. ./flutter/tools/gn --ios --unoptimized ./flutter/tools/gn --ios --simulator --unoptimized ./flutter/tools/gn --unoptimized python .\\flutter\\tools\\gn --unoptimized web\u7f16\u8bd1 felt\u5de5\u5177 \u901a\u8fc7\u8fd9\u4e9b\u4e0a\u8ff0\u7684\u547d\u4ee4\uff0c\u8ddf\u8e2a\u547d\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b: ./flutter/tools/gn --android --unoptimized \uff0c\u53c2\u52a0 Flutter Engine \u7f16\u8bd1\u6a21\u5f0f flutter/tools/gn python\u811a\u672c\u4e0b\u5217\u4ee3\u7801 --android \u6307\u5b9a\u5e73\u53f0 --android-cpu x86 cpu\u67b6\u6784 --unoptimized \u662f\u5426\u9700\u8981\u4f18\u5316 \u6267\u884c\u4e0b\u5217\u811a\u672c\u4e3b\u8981\u662f\u5728\u6784\u5efa GN \u6784\u5efa\u811a\u672c\u53c2\u6570: SRC_ROOT = os . path . dirname ( os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ )))) /* \u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u5224\u65ad\u5e73\u53f0\u7684\u8f93\u51fa\u8def\u5f84 */ def get_out_dir ( args ): if args . target_os is not None : target_dir = [ args . target_os ] else : target_dir = [ host ] ........ return os . path . join ( args . out_dir , out , _ . join ( target_dir )) def to_command_line ( gn_args ): def merge ( key , value ): if type ( value ) is bool : return %s = %s % ( key , true if value else false ) return %s = %s % ( key , value ) return [ merge ( x , y ) for x , y in gn_args . iteritems ()] def cpu_for_target_arch ( arch ): if arch in [ ia32 , arm , armv6 , armv5te , mips , simarm , simarmv6 , simarmv5te , simmips , simdbc , armsimdbc ]: return x86 if arch in [ x64 , arm64 , simarm64 , simdbc64 , armsimdbc64 ]: return x64 def to_gn_args ( args ): gn_args = {} # Skia GN args. gn_args [ skia_enable_flutter_defines ] = True # Enable Flutter API guards in Skia. gn_args [ skia_use_dng_sdk ] = False # RAW image handling. gn_args [ skia_use_sfntly ] = False # PDF handling depedency. ............... return gn_args def parse_args ( args ): args = args [ 1 :] parser = argparse . ArgumentParser ( description = A script run` gn gen`. ) parser . add_argument ( --unoptimized , default = False , action = store_true ) parser . add_argument ( --runtime-mode , type = str , choices = [ debug , profile , release ], default = debug ) .......... return parser . parse_args ( args ) def main ( argv ): args = parse_args ( argv ) if sys . platform . startswith (( cygwin , win )): subdir = win elif sys . platform == darwin : subdir = mac-x64 elif sys . platform . startswith ( linux ): subdir = linux-x64 else : raise Error ( Unknown platform: + sys . platform ) command = [ %s /buildtools/ %s /gn % ( SRC_ROOT , subdir ), gen , --check , ] if sys . platform == darwin : # On the Mac, also generate Xcode projects for ease of editing. command . append ( --ide=xcode ) if sys . platform . startswith ( win ): # On Windows, also generate Visual Studio project for ease of editing. command . append ( --ide=vs ) gn_args = to_command_line ( to_gn_args ( args )) out_dir = get_out_dir ( args ) print gn gen --check in %s % out_dir command . append ( out_dir ) command . append ( --args= %s % . join ( gn_args )) gn_call_result = subprocess . call ( command , cwd = SRC_ROOT ) print command [ 1 ] if gn_call_result == 0 : # Generate/Replace the compile commands database in out. compile_cmd_gen_cmd = [ ninja , -C , out_dir , -t , compdb , cc , cxx , objc , objcxx , asm , ] print compile_cmd_gen_cmd [ 2 ] \u8c03\u7528 `GN` \u751f\u6210\u6784\u5efa\u6587\u4ef6 contents = subprocess . check_output ( compile_cmd_gen_cmd , cwd = SRC_ROOT ) compile_commands = open ( %s /out/compile_commands.json % SRC_ROOT , w+ ) compile_commands . write ( contents ) compile_commands . close () return gn_call_result if __name__ == __main__ : sys . exit ( main ( sys . argv ))","title":"\u9884\u5904\u7406\u7f16\u8bd1\u6587\u4ef6"},{"location":"android/flutter/EngineCompile/#gn","text":"./flutter/tools/gn --android --unoptimized \u901a\u8fc7\u8c03\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 .ng \u6587\u4ef6\u5f00\u59cb\u5206\u6790\u6574\u4e2a\u6e90\u7801\u9879\u76ee\u7684\u4f9d\u8d56\u6811 command = [ %s/buildtools/%s/gn % ( SRC_ROOT, subdir ) , gen , --check , ]","title":"\u751f\u6210\u7684GN\u547d\u4ee4\u53c2\u6570"},{"location":"android/flutter/EngineCompile/#gn_1","text":"\u5728\u5f15\u64ce\u7684\u76ee\u5f55\u4e0b engine/src \u67e5\u627e\u5165\u53e3\u7684 .gn \u6587\u4ef6,\u4f7f\u7528 src/tools/gn \u5de5\u5177\u67e5\u627e\u6839\u76ee\u5f55\u6811\u4e0b\u7684\u6e90\u6587\u4ef6\u6811\u548c\u5f00\u59cb\u914d\u7f6e\u6570\u636e # The location of the build configuration file. buildconfig = //build/config/BUILDCONFIG.gn # The secondary source root is a parallel directory tree where # GN build files are placed when they can not be placed directly # in the source tree, e.g. for third party source trees. secondary_source = //build/secondary/ # The set of targets known to pass gn check . When all targets pass, remove # this. check_targets = [ //dart/* , //flow/* , //flutter/* , //glue/* , //mojo/* , //skia/* , //sky/* , ] [1] \u5904\u4f7f\u7528\u6253\u5370\u547d\u4ee4\u8f93\u51fa\u8fd9\u4e9b\u6784\u5efa\u547d\u4ee4\u751f\u6210\u7684\u53c2\u6570\u7c7b\u578b,\u901a\u8fc7\u67e5\u770b\u751f\u6210\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5c31\u80fd\u591f\u7406\u89e3\u5728 Flutter Engine \u7f16\u8bd1\u6a21\u5f0f \u63d0\u5230\u7684\u4e0d\u540c\u6a21\u5f0f\uff0c\u662f\u600e\u4e48\u7ec4\u7ec7\u4ee3\u7801\u548c\u76f8\u5173\u7684\u7f16\u8bd1\u6587\u4ef6\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u57fa\u672c\u7684\u601d\u8def\u548c\u6846\u67b6\u7406\u89e3\u4e86\u4e4b\u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u662f GN \u5de5\u5177\u8c03\u7528 BUILD.gn \u76f8\u5173\u7684\u6587\u4ef6\uff0c\u63d0\u4f9b\u7ed9Ninja\u53bb\u7f16\u8bd1\u7684\u6587\u4ef6 [2] \u5904\u6784\u5efa\u7684\u547d\u4ee4 [ ninja , -C , out/android_debug_unopt , -t , compdb , cc , cxx , objc , objcxx , asm ] \u5728[1]\u6784\u5efa\u7684\u547d\u4ee4\u4e2d\u6307\u5b9a\u4f7f\u7528\u7684 GN \u8def\u5f84 'buildtools/mac-x64/gn' \u63a5\u7740\u4f1a\u8c03\u7528\u6267\u884c /engine/src# ./flutter/tools/gn \u7684Build.gn\u6587\u4ef6 engine/src/BUILD.gn ,\u4f1a\u6839\u636e\u5f53\u524d\u76ee\u5f55\u4e2d\u7684 BUILD.gn \u6587\u4ef6\u914d\u7f6e\u4e00\u5c42\u4e00\u5c42\u7684\u76ee\u5f55\u53bb\u67e5\u627e\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u7684 BUILD.gn ,\u6587\u4ef6\u6bcf\u4e00\u4e2a\u76ee\u5f55\u4e2d\u90fd\u4f1a\u5b9a\u4e49\u5f53\u524d\u76ee\u5f55\u7f16\u8bd1\u7684\u89c4\u5219\u548c\u4f9d\u8d56\u53c2\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u9897\u5012\u6302\u7684\u6811\uff1a\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u914d\u7f6e\uff0c\u914d\u7f6e\u7236\u8282\u70b9\uff0c\u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u6a21\u5757\uff0c\u5c31\u5728\u4e0a\u4e00\u7ea7\u6a21\u5757\u4e2d\u628a\u4e0b\u4e00\u7ea7\u7684 BUILD.gn \u6587\u4ef6\u5f15\u7528\u5c31\u80fd\u591f\u5411\u4e0b\u5305\u542b\u9700\u8981\u7684\u6587\u4ef6\u4f9d\u8d56\u3002\u6700\u7ec8\u751f\u6210 ninja \u7684\u914d\u7f6e\u6587\u4ef6\u3002 /* This target will be built if no target is specified when invoking ninja. */ group ( default ) { testonly = true deps = [ //flutter , ] } group ( dist ) { testonly = true deps = [ //flutter:dist , ] }","title":".gn\u6587\u4ef6\u7684\u67e5\u627e\u8fc7\u7a0b"},{"location":"android/flutter/EngineCompile/#oscpu","text":"\u5728 engine/src/build/config/BUILDCONFIG.gn \u6587\u4ef6\u4e2d\u4e3b\u8981\u914d\u7f6e\u5185\u5bb9: \u6307\u5b9aFlutter\u6e90\u7801\u76ee\u5f55 \u6307\u5b9a\u5e73\u53f0\u67b6\u6784 \u6307\u5b9a\u4e00\u4e9b\u6784\u5efa\u6807\u8bc6 \u6307\u5b9a\u7cfb\u7edf(Window,Mac,Linux,Android,ios) \u6307\u5b9a\u5de5\u5177\u94fe\u7684\u4f7f\u7528 \u7b2c\u4e09\u65b9\u5f00\u6e90\u5e93\u7684\u4f7f\u7528","title":"\u5982\u4f55\u914d\u7f6eOS,CPU,\u7f16\u8bd1\u5de5\u5177\u94fe"},{"location":"android/flutter/EngineCompile/#flutter","text":"# Set the root of the engine project. flutter_root = //flutter","title":"\u6307\u5b9aflutter\u7684\u6839\u76ee\u5f55"},{"location":"android/flutter/EngineCompile/#_4","text":"\u4f7f\u7528\u7684\u53d8\u91cf - host_os, host_cpu, host_toolchain - target_os, target_cpu, default_toolchain - current_os, current_cpu, current_toolchain.","title":"\u6307\u5b9a\u5e73\u53f0"},{"location":"android/flutter/EngineCompile/#build-flag","text":"declare_args () { # How many symbols to include in the build. This affects the performance of # the build since the symbols are large and dealing with them is slow. # 2 means regular build with symbols. # 1 means minimal symbols, usually enough for backtraces only. # 0 means no symbols. # -1 means auto-set (off in release, regular in debug). symbol_level = -1 # Component build. is_component_build = false # Official build. is_official_build = false # Debug build. is_debug = true # Whether we re a traditional desktop unix. is_desktop_linux = current_os == linux current_os ! = chromeos # Set to true when compiling with the Clang compiler. Typically this is used # to configure warnings. is_clang = current_os == mac || current_os == ios || current_os == linux || current_os == chromeos # Compile for Address Sanitizer to find memory bugs. is_asan = false # Compile for Leak Sanitizer to find leaks. is_lsan = false # Compile for Memory Sanitizer to find uninitialized reads. is_msan = false # Compile for Thread Sanitizer to find threading bugs. is_tsan = false # Compile for Undefined Behavior Sanitizer. is_ubsan = false if ( current_os == chromeos ) { # Allows the target toolchain to be injected as arguments. This is needed # to support the CrOS build system which supports per-build-configuration # toolchains. cros_use_custom_toolchain = false } # DON T ADD MORE FLAGS HERE. Read the comment above. }","title":"build Flag"},{"location":"android/flutter/EngineCompile/#_5","text":"Windows,Linux,Mac,Android,IOS,Web,embedder f ( current_os == mac ) { is_android = false is_chromeos = false is_fuchsia = false is_fuchsia_host = false is_ios = false is_linux = false is_mac = true is_posix = true is_win = false } else if ( current_os == android ) { is_android = true is_chromeos = false is_fuchsia = false is_fuchsia_host = false is_ios = false is_linux = false is_mac = false is_posix = true is_win = false } ............","title":"\u6307\u5b9a\u5e73\u53f0"},{"location":"android/flutter/EngineCompile/#_6","text":"import ( //build/toolchain/custom/custom.gni ) # Define this to allow Fuchsia s fork of harfbuzz to build. # shlib_toolchain is a Fuchsia-specific symbol and not used by Flutter. shlib_toolchain = false if ( custom_toolchain ! = ) { assert ( custom_sysroot ! = ) assert ( custom_target_triple ! = ) host_toolchain = //build/toolchain/linux:clang_ $host_cpu set_default_toolchain ( //build/toolchain/custom ) } else if ( is_win ) { # On windows we use the same toolchain for host and target by default. host_toolchain = //build/toolchain/win: $current_cpu set_default_toolchain ( $host_toolchain ) } else if ( is_android ) { if ( host_os == linux ) { # Use clang for the x86/64 Linux host builds. if ( host_cpu == x86 || host_cpu == x64 ) { host_toolchain = //build/toolchain/linux:clang_ $host_cpu } else { host_toolchain = //build/toolchain/linux: $host_cpu } } else if ( host_os == mac ) { host_toolchain = //build/toolchain/mac:clang_ $host_cpu } else if ( host_os == win ) { host_toolchain = //build/toolchain/win: $current_cpu } else { assert ( false, Unknown host for android cross compile ) } if ( is_clang ) { set_default_toolchain ( //build/toolchain/android:clang_ $current_cpu ) } else { set_default_toolchain ( //build/toolchain/android: $current_cpu ) } } else if ( is_linux ) { if ( is_clang ) { host_toolchain = //build/toolchain/linux:clang_ $host_cpu set_default_toolchain ( //build/toolchain/linux:clang_ $current_cpu ) } else { host_toolchain = //build/toolchain/linux: $host_cpu set_default_toolchain ( //build/toolchain/linux: $current_cpu ) } if ( is_chromeos cros_use_custom_toolchain ) { set_default_toolchain ( //build/toolchain/cros:target ) } } else if ( is_mac ) { host_toolchain = //build/toolchain/mac:clang_x64 set_default_toolchain ( host_toolchain ) } else if ( is_ios ) { import ( //build/config/ios/ios_sdk.gni ) # For use_ios_simulator host_toolchain = //build/toolchain/mac:clang_ $host_cpu if ( use_ios_simulator ) { set_default_toolchain ( //build/toolchain/mac:ios_clang_x64 ) } else { set_default_toolchain ( //build/toolchain/mac:ios_clang_arm ) } } else if ( is_fuchsia ) { if ( host_os == mac ) { host_toolchain = //build/toolchain/mac:clang_ $host_cpu } else { host_toolchain = //build/toolchain/linux:clang_ $host_cpu } set_default_toolchain ( //build/toolchain/fuchsia ) } else { assert ( false, Toolchain not set because of unknown platform. ) } # Sets default dependencies for executable and shared_library targets. # # Variables # no_default_deps: If true, no standard dependencies will be added. if ( is_android || ( is_linux current_cpu ! = x86 )) { foreach ( _target_type, [ executable , loadable_module , shared_library , ]) { template ( _target_type ) { target ( _target_type, target_name ) { forward_variables_from ( invoker, * , [ no_default_deps ]) if ( !defined ( deps )) { deps = [] } if ( !defined ( invoker.no_default_deps ) || !invoker.no_default_deps ) { deps += [ //third_party/libcxx ] } } } } }","title":"\u5de5\u5177\u94fe\u8bbe\u7f6e"},{"location":"android/flutter/EngineCompile/#component","text":"\u6307\u5b9a\u9700\u8981\u4f9d\u8d56\u7684\u5171\u4eab\u5e93\u548c\u6e90\u6587\u4ef6\u76ee\u5f55\uff0c\u6240\u6709\u7684\u4f9d\u8d56\u914d\u7f6e\u6587\u4ef6\u9876\u5c42\u6587\u4ef6\u76ee\u5f55 //build/config/sanitizers:deps //build/config/sanitizers:deps if ( is_component_build ) { component_mode = shared_library } else { component_mode = source_set } if ( defined ( invoker.deps )) { deps = invoker.deps + [ //build/config/sanitizers:deps ] } else { deps = [ //build/config/sanitizers:deps , ] } ....engine/src/build/config/sanitizers/BUILD.gn \u6307\u5b9a\u7b2c\u4e09\u65b9\u5e93\u7684\u4f9d\u8d56.... # Contains the dependencies needed for sanitizers to link into executables and # shared_libraries. Unconditionally depend upon this target as it is empty if # |is_asan|, |is_lsan|, |is_tsan|, |is_msan| and |use_custom_libcxx| are false. group ( deps ) { deps = [ //third_party/instrumented_libraries:deps , ] if ( is_asan || is_lsan || is_tsan || is_msan ) { public_configs = [ :sanitizer_options_link_helper ] deps += [ :options_sources ] } if ( use_custom_libcxx ) { deps += [ //buildtools/third_party/libc++:libcxx_proxy ] } }","title":"COMPONENT \u914d\u7f6e"},{"location":"android/flutter/EngineCompile/#gn_2","text":"[ buildtools/mac-x64/gn , gen , --check , --ide=xcode , out/android_debug_unopt , --args=skia_enable_pdf=false enable_lto=false use_clang_static_analyzer=false full_dart_sdk=false dart_runtime_mode= develop skia_use_fontconfig=false skia_use_dng_sdk=false skia_enable_flutter_defines=true use_goma=false dart_custom_version_for_pub= flutter embedder_for_target=false is_official_build=true host_cpu= x86 # \u7f16\u8bd1\u4e3b\u673a\u67b6\u6784 is_clang=true skia_use_sfntly=false dart_target_arch= arm flutter_runtime_mode= debug goma_dir= None android_full_debug=true target_os= android # \u751f\u6210\u7684\u76ee\u6807\u5e73\u53f0 mac_sdk_path= skia_use_x11=false enable_coverage=false target_cpu= arm # \u76ee\u6807cpu\u67b6\u6784 skia_use_expat=true dart_lib_export_symbols=false is_debug=true # debug\u6a21\u5f0f flutter_aot=false # \u4e0d\u9700\u8981\u4f18\u5316 ] \u63a5\u7740\u8fdb\u5165 //Flutter \u76ee\u5f55\u67e5\u627e`# Copyright 2013 The Flutter Authors. All rights reserved. import ( $flutter_root /common/config.gni ) import ( //third_party/dart/build/dart/dart_action.gni ) !-- # Temporary snapshot copy rules until we can use the full SDK. -- _flutter_sdk_snapshots = [ [ dart2js , //third_party/dart/utils/compiler:dart2js , ] , [ kernel_worker , //third_party/dart/utils/bazel:kernel_worker , ] , ] group ( flutter ) { testonly = true public_deps = [ $flutter_root /lib/snapshot:generate_snapshot_bin , $flutter_root /lib/snapshot:kernel_platform_files , $flutter_root /shell/platform/embedder:flutter_engine , $flutter_root /sky , ] if ( current_toolchain == host_toolchain ) { public_deps += [ $flutter_root /shell/testing ] } if ( !is_fuchsia !is_fuchsia_host ) { if ( current_toolchain == host_toolchain ) { public_deps += [ $flutter_root /frontend_server , //third_party/dart:create_sdk , $flutter_root /lib/stub_ui:stub_ui , :dart2js_platform_files , :flutter_dartdevc_kernel_sdk , ] foreach ( snapshot, _flutter_sdk_snapshots ) { public_deps += [ :copy_flutter_ ${ snapshot [0] } _snapshot ] } } } !-- # If on the host, compile all unittests targets. -- if ( current_toolchain == host_toolchain ) { if ( is_mac ) { public_deps += [ $flutter_root /shell/platform/darwin:flutter_channels_unittests ] } public_deps += [ $flutter_root /flow:flow_unittests , $flutter_root /fml:fml_unittests , $flutter_root /runtime:runtime_unittests , $flutter_root /shell/common:shell_unittests , $flutter_root /shell/platform/embedder:embedder_unittests , $flutter_root /shell/platform/embedder:embedder_a11y_unittests , # TODO(cbracken) build these into a different kernel blob in the embedder tests and load that in a test in embedder_unittests $flutter_root /synchronization:synchronization_unittests , $flutter_root /third_party/txt:txt_unittests , ] if ( !is_win ) { public_deps += [ $flutter_root /shell/common:shell_benchmarks ] } } } config ( config ) { include_dirs = [ .. ] } group ( dist ) { testonly = true deps = [ $flutter_root /sky/dist , ] } foreach ( snapshot, _flutter_sdk_snapshots ) { copy ( copy_flutter_ ${ snapshot [0] } _snapshot ) { deps = [ snapshot [ 1 ] , ] sources = [ $root_gen_dir / ${ snapshot [0] } .dart.snapshot , ] outputs = [ $root_out_dir /dart-sdk/bin/snapshots/flutter_{{source_file_part}} , ] } } copy ( dart2js_platform_files ) { deps = [ //third_party/dart/utils/compiler:compile_dart2js_platform ] sources = [ $root_out_dir /dart2js_outline.dill , $root_out_dir /dart2js_platform.dill , ] outputs = [ $root_out_dir /flutter_patched_sdk/{{source_file_part}} , ] } prebuilt_dart_action ( flutter_dartdevc_kernel_sdk ) { deps = [ //third_party/dart:create_sdk , ] packages = //third_party/dart/.packages script = //third_party/dart/pkg/dev_compiler/tool/kernel_sdk.dart inputs = [ //third_party/dart/pkg/dev_compiler/tool/kernel_sdk.dart , ] outputs = [ $target_gen_dir /kernel/amd/dart_sdk.js , $target_gen_dir /kernel/amd/dart_sdk.js.map , $target_gen_dir /kernel/common/dart_sdk.js , $target_gen_dir /kernel/common/dart_sdk.js.map , $target_gen_dir /kernel/es6/dart_sdk.js , $target_gen_dir /kernel/es6/dart_sdk.js.map , $target_gen_dir /kernel/legacy/dart_sdk.js , $target_gen_dir /kernel/legacy/dart_sdk.js.map , ] libraries_path = rebase_path ( $flutter_root /lib/snapshot/libraries.json ) output_path = rebase_path ( $target_gen_dir /kernel/flutter_ddc_sdk.dill ) args = [ --output= $output_path , --libraries= $libraries_path , ] }","title":"\u4f7f\u7528gn\u547d\u4ee4\u548c\u53c2\u6570\u4e4b\u540e\u751f\u6210\u7f16\u8bd1\u6e05\u5355\u6587\u4ef6"},{"location":"android/flutter/EngineCompile/#ninja","text":"\u901a\u8fc7 GN \u5de5\u5177\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u4e4b\u540e\u4f1a\u5728 out \u76ee\u5f55\u4e2d\u751f\u6210\u76f8\u5173\u7684 Ninja \u914d\u7f6e\u6587\u4ef6 GN\u4ea7\u751f\u7684\u6587\u4ef6\u8bf4\u660e args.gn # \u4f7f\u7528 GN \u5de5\u5177\u6784\u5efa\u662f\u751f\u6210\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u53ef\u4ee5\u9a8c\u8bc1\u914d\u7f6e\u53c2\u6570\u662f\u5426\u6b63\u786e build.ninja # Ninja \u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u662f\u9ed8\u8ba4\u7684\u7f16\u8bd1\u811a\u672c build.ninja.d # GN \u4ea7\u751f\u6784\u5efa\u6587\u4ef6\u67e5\u627e\u7684\u6587\u4ef6\u8def\u5f84 \u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u4e86\u89e3\u4e00\u4e0b\u76ee\u5f55\u7684\u5185\u5bb9,\u8be6\u7ec6\u7684\u7f16\u8bd1\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u5728\u4e0b\u4e00\u7bc7\u4e2d\u5728\u8fdb\u884c\u8be6\u7ec6\u8bf4\u660e \u279c android_debug_unopt_x86 git: ( master ) \u2717 tree -L 3 . \u251c\u2500\u2500 all.xcworkspace \u2502 \u2514\u2500\u2500 contents.xcworkspacedata \u251c\u2500\u2500 args.gn # \u4f7f\u7528`GN`\u5de5\u5177\u6784\u5efa\u662f\u751f\u6210\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u53ef\u4ee5\u9a8c\u8bc1\u914d\u7f6e\u53c2\u6570\u662f\u5426\u6b63\u786e \u251c\u2500\u2500 build.ninja # Ninja \u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u662f\u9ed8\u8ba4\u7684\u7f16\u8bd1\u811a\u672c \u251c\u2500\u2500 build.ninja.d # GN \u4ea7\u751f\u6784\u5efa\u6587\u4ef6\u67e5\u627e\u7684\u6587\u4ef6\u8def\u5f84 \u251c\u2500\u2500 clang_x64 \u2502 \u251c\u2500\u2500 obj \u2502 \u2502 \u2514\u2500\u2500 third_party \u2502 \u2514\u2500\u2500 toolchain.ninja \u251c\u2500\u2500 clang_x86 \u2502 \u251c\u2500\u2500 obj \u2502 \u2502 \u2514\u2500\u2500 third_party \u2502 \u2514\u2500\u2500 toolchain.ninja \u251c\u2500\u2500 dart-sdk \u2502 \u2514\u2500\u2500 bin \u2502 \u2514\u2500\u2500 snapshots \u251c\u2500\u2500 gyp-mac-tool \u251c\u2500\u2500 obj \u2502 \u251c\u2500\u2500 flutter \u2502 \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u251c\u2500\u2500 benchmarking \u2502 \u2502 \u251c\u2500\u2500 common \u2502 \u2502 \u251c\u2500\u2500 flow \u2502 \u2502 \u251c\u2500\u2500 fml \u2502 \u2502 \u251c\u2500\u2500 lib \u2502 \u2502 \u251c\u2500\u2500 runtime \u2502 \u2502 \u251c\u2500\u2500 shell \u2502 \u2502 \u251c\u2500\u2500 synchronization \u2502 \u2502 \u251c\u2500\u2500 testing \u2502 \u2502 \u251c\u2500\u2500 third_party \u2502 \u2502 \u2514\u2500\u2500 vulkan \u2502 \u2514\u2500\u2500 third_party \u2502 \u251c\u2500\u2500 android_tools \u2502 \u251c\u2500\u2500 benchmark \u2502 \u251c\u2500\u2500 boringssl \u2502 \u251c\u2500\u2500 cpu-features \u2502 \u251c\u2500\u2500 dart \u2502 \u251c\u2500\u2500 expat \u2502 \u251c\u2500\u2500 freetype2 \u2502 \u251c\u2500\u2500 googletest \u2502 \u251c\u2500\u2500 harfbuzz \u2502 \u251c\u2500\u2500 icu \u2502 \u251c\u2500\u2500 libcxx \u2502 \u251c\u2500\u2500 libcxxabi \u2502 \u251c\u2500\u2500 libjpeg-turbo \u2502 \u251c\u2500\u2500 libpng \u2502 \u251c\u2500\u2500 libwebp \u2502 \u251c\u2500\u2500 rapidjson \u2502 \u251c\u2500\u2500 skia \u2502 \u251c\u2500\u2500 tonic \u2502 \u2514\u2500\u2500 zlib \u251c\u2500\u2500 products.xcodeproj \u2502 \u2514\u2500\u2500 project.pbxproj \u2514\u2500\u2500 toolchain.ninja 45 directories, 9 files","title":"ninja\u914d\u7f6e\u6587\u4ef6"},{"location":"android/flutter/EngineCompile/#argsgn","text":"skia_enable_pdf = false enable_lto = false use_clang_static_analyzer = false full_dart_sdk = false dart_runtime_mode = develop skia_use_fontconfig = false skia_use_dng_sdk = false skia_enable_flutter_defines = true use_goma = false dart_custom_version_for_pub = flutter embedder_for_target = false is_official_build = true host_cpu = x86 is_clang = true skia_use_sfntly = false dart_target_arch = x86 flutter_runtime_mode = debug goma_dir = None android_full_debug = true target_os = android mac_sdk_path = skia_use_x11 = false enable_coverage = false target_cpu = x86 skia_use_expat = true dart_lib_export_symbols = false is_debug = true flutter_aot = false","title":"args.gn"},{"location":"android/flutter/EngineCompile/#buildninja","text":"\u8bb0\u5f55\u7f16\u8bd1\u7684\u76f8\u5173\u8fde\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u6765\u8ddf\u8e2a\u6e90\u4ee3\u7801\u7684\u53d8\u5316\u4fe1\u606f ninja_required_version = 1 .7.2 rule gn command = ../../buildtools/mac-x64/gn --root = ../.. -q --check --ide = xcode gen . description = Regenerating ninja files build build.ninja: gn generator = 1 depfile = build.ninja.d subninja toolchain.ninja subninja clang_x64/toolchain.ninja subninja clang_x86/toolchain.ninja build default: phony obj/default.stamp build dist: phony obj/dist.stamp build flutter: phony obj/flutter/flutter.stamp build _http: phony obj/flutter/sky/packages/sky_engine/_http.stamp build android: phony obj/flutter/shell/platform/android/android.stamp build android_arch_lifecycle_common: phony obj/flutter/shell/platform/android/android_arch_lifecycle_common.stamp build all: phony $ obj/default.stamp $ obj/dist.stamp $ ........... obj/third_party/zlib/libzlib_x86_simd.a default default","title":"build.ninja"},{"location":"android/flutter/EngineCompile/#buildninjad","text":"\u8be5\u6587\u4ef6\u4e2d\u8bb0\u5f55\u4e86 GN \u6587\u4ef6\u4fdd\u5b58\u7684\u6784\u5efa\u6587\u4ef6\u7684\u8def\u5f84,\u5728GN\u5b8c\u6210\u4e4b\u540e\u751f\u6210\u7684\u6587\u4ef6\u4f9d\u8d56\u8def\u5f84\u4e2d\u7684\u6587\u4ef6\u53ef\u4ee5\u5728\u6587\u4ef6\u4e2d\u627e\u5230\uff0c\u8fd9\u4e2a\u6587\u4ef6\u8bb0\u5f55\u4e86\u7f16\u8bd1\u662f\u7684\u6240\u6709\u6587\u4ef6\u4f1a\u4ece\u8fd9\u4e9b\u6587\u4ef6\u7684\u8def\u5f84\u4e2d\u6ce8\u610f\u67e5\u627e build.ninja: ../../BUILD.gn ../../build/compiled_action.gni ../../build/config/BUILD.gn ......... ../../third_party/tonic/scopes/BUILD.gn ../../third_party/tonic/typed_data/BUILD.gn ../../third_party/zlib/BUILD.gn","title":"build.ninja.d"},{"location":"android/flutter/EngineCompile/#_7","text":"\u6211\u4eec\u5206\u6790\u4e86\u4f7f\u7528 GN \u5de5\u5177\u5bf9\u76f8\u5173\u7684\u6e90\u6587\u4ef6\u548c\u914d\u7f6e\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\uff0c\u4e0d\u540c\u5e73\u53f0\u7248\u672c\uff0c\u7edf\u4e00\u5e73\u53f0\u7684\u4e0d\u540c\u6a21\u5f0f\u7684\u7f16\u8bd1\u4f9d\u8d56\u6587\u4ef6\u6709\u6240\u4e0d\u540c\uff0c\u6700\u7ec8\u6700\u5728out\u76ee\u5f55\u4e2d\u751f\u6210\u7ed9 ninja \u7f16\u8bd1\u5668\u9700\u8981\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u8fc7\u6e90\u6587\u4ef6\u7684\u5b66\u4e60\uff0c\u6211\u4eec\u66f4\u80fd\u591f\u7406\u89e3FlutterEngine\u76ee\u5f55\u4e0b\u7684\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784\u548c\u4f7f\u7528\u5230\u7684\u5185\u5bb9\u4f9d\u8d56\uff0c\u914d\u7f6e\u53c2\u6570\u548c\u751f\u6210\u7684\u6e05\u5355\u6587\u4ef6\uff0c\u63a5\u4e0b\u4e86\u5c31\u9700\u8981\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u7f16\u8bd1\u547d\u4ee4\u548c\u53c2\u6570\uff0c\u4ee5\u53ca\u751f\u6210\u7684\u6587\u4ef6\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e0b\u4e00\u7bc7\u7684\u5b66\u4e60\u6765\u8bfbFlutter\u7f16\u8bd1\u4ea7\u7269\u548c\u4f5c\u7528\u6709\u4e00\u4e2a\u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u3002","title":"\u603b\u7ed3"},{"location":"android/flutter/EngineCompile/#_8","text":"NinjaComplie ninja -C out/android_debug_unopt_x86 \u5f00\u59cb\u7f16\u8bd1 android_debug_unopt_x86 \u76ee\u5f55\u4e0b GN \u751f\u6210\u7684\u6784\u5efa\u6587\u4ef6\u5173\u8054\u7684\u6e90\u6587\u4ef6,\u8bfb\u53d6 android_debug_unopt_x86 \u76ee\u5f55\u4e0b\u7684 engine/src/out/android_debug_unopt_x86/build.ninja \u4ece\u8be5\u6587\u4ef6\u5f00\u59cb\u67e5\u627e","title":"\u6267\u884c\u7f16\u8bd1\u547d\u4ee4"},{"location":"android/flutter/EngineInit/","text":"\bFlutterEngine\u5f15\u64ce\u521d\u59cb\u5316 \u5728 Android\u52a0\u8f7dDart\u6587\u4ef6 \u548c Android\u521d\u59cb\u5316View \u4e24\u7bc7\u4ee3\u7801\u5206\u6790\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5df2\u7ecf\u5206\u6790\u4e86\u52a0\u8f7d libflutter.so \u7684\u521d\u59cb\u5316\u8bdd\u8fc7\u7a0b\uff0c platform_view_android_jni.cc \u4e2d\u8c03\u7528 AttachJNI \u521d\u59cb\u5316 AndroidShellHolder \u5bf9\u8c61\u5bf9\u5e73\u53f0\u8fdb\u884c\u521d\u59cb\u5316,\u8fdb\u884c\u6765\u5206\u6790FlutterEngine\u521d\u59cb\u5316\u8fc7\u7a0b\u3002 Flutter Engine\u521d\u59cb\u5316\u8fc7\u7a0b 1. Platfrom,UI,IO,GUP \u7ebf\u7a0b\u7684\u7ba1\u7406\uff0c\u914d\u7f6e\u53c2\u6570\u7684\u7684\u52a0\u8f7d 2.\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c 3. thread_host_ \u8d1f\u8d23\u7ba1\u7406\u76f8\u5173\u7684\u7ebf\u7a0b,\u6258\u7ba1\u56db\u4e2a\u76f8\u5904 TaskRunner , TaskRunners 4. PlatformViewAndroid \u7684\u521b\u5efa\uff0c\u8d1f\u8d23\u7ba1\u7406\u5e73\u53f0\u4fa7\u662f\u4e8b\u4ef6\u5904\u7406\u5728UI\u7ebf\u7a0b\b\u6267\u884c 5. Rasterizer \u7684\u521d\u59cb\u5316\u6805\u683c\u5316\u5728GPU\u7ebf\u7a0b\u6267\u884c 6. MessageLoop \u7684\u521b\u5efa\uff0c\u5728platfrom\u4e2d\u8fd0\u884c 7. TaskRunners \u7ba1\u7406\u6dfb\u52a0\u5230\u4e0d\u540c\u5e73\u53f0\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\uff0c\b\u8d1f\u8d23\u7ba1\u7406\u56db\u4e2a\b\u4efb\u52a1\u8fd0\u884c\u5668 8. Shell \u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cJava\u865a\u62df\u673a\u7684\u521b\u5efa \u52a0\u8f7dFlutter\u8d44\u6e90 JNI_OnLoad Flutter.so\u4e2dAndroid\u7aef\u7684\u5165\u53e3\u51fd\u6570 engine/src/flutter/shell/platform/android/library_loader.cc Java\u52a0\u8f7dFlutter.so\u5e93\u5b8c\u6210\u65f6\uff0c\u5f00\u59cb\u521d\u59cb\u5316Flutter\u5f15\u64ce 1.\u6ce8\u518cFlutter\u5c42\u7684\u4ee3\u7801 2.\u521d\u59cb\u5316AndroidView 3.\u521d\u59cb\u5316FlutterMain \u5728\b\bAndroid\u7aef\b\u521d\u59cb\u5316Flutter \u76f8\u5173\u7684\u73af\u5883\b\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u6765\u5b8c\u6210\uff1a // This is called by the VM when the shared library is first loaded. JNIEXPORT jint JNI_OnLoad ( JavaVM * vm , void * reserved ) { // Initialize the Java VM. fml :: jni :: InitJavaVM ( vm ); JNIEnv * env = fml :: jni :: AttachCurrentThread (); bool result = false ; // Register FlutterMain. result = shell :: FlutterMain :: Register ( env ); FML_CHECK ( result ); // Register PlatformView result = shell :: PlatformViewAndroid :: Register ( env ); FML_CHECK ( result ); // Register VSyncWaiter. result = shell :: VsyncWaiterAndroid :: Register ( env ); FML_CHECK ( result ); return JNI_VERSION_1_4 ; } FlutterMain::Register(env); 1.\u8f6c\u6362FlutterJNI\u4e2d\u7684 nativeInit \u51fd\u6570\u5230JNI init \u51fd\u6570\u5e76\u4e14\u521d\u59cb\u5316\u76f8\u5173\u7684\u5f15\u64ce 2.\u52a0\u8f7d FlutterMain \u4e2d\u7684\u6240\u6709native\u51fd\u6570 \u5f00\u59cb\u521d\u59cb\u5316Register\u67e5\u627eFlutter.jar\u4e2d\u7684Java\u65b9\u6cd5 bool FlutterMain :: Register ( JNIEnv * env ) { static const JNINativeMethod methods [] = { { . name = nativeInit , . signature = (Landroid/content/Context;[Ljava/lang/String;Ljava/ lang/String;Ljava/lang/String;Ljava/lang/String;)V , . fnPtr = reinterpret_cast void * ( Init ), }, { . name = nativeRecordStartTimestamp , . signature = (J)V , . fnPtr = reinterpret_cast void * ( RecordStartTimestamp ), }, }; jclass clazz = env - FindClass ( io/flutter/view/FlutterMain ); if ( clazz == nullptr ) { return false ; } return env - RegisterNatives ( clazz , methods , arraysize ( methods )) == 0 ; } FlutterMain.cc\u6587\u4ef6\u65f6FlutterEngine\u548cAndroid\u5e73\u53f0\u76f8\u5173\u7684\u5165\u53e3\u7c7b\uff0c\u4e3b\u8981\u5904\u7406Android\u76f8\u5173\u7684\u8d44\u6e90\u6587\u4ef6\u548c\u521d\u59cb\u5316FlutterMain.cc 1.\u5728\u8c03\u7528Register\u51fd\u6570\u65f6\uff0c\u5df2\u7ecf\u628aFlutterJNI\u4e2d\u7684 nativeInit \u6620\u5c04\u5230FlutterMain\u4e2d\u7684 nativeInit ,\u4f20\u5165Flutter\u5728Android\u7aef\u7684\u76f8\u5173\u6587\u4ef6 2.\u627e\u5230Android\u5f15\u64ce\u542f\u52a8\u65f6\u4eceApk\u5305\u4e2d\u89e3\u538b\u51fa\u6765\u7684\u8d44\u6e90\u6587\u4ef6 3.\u52a0\u8f7dFlutter\u7f16\u8bd1\u51fa\u6765\u7684\u76f8\u5173\u6587\u4ef6 kernel_blob 4.\u521d\u59cb\u5316FlutterMain g_flutter_main.reset(new FlutterMain(std::move(settings))); void FlutterMain :: Init ( JNIEnv * env , jclass clazz , jobject context , jobjectArray jargs , jstring bundlePath , jstring appStoragePath , jstring engineCachesPath ) { std :: vector std :: string args ; args . push_back ( flutter ); for ( auto arg : fml :: jni :: StringArrayToVector ( env , jargs )) { args . push_back ( std :: move ( arg )); } auto command_line = fml :: CommandLineFromIterators ( args . begin (), args . end ()); auto settings = SettingsFromCommandLine ( command_line ); settings . assets_path = fml :: jni :: JavaStringToString ( env , bundlePath ); // Restore the callback cache. // TODO(chinmaygarde): Route all cache file access through FML and remove this // setter. blink :: DartCallbackCache :: SetCachePath ( fml :: jni :: JavaStringToString ( env , appStoragePath )); fml :: paths :: InitializeAndroidCachesPath ( fml :: jni :: JavaStringToString ( env , engineCachesPath )); blink :: DartCallbackCache :: LoadCacheFromDisk (); if ( ! blink :: DartVM :: IsRunningPrecompiledCode ()) { // Check to see if the appropriate kernel files are present and configure // settings accordingly. auto application_kernel_path = fml :: paths :: JoinPaths ({ settings . assets_path , kernel_blob.bin }); if ( fml :: IsFile ( application_kernel_path )) { settings . application_kernel_asset = application_kernel_path ; } } settings . task_observer_add = []( intptr_t key , fml :: closure callback ) { fml :: MessageLoop :: GetCurrent (). AddTaskObserver ( key , std :: move ( callback )); }; settings . task_observer_remove = []( intptr_t key ) { fml :: MessageLoop :: GetCurrent (). RemoveTaskObserver ( key ); }; #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // There are no ownership concerns here as all mappings are owned by the // embedder and not the engine. auto make_mapping_callback = []( const uint8_t * mapping , size_t size ) { return [ mapping , size ]() { return std :: make_unique fml :: NonOwnedMapping ( mapping , size ); }; }; settings . dart_library_sources_kernel = make_mapping_callback ( kPlatformStrongDill , kPlatformStrongDillSize ); #endif // FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // Not thread safe. Will be removed when FlutterMain is refactored to no // longer be a singleton. g_flutter_main . reset ( new FlutterMain ( std :: move ( settings ))); } \u5012\u76ee\u524d\u4e3a\u6b62\u5df2\u7ecf\u52a0\u8f7d\u5b8c\u6210Flutter\u76f8\u5173\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u5f00\u59cb\u521d\u59cb\u5316View\u76f8\u5173\u7684\u903b\u8f91\u548cAndroid\u7aef\u901a\u4fe1 \b\u5728\u4e0b\u56fe\u4e2d\b: 1.\u521d\u59cb\u5316\bFlutter Engine \b\b\u8fd0\u884c\b\bFlutterUI\u5e93\u7684\u73af\u5883\uff0c\b\u521d\u59cb\u5316AndroidShellHolder\uff1a\u6765\u7ba1\u7406Flutter\u76f8\u5173\u7684\u5f15\u73af\u5883 2. PlatformViewAndroid \u5728JNI\u5c42\u8fdb\u884cView\u7684\u7ed8\u5236\u548c\u4e8b\u4ef6\u5904\u7406,\u6ce8\u518cSurfaceView\u7ed9Flutter Eingine\uff0c\u63d0\u4f9b\u7ed9\u5f15\u64ce\u8fdb\u884c\u7ed8\u5236\u7684\u753b\u5e03\uff0c\b\b\u8c03\u7528ANative_window\u7c7b\u6765\u8fde\u63a5FlutterUI\u548c\bAndroidUI\u7684\u6865\u6881 \b PlatformViewAndroid JNI\u8c03\u7528\u7684\u7ed1\u5b9a\u5173\u7cfb \u521d\u59cb\u5316Android\u5e73\u53f0\u76f8\u5173\u7684View\u903b\u8f91\uff0c\u7ed1\u5b9aFlutter.jar\u7c7b\u548cAndroid \u7ed8\u56fe\u5f15\u64ce\u7684\u521d\u59cb\u5316\u7ed1\u5b9a\u5de5\u4f5c\uff0c\u521d\u59cb\u5316\u5de5\u4f5c\u4e3b\u8981\u7684\u5185\u5bb9\u662f\u5728\u6ce8\u518c\u76f8\u5173\u7684Java\u5c42\u7684\u672c\u5730\u65b9\u6cd5\u5230JNI\u5c42\uff0c\u5efa\u7acb\u597dC++\u548cJava\u5c42\u76f8\u4e92\u8c03\u7528\u51fd\u6570\u5173\u7cfb 1.io/flutter/view/FlutterCallbackInformation 2.io/flutter/embedding/engine/FlutterJNI 3.android/graphics/SurfaceTexture 4.attachToGLContext 5.updateTexImage 6.getTransformMatrix 7.detachFromGLContext bool PlatformViewAndroid :: Register ( JNIEnv * env ) { if ( env == nullptr ) { FML_LOG ( ERROR ) No JNIEnv provided ; return false ; } g_flutter_callback_info_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( io/flutter/view/FlutterCallbackInformation )); if ( g_flutter_callback_info_class - is_null ()) { FML_LOG ( ERROR ) Could not locate FlutterCallbackInformation class ; return false ; } g_flutter_callback_info_constructor = env - GetMethodID ( g_flutter_callback_info_class - obj (), init , (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V ); if ( g_flutter_callback_info_constructor == nullptr ) { FML_LOG ( ERROR ) Could not locate FlutterCallbackInformation constructor ; return false ; } g_flutter_jni_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( io/flutter/embedding/engine/FlutterJNI )); if ( g_flutter_jni_class - is_null ()) { FML_LOG ( ERROR ) Failed to find FlutterJNI Class. ; return false ; } g_surface_texture_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( android/graphics/SurfaceTexture )); if ( g_surface_texture_class - is_null ()) { FML_LOG ( ERROR ) Could not locate SurfaceTexture class ; return false ; } static const JNINativeMethod callback_info_methods [] = { { . name = nativeLookupCallbackInformation , . signature = (J)Lio/flutter/view/FlutterCallbackInformation; , . fnPtr = reinterpret_cast void * ( shell :: LookupCallbackInformation ), }, }; if ( env - RegisterNatives ( g_flutter_callback_info_class - obj (), callback_info_methods , arraysize ( callback_info_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterCallbackInfo ; return false ; } g_attach_to_gl_context_method = env - GetMethodID ( g_surface_texture_class - obj (), attachToGLContext , (I)V ); if ( g_attach_to_gl_context_method == nullptr ) { FML_LOG ( ERROR ) Could not locate attachToGlContext method ; return false ; } g_update_tex_image_method = env - GetMethodID ( g_surface_texture_class - obj (), updateTexImage , ()V ); if ( g_update_tex_image_method == nullptr ) { FML_LOG ( ERROR ) Could not locate updateTexImage method ; return false ; } g_get_transform_matrix_method = env - GetMethodID ( g_surface_texture_class - obj (), getTransformMatrix , ([F)V ); if ( g_get_transform_matrix_method == nullptr ) { FML_LOG ( ERROR ) Could not locate getTransformMatrix method ; return false ; } g_detach_from_gl_context_method = env - GetMethodID ( g_surface_texture_class - obj (), detachFromGLContext , ()V ); if ( g_detach_from_gl_context_method == nullptr ) { FML_LOG ( ERROR ) Could not locate detachFromGlContext method ; return false ; } return RegisterApi ( env ); } } // namespace shell \u6ce8\u518cAndroid\u7aef\u548cView\u64cd\u4f5c\u76f8\u5173\u7684\u903b\u8f91\uff0c\u521d\u59cb\u5316FlutterView\u81ea\u5df1\u7684\u73af\u5883 FlutterJNI 1.AttachJNI 2.DestroyJNI 3.AssetManager bool RegisterApi ( JNIEnv * env ) { static const JNINativeMethod flutter_jni_methods [] = { // Start of methods from FlutterNativeView { . name = nativeAttach , . signature = (Lio/flutter/embedding/engine/FlutterJNI;Z)J , . fnPtr = reinterpret_cast void * ( shell :: AttachJNI ), }, { . name = nativeDestroy , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: DestroyJNI ), }, { . name = nativeRunBundleAndSnapshotFromLibrary , . signature = (J[Ljava/lang/String;Ljava/lang/String; Ljava/lang/String;Landroid/content/res/AssetManager;)V , . fnPtr = reinterpret_cast void * ( shell :: RunBundleAndSnapshotFromLibrary ), }, { . name = nativeGetObservatoryUri , . signature = ()Ljava/lang/String; , . fnPtr = reinterpret_cast void * ( shell :: GetObservatoryUri ), }, { . name = nativeDispatchEmptyPlatformMessage , . signature = (JLjava/lang/String;I)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchEmptyPlatformMessage ), }, { . name = nativeDispatchPlatformMessage , . signature = (JLjava/lang/String;Ljava/nio/ByteBuffer;II)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchPlatformMessage ), }, { . name = nativeInvokePlatformMessageResponseCallback , . signature = (JILjava/nio/ByteBuffer;I)V , . fnPtr = reinterpret_cast void * ( shell :: InvokePlatformMessageResponseCallback ), }, { . name = nativeInvokePlatformMessageEmptyResponseCallback , . signature = (JI)V , . fnPtr = reinterpret_cast void * ( shell :: InvokePlatformMessageEmptyResponseCallback ), }, // Start of methods from FlutterView { . name = nativeGetBitmap , . signature = (J)Landroid/graphics/Bitmap; , . fnPtr = reinterpret_cast void * ( shell :: GetBitmap ), }, { . name = nativeSurfaceCreated , . signature = (JLandroid/view/Surface;)V , . fnPtr = reinterpret_cast void * ( shell :: SurfaceCreated ), }, { . name = nativeSurfaceChanged , . signature = (JII)V , . fnPtr = reinterpret_cast void * ( shell :: SurfaceChanged ), }, { . name = nativeSurfaceDestroyed , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: SurfaceDestroyed ), }, { . name = nativeSetViewportMetrics , . signature = (JFIIIIIIIIII)V , . fnPtr = reinterpret_cast void * ( shell :: SetViewportMetrics ), }, { . name = nativeDispatchPointerDataPacket , . signature = (JLjava/nio/ByteBuffer;I)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchPointerDataPacket ), }, { . name = nativeDispatchSemanticsAction , . signature = (JIILjava/nio/ByteBuffer;I)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchSemanticsAction ), }, { . name = nativeSetSemanticsEnabled , . signature = (JZ)V , . fnPtr = reinterpret_cast void * ( shell :: SetSemanticsEnabled ), }, { . name = nativeSetAccessibilityFeatures , . signature = (JI)V , . fnPtr = reinterpret_cast void * ( shell :: SetAccessibilityFeatures ), }, { . name = nativeGetIsSoftwareRenderingEnabled , . signature = ()Z , . fnPtr = reinterpret_cast void * ( shell :: GetIsSoftwareRendering ), }, { . name = nativeRegisterTexture , . signature = (JJLandroid/graphics/SurfaceTexture;)V , . fnPtr = reinterpret_cast void * ( shell :: RegisterTexture ), }, { . name = nativeMarkTextureFrameAvailable , . signature = (JJ)V , . fnPtr = reinterpret_cast void * ( shell :: MarkTextureFrameAvailable ), }, { . name = nativeUnregisterTexture , . signature = (JJ)V , . fnPtr = reinterpret_cast void * ( shell :: UnregisterTexture ), }, }; if ( env - RegisterNatives ( g_flutter_jni_class - obj (), flutter_jni_methods , arraysize ( flutter_jni_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterJNI ; return false ; } g_handle_platform_message_method = env - GetMethodID ( g_flutter_jni_class - obj (), handlePlatformMessage , (Ljava/lang/String;[BI)V ); if ( g_handle_platform_message_method == nullptr ) { FML_LOG ( ERROR ) Could not locate handlePlatformMessage method ; return false ; } g_handle_platform_message_response_method = env - GetMethodID ( g_flutter_jni_class - obj (), handlePlatformMessageResponse , (I[B)V ); if ( g_handle_platform_message_response_method == nullptr ) { FML_LOG ( ERROR ) Could not locate handlePlatformMessageResponse method ; return false ; } g_update_semantics_method = env - GetMethodID ( g_flutter_jni_class - obj (), updateSemantics , (Ljava/nio/ByteBuffer;[Ljava/lang/String;)V ); if ( g_update_semantics_method == nullptr ) { FML_LOG ( ERROR ) Could not locate updateSemantics method ; return false ; } g_update_custom_accessibility_actions_method = env - GetMethodID ( g_flutter_jni_class - obj (), updateCustomAccessibilityActions , (Ljava/nio/ByteBuffer;[Ljava/lang/String;)V ); if ( g_update_custom_accessibility_actions_method == nullptr ) { FML_LOG ( ERROR ) Could not locate updateCustomAccessibilityActions method ; return false ; } g_on_first_frame_method = env - GetMethodID ( g_flutter_jni_class - obj (), onFirstFrame , ()V ); if ( g_on_first_frame_method == nullptr ) { FML_LOG ( ERROR ) Could not locate onFirstFrame method ; return false ; } g_on_engine_restart_method = env - GetMethodID ( g_flutter_jni_class - obj (), onPreEngineRestart , ()V ); if ( g_on_engine_restart_method == nullptr ) { FML_LOG ( ERROR ) Could not locate onEngineRestart method ; return false ; } return true ; } FlutterView \u521d\u59cb\u5316 FlutterNativeView\u521d\u59cb\u5316\u65f6\u6ce8\u518cAndroid PluginMessage\u5230JNI\u4e2d public FlutterNativeView ( @NonNull Context context , boolean isBackgroundView ) { this . flutterUiDisplayListener = new FlutterUiDisplayListener () { public void onFlutterUiDisplayed () { if ( FlutterNativeView . this . mFlutterView != null ) { FlutterNativeView . this . mFlutterView . onFirstFrame (); } } public void onFlutterUiNoLongerDisplayed () { } }; this . mContext = context ; this . mPluginRegistry = new FlutterPluginRegistry ( this , context ); this . mFlutterJNI = new FlutterJNI (); this . mFlutterJNI . addIsDisplayingFlutterUiListener ( this . flutterUiDisplayListener ); this . dartExecutor = new DartExecutor ( this . mFlutterJNI , context . getAssets ()); this . mFlutterJNI . addEngineLifecycleListener ( new FlutterNativeView . EngineLifecycleListenerImpl ()); this . attach ( this , isBackgroundView ); this . assertAttached (); } FlutterNativeView public FlutterNativeView ( @NonNull Context context , boolean isBackgroundView ) { this . flutterUiDisplayListener = new FlutterUiDisplayListener () { public void onFlutterUiDisplayed () { if ( FlutterNativeView . this . mFlutterView != null ) { FlutterNativeView . this . mFlutterView . onFirstFrame (); } } public void onFlutterUiNoLongerDisplayed () { } }; this . mContext = context ; this . mPluginRegistry = new FlutterPluginRegistry ( this , context ); this . mFlutterJNI = new FlutterJNI (); this . mFlutterJNI . addIsDisplayingFlutterUiListener ( this . flutterUiDisplayListener ); this . dartExecutor = new DartExecutor ( this . mFlutterJNI , context . getAssets ()); this . mFlutterJNI . addEngineLifecycleListener ( new FlutterNativeView . EngineLifecycleListenerImpl ()); \u521d\u59cb\u5316JIN this . attach ( this , isBackgroundView ); this . assertAttached (); } AttachJNI \u63a5\u4e0b\u6765\u8fdb\u884c\u5206\u6790\u5728JNI\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b:AttachJNI\u4e2d\u8c03\u7528 std::make_unique AndroidShellHolder \u65b9\u6cd5\b\u521b\u5efa AndroidShellHolder \u5b9e\u4f8b engine/src/flutter/shell/platform/android/platform_view_android_jni.cc // Called By Java // \u65b9\u6cd5\u6ce8\u518c\u8fdb\u5165JNI static jlong AttachJNI ( JNIEnv * env , jclass clazz , jobject flutterJNI , jboolean is_background_view ) { fml :: jni :: JavaObjectWeakGlobalRef java_object ( env , flutterJNI ); auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); if ( shell_holder - IsValid ()) { return reinterpret_cast jlong ( shell_holder . release ()); } else { return 0 ; } } AndroidShellHolder \u7c7b\u662f\u5bf9\bPlatfrom\u5c42\u8c03\u7528JNI\u7684\u63a5\u53e3\u4f5c\u4e3a\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u6765\u8fdb\u884c\u7edf\u4e00\u7684\u4ee3\u7406\u5165\u53e3\uff0c\u4f7f\u7528C++11\u7684\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u6765\u7edf\u4e00\b\u7ba1\u7406\u4e00\u4e2a\u5bf9\u8c61 C++\u667a\u80fd\u6307\u9488 AndroidShellHolder FlutterEngine\u7684\u521d\u59cb\u5316\u5165\u53e3 AndroidShellHolder\uff1a\u4e3b\u8981\u662f\u7ba1\u7406flutter engine \u5728Platform\u7aef\u7684\u5165\u53e3: 1.Platfrom,UI,IO,GUP\u7ebf\u7a0b\u7684\u7ba1\u7406\uff0c\u914d\u7f6e\u53c2\u6570\u7684\u7684\u52a0\u8f7d 2.\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c 3.thread_host_\u8d1f\u8d23\u7ba1\u7406\u76f8\u5173\u7684\u7ebf\u7a0b,\u6258\u7ba1\u56db\u4e2a\u76f8\u5904 4.PlatformViewAndroid\u7684\u521b\u5efa\uff0c\u8d1f\u8d23\u7ba1\u7406\u5e73\u53f0\u4fa7\u662f\u4e8b\u4ef6\u5904\u7406\u5728UI\u7ebf\u7a0b\b\u6267\u884c 5.Rasterizer\u7684\u521d\u59cb\u5316\u6805\u683c\u5316\u5728GPU\u7ebf\u7a0b\u6267\u884c 6.MessageLoop\u7684\u521b\u5efa\uff0c\u5728platfrom\u4e2d\u8fd0\u884c 7.TaskRunners\u7ba1\u7406\u6dfb\u52a0\u5230\u4e0d\u540c\u5e73\u53f0\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\uff0c\b\u8d1f\u8d23\u7ba1\u7406\u56db\u4e2a\b\u4efb\u52a1\u8fd0\u884c\u5668 8.Shell\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cJava\u865a\u62df\u673a\u7684\u521b\u5efa // \u53c2\u6570\u8bf4\u660e: // // blink::Settings settings,//\b\u914d\u7f6e\u6570\u636e // fml::jni::JavaObjectWeakGlobalRef java_object,//\bFlutterJNI \u5bf9\u8c61 // bool is_background_view // static size_t shell_count = 1; Shell:\u5bf9\u8c61\u7684\u4e2a\u6570\u4e3a\u4e00\u4e2a // \u5b8c\u6210\b\uff1a // 1.\b\u52a0\u8f7dSettings\u914d\u7f6e\u6587\u4ef6\uff0c\u7ed1\u5b9a\u5168\u5c40\u5bf9\u8c61java_object // 2.\b\b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c // 3.\bThreadHost\u7c7b\u6765\u7ba1\u7406Flutter engine\u7684Platform\uff0cio\uff0cGPU\uff0cUI\u7ebf\u7a0b // 4.\b\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217\uff1afml::MessageLoop::EnsureInitializedForCurrentThread(); //FlutterEngine\u7684\u521d\u59cb\u5316\u5165\u53e3 AndroidShellHolder :: AndroidShellHolder ( blink :: Settings settings , fml :: jni :: JavaObjectWeakGlobalRef java_object , bool is_background_view ) : settings_ ( std :: move ( settings )), java_object_ ( java_object ) { static size_t shell_count = 1 ; auto thread_label = std :: to_string ( shell_count ++ ); // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); } fml :: WeakPtr PlatformViewAndroid weak_platform_view ; Shell :: CreateCallback PlatformView on_create_platform_view = [ is_background_view , java_object , weak_platform_view ]( Shell shell ) { std :: unique_ptr PlatformViewAndroid platform_view_android ; if ( is_background_view ) { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object // java object handle for JNI interop ); } else { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object , // java object handle for JNI interop shell . GetSettings () . enable_software_rendering // use software rendering ); } weak_platform_view = platform_view_android - GetWeakPtr (); return platform_view_android ; }; Shell :: CreateCallback Rasterizer on_create_rasterizer = []( Shell shell ) { return std :: make_unique Rasterizer ( shell . GetTaskRunners ()); }; // The current thread will be used as the platform thread. Ensure that the // message loop is initialized. fml :: MessageLoop :: EnsureInitializedForCurrentThread (); fml :: RefPtr fml :: TaskRunner gpu_runner ; fml :: RefPtr fml :: TaskRunner ui_runner ; fml :: RefPtr fml :: TaskRunner io_runner ; fml :: RefPtr fml :: TaskRunner platform_runner = fml :: MessageLoop :: GetCurrent (). GetTaskRunner (); if ( is_background_view ) { auto single_task_runner = thread_host_ . ui_thread - GetTaskRunner (); gpu_runner = single_task_runner ; ui_runner = single_task_runner ; io_runner = single_task_runner ; } else { gpu_runner = thread_host_ . gpu_thread - GetTaskRunner (); ui_runner = thread_host_ . ui_thread - GetTaskRunner (); io_runner = thread_host_ . io_thread - GetTaskRunner (); } blink :: TaskRunners task_runners ( thread_label , // label platform_runner , // platform gpu_runner , // gpu ui_runner , // ui io_runner // io ); shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); platform_view_ = weak_platform_view ; FML_DCHECK ( platform_view_ ); is_valid_ = shell_ != nullptr ; if ( is_valid_ ) { task_runners . GetGPUTaskRunner () - PostTask ([]() { // Android describes -8 as most important display threads, for // compositing the screen and retrieving input events . Conservatively // set the GPU thread to slightly lower priority than it. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 5 ) != 0 ) { // Defensive fallback. Depending on the OEM, it may not be possible // to set priority to -5. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 2 ) != 0 ) { FML_LOG ( ERROR ) Failed to set GPU task runner priority ; } } }); task_runners . GetUITaskRunner () - PostTask ([]() { if ( :: setpriority ( PRIO_PROCESS , gettid (), - 1 ) != 0 ) { FML_LOG ( ERROR ) Failed to set UI task runner priority ; } }); } } \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5904\u7406JNI\u9000\u51fa\u4efb\u52a1 \b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5bf9\bDartVM\u865a\u62df\u673a\u9000\u51fa\u540e\b\b\u505a\u4e00\u8d77\u626b\u5c3e\u5de5\u4f5c,\u5e76\u4e14\u6dfb\u52a0\u5230 ui_thread ,\u5982\u679c\b is_background_view (\u8be5\u53c2\u6570\u662f\u5728FlutterJNI\u8c03\u7528\u662f\u4f20\u5165)\u662f\u5728\u540e\u53f0\u5de5\u4f5c\uff0c\u4e5f\u6dfb\u52a0\u5230GPU_Thread\u91cc\u9762 // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); } Flutter Engine\u7ebf\u7a0b\u6c60\u6a21\u5f0f Flutter Engine\u8981\u6c42Embeder\u63d0\u4f9b\u56db\u4e2aTask Runner\uff0cEmbeder\u6307\u7684\u662f\u5c06\u5f15\u64ce\u79fb\u690d\u5230\u5e73\u53f0\u7684\u4e2d\u95f4\u5c42\u4ee3\u7801\u3002\u8fd9\u56db\u4e2a\u4e3b\u8981\u7684Task Runner\u5305\u62ec\uff1a \b\u6839\u636e\u5728java\u5c42\u8c03\u7528native\u5c42\u7684\u8c03\u7528\u662f\u4f20\u5165\u7684\u53c2\u6570\u5224\u65ad\u521b\u5efa\u7ebf\u7a0b\u7684\u7c7b\u578b: 1.\u521b\u5efa\u4e00\u4e2a\bThreadHost\u6765\u7ba1\u74064\u4e2a\u7ebf\u7a0b\u5bf9\u8c61 2.\u5b9a\u4e49\u4e00\u4e2a\u7ebf\u7a0b\u7c7b\u7684\u4ee3\u7406\u7c7b /engine/src/flutter/fml/thread.cc 3.\u5728\u7ebf\u7a0b\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\bMessageLoop\u3001\u7ed1\u5b9aTaskRunner,\u540c\u65f6\b\u542f\u52a8\bMessageLoop 4.\u521b\u5efa\u4e00\u4e2aTaskRunners\u7c7b\u6765\u7ba1\u7406\u56db\u4e2a\u4efb\u52a1\u8fd0\u884c\u5668 ThreadHost if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } ThreadHost \u7c7b\b\u4e3b\u8981\u662f\u521b\u5efa\u7684Platform\uff0cUI\uff0cIO\uff0cGPU\u7ebf\u7a0b\uff0c\u4e3b\u8981\u7528\u6765\u5bf9\b\u56db\u4e2a\u7ebf\u7a0b\u7684\b\u5bbf\u4e3b\u5bf9\u8c61,\u5b9a\u4e49\b\u4e00\u4e2a\b\u679a\u4e3e\u7c7b\u578b\u6765\u6807\u8bb0\u56db\u79cd\u7ebf\u7a0b\u7684\u7c7b\u578b: enum Type { Platform = 1 0 , UI = 1 1 , GPU = 1 2 , IO = 1 3 , }; \u6784\u9020\u65b9\u6cd5\u521b\u5efa\u56db\u4e2a\u7ebf\u7a0b C++\u667a\u80fd\u6307\u9488 : ThreadHost :: ThreadHost ( std :: string name_prefix , uint64_t mask ) { if ( mask ThreadHost :: Type :: Platform ) { platform_thread = std :: make_unique fml :: Thread ( name_prefix + .platform ); } if ( mask ThreadHost :: Type :: UI ) { ui_thread = std :: make_unique fml :: Thread ( name_prefix + .ui ); } if ( mask ThreadHost :: Type :: GPU ) { gpu_thread = std :: make_unique fml :: Thread ( name_prefix + .gpu ); } if ( mask ThreadHost :: Type :: IO ) { io_thread = std :: make_unique fml :: Thread ( name_prefix + .io ); } } MessageLoop \b\u5728 engine/src/flutter/fml/thread.cc \u6784\u9020\u65b9\u6cd5\u4e2d\u521b\u5efa\u7ebf\u7a0b\u7c7b\uff0c\u540c\u65f6\u521d\u59cb\u5316\b MessageLoop ,\u5173\u8054\u4efb\u52a1\u8fd0\u884c\u5668\u5230\b\u6d88\u606f\u961f\u5217\uff0c\u540c\u65f6\u542f\u52a8\u6d88\u606f\u961f\u5217 loop.Run() ,\u662f\u4e2a\u7ebf\u7a0b\u521b\u5efa\u7684\u65f6\u5019\u5206\u522b\u521b\u5efa\u4e86\u56db\u4e2a\u4e0d\u540c\u7684MessageLoop Thread :: Thread ( const std :: string name ) : joined_ ( false ) { fml :: AutoResetWaitableEvent latch ; fml :: RefPtr fml :: TaskRunner runner ; thread_ = std :: make_unique std :: thread ([ latch , runner , name ]() - void { SetCurrentThreadName ( name ); fml :: MessageLoop :: EnsureInitializedForCurrentThread (); //\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217 auto loop = MessageLoop :: GetCurrent (); runner = loop . GetTaskRunner (); latch . Signal (); loop . Run (); //\u542f\u52a8\u6d88\u606f\u961f\u5217 }); // \u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u72b6\u6001 latch . Wait (); task_runner_ = runner ; } Platform Task Runner: Flutter Engine\u7684\u4e3bTask Runner\uff0c\u7c7b\u4f3c\u4e8eAndroid Main Thread\u6216\u8005iOS\u7684Main Thread\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u4ed6\u4eec\u8fd8\u662f\u6709\u533a\u522b\u7684\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e2aFlutter\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2aEngine\u5b9e\u4f8b\uff0cEngine\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4f9bPlatform Runner\u4f7f\u7528\u3002 \u8ddfFlutter Engine\u7684\u6240\u6709\u4ea4\u4e92\uff08\u63a5\u53e3\u8c03\u7528\uff09\u5fc5\u987b\u5728Platform Thread\u8fdb\u884c\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u3002\u8fd9\u8ddfiOS UI\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u76f8\u7c7b\u4f3c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728Flutter Engine\u4e2d\u6709\u5f88\u591a\u6a21\u5757\u90fd\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u89c4\u5219\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8eFlutter Engine\u7684\u63a5\u53e3\u8c03\u7528\u90fd\u9700\u4fdd\u8bc1\u5728Platform Thread\u8fdb\u884c\u3002 \u963b\u585ePlatform Thread\u4e0d\u4f1a\u76f4\u63a5\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\uff08\u8ddfiOS android\u4e3b\u7ebf\u7a0b\u4e0d\u540c\uff09\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e5f\u4e0d\u5efa\u8bae\u5728\u8fd9\u4e2aRunner\u6267\u884c\u7e41\u91cd\u7684\u64cd\u4f5c\uff0c\u957f\u65f6\u95f4\u5361\u4f4fPlatform Thread\u5e94\u7528\u6709\u53ef\u80fd\u4f1a\u88ab\u7cfb\u7edfWatchdog\u5f3a\u6740\u3002 UI Task Runner Thread\uff08Dart Runner\uff09 UI Task Runner\u7528\u4e8e\u6267\u884cDart root isolate\u4ee3\u7801\uff08isolate\u6211\u4eec\u540e\u9762\u4f1a\u8bb2\u5230\uff0c\u59d1\u4e14\u5148\u7b80\u5355\u7406\u89e3\u4e3aDart VM\u91cc\u9762\u7684\u7ebf\u7a0b\uff09\u3002Root isolate\u6bd4\u8f83\u7279\u6b8a\uff0c\u5b83\u7ed1\u5b9a\u4e86\u4e0d\u5c11Flutter\u9700\u8981\u7684\u51fd\u6570\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u8fdb\u884c\u6e32\u67d3\u76f8\u5173\u64cd\u4f5c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5e27\uff0c\u5f15\u64ce\u8981\u505a\u7684\u4e8b\u60c5\u6709\uff1a Root isolate\u901a\u77e5Flutter Engine\u6709\u5e27\u9700\u8981\u6e32\u67d3\u3002 Flutter Engine\u901a\u77e5\u5e73\u53f0\uff0c\u9700\u8981\u5728\u4e0b\u4e00\u4e2avsync\u7684\u65f6\u5019\u5f97\u5230\u901a\u77e5\u3002 \u5e73\u53f0\u7b49\u5f85\u4e0b\u4e00\u4e2avsync \u5bf9\u521b\u5efa\u7684\u5bf9\u8c61\u548cWidgets\u8fdb\u884cLayout\u5e76\u751f\u6210\u4e00\u4e2aLayer Tree\uff0c\u8fd9\u4e2aTree\u9a6c\u4e0a\u88ab\u63d0\u4ea4\u7ed9Flutter Engine\u3002\u5f53\u524d\u9636\u6bb5\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u5149\u6805\u5316\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u4ec5\u662f\u751f\u6210\u4e86\u5bf9\u9700\u8981\u7ed8\u5236\u5185\u5bb9\u7684\u63cf\u8ff0\u3002 \u521b\u5efa\u6216\u8005\u66f4\u65b0Tree\uff0c\u8fd9\u4e2aTree\u5305\u542b\u4e86\u7528\u4e8e\u5c4f\u5e55\u4e0a\u663e\u793aWidgets\u7684\u8bed\u4e49\u4fe1\u606f\u3002\u8fd9\u4e2a\u4e1c\u897f\u4e3b\u8981\u7528\u4e8e\u5e73\u53f0\u76f8\u5173\u7684\u8f85\u52a9Accessibility\u5143\u7d20\u7684\u914d\u7f6e\u548c\u6e32\u67d3\u3002 \u9664\u4e86\u6e32\u67d3\u76f8\u5173\u903b\u8f91\u4e4b\u5916Root Isolate\u8fd8\u662f\u5904\u7406\u6765\u81eaNative Plugins\u7684\u6d88\u606f\uff0cTimers\uff0cMicrotasks\u548c\u5f02\u6b65IO\u7b49\u64cd\u4f5c\u3002Root Isolate\u8d1f\u8d23\u521b\u5efa\u7ba1\u7406\u7684Layer Tree\u6700\u7ec8\u51b3\u5b9a\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u7684\u5185\u5bb9\u3002\u56e0\u6b64\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u8fc7\u8f7d\u4f1a\u76f4\u63a5\u5bfc\u81f4\u5361\u987f\u6389\u5e27\u3002 GPU Task Runner GPU Task Runner\u4e3b\u8981\u7528\u4e8e\u6267\u884c\u8bbe\u5907GPU\u7684\u6307\u4ee4\u3002UI Task Runner\u521b\u5efa\u7684Layer Tree\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u5b83\u4e0d\u5173\u5fc3\u5230\u5e95\u7531\u8c01\u6765\u5b8c\u6210\u7ed8\u5236\u3002GPU Task Runner\u8d1f\u8d23\u5c06Layer Tree\u63d0\u4f9b\u7684\u4fe1\u606f\u8f6c\u5316\u4e3a\u5e73\u53f0\u53ef\u6267\u884c\u7684GPU\u6307\u4ee4\u3002GPU Task Runner\u540c\u65f6\u8d1f\u8d23\u7ed8\u5236\u6240\u9700\u8981\u7684GPU\u8d44\u6e90\u7684\u7ba1\u7406\u3002\u8d44\u6e90\u4e3b\u8981\u5305\u62ec\u5e73\u53f0Framebuffer\uff0cSurface\uff0cTexture\u548cBuffers\u7b49\u3002 \u4e00\u822c\u6765\u8bf4UI Runner\u548cGPU Runner\u8dd1\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002GPU Runner\u4f1a\u6839\u636e\u76ee\u524d\u5e27\u6267\u884c\u7684\u8fdb\u5ea6\u53bb\u5411UI Runner\u8981\u6c42\u4e0b\u4e00\u5e27\u7684\u6570\u636e\uff0c\u5728\u4efb\u52a1\u7e41\u91cd\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u544a\u8bc9UI Runner\u5ef6\u8fdf\u4efb\u52a1\u3002\u8fd9\u79cd\u8c03\u5ea6\u673a\u5236\u786e\u4fddGPU Runner\u4e0d\u81f3\u4e8e\u8fc7\u8f7d\uff0c\u540c\u65f6\u4e5f\u907f\u514d\u4e86UI Runner\u4e0d\u5fc5\u8981\u7684\u6d88\u8017\u3002 \u5efa\u8bae\u4e3a\u6bcf\u4e00\u4e2aEngine\u5b9e\u4f8b\u90fd\u65b0\u5efa\u4e00\u4e2a\u4e13\u7528\u7684GPU Runner\u7ebf\u7a0b\u3002 IO Task Runner \u524d\u9762\u8ba8\u8bba\u7684\u51e0\u4e2aRunner\u5bf9\u4e8e\u6267\u884c\u6d41\u7545\u5ea6\u6709\u6bd4\u8f83\u9ad8\u7684\u8981\u6c42\u3002Platform Runner\u8fc7\u8f7d\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edfWatchDog\u5f3a\u6740\uff0cUI\u548cGPU Runner\u8fc7\u8f7d\u5219\u53ef\u80fd\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\u3002\u4f46\u662fGPU\u7ebf\u7a0b\u7684\u4e00\u4e9b\u5fc5\u8981\u64cd\u4f5c\uff0c\u4f8b\u5982IO\uff0c\u653e\u5230\u54ea\u91cc\u6267\u884c\u5462\uff1f\u7b54\u6848\u6b63\u662fIO Runner\u3002 IO Runner\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4ece\u56fe\u7247\u5b58\u50a8\uff08\u6bd4\u5982\u78c1\u76d8\uff09\u4e2d\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u5c06\u56fe\u7247\u6570\u636e\u8fdb\u884c\u5904\u7406\u4e3aGPU Runner\u7684\u6e32\u67d3\u505a\u597d\u51c6\u5907\u3002IO Runner\u9996\u5148\u8981\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u4e8c\u8fdb\u5236\u6570\u636e\uff08\u6bd4\u5982PNG\uff0cJPEG\uff09\uff0c\u5c06\u5176\u89e3\u538b\u8f6c\u6362\u6210GPU\u80fd\u591f\u5904\u7406\u7684\u683c\u5f0f\u7136\u540e\u5c06\u6570\u636e\u4e0a\u4f20\u5230GPU\u3002 \u83b7\u53d6\u8bf8\u5982ui.Image\u8fd9\u6837\u7684\u8d44\u6e90\u53ea\u6709\u901a\u8fc7async call\u53bb\u8c03\u7528\uff0c\u5f53\u8c03\u7528\u53d1\u751f\u7684\u65f6\u5019Flutter Framework\u544a\u8bc9IO Runner\u8fdb\u884c\u52a0\u8f7d\u7684\u5f02\u6b65\u64cd\u4f5c\u3002 IO Runner\u76f4\u63a5\u51b3\u5b9a\u4e86\u56fe\u7247\u548c\u5176\u5b83\u4e00\u4e9b\u8d44\u6e90\u52a0\u8f7d\u7684\u5ef6\u8fdf\u95f4\u63a5\u5f71\u54cd\u6027\u80fd\u3002\u6240\u4ee5\u5efa\u8bae\u4e3aIO Runner\u521b\u5efa\u4e00\u4e2a\u4e13\u7528\u7684\u7ebf\u7a0b\u3002 TaskRunner ThreadHost\u521b\u5efa\u5b8c\u6210\u56db\u4e2a\u7ebf\u7a0b\u4e4b\u540e\uff0c\u5728\u521b\u5efa\u56db\u4e2a TaskRunner \u6765\u7ba1\u7406Platform\uff0cUI\uff0cGPU\uff0cIO\u7ebf\u7a0b\u4e2d\u7684\u4efb\u52a1 engine/src/flutter/fml/task_runner.h \u63d0\u4f9b\u56db\u4e2a\u65b9\u6cd5\u5904\u7406\u63d0\u4ea4\u5230MessageLoop\u7684\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\u548c\u5173\u8054\u5230\u6d88\u606f\u961f\u5217 PostTask PostTaskForTime PostDelayedTask RunNowOrPostTask RefPtr loop_ namespace fml { class MessageLoopImpl ; class TaskRunner : public fml :: RefCountedThreadSafe TaskRunner { public : virtual void PostTask ( fml :: closure task ); virtual void PostTaskForTime ( fml :: closure task , fml :: TimePoint target_time ); virtual void PostDelayedTask ( fml :: closure task , fml :: TimeDelta delay ); virtual bool RunsTasksOnCurrentThread (); virtual ~ TaskRunner (); static void RunNowOrPostTask ( fml :: RefPtr fml :: TaskRunner runner , fml :: closure task ); protected : TaskRunner ( fml :: RefPtr MessageLoopImpl loop ); private : fml :: RefPtr MessageLoopImpl loop_ ; FML_FRIEND_MAKE_REF_COUNTED ( TaskRunner ); FML_FRIEND_REF_COUNTED_THREAD_SAFE ( TaskRunner ); FML_DISALLOW_COPY_AND_ASSIGN ( TaskRunner ); }; } // namespace fml #endif // FLUTTER_FML_TASK_RUNNER_H_ TaskRunners \u521b\u5efa\u4e00\u4e2aTaskRunners\u7edf\u4e00\u7ba1\u7406\u56db\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u4efb\u52a1 TaskRunners task_runners ( thread_label , // label platform_runner , // platform gpu_runner , // gpu ui_runner , // ui io_runner // io namespace blink { \u8bb0\u5f55\u5e73\u53f0\u76f8\u5173\u7684\u56db\u4e2a\u76f8\u5173\u7684\u7ebf\u7a0b\u7684\u4efb\u52a1\u7edf\u4e00\u7684\u7ba1\u7406\u3002 class TaskRunners { public : TaskRunners ( std :: string label , fml :: RefPtr fml :: TaskRunner platform , //\u5e73\u53f0\u7ebf\u7a0b\u5173\u8054 fml :: RefPtr fml :: TaskRunner gpu , //gpu\u7ebf\u7a0b\u5173\u8054 fml :: RefPtr fml :: TaskRunner ui , //ui\u76f8\u5904\u7684\u5173\u8054 fml :: RefPtr fml :: TaskRunner io ); //io\u76f8\u5904 ........ private : const std :: string label_ ; fml :: RefPtr fml :: TaskRunner platform_ ; fml :: RefPtr fml :: TaskRunner gpu_ ; fml :: RefPtr fml :: TaskRunner ui_ ; fml :: RefPtr fml :: TaskRunner io_ ; }; } // namespace blink #endif // FLUTTER_COMMON_TASK_RUNNERS_H_ Shell\u7c7b\u521d\u59cb\u5316: Shell \u7c7b\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u8d1f\u8d23\u7ba1\u7406\b\b\u5ba2\u6237\u7aef\u76f8\u5173\u7684\u8d44\u6e90 /engine/src/flutter/shell/platform/android/android_shell_holder.cc ,\u521b\u5efa\u7684\u5730\u65b9 Shell\u4e3b\u8981\u7684\u529f\u80fd\u521d\u59cb\u5316\b\u4ee5\u4e0b\u56db\u4e2a\u5bf9\u8c61 platform_view_ = std::move(platform_view); engine_ = std::move(engine); rasterizer_ = std::move(rasterizer); io_manager_ = std::move(io_manager); \u521b\u5efaDartVM\u865a\u62df\u673a \u4e3b\u8981\u6267\u884c\u7684\u52a8\u4f5c: \u5728new \bShell\u65f6\u5019\u6709\u4ece\u65b0\u521b\u5efa\u4e86\u4e00\u4e2aDartVM 1.\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4 2.\b\u521d\u59cb\u5316\u65e5\u5fd7\u8bbe\u7f6e 3.\u521d\u59cb\u5316Skia\uff1aInitSkiaEventTracer 4.\u521d\u59cb\u5316\uff1aSkGraphics 5.\u521d\u59cb\u5316\u672c\u5730\u5316\u5e93:InitializeICU 6.\u521b\u5efa\u865a\u62df\u673a:blink::DartVM::ForProcess(settings); 7.\u5f00\u542f\u5e73\u53f0\u4efb\u52a1\u4efb\u52a1 new Shell 7.2:\b\u5728new \bShell\u65f6\u5019\u6709\u4ece\u65b0\u521b\u5efa\u4e86\u4e00\u4e2aDartVM\uff1a 7.3 Install service protocol handlers. 8.\u771f\u6b63\u521b\u5efa\u5e73\u53f0\u64cd\u4f5c\u7684\u5bf9\u8c61/engine/src/flutter/shell/platform/android/platform_view_android.cc 9.\u521b\u5efa\u4e00\u4e2aCreateVSyncWaiter\u5bf9\u8c61\b 10.\u521b\u5efaIOManager\u7ba1\u7406\u5668\uff0c\u5728IO\u7ebf\u7a0b\u6267\u884c 11.\u521b\u5efaRasterizer\u6267\u884c\u5728GPU\u7ebf\u7a0b 12.\u521b\u5efaengine\u5728UI\u7ebf\u7a0b\u6267\u884c Shell :: Shell ( blink :: TaskRunners task_runners , blink :: Settings settings ) : task_runners_ ( std :: move ( task_runners )), //\u4efb\u52a1\u8fd0\u884c\u5668 settings_ ( std :: move ( settings )), vm_ ( blink :: DartVM :: ForProcess ( settings_ )) { //\u521b\u5efa\u4e00\u4e2a\u65b0\u7684DartVM FML_DCHECK ( task_runners_ . IsValid ()); FML_DCHECK ( task_runners_ . GetPlatformTaskRunner () - RunsTasksOnCurrentThread ()); shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); \u5728 Shell \b\b\u521b\u5efa\u65f6 : std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { //\b\u521d\u59cb\u5316\u7b2c\u4e09\u65b9\u5e93 PerformInitializationTasks ( settings ); //\u521d\u59cb\u5316DartVM\u865a\u62df\u673a auto vm = blink :: DartVM :: ForProcess ( settings ); FML_CHECK ( vm ) Must be able to initialize the VM. ; return Shell :: Create ( std :: move ( task_runners ), // std :: move ( settings ), // vm - GetIsolateSnapshot (), // blink :: DartSnapshot :: Empty (), // std :: move ( on_create_platform_view ), // std :: move ( on_create_rasterizer ) // ); } \u521d\u59cb\u5316DartVM DartVM::ForProcess Dart VM \u865a\u62df\u673a\u5728Shell\b\u521b\u5efa\u7684\u65f6\u5019\b\u521d\u59cb\u5316\uff1a auto vm = blink::DartVM::ForProcess(settings); , /engine/src/flutter/shell/common/shell.cc ,Shell::Create\uff0c\b\bDart\u865a\u62df\u673a\u7684\b\u5206\u6790\uff0c\u5728\u540e\u7eed\u5728\u8fdb\u884c\u6269\u5c55 1.\u52a0\u8f7ddart\u865a\u62df\u673a\u5feb\u7167 2.\u52a0\u8f7dIsolate\u5feb\u7167 3.\b\u8c03\u7528DartVM\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u865a\u62df\u673a fml :: RefPtr DartVM DartVM :: ForProcess ( Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) { std :: lock_guard std :: mutex lock ( gVMMutex ); std :: call_once ( gVMInitialization , [ settings , // vm_snapshot , // isolate_snapshot , // shared_snapshot // ]() mutable { if ( ! vm_snapshot ) { vm_snapshot = DartSnapshot :: VMSnapshotFromSettings ( settings ); } if ( ! ( vm_snapshot vm_snapshot - IsValid ())) { FML_LOG ( ERROR ) VM snapshot must be valid. ; return ; } if ( ! isolate_snapshot ) { isolate_snapshot = DartSnapshot :: IsolateSnapshotFromSettings ( settings ); } if ( ! ( isolate_snapshot isolate_snapshot - IsValid ())) { FML_LOG ( ERROR ) Isolate snapshot must be valid. ; return ; } if ( ! shared_snapshot ) { shared_snapshot = DartSnapshot :: Empty (); } gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); }); return gVM ; } Shell\b\b\u521b\u5efa\u65f6\u7b2c\u4e09\u65b9\u5e93\u521d\u59cb\u5316\b\u4f4d\u7f6e PerformInitializationTasks , /engine/src/flutter/shell/common/shell.cc RecordStartupTimestamp()\u8bb0\u5f55\u65f6\u95f4\u6233 fml::SetLogSettings(log_settings) \u8bbe\u7f6e\u65e5\u5fd7\u4fe1\u606f InitSkiaEventTracer(settings.trace_skia) \u521d\u59cb\u5316Skia\b2d\u56fe\u50cf\u5f15\u64ce\u5e93\u8ddf\u8e2a\u5668 SkGraphics::Init(); \b \u521d\u59cb\u53162d\b\u56fe\u5f62\u5f15\u64ce\u5e93 fml::icu::InitializeICU(settings.icu_data_path); \u521d\u59cb\u5316\b\b\u56fd\u9645\u5316\u5904\u7406\bICU // Though there can be multiple shells, some settings apply to all components in // the process. These have to be setup before the shell or any of its // sub-components can be initialized. In a perfect world, this would be empty. // TODO(chinmaygarde): The unfortunate side effect of this call is that settings // that cause shell initialization failures will still lead to some of their // settings being applied. static void PerformInitializationTasks ( const blink :: Settings settings ) { static std :: once_flag gShellSettingsInitialization = {}; std :: call_once ( gShellSettingsInitialization , [ settings ] { RecordStartupTimestamp (); { fml :: LogSettings log_settings ; log_settings . min_log_level = settings . verbose_logging ? fml :: LOG_INFO : fml :: LOG_ERROR ; fml :: SetLogSettings ( log_settings ); } tonic :: SetLogHandler ( []( const char * message ) { FML_LOG ( ERROR ) message ; }); if ( settings . trace_skia ) { InitSkiaEventTracer ( settings . trace_skia ); } if ( ! settings . skia_deterministic_rendering_on_cpu ) { SkGraphics :: Init (); } else { FML_DLOG ( INFO ) Skia deterministic rendering is enabled. ; } if ( settings . icu_initialization_required ) { if ( settings . icu_data_path . size () != 0 ) { fml :: icu :: InitializeICU ( settings . icu_data_path ); } else if ( settings . icu_mapper ) { fml :: icu :: InitializeICUFromMapping ( settings . icu_mapper ()); } else { FML_DLOG ( WARNING ) Skipping ICU initialization in the shell. ; } } }); } CreateShellOnPlatformThread \u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u662f\u771f\u6b63\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u5730\u65b9 std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , fml :: RefPtr blink :: DartSnapshot isolate_snapshot , fml :: RefPtr blink :: DartSnapshot shared_snapshot , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { PerformInitializationTasks ( settings ); if ( ! task_runners . IsValid () || ! on_create_platform_view || ! on_create_rasterizer ) { return nullptr ; } fml :: AutoResetWaitableEvent latch ; std :: unique_ptr Shell shell ; fml :: TaskRunner :: RunNowOrPostTask ( //\u63d0\u4ea4\u4efb\u52a1\u5230Platform\u7ebf\u7a0b\u8fd0\u884c task_runners . GetPlatformTaskRunner (), [ latch , // shell , // task_runners = std :: move ( task_runners ), // settings , // isolate_snapshot = std :: move ( isolate_snapshot ), // shared_snapshot = std :: move ( shared_snapshot ), // on_create_platform_view , // on_create_rasterizer // ]() { shell = CreateShellOnPlatformThread ( std :: move ( task_runners ), // settings , // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ), // on_create_platform_view , // on_create_rasterizer // ); latch . Signal (); }); latch . Wait (); return shell ; } CreateShellOnPlatformThread`\b\b\u5b8c\u6210Shell\u5206\u7684\u4e00\u4e0b\u521d\u59cb\u5316\u4fe1\u606f 1.\u521b\u5efa\u4e00\u4e2a\bShell\u5b9e\u4f8b\u5bf9\u8c61`auto shell = std::unique_ptr (new Shell(task_runners, settings)); 2.\u521b\u5efa\u5e73\u53f0View\u5728\u5e73\u53f0\u7ebf\u7a0b`auto platform_view = on_create_platform_view(*shell.get()); 3.\u521b\u5efa\u4e00\u4e2aSyncwaiter`auto vsync_waiter = platform_view- CreateVSyncWaiter(); 4.\u521b\u5efa\u4e00\u4e2aIO\u7ba1\u7406io\u7ebf\u7a0b`std::unique_ptr io_manager; 5.\u5728UI\u7ebf\u7a0b\u521b\u5efa\bengine\uff1a`fml::AutoResetWaitableEvent ui_latch; std :: unique_ptr Shell Shell :: CreateShellOnPlatformThread ( blink :: TaskRunners task_runners , blink :: Settings settings , fml :: RefPtr blink :: DartSnapshot isolate_snapshot , fml :: RefPtr blink :: DartSnapshot shared_snapshot , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { if ( ! task_runners . IsValid ()) { return nullptr ; } auto shell = std :: unique_ptr Shell ( new Shell ( task_runners , settings )); // Create the platform view on the platform thread (this thread). auto platform_view = on_create_platform_view ( * shell . get ()); if ( ! platform_view || ! platform_view - GetWeakPtr ()) { return nullptr ; } // Ask the platform view for the vsync waiter. This will be used by the engine // to create the animator. auto vsync_waiter = platform_view - CreateVSyncWaiter (); if ( ! vsync_waiter ) { return nullptr ; } // Create the IO manager on the IO thread. The IO manager must be initialized // first because it has state that the other subsystems depend on. It must // first be booted and the necessary references obtained to initialize the // other subsystems. fml :: AutoResetWaitableEvent io_latch ; std :: unique_ptr IOManager io_manager ; auto io_task_runner = shell - GetTaskRunners (). GetIOTaskRunner (); fml :: TaskRunner :: RunNowOrPostTask ( io_task_runner , [ io_latch , // io_manager , // platform_view , // io_task_runner // ]() { io_manager = std :: make_unique IOManager ( platform_view - CreateResourceContext (), io_task_runner ); io_latch . Signal (); }); io_latch . Wait (); // Create the rasterizer on the GPU thread. fml :: AutoResetWaitableEvent gpu_latch ; std :: unique_ptr Rasterizer rasterizer ; fml :: WeakPtr blink :: SnapshotDelegate snapshot_delegate ; fml :: TaskRunner :: RunNowOrPostTask ( task_runners . GetGPUTaskRunner (), [ gpu_latch , // rasterizer , // on_create_rasterizer , // shell = shell . get (), // snapshot_delegate // ]() { if ( auto new_rasterizer = on_create_rasterizer ( * shell )) { rasterizer = std :: move ( new_rasterizer ); snapshot_delegate = rasterizer - GetSnapshotDelegate (); } gpu_latch . Signal (); }); gpu_latch . Wait (); // Create the engine on the UI thread. fml :: AutoResetWaitableEvent ui_latch ; std :: unique_ptr Engine engine ; fml :: TaskRunner :: RunNowOrPostTask ( shell - GetTaskRunners (). GetUITaskRunner (), fml :: MakeCopyable ([ ui_latch , // engine , // shell = shell . get (), // isolate_snapshot = std :: move ( isolate_snapshot ), // shared_snapshot = std :: move ( shared_snapshot ), // vsync_waiter = std :: move ( vsync_waiter ), // snapshot_delegate = std :: move ( snapshot_delegate ), // io_manager = io_manager - GetWeakPtr () // ]() mutable { const auto task_runners = shell - GetTaskRunners (); // The animator is owned by the UI thread but it gets its vsync pulses // from the platform. auto animator = std :: make_unique Animator ( * shell , task_runners , std :: move ( vsync_waiter )); engine = std :: make_unique Engine ( * shell , // shell - GetDartVM (), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ), // task_runners , // shell - GetSettings (), // std :: move ( animator ), // std :: move ( snapshot_delegate ), // std :: move ( io_manager ) // ); ui_latch . Signal (); })); ui_latch . Wait (); // We are already on the platform thread. So there is no platform latch to // wait on. if ( ! shell - Setup ( std :: move ( platform_view ), // std :: move ( engine ), // std :: move ( rasterizer ), // std :: move ( io_manager )) // ) { return nullptr ; } return shell ; } \u8bbe\u7f6eShell\u7ba1\u7406\u7684Platform\u7ebf\u7a0b\u7ba1\u7406\u7684\u76f8\u5173\b\u8d44\u6e90: /engine/src/flutter/shell/common/engine.cc \u5728 /engine/src/flutter/shell/common/shell.cc \u4e2d\u6267\u884c CreateShellOnPlatformThread \u65b9\u6cd5\u65f6\u8c03\u7528 1.PlatformView:\b\u4e3b\u8981\u7ba1\u7406\u76f8\u5173\u7684\bview\u4e8b\u4ef6 2.Engine:\b\u6240\u6709\u7684\b\u8d44\u6e90\u90fd\u51c6\u5907\b\u5b8c\u6210\uff0c\b\u5f00\u59cb\u8c03\u7528dart\u4ee3\u7801\u548cDart\u865a\u62df\u673a\uff0c\b\u8fdb\u884c\u4ee3\u7801\b\u6267\u884c 3.Rasterizer:\u5149\u6805\u4e3b\u8981\u662f\u5904\u7406GPU\u76f8\u5173\u7684\u4e8b\u4ef6 4.IOManager:\u5bf9io\b\u7ebf\u7a0b\u8fdb\u884c\u7ba1\u7406 5.\u8bbe\u7f6e DartVM ServiceProtocol\b\u8bbe\u7f6e\b\u5904\u7406\u56de\u8c03 6.PersistentCache::GetCacheForProcess()- AddWorkerTaskRunner(task_runners_.GetIOTaskRunner());\b\b\u5bf9\u7f13\u5b58\u76ee\u5f55\u7684\u5904\u7406 bool Shell :: Setup ( std :: unique_ptr PlatformView platform_view , std :: unique_ptr Engine engine , std :: unique_ptr Rasterizer rasterizer , std :: unique_ptr IOManager io_manager ) { if ( is_setup_ ) { return false ; } if ( ! platform_view || ! engine || ! rasterizer || ! io_manager ) { return false ; } platform_view_ = std :: move ( platform_view ); engine_ = std :: move ( engine ); rasterizer_ = std :: move ( rasterizer ); io_manager_ = std :: move ( io_manager ); is_setup_ = true ; if ( auto vm = blink :: DartVM :: ForProcessIfInitialized ()) { vm - GetServiceProtocol (). AddHandler ( this , GetServiceProtocolDescription ()); } PersistentCache :: GetCacheForProcess () - AddWorkerTaskRunner ( task_runners_ . GetIOTaskRunner ()); return true ; } Create the platform // Create the platform view on the platform thread (this thread). auto platform_view = on_create_platform_view ( * shell . get ()); if ( ! platform_view || ! platform_view - GetWeakPtr ()) { return nullptr ; } CreateVSyncWaiter // Ask the platform view for the vsync waiter. This will be used by the engine // to create the animator. auto vsync_waiter = platform_view - CreateVSyncWaiter (); if ( ! vsync_waiter ) { return nullptr ; } Create the IO manager on the IO thread // Create the IO manager on the IO thread. The IO manager must be initialized // first because it has state that the other subsystems depend on. It must // first be booted and the necessary references obtained to initialize the // other subsystems. fml :: AutoResetWaitableEvent io_latch ; std :: unique_ptr IOManager io_manager ; auto io_task_runner = shell - GetTaskRunners (). GetIOTaskRunner (); fml :: TaskRunner :: RunNowOrPostTask ( io_task_runner , [ io_latch , // io_manager , // platform_view , // io_task_runner // ]() { io_manager = std :: make_unique IOManager ( platform_view - CreateResourceContext (), io_task_runner ); io_latch . Signal (); }); io_latch . Wait (); Create the rasterizer on the GPU thread // Create the rasterizer on the GPU thread. fml :: AutoResetWaitableEvent gpu_latch ; std :: unique_ptr Rasterizer rasterizer ; fml :: WeakPtr blink :: SnapshotDelegate snapshot_delegate ; fml :: TaskRunner :: RunNowOrPostTask ( task_runners . GetGPUTaskRunner (), [ gpu_latch , // rasterizer , // on_create_rasterizer , // shell = shell . get (), // snapshot_delegate // ]() { if ( auto new_rasterizer = on_create_rasterizer ( * shell )) { rasterizer = std :: move ( new_rasterizer ); snapshot_delegate = rasterizer - GetSnapshotDelegate (); } gpu_latch . Signal (); }); gpu_latch . Wait (); Create the engine on the UI thread // Create the engine on the UI thread. fml :: AutoResetWaitableEvent ui_latch ; std :: unique_ptr Engine engine ; fml :: TaskRunner :: RunNowOrPostTask ( shell - GetTaskRunners (). GetUITaskRunner (), fml :: MakeCopyable ([ ui_latch , // engine , // shell = shell . get (), // isolate_snapshot = std :: move ( isolate_snapshot ), // shared_snapshot = std :: move ( shared_snapshot ), // vsync_waiter = std :: move ( vsync_waiter ), // snapshot_delegate = std :: move ( snapshot_delegate ), // io_manager = io_manager - GetWeakPtr () // ]() mutable { const auto task_runners = shell - GetTaskRunners (); // The animator is owned by the UI thread but it gets its vsync pulses // from the platform. auto animator = std :: make_unique Animator ( * shell , task_runners , std :: move ( vsync_waiter )); engine = std :: make_unique Engine ( * shell , // shell - GetDartVM (), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ), // task_runners , // shell - GetSettings (), // std :: move ( animator ), // std :: move ( snapshot_delegate ), // std :: move ( io_manager ) // ); ui_latch . Signal (); })); ui_latch . Wait (); Engine\u521d\u59cb\u5316 Engine :: Engine ( Delegate delegate , blink :: DartVM vm , fml :: RefPtr blink :: DartSnapshot isolate_snapshot , fml :: RefPtr blink :: DartSnapshot shared_snapshot , blink :: TaskRunners task_runners , blink :: Settings settings , std :: unique_ptr Animator animator , fml :: WeakPtr blink :: SnapshotDelegate snapshot_delegate , fml :: WeakPtr blink :: IOManager io_manager ) : delegate_ ( delegate ), settings_ ( std :: move ( settings )), animator_ ( std :: move ( animator )), activity_running_ ( false ), have_surface_ ( false ), weak_factory_ ( this ) { // Runtime controller is initialized here because it takes a reference to this // object as its delegate. The delegate may be called in the constructor and // we want to be fully initilazed by that point. runtime_controller_ = std :: make_unique blink :: RuntimeController ( * this , // runtime delegate vm , // VM std :: move ( isolate_snapshot ), // isolate snapshot std :: move ( shared_snapshot ), // shared snapshot std :: move ( task_runners ), // task runners std :: move ( snapshot_delegate ), // snapshot delegate std :: move ( io_manager ), // io manager settings_ . advisory_script_uri , // advisory script uri settings_ . advisory_script_entrypoint , // advisory script entrypoint settings_ . idle_notification_callback // idle notification callback ); } RuntimeController WindowClient Window RuntimeController :: RuntimeController ( RuntimeDelegate p_client , DartVM * p_vm , fml :: RefPtr DartSnapshot p_isolate_snapshot , fml :: RefPtr DartSnapshot p_shared_snapshot , TaskRunners p_task_runners , fml :: WeakPtr SnapshotDelegate p_snapshot_delegate , fml :: WeakPtr IOManager p_io_manager , std :: string p_advisory_script_uri , std :: string p_advisory_script_entrypoint , std :: function void ( int64_t ) p_idle_notification_callback ) : RuntimeController ( p_client , p_vm , std :: move ( p_isolate_snapshot ), std :: move ( p_shared_snapshot ), std :: move ( p_task_runners ), std :: move ( p_snapshot_delegate ), std :: move ( p_io_manager ), std :: move ( p_advisory_script_uri ), std :: move ( p_advisory_script_entrypoint ), p_idle_notification_callback , WindowData { /* default window data */ }) {} RuntimeController :: RuntimeController ( RuntimeDelegate p_client , DartVM * p_vm , fml :: RefPtr DartSnapshot p_isolate_snapshot , fml :: RefPtr DartSnapshot p_shared_snapshot , TaskRunners p_task_runners , fml :: WeakPtr SnapshotDelegate p_snapshot_delegate , fml :: WeakPtr IOManager p_io_manager , std :: string p_advisory_script_uri , std :: string p_advisory_script_entrypoint , std :: function void ( int64_t ) idle_notification_callback , WindowData p_window_data ) : client_ ( p_client ), vm_ ( p_vm ), isolate_snapshot_ ( std :: move ( p_isolate_snapshot )), shared_snapshot_ ( std :: move ( p_shared_snapshot )), task_runners_ ( p_task_runners ), snapshot_delegate_ ( p_snapshot_delegate ), io_manager_ ( p_io_manager ), advisory_script_uri_ ( p_advisory_script_uri ), advisory_script_entrypoint_ ( p_advisory_script_entrypoint ), idle_notification_callback_ ( idle_notification_callback ), window_data_ ( std :: move ( p_window_data )), root_isolate_ ( DartIsolate :: CreateRootIsolate ( vm_ , isolate_snapshot_ , shared_snapshot_ , task_runners_ , std :: make_unique Window ( this ), snapshot_delegate_ , io_manager_ , p_advisory_script_uri , p_advisory_script_entrypoint )) { std :: shared_ptr DartIsolate root_isolate = root_isolate_ . lock (); root_isolate - SetReturnCodeCallback ([ this ]( uint32_t code ) { root_isolate_return_code_ = { true , code }; }); \u5f53\u524d\u5bf9\u8c61\u662f ClientWidow \u5bf9\u8c61\uff0c\u52a8\u8fc7\u8c03\u7528 DidCreateIsolate \uff0c\u52a0\u8f7d dart : UI \u5e93 if ( auto * window = GetWindowIfAvailable ()) { tonic :: DartState :: Scope scope ( root_isolate ); window - DidCreateIsolate (); if ( ! FlushRuntimeStateToIsolate ()) { FML_DLOG ( ERROR ) Could not setup intial isolate state. ; } } else { FML_DCHECK ( false ) RuntimeController created without window binding. ; } FML_DCHECK ( Dart_CurrentIsolate () == nul }; } // namespace blink #endif // FLUTTER_RUNTIME_RUNTIME_CONTROLLER_H_ DartIsolate \u8c03\u7528 shared_embedder_isolate- SetWindow(std::move(window)); \u5bf9\u8c61\u4f20\u9012 RuntimeController \u5230 Window \u7c7b\u4e2d\u8fdb\u884c\u7ed1\u5b9a std :: weak_ptr DartIsolate DartIsolate :: CreateRootIsolate ( DartVM * vm , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot , TaskRunners task_runners , std :: unique_ptr Window window , fml :: WeakPtr SnapshotDelegate snapshot_delegate , fml :: WeakPtr IOManager io_manager , std :: string advisory_script_uri , std :: string advisory_script_entrypoint , Dart_IsolateFlags * flags ) { TRACE_EVENT0 ( flutter , DartIsolate::CreateRootIsolate ); Dart_Isolate vm_isolate = nullptr ; std :: weak_ptr DartIsolate embedder_isolate ; char * error = nullptr ; // Since this is the root isolate, we fake a parent embedder data object. We // cannot use unique_ptr here because the destructor is private (since the // isolate lifecycle is entirely managed by the VM). auto root_embedder_data = std :: make_unique std :: shared_ptr DartIsolate ( std :: make_shared DartIsolate ( vm , // VM std :: move ( isolate_snapshot ), // isolate snapshot std :: move ( shared_snapshot ), // shared snapshot task_runners , // task runners std :: move ( snapshot_delegate ), // snapshot delegate std :: move ( io_manager ), // IO manager advisory_script_uri , // advisory URI advisory_script_entrypoint , // advisory entrypoint nullptr // child isolate preparer will be set when this isolate is // prepared to run )); std :: tie ( vm_isolate , embedder_isolate ) = CreateDartVMAndEmbedderObjectPair ( advisory_script_uri . c_str (), // advisory script URI advisory_script_entrypoint . c_str (), // advisory script entrypoint nullptr , // package root nullptr , // package config flags , // flags root_embedder_data . get (), // parent embedder data true , // is root isolate error // error (out) ); if ( error != nullptr ) { free ( error ); } if ( vm_isolate == nullptr ) { return {}; } std :: shared_ptr DartIsolate shared_embedder_isolate = embedder_isolate . lock (); if ( shared_embedder_isolate ) { // Only root isolates can interact with windows. shared_embedder_isolate - SetWindow ( std :: move ( window )); } root_embedder_data . release (); return embedder_isolate ; } } Window\u7c7b\u521d\u59cb\u5316\u8fc7\u7a0b CreateRootIsolate \u521b\u5efa RootIsolate\u5bf9\u8c61 RuntimeController :: RuntimeController (.....) : client_ ( p_client ), .......), window_data_ ( std :: move ( p_window_data )), root_isolate_ ( DartIsolate :: CreateRootIsolate ( vm_ , isolate_snapshot_ , shared_snapshot_ , task_runners_ , std :: make_unique Window ( this ), snapshot_delegate_ , io_manager_ , p_advisory_script_uri , p_advisory_script_entrypoint )) { std :: shared_ptr DartIsolate root_isolate = root_isolate_ . lock (); root_isolate - SetReturnCodeCallback ([ this ]( uint32_t code ) { root_isolate_return_code_ = { true , code }; }); ## Window\u7c7b\u521d\u59cb\u5316\u8fc7\u7a0b if ( auto * window = GetWindowIfAvailable ()) { tonic :: DartState :: Scope scope ( root_isolate ); window - DidCreateIsolate (); if ( ! FlushRuntimeStateToIsolate ()) { FML_DLOG ( ERROR ) Could not setup intial isolate state. ; } } else { FML_DCHECK ( false ) RuntimeController created without window binding. ; } FML_DCHECK ( Dart_CurrentIsolate () == nullptr ); } Android Native\u5c42\u4e0elibFlutter\u901a\u4fe1\u63a5\u53e3: \u5728\u5206\u6790\u5b8c\u6210\u6574\u4e2a\u521d\u59cb\u5316\u8fc7\u7a0b\u8fd9\u56de\uff0c\u5728\u8ddf\u8fdb\u4e0b\u56fe\u6765\u5206\u6790\u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u548c\u4ee5\u4e0a\u4ee3\u7801\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u6574\u4e2a\u8fd0\u884c\u73af\u5883\u7684\u521d\u59cb\u5316\u76f8\u5173\u7684\u7c7b\u548c\u529f\u80fd\u53ca\u903b\u8f91 Android\u7aef\u8c03\u7528JNI\u5c42\u7684\u4ee3\u7801\uff0c\u4f7f\u7528\u672c\u5730\u63a5\u53e3\u548cFlutterEngine\b\u901a\u4fe1\uff0c\u5728\bFlutter for Android \u4e2d\u901a\u8fc7FlutterJNI\u4e2d\b\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5\uff0cplatform_view_android_jni\u5728\b\u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u662f\u8fdb\u884c\u521d\u59cb\u5316: /io/flutter/embedding/engine/FlutterJNI.class engine/src/flutter/shell/platform/android/platform_view_android_jni.cc public class FlutterJNI { @UiThread public static native boolean nativeGetIsSoftwareRenderingEnabled (); @UiThread public static native String nativeGetObservatoryUri (); private native void nativeSurfaceCreated ( long var1 , Surface var3 ); private native void nativeSurfaceChanged ( long var1 , int var3 , int var4 ); private native void nativeSurfaceDestroyed ( long var1 ); private native void nativeSetViewportMetrics ( long var1 , float var3 , int var4 , int var5 , int var6 , int var7 , int var8 , int var9 , int var10 , int var11 , int var12 , int var13 ); private native Bitmap nativeGetBitmap ( long var1 ); private native void nativeDispatchPointerDataPacket ( long var1 , ByteBuffer var3 , int var4 ); private native void nativeDispatchSemanticsAction ( long var1 , int var3 , int var4 , ByteBuffer var5 , int var6 ); private native void nativeSetSemanticsEnabled ( long var1 , boolean var3 ); private native void nativeSetAccessibilityFeatures ( long var1 , int var3 ); private native void nativeRegisterTexture ( long var1 , long var3 , SurfaceTexture var5 ); private native void nativeMarkTextureFrameAvailable ( long var1 , long var3 ); private native void nativeUnregisterTexture ( long var1 , long var3 ); private native long nativeAttach ( FlutterJNI var1 , boolean var2 ); private native void nativeDetach ( long var1 ); private native void nativeDestroy ( long var1 ); private native void nativeRunBundleAndSnapshotFromLibrary ( long var1 , @NonNull String [] var3 , @Nullable String var4 , @Nullable String var5 , @NonNull AssetManager var6 ); private native void nativeDispatchEmptyPlatformMessage ( long var1 , String var3 , int var4 ); private native void nativeDispatchPlatformMessage ( long var1 , String var3 , ByteBuffer var4 , int var5 , int var6 ); private native void nativeInvokePlatformMessageEmptyResponseCallback ( long var1 , int var3 ); private native void nativeInvokePlatformMessageResponseCallback ( long var1 , int var3 , ByteBuffer var4 , int var5 ); } \u5f15\u64ce\u5143\u4ee3\u7801\u4e2d\b\b\b\u4f7f\u7528\u52a8\u6001JNI\u7684\u65b9\u5f0f\u6ce8\u518c\u76f8\u5173\u65b9\u6cd5: engine/src/flutter/shell/platform/android/platform_view_android_jni.cc \u8c03\u7528Register\b\u65b9\u6cd5\u6ce8\u518c\u672c\u5730\u65b9\u6cd5\uff1a bool RegisterApi ( JNIEnv * env ) { static const JNINativeMethod flutter_jni_methods [] = { // Start of methods from FlutterNativeView { . name = nativeAttach , . signature = (Lio/flutter/embedding/engine/FlutterJNI;Z)J , . fnPtr = reinterpret_cast void * ( shell :: AttachJNI ), }, { . name = nativeDestroy , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: DestroyJNI ), }, { . name = nativeRunBundleAndSnapshotFromLibrary , . signature = (J[Ljava/lang/String;Ljava/lang/String; Ljava/lang/String;Landroid/content/res/AssetManager;)V , . fnPtr = reinterpret_cast void * ( shell :: RunBundleAndSnapshotFromLibrary ), }, }; if ( env - RegisterNatives ( g_flutter_jni_class - obj (), flutter_jni_methods , arraysize ( flutter_jni_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterJNI ; return false ; } `engine/src/flutter/shell/common/shell.cc`\u4f5c\u4e3a\b\u4e00\u4e2a\b\u4e2d\u67a2\u63a7\u5236\u4f5c\u7528\uff0c\u4f7f\u7528\b\u5f31\u5f15\u7528\u6765\u4fdd\u5b58\b\bPlatformView\uff0c\bAndroid\uff0cios\u4fdd\u5b58\u4f7f\u7528shell\u4e2dPlatform\u4e0b\u7684Platefrom\u5b9e\u73b0\u6765\b\u5904\u7406\u5e73\u53f0\u76f8\u5173\u7684View,\bShell\u7684\b\u521d\u59cb\u5316\u662f\u5728`engine/src/flutter/shell/platform/android/android_shell_holder.cc`\uff0c`FlutterMain::Get().GetSettings()`\u7f16\u8bd1\u65f6\u7684\u914d\u7f6e\u6587\u4ef6`engine/src/flutter/common/settings.cc`,`flutterJNI`\u662fandroid\u5c42\u7684\u4ee3\u7801\uff0c`is_background_view`\u662f\u5728\bjava\u5c42\bFlutterNativeView\uff0c\u8fd9\u662fJava\u548cJNI\u7684\u901a\u4fe1\uff0c\u6570\u636e\u4f20\u8f93\u903b\u8f91\u5904\u7406\uff0cFlutterNativeView\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\b\u8c03\u7528JNI\b\u4ee3\u7801\uff0c\b\u521d\u59cb\u5316`android_shell_holder`\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u6765\b\u5168\u90e8\b\b`Shell`\u8fd9\u4e2a\u7c7b ### SurfaceView\u521d\u59cb\u5316 ### Java SurfaceView \u521d\u59cb\u5316 getFlutterJNI \u521d\u59cb\u5316SurfaceView ```Java this.mSurfaceCallback = new Callback() { public void surfaceCreated(SurfaceHolder holder) { FlutterView.this.assertAttached(); FlutterView.this.mNativeView.getFlutterJNI().onSurfaceCreated(holder.getSurface()); } public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) { FlutterView.this.assertAttached(); FlutterView.this.mNativeView.getFlutterJNI().onSurfaceChanged(width, height); } public void surfaceDestroyed(SurfaceHolder holder) { FlutterView.this.assertAttached(); FlutterView.this.mNativeView.getFlutterJNI().onSurfaceDestroyed(); } }; JNI \u521d\u59cb\u5316SurfaceView /Users/cangck/engine/src/flutter/shell/platform/android/platform_view_android_jni.cc SurfaceCreated static void SurfaceCreated ( JNIEnv * env , jobject jcaller , jlong shell_holder , jobject jsurface ) { // Note: This frame ensures that any local references used by // ANativeWindow_fromSurface are released immediately. This is needed as a // workaround for https://code.google.com/p/android/issues/detail?id=68174 fml :: jni :: ScopedJavaLocalFrame scoped_local_reference_frame ( env ); auto window = fml :: MakeRefCounted AndroidNativeWindow ( ANativeWindow_fromSurface ( env , jsurface )); ANDROID_SHELL_HOLDER - GetPlatformView () - NotifyCreated ( std :: move ( window )); } SurfaceChanged static void SurfaceChanged ( JNIEnv * env , jobject jcaller , jlong shell_holder , jint width , jint height ) { ANDROID_SHELL_HOLDER - GetPlatformView () - NotifyChanged ( SkISize :: Make ( width , height )); } SurfaceDestroyed static void SurfaceDestroyed ( JNIEnv * env , jobject jcaller , jlong shell_holder ) { ANDROID_SHELL_HOLDER - GetPlatformView () - NotifyDestroyed (); } \u603b\u7ed3 \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u5df2\u7ecf\u5927\u6982\u4e86\u89e3\u4e86Android\u542f\u52a8\uff0c\u521d\u59cb\u5316Flutter\u5f15\u64ce\u7684\u8fc7\u7a0b","title":"Engine\u521d\u59cb\u5316"},{"location":"android/flutter/EngineInit/#flutterengine","text":"\u5728 Android\u52a0\u8f7dDart\u6587\u4ef6 \u548c Android\u521d\u59cb\u5316View \u4e24\u7bc7\u4ee3\u7801\u5206\u6790\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5df2\u7ecf\u5206\u6790\u4e86\u52a0\u8f7d libflutter.so \u7684\u521d\u59cb\u5316\u8bdd\u8fc7\u7a0b\uff0c platform_view_android_jni.cc \u4e2d\u8c03\u7528 AttachJNI \u521d\u59cb\u5316 AndroidShellHolder \u5bf9\u8c61\u5bf9\u5e73\u53f0\u8fdb\u884c\u521d\u59cb\u5316,\u8fdb\u884c\u6765\u5206\u6790FlutterEngine\u521d\u59cb\u5316\u8fc7\u7a0b\u3002 Flutter Engine\u521d\u59cb\u5316\u8fc7\u7a0b 1. Platfrom,UI,IO,GUP \u7ebf\u7a0b\u7684\u7ba1\u7406\uff0c\u914d\u7f6e\u53c2\u6570\u7684\u7684\u52a0\u8f7d 2.\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c 3. thread_host_ \u8d1f\u8d23\u7ba1\u7406\u76f8\u5173\u7684\u7ebf\u7a0b,\u6258\u7ba1\u56db\u4e2a\u76f8\u5904 TaskRunner , TaskRunners 4. PlatformViewAndroid \u7684\u521b\u5efa\uff0c\u8d1f\u8d23\u7ba1\u7406\u5e73\u53f0\u4fa7\u662f\u4e8b\u4ef6\u5904\u7406\u5728UI\u7ebf\u7a0b\b\u6267\u884c 5. Rasterizer \u7684\u521d\u59cb\u5316\u6805\u683c\u5316\u5728GPU\u7ebf\u7a0b\u6267\u884c 6. MessageLoop \u7684\u521b\u5efa\uff0c\u5728platfrom\u4e2d\u8fd0\u884c 7. TaskRunners \u7ba1\u7406\u6dfb\u52a0\u5230\u4e0d\u540c\u5e73\u53f0\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\uff0c\b\u8d1f\u8d23\u7ba1\u7406\u56db\u4e2a\b\u4efb\u52a1\u8fd0\u884c\u5668 8. Shell \u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cJava\u865a\u62df\u673a\u7684\u521b\u5efa","title":"\bFlutterEngine\u5f15\u64ce\u521d\u59cb\u5316"},{"location":"android/flutter/EngineInit/#flutter","text":"","title":"\u52a0\u8f7dFlutter\u8d44\u6e90"},{"location":"android/flutter/EngineInit/#jni_onload","text":"Flutter.so\u4e2dAndroid\u7aef\u7684\u5165\u53e3\u51fd\u6570 engine/src/flutter/shell/platform/android/library_loader.cc Java\u52a0\u8f7dFlutter.so\u5e93\u5b8c\u6210\u65f6\uff0c\u5f00\u59cb\u521d\u59cb\u5316Flutter\u5f15\u64ce 1.\u6ce8\u518cFlutter\u5c42\u7684\u4ee3\u7801 2.\u521d\u59cb\u5316AndroidView 3.\u521d\u59cb\u5316FlutterMain \u5728\b\bAndroid\u7aef\b\u521d\u59cb\u5316Flutter \u76f8\u5173\u7684\u73af\u5883\b\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u6765\u5b8c\u6210\uff1a // This is called by the VM when the shared library is first loaded. JNIEXPORT jint JNI_OnLoad ( JavaVM * vm , void * reserved ) { // Initialize the Java VM. fml :: jni :: InitJavaVM ( vm ); JNIEnv * env = fml :: jni :: AttachCurrentThread (); bool result = false ; // Register FlutterMain. result = shell :: FlutterMain :: Register ( env ); FML_CHECK ( result ); // Register PlatformView result = shell :: PlatformViewAndroid :: Register ( env ); FML_CHECK ( result ); // Register VSyncWaiter. result = shell :: VsyncWaiterAndroid :: Register ( env ); FML_CHECK ( result ); return JNI_VERSION_1_4 ; }","title":"JNI_OnLoad"},{"location":"android/flutter/EngineInit/#fluttermainregisterenv","text":"1.\u8f6c\u6362FlutterJNI\u4e2d\u7684 nativeInit \u51fd\u6570\u5230JNI init \u51fd\u6570\u5e76\u4e14\u521d\u59cb\u5316\u76f8\u5173\u7684\u5f15\u64ce 2.\u52a0\u8f7d FlutterMain \u4e2d\u7684\u6240\u6709native\u51fd\u6570 \u5f00\u59cb\u521d\u59cb\u5316Register\u67e5\u627eFlutter.jar\u4e2d\u7684Java\u65b9\u6cd5 bool FlutterMain :: Register ( JNIEnv * env ) { static const JNINativeMethod methods [] = { { . name = nativeInit , . signature = (Landroid/content/Context;[Ljava/lang/String;Ljava/ lang/String;Ljava/lang/String;Ljava/lang/String;)V , . fnPtr = reinterpret_cast void * ( Init ), }, { . name = nativeRecordStartTimestamp , . signature = (J)V , . fnPtr = reinterpret_cast void * ( RecordStartTimestamp ), }, }; jclass clazz = env - FindClass ( io/flutter/view/FlutterMain ); if ( clazz == nullptr ) { return false ; } return env - RegisterNatives ( clazz , methods , arraysize ( methods )) == 0 ; } FlutterMain.cc\u6587\u4ef6\u65f6FlutterEngine\u548cAndroid\u5e73\u53f0\u76f8\u5173\u7684\u5165\u53e3\u7c7b\uff0c\u4e3b\u8981\u5904\u7406Android\u76f8\u5173\u7684\u8d44\u6e90\u6587\u4ef6\u548c\u521d\u59cb\u5316FlutterMain.cc 1.\u5728\u8c03\u7528Register\u51fd\u6570\u65f6\uff0c\u5df2\u7ecf\u628aFlutterJNI\u4e2d\u7684 nativeInit \u6620\u5c04\u5230FlutterMain\u4e2d\u7684 nativeInit ,\u4f20\u5165Flutter\u5728Android\u7aef\u7684\u76f8\u5173\u6587\u4ef6 2.\u627e\u5230Android\u5f15\u64ce\u542f\u52a8\u65f6\u4eceApk\u5305\u4e2d\u89e3\u538b\u51fa\u6765\u7684\u8d44\u6e90\u6587\u4ef6 3.\u52a0\u8f7dFlutter\u7f16\u8bd1\u51fa\u6765\u7684\u76f8\u5173\u6587\u4ef6 kernel_blob 4.\u521d\u59cb\u5316FlutterMain g_flutter_main.reset(new FlutterMain(std::move(settings))); void FlutterMain :: Init ( JNIEnv * env , jclass clazz , jobject context , jobjectArray jargs , jstring bundlePath , jstring appStoragePath , jstring engineCachesPath ) { std :: vector std :: string args ; args . push_back ( flutter ); for ( auto arg : fml :: jni :: StringArrayToVector ( env , jargs )) { args . push_back ( std :: move ( arg )); } auto command_line = fml :: CommandLineFromIterators ( args . begin (), args . end ()); auto settings = SettingsFromCommandLine ( command_line ); settings . assets_path = fml :: jni :: JavaStringToString ( env , bundlePath ); // Restore the callback cache. // TODO(chinmaygarde): Route all cache file access through FML and remove this // setter. blink :: DartCallbackCache :: SetCachePath ( fml :: jni :: JavaStringToString ( env , appStoragePath )); fml :: paths :: InitializeAndroidCachesPath ( fml :: jni :: JavaStringToString ( env , engineCachesPath )); blink :: DartCallbackCache :: LoadCacheFromDisk (); if ( ! blink :: DartVM :: IsRunningPrecompiledCode ()) { // Check to see if the appropriate kernel files are present and configure // settings accordingly. auto application_kernel_path = fml :: paths :: JoinPaths ({ settings . assets_path , kernel_blob.bin }); if ( fml :: IsFile ( application_kernel_path )) { settings . application_kernel_asset = application_kernel_path ; } } settings . task_observer_add = []( intptr_t key , fml :: closure callback ) { fml :: MessageLoop :: GetCurrent (). AddTaskObserver ( key , std :: move ( callback )); }; settings . task_observer_remove = []( intptr_t key ) { fml :: MessageLoop :: GetCurrent (). RemoveTaskObserver ( key ); }; #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // There are no ownership concerns here as all mappings are owned by the // embedder and not the engine. auto make_mapping_callback = []( const uint8_t * mapping , size_t size ) { return [ mapping , size ]() { return std :: make_unique fml :: NonOwnedMapping ( mapping , size ); }; }; settings . dart_library_sources_kernel = make_mapping_callback ( kPlatformStrongDill , kPlatformStrongDillSize ); #endif // FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // Not thread safe. Will be removed when FlutterMain is refactored to no // longer be a singleton. g_flutter_main . reset ( new FlutterMain ( std :: move ( settings ))); } \u5012\u76ee\u524d\u4e3a\u6b62\u5df2\u7ecf\u52a0\u8f7d\u5b8c\u6210Flutter\u76f8\u5173\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u5f00\u59cb\u521d\u59cb\u5316View\u76f8\u5173\u7684\u903b\u8f91\u548cAndroid\u7aef\u901a\u4fe1 \b\u5728\u4e0b\u56fe\u4e2d\b: 1.\u521d\u59cb\u5316\bFlutter Engine \b\b\u8fd0\u884c\b\bFlutterUI\u5e93\u7684\u73af\u5883\uff0c\b\u521d\u59cb\u5316AndroidShellHolder\uff1a\u6765\u7ba1\u7406Flutter\u76f8\u5173\u7684\u5f15\u73af\u5883 2. PlatformViewAndroid \u5728JNI\u5c42\u8fdb\u884cView\u7684\u7ed8\u5236\u548c\u4e8b\u4ef6\u5904\u7406,\u6ce8\u518cSurfaceView\u7ed9Flutter Eingine\uff0c\u63d0\u4f9b\u7ed9\u5f15\u64ce\u8fdb\u884c\u7ed8\u5236\u7684\u753b\u5e03\uff0c\b\b\u8c03\u7528ANative_window\u7c7b\u6765\u8fde\u63a5FlutterUI\u548c\bAndroidUI\u7684\u6865\u6881 \b","title":"FlutterMain::Register(env);"},{"location":"android/flutter/EngineInit/#platformviewandroid","text":"","title":"PlatformViewAndroid"},{"location":"android/flutter/EngineInit/#jni","text":"\u521d\u59cb\u5316Android\u5e73\u53f0\u76f8\u5173\u7684View\u903b\u8f91\uff0c\u7ed1\u5b9aFlutter.jar\u7c7b\u548cAndroid \u7ed8\u56fe\u5f15\u64ce\u7684\u521d\u59cb\u5316\u7ed1\u5b9a\u5de5\u4f5c\uff0c\u521d\u59cb\u5316\u5de5\u4f5c\u4e3b\u8981\u7684\u5185\u5bb9\u662f\u5728\u6ce8\u518c\u76f8\u5173\u7684Java\u5c42\u7684\u672c\u5730\u65b9\u6cd5\u5230JNI\u5c42\uff0c\u5efa\u7acb\u597dC++\u548cJava\u5c42\u76f8\u4e92\u8c03\u7528\u51fd\u6570\u5173\u7cfb 1.io/flutter/view/FlutterCallbackInformation 2.io/flutter/embedding/engine/FlutterJNI 3.android/graphics/SurfaceTexture 4.attachToGLContext 5.updateTexImage 6.getTransformMatrix 7.detachFromGLContext bool PlatformViewAndroid :: Register ( JNIEnv * env ) { if ( env == nullptr ) { FML_LOG ( ERROR ) No JNIEnv provided ; return false ; } g_flutter_callback_info_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( io/flutter/view/FlutterCallbackInformation )); if ( g_flutter_callback_info_class - is_null ()) { FML_LOG ( ERROR ) Could not locate FlutterCallbackInformation class ; return false ; } g_flutter_callback_info_constructor = env - GetMethodID ( g_flutter_callback_info_class - obj (), init , (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V ); if ( g_flutter_callback_info_constructor == nullptr ) { FML_LOG ( ERROR ) Could not locate FlutterCallbackInformation constructor ; return false ; } g_flutter_jni_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( io/flutter/embedding/engine/FlutterJNI )); if ( g_flutter_jni_class - is_null ()) { FML_LOG ( ERROR ) Failed to find FlutterJNI Class. ; return false ; } g_surface_texture_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( android/graphics/SurfaceTexture )); if ( g_surface_texture_class - is_null ()) { FML_LOG ( ERROR ) Could not locate SurfaceTexture class ; return false ; } static const JNINativeMethod callback_info_methods [] = { { . name = nativeLookupCallbackInformation , . signature = (J)Lio/flutter/view/FlutterCallbackInformation; , . fnPtr = reinterpret_cast void * ( shell :: LookupCallbackInformation ), }, }; if ( env - RegisterNatives ( g_flutter_callback_info_class - obj (), callback_info_methods , arraysize ( callback_info_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterCallbackInfo ; return false ; } g_attach_to_gl_context_method = env - GetMethodID ( g_surface_texture_class - obj (), attachToGLContext , (I)V ); if ( g_attach_to_gl_context_method == nullptr ) { FML_LOG ( ERROR ) Could not locate attachToGlContext method ; return false ; } g_update_tex_image_method = env - GetMethodID ( g_surface_texture_class - obj (), updateTexImage , ()V ); if ( g_update_tex_image_method == nullptr ) { FML_LOG ( ERROR ) Could not locate updateTexImage method ; return false ; } g_get_transform_matrix_method = env - GetMethodID ( g_surface_texture_class - obj (), getTransformMatrix , ([F)V ); if ( g_get_transform_matrix_method == nullptr ) { FML_LOG ( ERROR ) Could not locate getTransformMatrix method ; return false ; } g_detach_from_gl_context_method = env - GetMethodID ( g_surface_texture_class - obj (), detachFromGLContext , ()V ); if ( g_detach_from_gl_context_method == nullptr ) { FML_LOG ( ERROR ) Could not locate detachFromGlContext method ; return false ; } return RegisterApi ( env ); } } // namespace shell \u6ce8\u518cAndroid\u7aef\u548cView\u64cd\u4f5c\u76f8\u5173\u7684\u903b\u8f91\uff0c\u521d\u59cb\u5316FlutterView\u81ea\u5df1\u7684\u73af\u5883 FlutterJNI 1.AttachJNI 2.DestroyJNI 3.AssetManager bool RegisterApi ( JNIEnv * env ) { static const JNINativeMethod flutter_jni_methods [] = { // Start of methods from FlutterNativeView { . name = nativeAttach , . signature = (Lio/flutter/embedding/engine/FlutterJNI;Z)J , . fnPtr = reinterpret_cast void * ( shell :: AttachJNI ), }, { . name = nativeDestroy , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: DestroyJNI ), }, { . name = nativeRunBundleAndSnapshotFromLibrary , . signature = (J[Ljava/lang/String;Ljava/lang/String; Ljava/lang/String;Landroid/content/res/AssetManager;)V , . fnPtr = reinterpret_cast void * ( shell :: RunBundleAndSnapshotFromLibrary ), }, { . name = nativeGetObservatoryUri , . signature = ()Ljava/lang/String; , . fnPtr = reinterpret_cast void * ( shell :: GetObservatoryUri ), }, { . name = nativeDispatchEmptyPlatformMessage , . signature = (JLjava/lang/String;I)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchEmptyPlatformMessage ), }, { . name = nativeDispatchPlatformMessage , . signature = (JLjava/lang/String;Ljava/nio/ByteBuffer;II)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchPlatformMessage ), }, { . name = nativeInvokePlatformMessageResponseCallback , . signature = (JILjava/nio/ByteBuffer;I)V , . fnPtr = reinterpret_cast void * ( shell :: InvokePlatformMessageResponseCallback ), }, { . name = nativeInvokePlatformMessageEmptyResponseCallback , . signature = (JI)V , . fnPtr = reinterpret_cast void * ( shell :: InvokePlatformMessageEmptyResponseCallback ), }, // Start of methods from FlutterView { . name = nativeGetBitmap , . signature = (J)Landroid/graphics/Bitmap; , . fnPtr = reinterpret_cast void * ( shell :: GetBitmap ), }, { . name = nativeSurfaceCreated , . signature = (JLandroid/view/Surface;)V , . fnPtr = reinterpret_cast void * ( shell :: SurfaceCreated ), }, { . name = nativeSurfaceChanged , . signature = (JII)V , . fnPtr = reinterpret_cast void * ( shell :: SurfaceChanged ), }, { . name = nativeSurfaceDestroyed , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: SurfaceDestroyed ), }, { . name = nativeSetViewportMetrics , . signature = (JFIIIIIIIIII)V , . fnPtr = reinterpret_cast void * ( shell :: SetViewportMetrics ), }, { . name = nativeDispatchPointerDataPacket , . signature = (JLjava/nio/ByteBuffer;I)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchPointerDataPacket ), }, { . name = nativeDispatchSemanticsAction , . signature = (JIILjava/nio/ByteBuffer;I)V , . fnPtr = reinterpret_cast void * ( shell :: DispatchSemanticsAction ), }, { . name = nativeSetSemanticsEnabled , . signature = (JZ)V , . fnPtr = reinterpret_cast void * ( shell :: SetSemanticsEnabled ), }, { . name = nativeSetAccessibilityFeatures , . signature = (JI)V , . fnPtr = reinterpret_cast void * ( shell :: SetAccessibilityFeatures ), }, { . name = nativeGetIsSoftwareRenderingEnabled , . signature = ()Z , . fnPtr = reinterpret_cast void * ( shell :: GetIsSoftwareRendering ), }, { . name = nativeRegisterTexture , . signature = (JJLandroid/graphics/SurfaceTexture;)V , . fnPtr = reinterpret_cast void * ( shell :: RegisterTexture ), }, { . name = nativeMarkTextureFrameAvailable , . signature = (JJ)V , . fnPtr = reinterpret_cast void * ( shell :: MarkTextureFrameAvailable ), }, { . name = nativeUnregisterTexture , . signature = (JJ)V , . fnPtr = reinterpret_cast void * ( shell :: UnregisterTexture ), }, }; if ( env - RegisterNatives ( g_flutter_jni_class - obj (), flutter_jni_methods , arraysize ( flutter_jni_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterJNI ; return false ; } g_handle_platform_message_method = env - GetMethodID ( g_flutter_jni_class - obj (), handlePlatformMessage , (Ljava/lang/String;[BI)V ); if ( g_handle_platform_message_method == nullptr ) { FML_LOG ( ERROR ) Could not locate handlePlatformMessage method ; return false ; } g_handle_platform_message_response_method = env - GetMethodID ( g_flutter_jni_class - obj (), handlePlatformMessageResponse , (I[B)V ); if ( g_handle_platform_message_response_method == nullptr ) { FML_LOG ( ERROR ) Could not locate handlePlatformMessageResponse method ; return false ; } g_update_semantics_method = env - GetMethodID ( g_flutter_jni_class - obj (), updateSemantics , (Ljava/nio/ByteBuffer;[Ljava/lang/String;)V ); if ( g_update_semantics_method == nullptr ) { FML_LOG ( ERROR ) Could not locate updateSemantics method ; return false ; } g_update_custom_accessibility_actions_method = env - GetMethodID ( g_flutter_jni_class - obj (), updateCustomAccessibilityActions , (Ljava/nio/ByteBuffer;[Ljava/lang/String;)V ); if ( g_update_custom_accessibility_actions_method == nullptr ) { FML_LOG ( ERROR ) Could not locate updateCustomAccessibilityActions method ; return false ; } g_on_first_frame_method = env - GetMethodID ( g_flutter_jni_class - obj (), onFirstFrame , ()V ); if ( g_on_first_frame_method == nullptr ) { FML_LOG ( ERROR ) Could not locate onFirstFrame method ; return false ; } g_on_engine_restart_method = env - GetMethodID ( g_flutter_jni_class - obj (), onPreEngineRestart , ()V ); if ( g_on_engine_restart_method == nullptr ) { FML_LOG ( ERROR ) Could not locate onEngineRestart method ; return false ; } return true ; }","title":"JNI\u8c03\u7528\u7684\u7ed1\u5b9a\u5173\u7cfb"},{"location":"android/flutter/EngineInit/#flutterview","text":"FlutterNativeView\u521d\u59cb\u5316\u65f6\u6ce8\u518cAndroid PluginMessage\u5230JNI\u4e2d public FlutterNativeView ( @NonNull Context context , boolean isBackgroundView ) { this . flutterUiDisplayListener = new FlutterUiDisplayListener () { public void onFlutterUiDisplayed () { if ( FlutterNativeView . this . mFlutterView != null ) { FlutterNativeView . this . mFlutterView . onFirstFrame (); } } public void onFlutterUiNoLongerDisplayed () { } }; this . mContext = context ; this . mPluginRegistry = new FlutterPluginRegistry ( this , context ); this . mFlutterJNI = new FlutterJNI (); this . mFlutterJNI . addIsDisplayingFlutterUiListener ( this . flutterUiDisplayListener ); this . dartExecutor = new DartExecutor ( this . mFlutterJNI , context . getAssets ()); this . mFlutterJNI . addEngineLifecycleListener ( new FlutterNativeView . EngineLifecycleListenerImpl ()); this . attach ( this , isBackgroundView ); this . assertAttached (); }","title":"FlutterView \u521d\u59cb\u5316"},{"location":"android/flutter/EngineInit/#flutternativeview","text":"public FlutterNativeView ( @NonNull Context context , boolean isBackgroundView ) { this . flutterUiDisplayListener = new FlutterUiDisplayListener () { public void onFlutterUiDisplayed () { if ( FlutterNativeView . this . mFlutterView != null ) { FlutterNativeView . this . mFlutterView . onFirstFrame (); } } public void onFlutterUiNoLongerDisplayed () { } }; this . mContext = context ; this . mPluginRegistry = new FlutterPluginRegistry ( this , context ); this . mFlutterJNI = new FlutterJNI (); this . mFlutterJNI . addIsDisplayingFlutterUiListener ( this . flutterUiDisplayListener ); this . dartExecutor = new DartExecutor ( this . mFlutterJNI , context . getAssets ()); this . mFlutterJNI . addEngineLifecycleListener ( new FlutterNativeView . EngineLifecycleListenerImpl ()); \u521d\u59cb\u5316JIN this . attach ( this , isBackgroundView ); this . assertAttached (); }","title":"FlutterNativeView"},{"location":"android/flutter/EngineInit/#attachjni","text":"\u63a5\u4e0b\u6765\u8fdb\u884c\u5206\u6790\u5728JNI\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b:AttachJNI\u4e2d\u8c03\u7528 std::make_unique AndroidShellHolder \u65b9\u6cd5\b\u521b\u5efa AndroidShellHolder \u5b9e\u4f8b engine/src/flutter/shell/platform/android/platform_view_android_jni.cc // Called By Java // \u65b9\u6cd5\u6ce8\u518c\u8fdb\u5165JNI static jlong AttachJNI ( JNIEnv * env , jclass clazz , jobject flutterJNI , jboolean is_background_view ) { fml :: jni :: JavaObjectWeakGlobalRef java_object ( env , flutterJNI ); auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); if ( shell_holder - IsValid ()) { return reinterpret_cast jlong ( shell_holder . release ()); } else { return 0 ; } } AndroidShellHolder \u7c7b\u662f\u5bf9\bPlatfrom\u5c42\u8c03\u7528JNI\u7684\u63a5\u53e3\u4f5c\u4e3a\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u6765\u8fdb\u884c\u7edf\u4e00\u7684\u4ee3\u7406\u5165\u53e3\uff0c\u4f7f\u7528C++11\u7684\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u6765\u7edf\u4e00\b\u7ba1\u7406\u4e00\u4e2a\u5bf9\u8c61 C++\u667a\u80fd\u6307\u9488","title":"AttachJNI"},{"location":"android/flutter/EngineInit/#androidshellholder","text":"","title":"AndroidShellHolder"},{"location":"android/flutter/EngineInit/#flutterengine_1","text":"AndroidShellHolder\uff1a\u4e3b\u8981\u662f\u7ba1\u7406flutter engine \u5728Platform\u7aef\u7684\u5165\u53e3: 1.Platfrom,UI,IO,GUP\u7ebf\u7a0b\u7684\u7ba1\u7406\uff0c\u914d\u7f6e\u53c2\u6570\u7684\u7684\u52a0\u8f7d 2.\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c 3.thread_host_\u8d1f\u8d23\u7ba1\u7406\u76f8\u5173\u7684\u7ebf\u7a0b,\u6258\u7ba1\u56db\u4e2a\u76f8\u5904 4.PlatformViewAndroid\u7684\u521b\u5efa\uff0c\u8d1f\u8d23\u7ba1\u7406\u5e73\u53f0\u4fa7\u662f\u4e8b\u4ef6\u5904\u7406\u5728UI\u7ebf\u7a0b\b\u6267\u884c 5.Rasterizer\u7684\u521d\u59cb\u5316\u6805\u683c\u5316\u5728GPU\u7ebf\u7a0b\u6267\u884c 6.MessageLoop\u7684\u521b\u5efa\uff0c\u5728platfrom\u4e2d\u8fd0\u884c 7.TaskRunners\u7ba1\u7406\u6dfb\u52a0\u5230\u4e0d\u540c\u5e73\u53f0\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\uff0c\b\u8d1f\u8d23\u7ba1\u7406\u56db\u4e2a\b\u4efb\u52a1\u8fd0\u884c\u5668 8.Shell\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cJava\u865a\u62df\u673a\u7684\u521b\u5efa // \u53c2\u6570\u8bf4\u660e: // // blink::Settings settings,//\b\u914d\u7f6e\u6570\u636e // fml::jni::JavaObjectWeakGlobalRef java_object,//\bFlutterJNI \u5bf9\u8c61 // bool is_background_view // static size_t shell_count = 1; Shell:\u5bf9\u8c61\u7684\u4e2a\u6570\u4e3a\u4e00\u4e2a // \u5b8c\u6210\b\uff1a // 1.\b\u52a0\u8f7dSettings\u914d\u7f6e\u6587\u4ef6\uff0c\u7ed1\u5b9a\u5168\u5c40\u5bf9\u8c61java_object // 2.\b\b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c // 3.\bThreadHost\u7c7b\u6765\u7ba1\u7406Flutter engine\u7684Platform\uff0cio\uff0cGPU\uff0cUI\u7ebf\u7a0b // 4.\b\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217\uff1afml::MessageLoop::EnsureInitializedForCurrentThread(); //FlutterEngine\u7684\u521d\u59cb\u5316\u5165\u53e3 AndroidShellHolder :: AndroidShellHolder ( blink :: Settings settings , fml :: jni :: JavaObjectWeakGlobalRef java_object , bool is_background_view ) : settings_ ( std :: move ( settings )), java_object_ ( java_object ) { static size_t shell_count = 1 ; auto thread_label = std :: to_string ( shell_count ++ ); // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); } fml :: WeakPtr PlatformViewAndroid weak_platform_view ; Shell :: CreateCallback PlatformView on_create_platform_view = [ is_background_view , java_object , weak_platform_view ]( Shell shell ) { std :: unique_ptr PlatformViewAndroid platform_view_android ; if ( is_background_view ) { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object // java object handle for JNI interop ); } else { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object , // java object handle for JNI interop shell . GetSettings () . enable_software_rendering // use software rendering ); } weak_platform_view = platform_view_android - GetWeakPtr (); return platform_view_android ; }; Shell :: CreateCallback Rasterizer on_create_rasterizer = []( Shell shell ) { return std :: make_unique Rasterizer ( shell . GetTaskRunners ()); }; // The current thread will be used as the platform thread. Ensure that the // message loop is initialized. fml :: MessageLoop :: EnsureInitializedForCurrentThread (); fml :: RefPtr fml :: TaskRunner gpu_runner ; fml :: RefPtr fml :: TaskRunner ui_runner ; fml :: RefPtr fml :: TaskRunner io_runner ; fml :: RefPtr fml :: TaskRunner platform_runner = fml :: MessageLoop :: GetCurrent (). GetTaskRunner (); if ( is_background_view ) { auto single_task_runner = thread_host_ . ui_thread - GetTaskRunner (); gpu_runner = single_task_runner ; ui_runner = single_task_runner ; io_runner = single_task_runner ; } else { gpu_runner = thread_host_ . gpu_thread - GetTaskRunner (); ui_runner = thread_host_ . ui_thread - GetTaskRunner (); io_runner = thread_host_ . io_thread - GetTaskRunner (); } blink :: TaskRunners task_runners ( thread_label , // label platform_runner , // platform gpu_runner , // gpu ui_runner , // ui io_runner // io ); shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); platform_view_ = weak_platform_view ; FML_DCHECK ( platform_view_ ); is_valid_ = shell_ != nullptr ; if ( is_valid_ ) { task_runners . GetGPUTaskRunner () - PostTask ([]() { // Android describes -8 as most important display threads, for // compositing the screen and retrieving input events . Conservatively // set the GPU thread to slightly lower priority than it. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 5 ) != 0 ) { // Defensive fallback. Depending on the OEM, it may not be possible // to set priority to -5. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 2 ) != 0 ) { FML_LOG ( ERROR ) Failed to set GPU task runner priority ; } } }); task_runners . GetUITaskRunner () - PostTask ([]() { if ( :: setpriority ( PRIO_PROCESS , gettid (), - 1 ) != 0 ) { FML_LOG ( ERROR ) Failed to set UI task runner priority ; } }); } }","title":"FlutterEngine\u7684\u521d\u59cb\u5316\u5165\u53e3"},{"location":"android/flutter/EngineInit/#jni_1","text":"\b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5bf9\bDartVM\u865a\u62df\u673a\u9000\u51fa\u540e\b\b\u505a\u4e00\u8d77\u626b\u5c3e\u5de5\u4f5c,\u5e76\u4e14\u6dfb\u52a0\u5230 ui_thread ,\u5982\u679c\b is_background_view (\u8be5\u53c2\u6570\u662f\u5728FlutterJNI\u8c03\u7528\u662f\u4f20\u5165)\u662f\u5728\u540e\u53f0\u5de5\u4f5c\uff0c\u4e5f\u6dfb\u52a0\u5230GPU_Thread\u91cc\u9762 // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); }","title":"\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5904\u7406JNI\u9000\u51fa\u4efb\u52a1"},{"location":"android/flutter/EngineInit/#flutter-engine","text":"Flutter Engine\u8981\u6c42Embeder\u63d0\u4f9b\u56db\u4e2aTask Runner\uff0cEmbeder\u6307\u7684\u662f\u5c06\u5f15\u64ce\u79fb\u690d\u5230\u5e73\u53f0\u7684\u4e2d\u95f4\u5c42\u4ee3\u7801\u3002\u8fd9\u56db\u4e2a\u4e3b\u8981\u7684Task Runner\u5305\u62ec\uff1a \b\u6839\u636e\u5728java\u5c42\u8c03\u7528native\u5c42\u7684\u8c03\u7528\u662f\u4f20\u5165\u7684\u53c2\u6570\u5224\u65ad\u521b\u5efa\u7ebf\u7a0b\u7684\u7c7b\u578b: 1.\u521b\u5efa\u4e00\u4e2a\bThreadHost\u6765\u7ba1\u74064\u4e2a\u7ebf\u7a0b\u5bf9\u8c61 2.\u5b9a\u4e49\u4e00\u4e2a\u7ebf\u7a0b\u7c7b\u7684\u4ee3\u7406\u7c7b /engine/src/flutter/fml/thread.cc 3.\u5728\u7ebf\u7a0b\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\bMessageLoop\u3001\u7ed1\u5b9aTaskRunner,\u540c\u65f6\b\u542f\u52a8\bMessageLoop 4.\u521b\u5efa\u4e00\u4e2aTaskRunners\u7c7b\u6765\u7ba1\u7406\u56db\u4e2a\u4efb\u52a1\u8fd0\u884c\u5668","title":"Flutter Engine\u7ebf\u7a0b\u6c60\u6a21\u5f0f"},{"location":"android/flutter/EngineInit/#threadhost","text":"if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } ThreadHost \u7c7b\b\u4e3b\u8981\u662f\u521b\u5efa\u7684Platform\uff0cUI\uff0cIO\uff0cGPU\u7ebf\u7a0b\uff0c\u4e3b\u8981\u7528\u6765\u5bf9\b\u56db\u4e2a\u7ebf\u7a0b\u7684\b\u5bbf\u4e3b\u5bf9\u8c61,\u5b9a\u4e49\b\u4e00\u4e2a\b\u679a\u4e3e\u7c7b\u578b\u6765\u6807\u8bb0\u56db\u79cd\u7ebf\u7a0b\u7684\u7c7b\u578b: enum Type { Platform = 1 0 , UI = 1 1 , GPU = 1 2 , IO = 1 3 , }; \u6784\u9020\u65b9\u6cd5\u521b\u5efa\u56db\u4e2a\u7ebf\u7a0b C++\u667a\u80fd\u6307\u9488 : ThreadHost :: ThreadHost ( std :: string name_prefix , uint64_t mask ) { if ( mask ThreadHost :: Type :: Platform ) { platform_thread = std :: make_unique fml :: Thread ( name_prefix + .platform ); } if ( mask ThreadHost :: Type :: UI ) { ui_thread = std :: make_unique fml :: Thread ( name_prefix + .ui ); } if ( mask ThreadHost :: Type :: GPU ) { gpu_thread = std :: make_unique fml :: Thread ( name_prefix + .gpu ); } if ( mask ThreadHost :: Type :: IO ) { io_thread = std :: make_unique fml :: Thread ( name_prefix + .io ); } }","title":"ThreadHost"},{"location":"android/flutter/EngineInit/#messageloop","text":"\b\u5728 engine/src/flutter/fml/thread.cc \u6784\u9020\u65b9\u6cd5\u4e2d\u521b\u5efa\u7ebf\u7a0b\u7c7b\uff0c\u540c\u65f6\u521d\u59cb\u5316\b MessageLoop ,\u5173\u8054\u4efb\u52a1\u8fd0\u884c\u5668\u5230\b\u6d88\u606f\u961f\u5217\uff0c\u540c\u65f6\u542f\u52a8\u6d88\u606f\u961f\u5217 loop.Run() ,\u662f\u4e2a\u7ebf\u7a0b\u521b\u5efa\u7684\u65f6\u5019\u5206\u522b\u521b\u5efa\u4e86\u56db\u4e2a\u4e0d\u540c\u7684MessageLoop Thread :: Thread ( const std :: string name ) : joined_ ( false ) { fml :: AutoResetWaitableEvent latch ; fml :: RefPtr fml :: TaskRunner runner ; thread_ = std :: make_unique std :: thread ([ latch , runner , name ]() - void { SetCurrentThreadName ( name ); fml :: MessageLoop :: EnsureInitializedForCurrentThread (); //\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217 auto loop = MessageLoop :: GetCurrent (); runner = loop . GetTaskRunner (); latch . Signal (); loop . Run (); //\u542f\u52a8\u6d88\u606f\u961f\u5217 }); // \u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u72b6\u6001 latch . Wait (); task_runner_ = runner ; }","title":"MessageLoop"},{"location":"android/flutter/EngineInit/#platform-task-runner","text":"Flutter Engine\u7684\u4e3bTask Runner\uff0c\u7c7b\u4f3c\u4e8eAndroid Main Thread\u6216\u8005iOS\u7684Main Thread\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u4ed6\u4eec\u8fd8\u662f\u6709\u533a\u522b\u7684\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e2aFlutter\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2aEngine\u5b9e\u4f8b\uff0cEngine\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4f9bPlatform Runner\u4f7f\u7528\u3002 \u8ddfFlutter Engine\u7684\u6240\u6709\u4ea4\u4e92\uff08\u63a5\u53e3\u8c03\u7528\uff09\u5fc5\u987b\u5728Platform Thread\u8fdb\u884c\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u3002\u8fd9\u8ddfiOS UI\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u76f8\u7c7b\u4f3c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728Flutter Engine\u4e2d\u6709\u5f88\u591a\u6a21\u5757\u90fd\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u89c4\u5219\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8eFlutter Engine\u7684\u63a5\u53e3\u8c03\u7528\u90fd\u9700\u4fdd\u8bc1\u5728Platform Thread\u8fdb\u884c\u3002 \u963b\u585ePlatform Thread\u4e0d\u4f1a\u76f4\u63a5\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\uff08\u8ddfiOS android\u4e3b\u7ebf\u7a0b\u4e0d\u540c\uff09\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e5f\u4e0d\u5efa\u8bae\u5728\u8fd9\u4e2aRunner\u6267\u884c\u7e41\u91cd\u7684\u64cd\u4f5c\uff0c\u957f\u65f6\u95f4\u5361\u4f4fPlatform Thread\u5e94\u7528\u6709\u53ef\u80fd\u4f1a\u88ab\u7cfb\u7edfWatchdog\u5f3a\u6740\u3002","title":"Platform Task Runner:"},{"location":"android/flutter/EngineInit/#ui-task-runner-threaddart-runner","text":"UI Task Runner\u7528\u4e8e\u6267\u884cDart root isolate\u4ee3\u7801\uff08isolate\u6211\u4eec\u540e\u9762\u4f1a\u8bb2\u5230\uff0c\u59d1\u4e14\u5148\u7b80\u5355\u7406\u89e3\u4e3aDart VM\u91cc\u9762\u7684\u7ebf\u7a0b\uff09\u3002Root isolate\u6bd4\u8f83\u7279\u6b8a\uff0c\u5b83\u7ed1\u5b9a\u4e86\u4e0d\u5c11Flutter\u9700\u8981\u7684\u51fd\u6570\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u8fdb\u884c\u6e32\u67d3\u76f8\u5173\u64cd\u4f5c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5e27\uff0c\u5f15\u64ce\u8981\u505a\u7684\u4e8b\u60c5\u6709\uff1a Root isolate\u901a\u77e5Flutter Engine\u6709\u5e27\u9700\u8981\u6e32\u67d3\u3002 Flutter Engine\u901a\u77e5\u5e73\u53f0\uff0c\u9700\u8981\u5728\u4e0b\u4e00\u4e2avsync\u7684\u65f6\u5019\u5f97\u5230\u901a\u77e5\u3002 \u5e73\u53f0\u7b49\u5f85\u4e0b\u4e00\u4e2avsync \u5bf9\u521b\u5efa\u7684\u5bf9\u8c61\u548cWidgets\u8fdb\u884cLayout\u5e76\u751f\u6210\u4e00\u4e2aLayer Tree\uff0c\u8fd9\u4e2aTree\u9a6c\u4e0a\u88ab\u63d0\u4ea4\u7ed9Flutter Engine\u3002\u5f53\u524d\u9636\u6bb5\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u5149\u6805\u5316\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u4ec5\u662f\u751f\u6210\u4e86\u5bf9\u9700\u8981\u7ed8\u5236\u5185\u5bb9\u7684\u63cf\u8ff0\u3002 \u521b\u5efa\u6216\u8005\u66f4\u65b0Tree\uff0c\u8fd9\u4e2aTree\u5305\u542b\u4e86\u7528\u4e8e\u5c4f\u5e55\u4e0a\u663e\u793aWidgets\u7684\u8bed\u4e49\u4fe1\u606f\u3002\u8fd9\u4e2a\u4e1c\u897f\u4e3b\u8981\u7528\u4e8e\u5e73\u53f0\u76f8\u5173\u7684\u8f85\u52a9Accessibility\u5143\u7d20\u7684\u914d\u7f6e\u548c\u6e32\u67d3\u3002 \u9664\u4e86\u6e32\u67d3\u76f8\u5173\u903b\u8f91\u4e4b\u5916Root Isolate\u8fd8\u662f\u5904\u7406\u6765\u81eaNative Plugins\u7684\u6d88\u606f\uff0cTimers\uff0cMicrotasks\u548c\u5f02\u6b65IO\u7b49\u64cd\u4f5c\u3002Root Isolate\u8d1f\u8d23\u521b\u5efa\u7ba1\u7406\u7684Layer Tree\u6700\u7ec8\u51b3\u5b9a\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u7684\u5185\u5bb9\u3002\u56e0\u6b64\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u8fc7\u8f7d\u4f1a\u76f4\u63a5\u5bfc\u81f4\u5361\u987f\u6389\u5e27\u3002","title":"UI Task Runner Thread\uff08Dart Runner\uff09"},{"location":"android/flutter/EngineInit/#gpu-task-runner","text":"GPU Task Runner\u4e3b\u8981\u7528\u4e8e\u6267\u884c\u8bbe\u5907GPU\u7684\u6307\u4ee4\u3002UI Task Runner\u521b\u5efa\u7684Layer Tree\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u5b83\u4e0d\u5173\u5fc3\u5230\u5e95\u7531\u8c01\u6765\u5b8c\u6210\u7ed8\u5236\u3002GPU Task Runner\u8d1f\u8d23\u5c06Layer Tree\u63d0\u4f9b\u7684\u4fe1\u606f\u8f6c\u5316\u4e3a\u5e73\u53f0\u53ef\u6267\u884c\u7684GPU\u6307\u4ee4\u3002GPU Task Runner\u540c\u65f6\u8d1f\u8d23\u7ed8\u5236\u6240\u9700\u8981\u7684GPU\u8d44\u6e90\u7684\u7ba1\u7406\u3002\u8d44\u6e90\u4e3b\u8981\u5305\u62ec\u5e73\u53f0Framebuffer\uff0cSurface\uff0cTexture\u548cBuffers\u7b49\u3002 \u4e00\u822c\u6765\u8bf4UI Runner\u548cGPU Runner\u8dd1\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002GPU Runner\u4f1a\u6839\u636e\u76ee\u524d\u5e27\u6267\u884c\u7684\u8fdb\u5ea6\u53bb\u5411UI Runner\u8981\u6c42\u4e0b\u4e00\u5e27\u7684\u6570\u636e\uff0c\u5728\u4efb\u52a1\u7e41\u91cd\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u544a\u8bc9UI Runner\u5ef6\u8fdf\u4efb\u52a1\u3002\u8fd9\u79cd\u8c03\u5ea6\u673a\u5236\u786e\u4fddGPU Runner\u4e0d\u81f3\u4e8e\u8fc7\u8f7d\uff0c\u540c\u65f6\u4e5f\u907f\u514d\u4e86UI Runner\u4e0d\u5fc5\u8981\u7684\u6d88\u8017\u3002 \u5efa\u8bae\u4e3a\u6bcf\u4e00\u4e2aEngine\u5b9e\u4f8b\u90fd\u65b0\u5efa\u4e00\u4e2a\u4e13\u7528\u7684GPU Runner\u7ebf\u7a0b\u3002","title":"GPU Task Runner"},{"location":"android/flutter/EngineInit/#io-task-runner","text":"\u524d\u9762\u8ba8\u8bba\u7684\u51e0\u4e2aRunner\u5bf9\u4e8e\u6267\u884c\u6d41\u7545\u5ea6\u6709\u6bd4\u8f83\u9ad8\u7684\u8981\u6c42\u3002Platform Runner\u8fc7\u8f7d\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edfWatchDog\u5f3a\u6740\uff0cUI\u548cGPU Runner\u8fc7\u8f7d\u5219\u53ef\u80fd\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\u3002\u4f46\u662fGPU\u7ebf\u7a0b\u7684\u4e00\u4e9b\u5fc5\u8981\u64cd\u4f5c\uff0c\u4f8b\u5982IO\uff0c\u653e\u5230\u54ea\u91cc\u6267\u884c\u5462\uff1f\u7b54\u6848\u6b63\u662fIO Runner\u3002 IO Runner\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4ece\u56fe\u7247\u5b58\u50a8\uff08\u6bd4\u5982\u78c1\u76d8\uff09\u4e2d\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u5c06\u56fe\u7247\u6570\u636e\u8fdb\u884c\u5904\u7406\u4e3aGPU Runner\u7684\u6e32\u67d3\u505a\u597d\u51c6\u5907\u3002IO Runner\u9996\u5148\u8981\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u4e8c\u8fdb\u5236\u6570\u636e\uff08\u6bd4\u5982PNG\uff0cJPEG\uff09\uff0c\u5c06\u5176\u89e3\u538b\u8f6c\u6362\u6210GPU\u80fd\u591f\u5904\u7406\u7684\u683c\u5f0f\u7136\u540e\u5c06\u6570\u636e\u4e0a\u4f20\u5230GPU\u3002 \u83b7\u53d6\u8bf8\u5982ui.Image\u8fd9\u6837\u7684\u8d44\u6e90\u53ea\u6709\u901a\u8fc7async call\u53bb\u8c03\u7528\uff0c\u5f53\u8c03\u7528\u53d1\u751f\u7684\u65f6\u5019Flutter Framework\u544a\u8bc9IO Runner\u8fdb\u884c\u52a0\u8f7d\u7684\u5f02\u6b65\u64cd\u4f5c\u3002 IO Runner\u76f4\u63a5\u51b3\u5b9a\u4e86\u56fe\u7247\u548c\u5176\u5b83\u4e00\u4e9b\u8d44\u6e90\u52a0\u8f7d\u7684\u5ef6\u8fdf\u95f4\u63a5\u5f71\u54cd\u6027\u80fd\u3002\u6240\u4ee5\u5efa\u8bae\u4e3aIO Runner\u521b\u5efa\u4e00\u4e2a\u4e13\u7528\u7684\u7ebf\u7a0b\u3002","title":"IO Task Runner"},{"location":"android/flutter/EngineInit/#taskrunner","text":"ThreadHost\u521b\u5efa\u5b8c\u6210\u56db\u4e2a\u7ebf\u7a0b\u4e4b\u540e\uff0c\u5728\u521b\u5efa\u56db\u4e2a TaskRunner \u6765\u7ba1\u7406Platform\uff0cUI\uff0cGPU\uff0cIO\u7ebf\u7a0b\u4e2d\u7684\u4efb\u52a1 engine/src/flutter/fml/task_runner.h \u63d0\u4f9b\u56db\u4e2a\u65b9\u6cd5\u5904\u7406\u63d0\u4ea4\u5230MessageLoop\u7684\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\u548c\u5173\u8054\u5230\u6d88\u606f\u961f\u5217 PostTask PostTaskForTime PostDelayedTask RunNowOrPostTask RefPtr loop_ namespace fml { class MessageLoopImpl ; class TaskRunner : public fml :: RefCountedThreadSafe TaskRunner { public : virtual void PostTask ( fml :: closure task ); virtual void PostTaskForTime ( fml :: closure task , fml :: TimePoint target_time ); virtual void PostDelayedTask ( fml :: closure task , fml :: TimeDelta delay ); virtual bool RunsTasksOnCurrentThread (); virtual ~ TaskRunner (); static void RunNowOrPostTask ( fml :: RefPtr fml :: TaskRunner runner , fml :: closure task ); protected : TaskRunner ( fml :: RefPtr MessageLoopImpl loop ); private : fml :: RefPtr MessageLoopImpl loop_ ; FML_FRIEND_MAKE_REF_COUNTED ( TaskRunner ); FML_FRIEND_REF_COUNTED_THREAD_SAFE ( TaskRunner ); FML_DISALLOW_COPY_AND_ASSIGN ( TaskRunner ); }; } // namespace fml #endif // FLUTTER_FML_TASK_RUNNER_H_","title":"TaskRunner"},{"location":"android/flutter/EngineInit/#taskrunners","text":"\u521b\u5efa\u4e00\u4e2aTaskRunners\u7edf\u4e00\u7ba1\u7406\u56db\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u4efb\u52a1 TaskRunners task_runners ( thread_label , // label platform_runner , // platform gpu_runner , // gpu ui_runner , // ui io_runner // io namespace blink { \u8bb0\u5f55\u5e73\u53f0\u76f8\u5173\u7684\u56db\u4e2a\u76f8\u5173\u7684\u7ebf\u7a0b\u7684\u4efb\u52a1\u7edf\u4e00\u7684\u7ba1\u7406\u3002 class TaskRunners { public : TaskRunners ( std :: string label , fml :: RefPtr fml :: TaskRunner platform , //\u5e73\u53f0\u7ebf\u7a0b\u5173\u8054 fml :: RefPtr fml :: TaskRunner gpu , //gpu\u7ebf\u7a0b\u5173\u8054 fml :: RefPtr fml :: TaskRunner ui , //ui\u76f8\u5904\u7684\u5173\u8054 fml :: RefPtr fml :: TaskRunner io ); //io\u76f8\u5904 ........ private : const std :: string label_ ; fml :: RefPtr fml :: TaskRunner platform_ ; fml :: RefPtr fml :: TaskRunner gpu_ ; fml :: RefPtr fml :: TaskRunner ui_ ; fml :: RefPtr fml :: TaskRunner io_ ; }; } // namespace blink #endif // FLUTTER_COMMON_TASK_RUNNERS_H_","title":"TaskRunners"},{"location":"android/flutter/EngineInit/#shell","text":"Shell \u7c7b\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u8d1f\u8d23\u7ba1\u7406\b\b\u5ba2\u6237\u7aef\u76f8\u5173\u7684\u8d44\u6e90 /engine/src/flutter/shell/platform/android/android_shell_holder.cc ,\u521b\u5efa\u7684\u5730\u65b9 Shell\u4e3b\u8981\u7684\u529f\u80fd\u521d\u59cb\u5316\b\u4ee5\u4e0b\u56db\u4e2a\u5bf9\u8c61 platform_view_ = std::move(platform_view); engine_ = std::move(engine); rasterizer_ = std::move(rasterizer); io_manager_ = std::move(io_manager); \u521b\u5efaDartVM\u865a\u62df\u673a \u4e3b\u8981\u6267\u884c\u7684\u52a8\u4f5c: \u5728new \bShell\u65f6\u5019\u6709\u4ece\u65b0\u521b\u5efa\u4e86\u4e00\u4e2aDartVM 1.\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4 2.\b\u521d\u59cb\u5316\u65e5\u5fd7\u8bbe\u7f6e 3.\u521d\u59cb\u5316Skia\uff1aInitSkiaEventTracer 4.\u521d\u59cb\u5316\uff1aSkGraphics 5.\u521d\u59cb\u5316\u672c\u5730\u5316\u5e93:InitializeICU 6.\u521b\u5efa\u865a\u62df\u673a:blink::DartVM::ForProcess(settings); 7.\u5f00\u542f\u5e73\u53f0\u4efb\u52a1\u4efb\u52a1 new Shell 7.2:\b\u5728new \bShell\u65f6\u5019\u6709\u4ece\u65b0\u521b\u5efa\u4e86\u4e00\u4e2aDartVM\uff1a 7.3 Install service protocol handlers. 8.\u771f\u6b63\u521b\u5efa\u5e73\u53f0\u64cd\u4f5c\u7684\u5bf9\u8c61/engine/src/flutter/shell/platform/android/platform_view_android.cc 9.\u521b\u5efa\u4e00\u4e2aCreateVSyncWaiter\u5bf9\u8c61\b 10.\u521b\u5efaIOManager\u7ba1\u7406\u5668\uff0c\u5728IO\u7ebf\u7a0b\u6267\u884c 11.\u521b\u5efaRasterizer\u6267\u884c\u5728GPU\u7ebf\u7a0b 12.\u521b\u5efaengine\u5728UI\u7ebf\u7a0b\u6267\u884c Shell :: Shell ( blink :: TaskRunners task_runners , blink :: Settings settings ) : task_runners_ ( std :: move ( task_runners )), //\u4efb\u52a1\u8fd0\u884c\u5668 settings_ ( std :: move ( settings )), vm_ ( blink :: DartVM :: ForProcess ( settings_ )) { //\u521b\u5efa\u4e00\u4e2a\u65b0\u7684DartVM FML_DCHECK ( task_runners_ . IsValid ()); FML_DCHECK ( task_runners_ . GetPlatformTaskRunner () - RunsTasksOnCurrentThread ()); shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); \u5728 Shell \b\b\u521b\u5efa\u65f6 : std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { //\b\u521d\u59cb\u5316\u7b2c\u4e09\u65b9\u5e93 PerformInitializationTasks ( settings ); //\u521d\u59cb\u5316DartVM\u865a\u62df\u673a auto vm = blink :: DartVM :: ForProcess ( settings ); FML_CHECK ( vm ) Must be able to initialize the VM. ; return Shell :: Create ( std :: move ( task_runners ), // std :: move ( settings ), // vm - GetIsolateSnapshot (), // blink :: DartSnapshot :: Empty (), // std :: move ( on_create_platform_view ), // std :: move ( on_create_rasterizer ) // ); }","title":"Shell\u7c7b\u521d\u59cb\u5316:"},{"location":"android/flutter/EngineInit/#dartvm","text":"DartVM::ForProcess Dart VM \u865a\u62df\u673a\u5728Shell\b\u521b\u5efa\u7684\u65f6\u5019\b\u521d\u59cb\u5316\uff1a auto vm = blink::DartVM::ForProcess(settings); , /engine/src/flutter/shell/common/shell.cc ,Shell::Create\uff0c\b\bDart\u865a\u62df\u673a\u7684\b\u5206\u6790\uff0c\u5728\u540e\u7eed\u5728\u8fdb\u884c\u6269\u5c55 1.\u52a0\u8f7ddart\u865a\u62df\u673a\u5feb\u7167 2.\u52a0\u8f7dIsolate\u5feb\u7167 3.\b\u8c03\u7528DartVM\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u865a\u62df\u673a fml :: RefPtr DartVM DartVM :: ForProcess ( Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) { std :: lock_guard std :: mutex lock ( gVMMutex ); std :: call_once ( gVMInitialization , [ settings , // vm_snapshot , // isolate_snapshot , // shared_snapshot // ]() mutable { if ( ! vm_snapshot ) { vm_snapshot = DartSnapshot :: VMSnapshotFromSettings ( settings ); } if ( ! ( vm_snapshot vm_snapshot - IsValid ())) { FML_LOG ( ERROR ) VM snapshot must be valid. ; return ; } if ( ! isolate_snapshot ) { isolate_snapshot = DartSnapshot :: IsolateSnapshotFromSettings ( settings ); } if ( ! ( isolate_snapshot isolate_snapshot - IsValid ())) { FML_LOG ( ERROR ) Isolate snapshot must be valid. ; return ; } if ( ! shared_snapshot ) { shared_snapshot = DartSnapshot :: Empty (); } gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); }); return gVM ; }","title":"\u521d\u59cb\u5316DartVM"},{"location":"android/flutter/EngineInit/#shell_1","text":"PerformInitializationTasks , /engine/src/flutter/shell/common/shell.cc RecordStartupTimestamp()\u8bb0\u5f55\u65f6\u95f4\u6233 fml::SetLogSettings(log_settings) \u8bbe\u7f6e\u65e5\u5fd7\u4fe1\u606f InitSkiaEventTracer(settings.trace_skia) \u521d\u59cb\u5316Skia\b2d\u56fe\u50cf\u5f15\u64ce\u5e93\u8ddf\u8e2a\u5668 SkGraphics::Init(); \b \u521d\u59cb\u53162d\b\u56fe\u5f62\u5f15\u64ce\u5e93 fml::icu::InitializeICU(settings.icu_data_path); \u521d\u59cb\u5316\b\b\u56fd\u9645\u5316\u5904\u7406\bICU // Though there can be multiple shells, some settings apply to all components in // the process. These have to be setup before the shell or any of its // sub-components can be initialized. In a perfect world, this would be empty. // TODO(chinmaygarde): The unfortunate side effect of this call is that settings // that cause shell initialization failures will still lead to some of their // settings being applied. static void PerformInitializationTasks ( const blink :: Settings settings ) { static std :: once_flag gShellSettingsInitialization = {}; std :: call_once ( gShellSettingsInitialization , [ settings ] { RecordStartupTimestamp (); { fml :: LogSettings log_settings ; log_settings . min_log_level = settings . verbose_logging ? fml :: LOG_INFO : fml :: LOG_ERROR ; fml :: SetLogSettings ( log_settings ); } tonic :: SetLogHandler ( []( const char * message ) { FML_LOG ( ERROR ) message ; }); if ( settings . trace_skia ) { InitSkiaEventTracer ( settings . trace_skia ); } if ( ! settings . skia_deterministic_rendering_on_cpu ) { SkGraphics :: Init (); } else { FML_DLOG ( INFO ) Skia deterministic rendering is enabled. ; } if ( settings . icu_initialization_required ) { if ( settings . icu_data_path . size () != 0 ) { fml :: icu :: InitializeICU ( settings . icu_data_path ); } else if ( settings . icu_mapper ) { fml :: icu :: InitializeICUFromMapping ( settings . icu_mapper ()); } else { FML_DLOG ( WARNING ) Skipping ICU initialization in the shell. ; } } }); }","title":"Shell\b\b\u521b\u5efa\u65f6\u7b2c\u4e09\u65b9\u5e93\u521d\u59cb\u5316\b\u4f4d\u7f6e"},{"location":"android/flutter/EngineInit/#createshellonplatformthread","text":"\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u662f\u771f\u6b63\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u5730\u65b9 std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , fml :: RefPtr blink :: DartSnapshot isolate_snapshot , fml :: RefPtr blink :: DartSnapshot shared_snapshot , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { PerformInitializationTasks ( settings ); if ( ! task_runners . IsValid () || ! on_create_platform_view || ! on_create_rasterizer ) { return nullptr ; } fml :: AutoResetWaitableEvent latch ; std :: unique_ptr Shell shell ; fml :: TaskRunner :: RunNowOrPostTask ( //\u63d0\u4ea4\u4efb\u52a1\u5230Platform\u7ebf\u7a0b\u8fd0\u884c task_runners . GetPlatformTaskRunner (), [ latch , // shell , // task_runners = std :: move ( task_runners ), // settings , // isolate_snapshot = std :: move ( isolate_snapshot ), // shared_snapshot = std :: move ( shared_snapshot ), // on_create_platform_view , // on_create_rasterizer // ]() { shell = CreateShellOnPlatformThread ( std :: move ( task_runners ), // settings , // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ), // on_create_platform_view , // on_create_rasterizer // ); latch . Signal (); }); latch . Wait (); return shell ; } CreateShellOnPlatformThread`\b\b\u5b8c\u6210Shell\u5206\u7684\u4e00\u4e0b\u521d\u59cb\u5316\u4fe1\u606f 1.\u521b\u5efa\u4e00\u4e2a\bShell\u5b9e\u4f8b\u5bf9\u8c61`auto shell = std::unique_ptr (new Shell(task_runners, settings)); 2.\u521b\u5efa\u5e73\u53f0View\u5728\u5e73\u53f0\u7ebf\u7a0b`auto platform_view = on_create_platform_view(*shell.get()); 3.\u521b\u5efa\u4e00\u4e2aSyncwaiter`auto vsync_waiter = platform_view- CreateVSyncWaiter(); 4.\u521b\u5efa\u4e00\u4e2aIO\u7ba1\u7406io\u7ebf\u7a0b`std::unique_ptr io_manager; 5.\u5728UI\u7ebf\u7a0b\u521b\u5efa\bengine\uff1a`fml::AutoResetWaitableEvent ui_latch; std :: unique_ptr Shell Shell :: CreateShellOnPlatformThread ( blink :: TaskRunners task_runners , blink :: Settings settings , fml :: RefPtr blink :: DartSnapshot isolate_snapshot , fml :: RefPtr blink :: DartSnapshot shared_snapshot , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { if ( ! task_runners . IsValid ()) { return nullptr ; } auto shell = std :: unique_ptr Shell ( new Shell ( task_runners , settings )); // Create the platform view on the platform thread (this thread). auto platform_view = on_create_platform_view ( * shell . get ()); if ( ! platform_view || ! platform_view - GetWeakPtr ()) { return nullptr ; } // Ask the platform view for the vsync waiter. This will be used by the engine // to create the animator. auto vsync_waiter = platform_view - CreateVSyncWaiter (); if ( ! vsync_waiter ) { return nullptr ; } // Create the IO manager on the IO thread. The IO manager must be initialized // first because it has state that the other subsystems depend on. It must // first be booted and the necessary references obtained to initialize the // other subsystems. fml :: AutoResetWaitableEvent io_latch ; std :: unique_ptr IOManager io_manager ; auto io_task_runner = shell - GetTaskRunners (). GetIOTaskRunner (); fml :: TaskRunner :: RunNowOrPostTask ( io_task_runner , [ io_latch , // io_manager , // platform_view , // io_task_runner // ]() { io_manager = std :: make_unique IOManager ( platform_view - CreateResourceContext (), io_task_runner ); io_latch . Signal (); }); io_latch . Wait (); // Create the rasterizer on the GPU thread. fml :: AutoResetWaitableEvent gpu_latch ; std :: unique_ptr Rasterizer rasterizer ; fml :: WeakPtr blink :: SnapshotDelegate snapshot_delegate ; fml :: TaskRunner :: RunNowOrPostTask ( task_runners . GetGPUTaskRunner (), [ gpu_latch , // rasterizer , // on_create_rasterizer , // shell = shell . get (), // snapshot_delegate // ]() { if ( auto new_rasterizer = on_create_rasterizer ( * shell )) { rasterizer = std :: move ( new_rasterizer ); snapshot_delegate = rasterizer - GetSnapshotDelegate (); } gpu_latch . Signal (); }); gpu_latch . Wait (); // Create the engine on the UI thread. fml :: AutoResetWaitableEvent ui_latch ; std :: unique_ptr Engine engine ; fml :: TaskRunner :: RunNowOrPostTask ( shell - GetTaskRunners (). GetUITaskRunner (), fml :: MakeCopyable ([ ui_latch , // engine , // shell = shell . get (), // isolate_snapshot = std :: move ( isolate_snapshot ), // shared_snapshot = std :: move ( shared_snapshot ), // vsync_waiter = std :: move ( vsync_waiter ), // snapshot_delegate = std :: move ( snapshot_delegate ), // io_manager = io_manager - GetWeakPtr () // ]() mutable { const auto task_runners = shell - GetTaskRunners (); // The animator is owned by the UI thread but it gets its vsync pulses // from the platform. auto animator = std :: make_unique Animator ( * shell , task_runners , std :: move ( vsync_waiter )); engine = std :: make_unique Engine ( * shell , // shell - GetDartVM (), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ), // task_runners , // shell - GetSettings (), // std :: move ( animator ), // std :: move ( snapshot_delegate ), // std :: move ( io_manager ) // ); ui_latch . Signal (); })); ui_latch . Wait (); // We are already on the platform thread. So there is no platform latch to // wait on. if ( ! shell - Setup ( std :: move ( platform_view ), // std :: move ( engine ), // std :: move ( rasterizer ), // std :: move ( io_manager )) // ) { return nullptr ; } return shell ; } \u8bbe\u7f6eShell\u7ba1\u7406\u7684Platform\u7ebf\u7a0b\u7ba1\u7406\u7684\u76f8\u5173\b\u8d44\u6e90: /engine/src/flutter/shell/common/engine.cc \u5728 /engine/src/flutter/shell/common/shell.cc \u4e2d\u6267\u884c CreateShellOnPlatformThread \u65b9\u6cd5\u65f6\u8c03\u7528 1.PlatformView:\b\u4e3b\u8981\u7ba1\u7406\u76f8\u5173\u7684\bview\u4e8b\u4ef6 2.Engine:\b\u6240\u6709\u7684\b\u8d44\u6e90\u90fd\u51c6\u5907\b\u5b8c\u6210\uff0c\b\u5f00\u59cb\u8c03\u7528dart\u4ee3\u7801\u548cDart\u865a\u62df\u673a\uff0c\b\u8fdb\u884c\u4ee3\u7801\b\u6267\u884c 3.Rasterizer:\u5149\u6805\u4e3b\u8981\u662f\u5904\u7406GPU\u76f8\u5173\u7684\u4e8b\u4ef6 4.IOManager:\u5bf9io\b\u7ebf\u7a0b\u8fdb\u884c\u7ba1\u7406 5.\u8bbe\u7f6e DartVM ServiceProtocol\b\u8bbe\u7f6e\b\u5904\u7406\u56de\u8c03 6.PersistentCache::GetCacheForProcess()- AddWorkerTaskRunner(task_runners_.GetIOTaskRunner());\b\b\u5bf9\u7f13\u5b58\u76ee\u5f55\u7684\u5904\u7406 bool Shell :: Setup ( std :: unique_ptr PlatformView platform_view , std :: unique_ptr Engine engine , std :: unique_ptr Rasterizer rasterizer , std :: unique_ptr IOManager io_manager ) { if ( is_setup_ ) { return false ; } if ( ! platform_view || ! engine || ! rasterizer || ! io_manager ) { return false ; } platform_view_ = std :: move ( platform_view ); engine_ = std :: move ( engine ); rasterizer_ = std :: move ( rasterizer ); io_manager_ = std :: move ( io_manager ); is_setup_ = true ; if ( auto vm = blink :: DartVM :: ForProcessIfInitialized ()) { vm - GetServiceProtocol (). AddHandler ( this , GetServiceProtocolDescription ()); } PersistentCache :: GetCacheForProcess () - AddWorkerTaskRunner ( task_runners_ . GetIOTaskRunner ()); return true ; }","title":"CreateShellOnPlatformThread"},{"location":"android/flutter/EngineInit/#create-the-platform","text":"// Create the platform view on the platform thread (this thread). auto platform_view = on_create_platform_view ( * shell . get ()); if ( ! platform_view || ! platform_view - GetWeakPtr ()) { return nullptr ; }","title":"Create the platform"},{"location":"android/flutter/EngineInit/#createvsyncwaiter","text":"// Ask the platform view for the vsync waiter. This will be used by the engine // to create the animator. auto vsync_waiter = platform_view - CreateVSyncWaiter (); if ( ! vsync_waiter ) { return nullptr ; }","title":"CreateVSyncWaiter"},{"location":"android/flutter/EngineInit/#create-the-io-manager-on-the-io-thread","text":"// Create the IO manager on the IO thread. The IO manager must be initialized // first because it has state that the other subsystems depend on. It must // first be booted and the necessary references obtained to initialize the // other subsystems. fml :: AutoResetWaitableEvent io_latch ; std :: unique_ptr IOManager io_manager ; auto io_task_runner = shell - GetTaskRunners (). GetIOTaskRunner (); fml :: TaskRunner :: RunNowOrPostTask ( io_task_runner , [ io_latch , // io_manager , // platform_view , // io_task_runner // ]() { io_manager = std :: make_unique IOManager ( platform_view - CreateResourceContext (), io_task_runner ); io_latch . Signal (); }); io_latch . Wait ();","title":"Create the IO manager on the IO thread"},{"location":"android/flutter/EngineInit/#create-the-rasterizer-on-the-gpu-thread","text":"// Create the rasterizer on the GPU thread. fml :: AutoResetWaitableEvent gpu_latch ; std :: unique_ptr Rasterizer rasterizer ; fml :: WeakPtr blink :: SnapshotDelegate snapshot_delegate ; fml :: TaskRunner :: RunNowOrPostTask ( task_runners . GetGPUTaskRunner (), [ gpu_latch , // rasterizer , // on_create_rasterizer , // shell = shell . get (), // snapshot_delegate // ]() { if ( auto new_rasterizer = on_create_rasterizer ( * shell )) { rasterizer = std :: move ( new_rasterizer ); snapshot_delegate = rasterizer - GetSnapshotDelegate (); } gpu_latch . Signal (); }); gpu_latch . Wait ();","title":"Create the rasterizer on the GPU thread"},{"location":"android/flutter/EngineInit/#create-the-engine-on-the-ui-thread","text":"// Create the engine on the UI thread. fml :: AutoResetWaitableEvent ui_latch ; std :: unique_ptr Engine engine ; fml :: TaskRunner :: RunNowOrPostTask ( shell - GetTaskRunners (). GetUITaskRunner (), fml :: MakeCopyable ([ ui_latch , // engine , // shell = shell . get (), // isolate_snapshot = std :: move ( isolate_snapshot ), // shared_snapshot = std :: move ( shared_snapshot ), // vsync_waiter = std :: move ( vsync_waiter ), // snapshot_delegate = std :: move ( snapshot_delegate ), // io_manager = io_manager - GetWeakPtr () // ]() mutable { const auto task_runners = shell - GetTaskRunners (); // The animator is owned by the UI thread but it gets its vsync pulses // from the platform. auto animator = std :: make_unique Animator ( * shell , task_runners , std :: move ( vsync_waiter )); engine = std :: make_unique Engine ( * shell , // shell - GetDartVM (), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ), // task_runners , // shell - GetSettings (), // std :: move ( animator ), // std :: move ( snapshot_delegate ), // std :: move ( io_manager ) // ); ui_latch . Signal (); })); ui_latch . Wait ();","title":"Create the engine on the UI thread"},{"location":"android/flutter/EngineInit/#engine","text":"Engine :: Engine ( Delegate delegate , blink :: DartVM vm , fml :: RefPtr blink :: DartSnapshot isolate_snapshot , fml :: RefPtr blink :: DartSnapshot shared_snapshot , blink :: TaskRunners task_runners , blink :: Settings settings , std :: unique_ptr Animator animator , fml :: WeakPtr blink :: SnapshotDelegate snapshot_delegate , fml :: WeakPtr blink :: IOManager io_manager ) : delegate_ ( delegate ), settings_ ( std :: move ( settings )), animator_ ( std :: move ( animator )), activity_running_ ( false ), have_surface_ ( false ), weak_factory_ ( this ) { // Runtime controller is initialized here because it takes a reference to this // object as its delegate. The delegate may be called in the constructor and // we want to be fully initilazed by that point. runtime_controller_ = std :: make_unique blink :: RuntimeController ( * this , // runtime delegate vm , // VM std :: move ( isolate_snapshot ), // isolate snapshot std :: move ( shared_snapshot ), // shared snapshot std :: move ( task_runners ), // task runners std :: move ( snapshot_delegate ), // snapshot delegate std :: move ( io_manager ), // io manager settings_ . advisory_script_uri , // advisory script uri settings_ . advisory_script_entrypoint , // advisory script entrypoint settings_ . idle_notification_callback // idle notification callback ); }","title":"Engine\u521d\u59cb\u5316"},{"location":"android/flutter/EngineInit/#runtimecontrollerwindowclientwindow","text":"RuntimeController :: RuntimeController ( RuntimeDelegate p_client , DartVM * p_vm , fml :: RefPtr DartSnapshot p_isolate_snapshot , fml :: RefPtr DartSnapshot p_shared_snapshot , TaskRunners p_task_runners , fml :: WeakPtr SnapshotDelegate p_snapshot_delegate , fml :: WeakPtr IOManager p_io_manager , std :: string p_advisory_script_uri , std :: string p_advisory_script_entrypoint , std :: function void ( int64_t ) p_idle_notification_callback ) : RuntimeController ( p_client , p_vm , std :: move ( p_isolate_snapshot ), std :: move ( p_shared_snapshot ), std :: move ( p_task_runners ), std :: move ( p_snapshot_delegate ), std :: move ( p_io_manager ), std :: move ( p_advisory_script_uri ), std :: move ( p_advisory_script_entrypoint ), p_idle_notification_callback , WindowData { /* default window data */ }) {} RuntimeController :: RuntimeController ( RuntimeDelegate p_client , DartVM * p_vm , fml :: RefPtr DartSnapshot p_isolate_snapshot , fml :: RefPtr DartSnapshot p_shared_snapshot , TaskRunners p_task_runners , fml :: WeakPtr SnapshotDelegate p_snapshot_delegate , fml :: WeakPtr IOManager p_io_manager , std :: string p_advisory_script_uri , std :: string p_advisory_script_entrypoint , std :: function void ( int64_t ) idle_notification_callback , WindowData p_window_data ) : client_ ( p_client ), vm_ ( p_vm ), isolate_snapshot_ ( std :: move ( p_isolate_snapshot )), shared_snapshot_ ( std :: move ( p_shared_snapshot )), task_runners_ ( p_task_runners ), snapshot_delegate_ ( p_snapshot_delegate ), io_manager_ ( p_io_manager ), advisory_script_uri_ ( p_advisory_script_uri ), advisory_script_entrypoint_ ( p_advisory_script_entrypoint ), idle_notification_callback_ ( idle_notification_callback ), window_data_ ( std :: move ( p_window_data )), root_isolate_ ( DartIsolate :: CreateRootIsolate ( vm_ , isolate_snapshot_ , shared_snapshot_ , task_runners_ , std :: make_unique Window ( this ), snapshot_delegate_ , io_manager_ , p_advisory_script_uri , p_advisory_script_entrypoint )) { std :: shared_ptr DartIsolate root_isolate = root_isolate_ . lock (); root_isolate - SetReturnCodeCallback ([ this ]( uint32_t code ) { root_isolate_return_code_ = { true , code }; }); \u5f53\u524d\u5bf9\u8c61\u662f ClientWidow \u5bf9\u8c61\uff0c\u52a8\u8fc7\u8c03\u7528 DidCreateIsolate \uff0c\u52a0\u8f7d dart : UI \u5e93 if ( auto * window = GetWindowIfAvailable ()) { tonic :: DartState :: Scope scope ( root_isolate ); window - DidCreateIsolate (); if ( ! FlushRuntimeStateToIsolate ()) { FML_DLOG ( ERROR ) Could not setup intial isolate state. ; } } else { FML_DCHECK ( false ) RuntimeController created without window binding. ; } FML_DCHECK ( Dart_CurrentIsolate () == nul }; } // namespace blink #endif // FLUTTER_RUNTIME_RUNTIME_CONTROLLER_H_","title":"RuntimeController&amp;WindowClient&amp;Window"},{"location":"android/flutter/EngineInit/#dartisolate","text":"\u8c03\u7528 shared_embedder_isolate- SetWindow(std::move(window)); \u5bf9\u8c61\u4f20\u9012 RuntimeController \u5230 Window \u7c7b\u4e2d\u8fdb\u884c\u7ed1\u5b9a std :: weak_ptr DartIsolate DartIsolate :: CreateRootIsolate ( DartVM * vm , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot , TaskRunners task_runners , std :: unique_ptr Window window , fml :: WeakPtr SnapshotDelegate snapshot_delegate , fml :: WeakPtr IOManager io_manager , std :: string advisory_script_uri , std :: string advisory_script_entrypoint , Dart_IsolateFlags * flags ) { TRACE_EVENT0 ( flutter , DartIsolate::CreateRootIsolate ); Dart_Isolate vm_isolate = nullptr ; std :: weak_ptr DartIsolate embedder_isolate ; char * error = nullptr ; // Since this is the root isolate, we fake a parent embedder data object. We // cannot use unique_ptr here because the destructor is private (since the // isolate lifecycle is entirely managed by the VM). auto root_embedder_data = std :: make_unique std :: shared_ptr DartIsolate ( std :: make_shared DartIsolate ( vm , // VM std :: move ( isolate_snapshot ), // isolate snapshot std :: move ( shared_snapshot ), // shared snapshot task_runners , // task runners std :: move ( snapshot_delegate ), // snapshot delegate std :: move ( io_manager ), // IO manager advisory_script_uri , // advisory URI advisory_script_entrypoint , // advisory entrypoint nullptr // child isolate preparer will be set when this isolate is // prepared to run )); std :: tie ( vm_isolate , embedder_isolate ) = CreateDartVMAndEmbedderObjectPair ( advisory_script_uri . c_str (), // advisory script URI advisory_script_entrypoint . c_str (), // advisory script entrypoint nullptr , // package root nullptr , // package config flags , // flags root_embedder_data . get (), // parent embedder data true , // is root isolate error // error (out) ); if ( error != nullptr ) { free ( error ); } if ( vm_isolate == nullptr ) { return {}; } std :: shared_ptr DartIsolate shared_embedder_isolate = embedder_isolate . lock (); if ( shared_embedder_isolate ) { // Only root isolates can interact with windows. shared_embedder_isolate - SetWindow ( std :: move ( window )); } root_embedder_data . release (); return embedder_isolate ; } }","title":"DartIsolate"},{"location":"android/flutter/EngineInit/#window","text":"CreateRootIsolate \u521b\u5efa RootIsolate\u5bf9\u8c61 RuntimeController :: RuntimeController (.....) : client_ ( p_client ), .......), window_data_ ( std :: move ( p_window_data )), root_isolate_ ( DartIsolate :: CreateRootIsolate ( vm_ , isolate_snapshot_ , shared_snapshot_ , task_runners_ , std :: make_unique Window ( this ), snapshot_delegate_ , io_manager_ , p_advisory_script_uri , p_advisory_script_entrypoint )) { std :: shared_ptr DartIsolate root_isolate = root_isolate_ . lock (); root_isolate - SetReturnCodeCallback ([ this ]( uint32_t code ) { root_isolate_return_code_ = { true , code }; }); ## Window\u7c7b\u521d\u59cb\u5316\u8fc7\u7a0b if ( auto * window = GetWindowIfAvailable ()) { tonic :: DartState :: Scope scope ( root_isolate ); window - DidCreateIsolate (); if ( ! FlushRuntimeStateToIsolate ()) { FML_DLOG ( ERROR ) Could not setup intial isolate state. ; } } else { FML_DCHECK ( false ) RuntimeController created without window binding. ; } FML_DCHECK ( Dart_CurrentIsolate () == nullptr ); }","title":"Window\u7c7b\u521d\u59cb\u5316\u8fc7\u7a0b"},{"location":"android/flutter/EngineInit/#android-nativelibflutter","text":"\u5728\u5206\u6790\u5b8c\u6210\u6574\u4e2a\u521d\u59cb\u5316\u8fc7\u7a0b\u8fd9\u56de\uff0c\u5728\u8ddf\u8fdb\u4e0b\u56fe\u6765\u5206\u6790\u6574\u4e2a\u8c03\u7528\u8fc7\u7a0b\u548c\u4ee5\u4e0a\u4ee3\u7801\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u6574\u4e2a\u8fd0\u884c\u73af\u5883\u7684\u521d\u59cb\u5316\u76f8\u5173\u7684\u7c7b\u548c\u529f\u80fd\u53ca\u903b\u8f91 Android\u7aef\u8c03\u7528JNI\u5c42\u7684\u4ee3\u7801\uff0c\u4f7f\u7528\u672c\u5730\u63a5\u53e3\u548cFlutterEngine\b\u901a\u4fe1\uff0c\u5728\bFlutter for Android \u4e2d\u901a\u8fc7FlutterJNI\u4e2d\b\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5\uff0cplatform_view_android_jni\u5728\b\u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u662f\u8fdb\u884c\u521d\u59cb\u5316: /io/flutter/embedding/engine/FlutterJNI.class engine/src/flutter/shell/platform/android/platform_view_android_jni.cc public class FlutterJNI { @UiThread public static native boolean nativeGetIsSoftwareRenderingEnabled (); @UiThread public static native String nativeGetObservatoryUri (); private native void nativeSurfaceCreated ( long var1 , Surface var3 ); private native void nativeSurfaceChanged ( long var1 , int var3 , int var4 ); private native void nativeSurfaceDestroyed ( long var1 ); private native void nativeSetViewportMetrics ( long var1 , float var3 , int var4 , int var5 , int var6 , int var7 , int var8 , int var9 , int var10 , int var11 , int var12 , int var13 ); private native Bitmap nativeGetBitmap ( long var1 ); private native void nativeDispatchPointerDataPacket ( long var1 , ByteBuffer var3 , int var4 ); private native void nativeDispatchSemanticsAction ( long var1 , int var3 , int var4 , ByteBuffer var5 , int var6 ); private native void nativeSetSemanticsEnabled ( long var1 , boolean var3 ); private native void nativeSetAccessibilityFeatures ( long var1 , int var3 ); private native void nativeRegisterTexture ( long var1 , long var3 , SurfaceTexture var5 ); private native void nativeMarkTextureFrameAvailable ( long var1 , long var3 ); private native void nativeUnregisterTexture ( long var1 , long var3 ); private native long nativeAttach ( FlutterJNI var1 , boolean var2 ); private native void nativeDetach ( long var1 ); private native void nativeDestroy ( long var1 ); private native void nativeRunBundleAndSnapshotFromLibrary ( long var1 , @NonNull String [] var3 , @Nullable String var4 , @Nullable String var5 , @NonNull AssetManager var6 ); private native void nativeDispatchEmptyPlatformMessage ( long var1 , String var3 , int var4 ); private native void nativeDispatchPlatformMessage ( long var1 , String var3 , ByteBuffer var4 , int var5 , int var6 ); private native void nativeInvokePlatformMessageEmptyResponseCallback ( long var1 , int var3 ); private native void nativeInvokePlatformMessageResponseCallback ( long var1 , int var3 , ByteBuffer var4 , int var5 ); } \u5f15\u64ce\u5143\u4ee3\u7801\u4e2d\b\b\b\u4f7f\u7528\u52a8\u6001JNI\u7684\u65b9\u5f0f\u6ce8\u518c\u76f8\u5173\u65b9\u6cd5: engine/src/flutter/shell/platform/android/platform_view_android_jni.cc \u8c03\u7528Register\b\u65b9\u6cd5\u6ce8\u518c\u672c\u5730\u65b9\u6cd5\uff1a bool RegisterApi ( JNIEnv * env ) { static const JNINativeMethod flutter_jni_methods [] = { // Start of methods from FlutterNativeView { . name = nativeAttach , . signature = (Lio/flutter/embedding/engine/FlutterJNI;Z)J , . fnPtr = reinterpret_cast void * ( shell :: AttachJNI ), }, { . name = nativeDestroy , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: DestroyJNI ), }, { . name = nativeRunBundleAndSnapshotFromLibrary , . signature = (J[Ljava/lang/String;Ljava/lang/String; Ljava/lang/String;Landroid/content/res/AssetManager;)V , . fnPtr = reinterpret_cast void * ( shell :: RunBundleAndSnapshotFromLibrary ), }, }; if ( env - RegisterNatives ( g_flutter_jni_class - obj (), flutter_jni_methods , arraysize ( flutter_jni_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterJNI ; return false ; } `engine/src/flutter/shell/common/shell.cc`\u4f5c\u4e3a\b\u4e00\u4e2a\b\u4e2d\u67a2\u63a7\u5236\u4f5c\u7528\uff0c\u4f7f\u7528\b\u5f31\u5f15\u7528\u6765\u4fdd\u5b58\b\bPlatformView\uff0c\bAndroid\uff0cios\u4fdd\u5b58\u4f7f\u7528shell\u4e2dPlatform\u4e0b\u7684Platefrom\u5b9e\u73b0\u6765\b\u5904\u7406\u5e73\u53f0\u76f8\u5173\u7684View,\bShell\u7684\b\u521d\u59cb\u5316\u662f\u5728`engine/src/flutter/shell/platform/android/android_shell_holder.cc`\uff0c`FlutterMain::Get().GetSettings()`\u7f16\u8bd1\u65f6\u7684\u914d\u7f6e\u6587\u4ef6`engine/src/flutter/common/settings.cc`,`flutterJNI`\u662fandroid\u5c42\u7684\u4ee3\u7801\uff0c`is_background_view`\u662f\u5728\bjava\u5c42\bFlutterNativeView\uff0c\u8fd9\u662fJava\u548cJNI\u7684\u901a\u4fe1\uff0c\u6570\u636e\u4f20\u8f93\u903b\u8f91\u5904\u7406\uff0cFlutterNativeView\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\b\u8c03\u7528JNI\b\u4ee3\u7801\uff0c\b\u521d\u59cb\u5316`android_shell_holder`\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u6765\b\u5168\u90e8\b\b`Shell`\u8fd9\u4e2a\u7c7b ### SurfaceView\u521d\u59cb\u5316 ### Java SurfaceView \u521d\u59cb\u5316 getFlutterJNI \u521d\u59cb\u5316SurfaceView ```Java this.mSurfaceCallback = new Callback() { public void surfaceCreated(SurfaceHolder holder) { FlutterView.this.assertAttached(); FlutterView.this.mNativeView.getFlutterJNI().onSurfaceCreated(holder.getSurface()); } public void surfaceChanged(SurfaceHolder holder, int format, int width, int height) { FlutterView.this.assertAttached(); FlutterView.this.mNativeView.getFlutterJNI().onSurfaceChanged(width, height); } public void surfaceDestroyed(SurfaceHolder holder) { FlutterView.this.assertAttached(); FlutterView.this.mNativeView.getFlutterJNI().onSurfaceDestroyed(); } };","title":"Android Native\u5c42\u4e0elibFlutter\u901a\u4fe1\u63a5\u53e3:"},{"location":"android/flutter/EngineInit/#jni-surfaceview","text":"/Users/cangck/engine/src/flutter/shell/platform/android/platform_view_android_jni.cc","title":"JNI \u521d\u59cb\u5316SurfaceView"},{"location":"android/flutter/EngineInit/#surfacecreated","text":"static void SurfaceCreated ( JNIEnv * env , jobject jcaller , jlong shell_holder , jobject jsurface ) { // Note: This frame ensures that any local references used by // ANativeWindow_fromSurface are released immediately. This is needed as a // workaround for https://code.google.com/p/android/issues/detail?id=68174 fml :: jni :: ScopedJavaLocalFrame scoped_local_reference_frame ( env ); auto window = fml :: MakeRefCounted AndroidNativeWindow ( ANativeWindow_fromSurface ( env , jsurface )); ANDROID_SHELL_HOLDER - GetPlatformView () - NotifyCreated ( std :: move ( window )); }","title":"SurfaceCreated"},{"location":"android/flutter/EngineInit/#surfacechanged","text":"static void SurfaceChanged ( JNIEnv * env , jobject jcaller , jlong shell_holder , jint width , jint height ) { ANDROID_SHELL_HOLDER - GetPlatformView () - NotifyChanged ( SkISize :: Make ( width , height )); }","title":"SurfaceChanged"},{"location":"android/flutter/EngineInit/#surfacedestroyed","text":"static void SurfaceDestroyed ( JNIEnv * env , jobject jcaller , jlong shell_holder ) { ANDROID_SHELL_HOLDER - GetPlatformView () - NotifyDestroyed (); }","title":"SurfaceDestroyed"},{"location":"android/flutter/EngineInit/#_1","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u5df2\u7ecf\u5927\u6982\u4e86\u89e3\u4e86Android\u542f\u52a8\uff0c\u521d\u59cb\u5316Flutter\u5f15\u64ce\u7684\u8fc7\u7a0b","title":"\u603b\u7ed3"},{"location":"android/flutter/EngineView/","text":"Android\u4ee3\u7801\u5728\u521d\u59cb\u5316\u5b8c\u6210flutter\u7684\u6587\u4ef6\u4e4b\u540e\uff0c\u63d0\u4f9bSurfaceView\u5230\u5e95\u5c42\u8fdb\u884cFlutter engine \u4e2d\u7684Skia 2d\u56fe\u50cf \u540c\u4e3a\u8de8\u5e73\u53f0\u6280\u672f\uff0cFlutter\u6709\u4f55\u4f18\u52bf\u5462\uff1f Flutter\u5728Rlease\u6a21\u5f0f\u4e0b\u76f4\u63a5\u5c06Dart\u7f16\u8bd1\u6210\u672c\u5730\u673a\u5668\u7801\uff0c\u907f\u514d\u4e86\u4ee3\u7801\u89e3\u91ca\u8fd0\u884c\u7684\u6027\u80fd\u6d88\u8017\u3002 Dart\u672c\u8eab\u9488\u5bf9\u9ad8\u9891\u7387\u5faa\u73af\u5237\u65b0\uff08\u5982\u5c4f\u5e55\u6bcf\u79d260\u5e27\uff09\u5728\u5185\u5b58\u5c42\u9762\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4f7f\u5f97Dart\u8fd0\u884c\u65f6\u5728\u5c4f\u5e55\u7ed8\u5236\u5b9e\u73b0\u5982\u9c7c\u5f97\u6c34\u3002 Flutter\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u56fe\u5f62\u7ed8\u5236\u907f\u514d\u4e86Native\u6865\u63a5\u3002 Flutter\u5728\u5e94\u7528\u5c42\u4f7f\u7528Dart\u8fdb\u884c\u5f00\u53d1\uff0c\u800c\u652f\u6491\u5b83\u7684\u662f\u7528C++\u5f00\u53d1\u7684\u5f15\u64ce\u3002","title":"EngineView\u521d\u59cb\u5316"},{"location":"android/flutter/FlutterComplieFile/","text":"Flutter \u7f16\u8bd1\u540e\u7684\u4ea7\u7269","title":"Engine\u7f16\u8bd1\u4ea7\u7269"},{"location":"android/flutter/FlutterComplieFile/#flutter","text":"","title":"Flutter \u7f16\u8bd1\u540e\u7684\u4ea7\u7269"},{"location":"android/flutter/FlutterKey/","text":"Flutter\u4e2d\u7684Key\uff0cLocalKey\uff0cGlobalKey... And More \u5f00\u59cb \u4ece\u8fd9\u4e00\u7bc7\u6587\u7ae0\u5f00\u59cb\uff0c\u82b1\u65f6\u95f4\u6162\u6162\u9605\u8bfb\u6e90\u7801\uff0c\u4eceweb\u524d\u7aef\u89d2\u5ea6\u770bFlutter\uff0c\u7136\u540e\u4e5f\u628a\u4e00\u4e9b\u6536\u83b7\u4e5f\u5206\u4eab\u7ed9\u5927\u5bb6\u3002 React\u548cReact Native\u53d7\u5230Facebook\u6761\u6b3e\u9650\u5236\uff0c\u5927\u516c\u53f8\u4eec\uff08\u4e3b\u8981BAT\uff09\u90fd\u5f00\u59cb\u82e5\u6709\u6240\u601d\uff0cRN\u4e5f\u4f3c\u4e4e\u4e00\u4e0b\u6389\u4e0b\u4e86\u795e\u575b\uff0c\u540c\u5fd7\u4eec\uff0c\u6b64\u65f6\u6b64\u523b\u6b63\u662fFlutter\u5f53\u7acb\u7684\u65f6\u5019\uff0c\u5927\u5bb6\u4e00\u8d77\u8de8\u8fdb\u65b0\u7684\u65f6\u4ee3\uff01 \u5404\u79cd\u5404\u6837\u7684Key \u7acb\u9a6c\u8df3\u5230framework.dart\u6587\u4ef6\uff08\u8fd9\u4e2a\u6587\u4ef6\u4e00\u770b\u540d\u5b57\u5c31\u5f88\u91cd\u8981\u5566\uff09\uff0cFlutter\u4ee3\u7801\u7684\u7ec4\u7ec7\u5e76\u4e0d\u50cfJava\u53cd\u800c\u503e\u5411\u4e8eJS\u8fd9\u79cd\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u585e\u7740\u4e0d\u540c\u7684Class\uff08\u5f53\u7136\u4ed6\u4eec\u4e4b\u95f4\u80af\u5b9a\u6709\u8054\u7cfb\u7684\uff09\uff0c\u5176\u5b9e\u4e2a\u4eba\u66f4\u503e\u5411\u4e8eJava\u90a3\u79cd\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6587\u4ef6\uff0c\u9605\u8bfb\u548c\u5206\u6790\u611f\u89c9\u90fd\u6bd4\u8f83\u65b9\u4fbf\u8212\u670d\u3002 framework.dart\u4e00\u5f00\u59cb\u4f60\u5c31\u4f1a\u9047\u5230\u51e0\u4e2a\u540d\u8bcd\uff1aKey\uff0cLocalKey\uff0cUniqueKey\u7b49\u7b49\u3002 clipboard.png \u4e00\u4e0b\u5b50\u5192\u51fa\u51e0\u4e2a\u5144\u5f1f\u6765\uff0c\u5f97\u4e00\u4e2a\u4e00\u4e2a\u5206\u6e05\u695a\u4ed6\u4eec\u7684\u5404\u6709\u4ec0\u4e48\u80fd\u529b\u3002 key\u7684\u4f5c\u7528 \u9996\u5148key\u6709\u4f55\u7528\u5c3c\uff1f Flutter\u662f\u53d7React\u542f\u53d1\u7684\uff0c\u6240\u4ee5Virtual Dom\u7684diff\u7b97\u6cd5\u4e5f\u53c2\u8003\u8fc7\u6765\u4e86\uff08\u5e94\u8be5\u662f\u7565\u6709\u4fee\u6539\uff09\uff0c\u5728diff\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u8282\u70b9\u6709Key\u6765\u6bd4\u8f83\u7684\u8bdd\uff0c\u80fd\u591f\u6700\u5927\u7a0b\u5ea6\u91cd\u7528\u5df2\u6709\u7684\u8282\u70b9\uff08\u7279\u522b\u5728\u5217\u8868\u7684\u573a\u666f\uff09\uff0c\u9664\u4e86\u8fd9\u4e00\u70b9\u8fd9\u4e2aKey\u4e5f\u7528\u5728\u5f88\u591a\u5176\u4ed6\u7684\u5730\u65b9\u8fd9\u4e2a\u4ee5\u540e\u4f1a\u603b\u7ed3\u4e00\u4e0b\u3002\u603b\u4e4b\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u77e5\u9053key\u80fd\u591f\u63d0\u9ad8\u6027\u80fd\uff0c\u6240\u4ee5\u6bcf\u4e2aWidget\u90fd\u4f1a\u6784\u5efa\u65b9\u6cd5\u90fd\u4f1a\u6709\u4e00\u4e2akey\u7684\u53c2\u6570\u53ef\u9009\uff0c\u8d2f\u7a7f\u7740\u6574\u4e2a\u6846\u67b6\u3002 key\u4e4b\u95f4\u7684\u5173\u7cfb \u8fd9\u91cc\u5c31\u662fKey\u7684\u7c7b\u578b\u5c42\u7ea7\u5173\u7cfb\uff0c\u53ef\u4ee5\u770b\u5230\uff1a Key\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u5b50\u7c7b\uff1aLocalKey \u548c GlobalKey\uff0c\u800c\u4ed6\u4eec\u5404\u81ea\u4e5f\u6709\u4e0d\u540c\u7684\u5b50\u7c7b\u5b9e\u73b0\uff0c\u63a5\u4e0b\u6765\u4f1a\u7ee7\u7eed\u6df1\u5165\u5206\u6790\u3002 \u666e\u901a\u7684Key \u4ed6\u4eec\u7684\u8001\u5927\u54e5Key\uff0c\u8fd9\u4e2aKey\u7684\u5b9e\u73b0\u6709\u70b9\u7279\u522b\u3002 @immutable abstract class Key { /// Construct a [ValueKey ] with the given [String]. /// /// This is the simplest way to create keys. const factory Key(String value) = ValueKey ; /// Default constructor, used by subclasses. /// /// Useful so that subclasses can call us, because the Key() factory /// constructor shadows the implicit constructor. const Key._(); } \u770b\u4e0a\u53bb\u5f88\u7b80\u5355\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u90a3\u4e3a\u5565\u7279\u522b\u5c3c\uff0c\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u79cd\u7279\u522b\u6765\u81eaDart\u8bed\u8a00\u7684\u4e00\u4e9b\u7279\u6027\uff08\u5176\u5b9e\u662fDart\u8bed\u8a00\u57fa\u7840\u592a\u6d45\uff0c\u5927\u795e\u7528\u7684\u592a\u6e9c\uff09\u3002 const Key._(); \u9996\u5148\u8fd9\u91cc\u7528\u5230\u547d\u540d\u6784\u9020\u51fd\u6570\uff08named constructors\uff09\uff0c\u5927\u81f4\u4f5c\u7528\u5c31\u662f\u7ed9\u6784\u9020\u51fd\u6570\u52a0\u591a\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u79f0\uff0c\u80fd\u591f\u8ba9\u4f7f\u7528\u8005\u66f4\u5bb9\u6613\u660e\u767d\u5404\u4e2a\u6784\u9020\u51fd\u6570\u7684\u533a\u522b\uff08\u56e0\u4e3a\u7c7b\u4f3cJava\u8fd9\u6837\uff0c\u53ea\u80fd\u9760\u53c2\u6570\u5217\u8868\u6765\u533a\u5206\u786e\u5b9e\u5bb9\u6613\u9020\u6210\u6df7\u4e71\uff09\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7a7a\u7684\u5b9e\u73b0\uff08\u5e76\u4e0d\u662fJava\u90a3\u4e00\u79cd\u62bd\u8c61\u65b9\u6cd5\uff09\u8fd9\u91cc\u6765\u6e90\u4e00\u4e2a\u5efa\u8bae \u4f20\u9001\u95e8; const factory Key(String value) = ValueKey ; \u8fd9\u91cc\u5c31\u662fKey\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u53ea\u80fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u54ea\u6015\u4fee\u6539\u53c2\u6570\u5217\u8868\u4e5f\u4e0d\u884c\uff0c\u4e4b\u540e\u4f60\u53ea\u80fd\u5b9a\u4e49\u547d\u540d\u6784\u9020\u51fd\u6570\u4e86\uff09\uff0c\u4f46\u662f\u8ddfJava\u53c8\u6709\u70b9\u4e0d\u4e00\u6837\u554a\uff0c\u9996\u5148\u662ffactory\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u8fd9\u662fDart\u8bed\u8a00\u5185\u7f6e\u4e86\u5bf9\u5de5\u5382\u6a21\u5f0f\u7684\u652f\u6301\uff08\u5176\u5b9e\u5927\u90e8\u5206\u8bed\u8a00\u90fd\u53ef\u4ee5\u652f\u6301\u8fd9\u79cd\u6a21\u5f0f\uff0c\u8fd9\u91cc\u8bed\u8a00\u5c42\u9762\u4e0a\u518d\u5f3a\u5316\u4e86\uff09\uff0c\u800c\u52a0\u4e86\u8fd9\u4e2a\u5173\u952e\u5b57\u4f1a\u600e\u6837\uff1f\u6211\u4eec\u77e5\u9053\u6784\u5efa\u65b9\u6cd5\u8fd4\u56de\u7684\u4e00\u822c\u90fd\u662f\u5f53\u524d\u7c7b\u6240\u521a\u6784\u5efa\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u52a0\u4e0afactory\u5173\u952e\u5b57\u4e4b\u540e\u4f60\u53ef\u4ee5\u4fee\u6539\u8fd4\u56de\u7684\u503c\uff0c\u53ef\u4ee5\u8ba9\u8fd4\u56de\u7684\u5bf9\u8c61\u662f\u4e4b\u524d\u5df2\u7ecf\u521b\u5efa\u597d\u7684\uff0c\u4e5f\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u5b50\u7c7b\u5bf9\u8c61\u3002 \u8fd9\u91cc\u8fd8\u6709\u6d89\u53ca\u5230\u4e00\u4e2afactory redirect(\u5b98\u7f51\u8c8c\u4f3c\u6ca1\u6709\u4ecb\u7ecd\uff0c\u4f30\u8ba1\u65b0\u52a0\u7684\u8bed\u6cd5)\u4f20\u9001\u95e8 \u7b49\u6548\u4e8e const factory Key(String value) = new ValueKey (value); \u6240\u4ee5\u8fd9\u91cc\u5176\u5b9e\u8fd4\u56de\u4e86\u4e00\u4e2aValueKey\u3002 ValueKey \u987a\u85e4\u6478\u74dc\u6765\u5230ValueKey\uff0c\u800cValueKey\u5176\u5b9e\u5c31\u662fLocalKey\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u4f46\u662fLocalKey\u5e76\u6ca1\u6709\u7279\u522b\u7684\u5b9e\u73b0\u53ea\u662f\u7b80\u5355\u8c03\u7528\u4e86Key._()\u6784\u9020\u51fd\u6570\u3002\u800cValueKey\u5219\u662f\uff1a class ValueKey extends LocalKey \u6784\u9020\u51fd\u6570\u9700\u8981\u4f20\u5165\u4e00\u4e2avalue\u7684\u53c2\u6570: const ValueKey(this.value); ValueKey\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u5e76\u4e14\u8986\u76d6\u4e86\u81ea\u8eab\u7684operator==\u65b9\u6cd5\uff08\u8ddf C++\u8986\u76d6\u64cd\u4f5c\u7b26\u4e00\u6837\uff09\uff0c\u8c03\u7528\u4e86\u76ee\u6807\u7c7b\u578bT\u7684\u8fd0\u7b97\u7b26==\u6765\u6bd4\u8f83\uff0c\u5f53\u7136\u8986\u76d6\u4e86operator==\u65b9\u6cd5\u4e5f\u9700\u8981\u8986\u76d6\u83b7\u53d6hashCode\u7684\u65b9\u6cd5\uff08\u9053\u7406\u8ddfJava\u4e00\u6837\uff09\u3002\u6240\u4ee5ValueKey\u7684\u6bd4\u8f83\u53d6\u51b3\u4e8evalue\u7684operator==\u7684\u5b9e\u73b0\uff0c\u4f8b\u5982Value\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u90a3\u5c31\u662f\u5185\u5bb9\u7684\u6bd4\u8f83\u3002 ObjectKey \u6784\u9020\u51fd\u6570\u8ddfValueKey\u5dee\u4e0d\u591a: const ObjectKey(this.value); \u867d\u7136\u540c\u6837\u8986\u76d6\u4e86\u81ea\u8eab\u7684operator==\u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u8c03\u7528\u7684\u662fidentical()\u65b9\u6cd5\uff0c\u6240\u4ee5\u6bd4\u8f83\u7684\u662fvalue\u7684\u5f15\u7528\u3002 UniqueKey \u4e5f\u6ca1\u6709\u7279\u522b\u7684\u5b9e\u73b0\uff0c\u6ca1\u6709\u8986\u76d6operator==\u65b9\u6cd5\uff0c\u6240\u4ee5UniqueKey\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u6bd4\u8f83\u5f15\u7528\u4e86\uff08Object\u9ed8\u8ba4\u7684operator==\u8c03\u7528\u7684\u5c31\u662fidentical()\u65b9\u6cd5\uff09\u3002 GlobalKey abstract class GlobalKey extends Key \u4e5f\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\u578b\uff0c\u4f46\u662fT\u5fc5\u987b\u8981\u7ee7\u627f\u81eaState \uff0c\u53ef\u4ee5\u8bf4\u8fd9\u4e2aGlobalKey\u4e13\u95e8\u7528\u4e8e\u7ec4\u4ef6\u4e86\u3002 \u518d\u770b\uff1a static final Map _registry = {}; GlobalKey\u91cc\u542b\u6709\u4e00\u4e2aMap\uff0ckey\u548cvalue\u5206\u522b\u4e3a\u81ea\u8eab\u548cElement\u3002 \u90a3\u4ec0\u4e48\u65f6\u5019\u4f1a\u7528\u5230\u8fd9\u4e2aMap\u5c3c\uff1f \u8ddf\u8e2a\u4ee3\u7801\u5f88\u5feb\u5c31\u627e\u5230Element\u7c7b\u7684mount\u65b9\u6cd5\uff1a void mount(Element parent, dynamic newSlot) { ... if (widget.key is GlobalKey) { final GlobalKey key = widget.key; key._register(this); } ... } \u53ef\u89c1GlobalKey\u4f1a\u5728\u7ec4\u4ef6Mount\u9636\u6bb5\u628a\u81ea\u8eab\u653e\u5230\u4e00\u4e2aMap\u91cc\u9762\u7f13\u5b58\u8d77\u6765\u3002 \u7f13\u5b58\u53c8\u6709\u4f55\u4f5c\u7528\u5c3c\uff1f \u7b54\u6848\u4f9d\u7136\u662f\u4e3a\u4e86\u6027\u80fd\u3002 \u601d\u8003\u4e00\u4e2a\u573a\u666f\uff0cA\u9875\u9762\u662f\u4e00\u4e2a\u5546\u54c1\u5217\u8868\u6709\u8bb8\u591a\u5546\u54c1\u56fe\u7247\uff08\u5927\u6982\u5c31\u5355\u5217\u8fd9\u6837\uff09\uff0cB\u9875\u9762\u662f\u4e00\u4e2a\u5546\u54c1\u8be6\u60c5\u9875\uff08\u6709\u5546\u54c1\u5927\u56fe\uff09\uff0c\u5f53\u7528\u6237\u5728A\u9875\u9762\u70b9\u51fb\u4e00\u4e2a\u5176\u4e2d\u8be6\u60c5\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u8fc7\u6e21\u52a8\u753b\uff0cA\u9875\u9762\u7684\u5546\u54c1\u56fe\u7247\u6162\u6162\u653e\u5927\u7136\u540e\u4e0b\u9762\u7684\u4ecb\u7ecd\u6587\u5b57\u4e5f\u4f1a\u8ddf\u7740\u51fa\u73b0\uff0c\u7136\u540e\u5c31\u8fd9\u6837\u5e73\u6ed1\u7684\u8fc7\u6e21\u5230B\u9875\u9762\u3002 \u6b64\u65f6A\u9875\u9762\u548cB\u9875\u9762\u90fd\u5176\u5b9e\u5171\u7528\u4e86\u4e00\u4e2a\u5546\u54c1\u56fe\u7247\u7684\u7ec4\u4ef6\uff0cB\u9875\u9762\u6ca1\u5fc5\u8981\u91cd\u590d\u521b\u5efa\u8fd9\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u76f4\u63a5\u628aA\u9875\u9762\u7684\u7ec4\u4ef6\u201c\u501f\u201d\u8fc7\u6765\u3002 \u4f7f\u7528GlobalKey\u7684\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u662f\u5982\u4f55\u7684\u5c3c\uff0c\u8fd9\u91cc\u6682\u65f6\u6316\u4e00\u4e2a\u5751\u5148\uff0c\u54c8\u54c8\u3002 \u603b\u4e4b\u6846\u67b6\u8981\u6c42\u540c\u4e00\u4e2a\u7236\u8282\u70b9\u4e0b\u5b50\u8282\u70b9\u7684Key\u90fd\u662f\u552f\u4e00\u7684\u5c31\u53ef\u4ee5\u4e86\uff0cGlobalKey\u53ef\u4ee5\u4fdd\u8bc1\u5168\u5c40\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5GlobalKey\u7684\u7ec4\u4ef6\u80fd\u591f\u4f9d\u9644\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u3002 \u800c\u4eceGlobalKey\u5bf9\u8c61\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u51e0\u4e2a\u6709\u7528\u7684\u5c5e\u6027currentElement\uff0ccurrentWidget\uff0ccurrentState\u3002 GlobalObjectKey GlobalObjectKey\u8ddfLocalObjectKey\u4e5f\u5dee\u4e0d\u591a\uff0c\u4e0d\u540c\u70b9\u5c31\u5728\u4e0e\u5b83\u662fGlobal\u7684\u3002 LabeledGlobalKey LabeledGlobalKey\u662f\u7528\u4e8e\u8c03\u8bd5\u7684\u3002 \u7ed3\u675f \u8fd9\u662f\u7b2c\u4e00\u7bc7\u5f00\u59cb\u6df1\u5165\u6846\u67b6\u4ee3\u7801\u7684\u6587\u7ae0\uff0c\u4ee3\u7801\u9605\u8bfb\u8fd8\u4e0d\u662f\u5f88\u5168\u9762\uff0c\u5f88\u6709\u53ef\u80fd\u4f1a\u6709\u9519\u6f0f\uff0c\u5982\u6709\u53d1\u73b0\uff0c\u5e0c\u671b\u80fd\u591f\u53ca\u65f6\u6307\u6b63\u3002","title":"FlutterKey"},{"location":"android/flutter/FlutterKey/#flutterkeylocalkeyglobalkey-and-more","text":"","title":"Flutter\u4e2d\u7684Key\uff0cLocalKey\uff0cGlobalKey... And More"},{"location":"android/flutter/FlutterKey/#_1","text":"\u4ece\u8fd9\u4e00\u7bc7\u6587\u7ae0\u5f00\u59cb\uff0c\u82b1\u65f6\u95f4\u6162\u6162\u9605\u8bfb\u6e90\u7801\uff0c\u4eceweb\u524d\u7aef\u89d2\u5ea6\u770bFlutter\uff0c\u7136\u540e\u4e5f\u628a\u4e00\u4e9b\u6536\u83b7\u4e5f\u5206\u4eab\u7ed9\u5927\u5bb6\u3002 React\u548cReact Native\u53d7\u5230Facebook\u6761\u6b3e\u9650\u5236\uff0c\u5927\u516c\u53f8\u4eec\uff08\u4e3b\u8981BAT\uff09\u90fd\u5f00\u59cb\u82e5\u6709\u6240\u601d\uff0cRN\u4e5f\u4f3c\u4e4e\u4e00\u4e0b\u6389\u4e0b\u4e86\u795e\u575b\uff0c\u540c\u5fd7\u4eec\uff0c\u6b64\u65f6\u6b64\u523b\u6b63\u662fFlutter\u5f53\u7acb\u7684\u65f6\u5019\uff0c\u5927\u5bb6\u4e00\u8d77\u8de8\u8fdb\u65b0\u7684\u65f6\u4ee3\uff01","title":"\u5f00\u59cb"},{"location":"android/flutter/FlutterKey/#key","text":"\u7acb\u9a6c\u8df3\u5230framework.dart\u6587\u4ef6\uff08\u8fd9\u4e2a\u6587\u4ef6\u4e00\u770b\u540d\u5b57\u5c31\u5f88\u91cd\u8981\u5566\uff09\uff0cFlutter\u4ee3\u7801\u7684\u7ec4\u7ec7\u5e76\u4e0d\u50cfJava\u53cd\u800c\u503e\u5411\u4e8eJS\u8fd9\u79cd\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u585e\u7740\u4e0d\u540c\u7684Class\uff08\u5f53\u7136\u4ed6\u4eec\u4e4b\u95f4\u80af\u5b9a\u6709\u8054\u7cfb\u7684\uff09\uff0c\u5176\u5b9e\u4e2a\u4eba\u66f4\u503e\u5411\u4e8eJava\u90a3\u79cd\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6587\u4ef6\uff0c\u9605\u8bfb\u548c\u5206\u6790\u611f\u89c9\u90fd\u6bd4\u8f83\u65b9\u4fbf\u8212\u670d\u3002 framework.dart\u4e00\u5f00\u59cb\u4f60\u5c31\u4f1a\u9047\u5230\u51e0\u4e2a\u540d\u8bcd\uff1aKey\uff0cLocalKey\uff0cUniqueKey\u7b49\u7b49\u3002 clipboard.png \u4e00\u4e0b\u5b50\u5192\u51fa\u51e0\u4e2a\u5144\u5f1f\u6765\uff0c\u5f97\u4e00\u4e2a\u4e00\u4e2a\u5206\u6e05\u695a\u4ed6\u4eec\u7684\u5404\u6709\u4ec0\u4e48\u80fd\u529b\u3002","title":"\u5404\u79cd\u5404\u6837\u7684Key"},{"location":"android/flutter/FlutterKey/#key_1","text":"\u9996\u5148key\u6709\u4f55\u7528\u5c3c\uff1f Flutter\u662f\u53d7React\u542f\u53d1\u7684\uff0c\u6240\u4ee5Virtual Dom\u7684diff\u7b97\u6cd5\u4e5f\u53c2\u8003\u8fc7\u6765\u4e86\uff08\u5e94\u8be5\u662f\u7565\u6709\u4fee\u6539\uff09\uff0c\u5728diff\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u8282\u70b9\u6709Key\u6765\u6bd4\u8f83\u7684\u8bdd\uff0c\u80fd\u591f\u6700\u5927\u7a0b\u5ea6\u91cd\u7528\u5df2\u6709\u7684\u8282\u70b9\uff08\u7279\u522b\u5728\u5217\u8868\u7684\u573a\u666f\uff09\uff0c\u9664\u4e86\u8fd9\u4e00\u70b9\u8fd9\u4e2aKey\u4e5f\u7528\u5728\u5f88\u591a\u5176\u4ed6\u7684\u5730\u65b9\u8fd9\u4e2a\u4ee5\u540e\u4f1a\u603b\u7ed3\u4e00\u4e0b\u3002\u603b\u4e4b\uff0c\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u77e5\u9053key\u80fd\u591f\u63d0\u9ad8\u6027\u80fd\uff0c\u6240\u4ee5\u6bcf\u4e2aWidget\u90fd\u4f1a\u6784\u5efa\u65b9\u6cd5\u90fd\u4f1a\u6709\u4e00\u4e2akey\u7684\u53c2\u6570\u53ef\u9009\uff0c\u8d2f\u7a7f\u7740\u6574\u4e2a\u6846\u67b6\u3002","title":"key\u7684\u4f5c\u7528"},{"location":"android/flutter/FlutterKey/#key_2","text":"\u8fd9\u91cc\u5c31\u662fKey\u7684\u7c7b\u578b\u5c42\u7ea7\u5173\u7cfb\uff0c\u53ef\u4ee5\u770b\u5230\uff1a Key\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u5b50\u7c7b\uff1aLocalKey \u548c GlobalKey\uff0c\u800c\u4ed6\u4eec\u5404\u81ea\u4e5f\u6709\u4e0d\u540c\u7684\u5b50\u7c7b\u5b9e\u73b0\uff0c\u63a5\u4e0b\u6765\u4f1a\u7ee7\u7eed\u6df1\u5165\u5206\u6790\u3002","title":"key\u4e4b\u95f4\u7684\u5173\u7cfb"},{"location":"android/flutter/FlutterKey/#key_3","text":"\u4ed6\u4eec\u7684\u8001\u5927\u54e5Key\uff0c\u8fd9\u4e2aKey\u7684\u5b9e\u73b0\u6709\u70b9\u7279\u522b\u3002 @immutable abstract class Key { /// Construct a [ValueKey ] with the given [String]. /// /// This is the simplest way to create keys. const factory Key(String value) = ValueKey ; /// Default constructor, used by subclasses. /// /// Useful so that subclasses can call us, because the Key() factory /// constructor shadows the implicit constructor. const Key._(); } \u770b\u4e0a\u53bb\u5f88\u7b80\u5355\uff0c\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u90a3\u4e3a\u5565\u7279\u522b\u5c3c\uff0c\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u79cd\u7279\u522b\u6765\u81eaDart\u8bed\u8a00\u7684\u4e00\u4e9b\u7279\u6027\uff08\u5176\u5b9e\u662fDart\u8bed\u8a00\u57fa\u7840\u592a\u6d45\uff0c\u5927\u795e\u7528\u7684\u592a\u6e9c\uff09\u3002 const Key._(); \u9996\u5148\u8fd9\u91cc\u7528\u5230\u547d\u540d\u6784\u9020\u51fd\u6570\uff08named constructors\uff09\uff0c\u5927\u81f4\u4f5c\u7528\u5c31\u662f\u7ed9\u6784\u9020\u51fd\u6570\u52a0\u591a\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u79f0\uff0c\u80fd\u591f\u8ba9\u4f7f\u7528\u8005\u66f4\u5bb9\u6613\u660e\u767d\u5404\u4e2a\u6784\u9020\u51fd\u6570\u7684\u533a\u522b\uff08\u56e0\u4e3a\u7c7b\u4f3cJava\u8fd9\u6837\uff0c\u53ea\u80fd\u9760\u53c2\u6570\u5217\u8868\u6765\u533a\u5206\u786e\u5b9e\u5bb9\u6613\u9020\u6210\u6df7\u4e71\uff09\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7a7a\u7684\u5b9e\u73b0\uff08\u5e76\u4e0d\u662fJava\u90a3\u4e00\u79cd\u62bd\u8c61\u65b9\u6cd5\uff09\u8fd9\u91cc\u6765\u6e90\u4e00\u4e2a\u5efa\u8bae \u4f20\u9001\u95e8; const factory Key(String value) = ValueKey ; \u8fd9\u91cc\u5c31\u662fKey\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u53ea\u80fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u54ea\u6015\u4fee\u6539\u53c2\u6570\u5217\u8868\u4e5f\u4e0d\u884c\uff0c\u4e4b\u540e\u4f60\u53ea\u80fd\u5b9a\u4e49\u547d\u540d\u6784\u9020\u51fd\u6570\u4e86\uff09\uff0c\u4f46\u662f\u8ddfJava\u53c8\u6709\u70b9\u4e0d\u4e00\u6837\u554a\uff0c\u9996\u5148\u662ffactory\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u8fd9\u662fDart\u8bed\u8a00\u5185\u7f6e\u4e86\u5bf9\u5de5\u5382\u6a21\u5f0f\u7684\u652f\u6301\uff08\u5176\u5b9e\u5927\u90e8\u5206\u8bed\u8a00\u90fd\u53ef\u4ee5\u652f\u6301\u8fd9\u79cd\u6a21\u5f0f\uff0c\u8fd9\u91cc\u8bed\u8a00\u5c42\u9762\u4e0a\u518d\u5f3a\u5316\u4e86\uff09\uff0c\u800c\u52a0\u4e86\u8fd9\u4e2a\u5173\u952e\u5b57\u4f1a\u600e\u6837\uff1f\u6211\u4eec\u77e5\u9053\u6784\u5efa\u65b9\u6cd5\u8fd4\u56de\u7684\u4e00\u822c\u90fd\u662f\u5f53\u524d\u7c7b\u6240\u521a\u6784\u5efa\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u52a0\u4e0afactory\u5173\u952e\u5b57\u4e4b\u540e\u4f60\u53ef\u4ee5\u4fee\u6539\u8fd4\u56de\u7684\u503c\uff0c\u53ef\u4ee5\u8ba9\u8fd4\u56de\u7684\u5bf9\u8c61\u662f\u4e4b\u524d\u5df2\u7ecf\u521b\u5efa\u597d\u7684\uff0c\u4e5f\u53ef\u4ee5\u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u5b50\u7c7b\u5bf9\u8c61\u3002 \u8fd9\u91cc\u8fd8\u6709\u6d89\u53ca\u5230\u4e00\u4e2afactory redirect(\u5b98\u7f51\u8c8c\u4f3c\u6ca1\u6709\u4ecb\u7ecd\uff0c\u4f30\u8ba1\u65b0\u52a0\u7684\u8bed\u6cd5)\u4f20\u9001\u95e8 \u7b49\u6548\u4e8e const factory Key(String value) = new ValueKey (value); \u6240\u4ee5\u8fd9\u91cc\u5176\u5b9e\u8fd4\u56de\u4e86\u4e00\u4e2aValueKey\u3002","title":"\u666e\u901a\u7684Key"},{"location":"android/flutter/FlutterKey/#valuekey","text":"\u987a\u85e4\u6478\u74dc\u6765\u5230ValueKey\uff0c\u800cValueKey\u5176\u5b9e\u5c31\u662fLocalKey\u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u4f46\u662fLocalKey\u5e76\u6ca1\u6709\u7279\u522b\u7684\u5b9e\u73b0\u53ea\u662f\u7b80\u5355\u8c03\u7528\u4e86Key._()\u6784\u9020\u51fd\u6570\u3002\u800cValueKey\u5219\u662f\uff1a class ValueKey extends LocalKey \u6784\u9020\u51fd\u6570\u9700\u8981\u4f20\u5165\u4e00\u4e2avalue\u7684\u53c2\u6570: const ValueKey(this.value); ValueKey\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u5e76\u4e14\u8986\u76d6\u4e86\u81ea\u8eab\u7684operator==\u65b9\u6cd5\uff08\u8ddf C++\u8986\u76d6\u64cd\u4f5c\u7b26\u4e00\u6837\uff09\uff0c\u8c03\u7528\u4e86\u76ee\u6807\u7c7b\u578bT\u7684\u8fd0\u7b97\u7b26==\u6765\u6bd4\u8f83\uff0c\u5f53\u7136\u8986\u76d6\u4e86operator==\u65b9\u6cd5\u4e5f\u9700\u8981\u8986\u76d6\u83b7\u53d6hashCode\u7684\u65b9\u6cd5\uff08\u9053\u7406\u8ddfJava\u4e00\u6837\uff09\u3002\u6240\u4ee5ValueKey\u7684\u6bd4\u8f83\u53d6\u51b3\u4e8evalue\u7684operator==\u7684\u5b9e\u73b0\uff0c\u4f8b\u5982Value\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u90a3\u5c31\u662f\u5185\u5bb9\u7684\u6bd4\u8f83\u3002","title":"ValueKey"},{"location":"android/flutter/FlutterKey/#objectkey","text":"\u6784\u9020\u51fd\u6570\u8ddfValueKey\u5dee\u4e0d\u591a: const ObjectKey(this.value); \u867d\u7136\u540c\u6837\u8986\u76d6\u4e86\u81ea\u8eab\u7684operator==\u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u8c03\u7528\u7684\u662fidentical()\u65b9\u6cd5\uff0c\u6240\u4ee5\u6bd4\u8f83\u7684\u662fvalue\u7684\u5f15\u7528\u3002","title":"ObjectKey"},{"location":"android/flutter/FlutterKey/#uniquekey","text":"\u4e5f\u6ca1\u6709\u7279\u522b\u7684\u5b9e\u73b0\uff0c\u6ca1\u6709\u8986\u76d6operator==\u65b9\u6cd5\uff0c\u6240\u4ee5UniqueKey\u6bd4\u8f83\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u6bd4\u8f83\u5f15\u7528\u4e86\uff08Object\u9ed8\u8ba4\u7684operator==\u8c03\u7528\u7684\u5c31\u662fidentical()\u65b9\u6cd5\uff09\u3002","title":"UniqueKey"},{"location":"android/flutter/FlutterKey/#globalkey","text":"abstract class GlobalKey extends Key \u4e5f\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\u578b\uff0c\u4f46\u662fT\u5fc5\u987b\u8981\u7ee7\u627f\u81eaState \uff0c\u53ef\u4ee5\u8bf4\u8fd9\u4e2aGlobalKey\u4e13\u95e8\u7528\u4e8e\u7ec4\u4ef6\u4e86\u3002 \u518d\u770b\uff1a static final Map _registry = {}; GlobalKey\u91cc\u542b\u6709\u4e00\u4e2aMap\uff0ckey\u548cvalue\u5206\u522b\u4e3a\u81ea\u8eab\u548cElement\u3002 \u90a3\u4ec0\u4e48\u65f6\u5019\u4f1a\u7528\u5230\u8fd9\u4e2aMap\u5c3c\uff1f \u8ddf\u8e2a\u4ee3\u7801\u5f88\u5feb\u5c31\u627e\u5230Element\u7c7b\u7684mount\u65b9\u6cd5\uff1a void mount(Element parent, dynamic newSlot) { ... if (widget.key is GlobalKey) { final GlobalKey key = widget.key; key._register(this); } ... } \u53ef\u89c1GlobalKey\u4f1a\u5728\u7ec4\u4ef6Mount\u9636\u6bb5\u628a\u81ea\u8eab\u653e\u5230\u4e00\u4e2aMap\u91cc\u9762\u7f13\u5b58\u8d77\u6765\u3002 \u7f13\u5b58\u53c8\u6709\u4f55\u4f5c\u7528\u5c3c\uff1f \u7b54\u6848\u4f9d\u7136\u662f\u4e3a\u4e86\u6027\u80fd\u3002 \u601d\u8003\u4e00\u4e2a\u573a\u666f\uff0cA\u9875\u9762\u662f\u4e00\u4e2a\u5546\u54c1\u5217\u8868\u6709\u8bb8\u591a\u5546\u54c1\u56fe\u7247\uff08\u5927\u6982\u5c31\u5355\u5217\u8fd9\u6837\uff09\uff0cB\u9875\u9762\u662f\u4e00\u4e2a\u5546\u54c1\u8be6\u60c5\u9875\uff08\u6709\u5546\u54c1\u5927\u56fe\uff09\uff0c\u5f53\u7528\u6237\u5728A\u9875\u9762\u70b9\u51fb\u4e00\u4e2a\u5176\u4e2d\u8be6\u60c5\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e2a\u8fc7\u6e21\u52a8\u753b\uff0cA\u9875\u9762\u7684\u5546\u54c1\u56fe\u7247\u6162\u6162\u653e\u5927\u7136\u540e\u4e0b\u9762\u7684\u4ecb\u7ecd\u6587\u5b57\u4e5f\u4f1a\u8ddf\u7740\u51fa\u73b0\uff0c\u7136\u540e\u5c31\u8fd9\u6837\u5e73\u6ed1\u7684\u8fc7\u6e21\u5230B\u9875\u9762\u3002 \u6b64\u65f6A\u9875\u9762\u548cB\u9875\u9762\u90fd\u5176\u5b9e\u5171\u7528\u4e86\u4e00\u4e2a\u5546\u54c1\u56fe\u7247\u7684\u7ec4\u4ef6\uff0cB\u9875\u9762\u6ca1\u5fc5\u8981\u91cd\u590d\u521b\u5efa\u8fd9\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u76f4\u63a5\u628aA\u9875\u9762\u7684\u7ec4\u4ef6\u201c\u501f\u201d\u8fc7\u6765\u3002 \u4f7f\u7528GlobalKey\u7684\u7ec4\u4ef6\u751f\u547d\u5468\u671f\u662f\u5982\u4f55\u7684\u5c3c\uff0c\u8fd9\u91cc\u6682\u65f6\u6316\u4e00\u4e2a\u5751\u5148\uff0c\u54c8\u54c8\u3002 \u603b\u4e4b\u6846\u67b6\u8981\u6c42\u540c\u4e00\u4e2a\u7236\u8282\u70b9\u4e0b\u5b50\u8282\u70b9\u7684Key\u90fd\u662f\u552f\u4e00\u7684\u5c31\u53ef\u4ee5\u4e86\uff0cGlobalKey\u53ef\u4ee5\u4fdd\u8bc1\u5168\u5c40\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5GlobalKey\u7684\u7ec4\u4ef6\u80fd\u591f\u4f9d\u9644\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\u3002 \u800c\u4eceGlobalKey\u5bf9\u8c61\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5f97\u5230\u51e0\u4e2a\u6709\u7528\u7684\u5c5e\u6027currentElement\uff0ccurrentWidget\uff0ccurrentState\u3002","title":"GlobalKey"},{"location":"android/flutter/FlutterKey/#globalobjectkey","text":"GlobalObjectKey\u8ddfLocalObjectKey\u4e5f\u5dee\u4e0d\u591a\uff0c\u4e0d\u540c\u70b9\u5c31\u5728\u4e0e\u5b83\u662fGlobal\u7684\u3002","title":"GlobalObjectKey"},{"location":"android/flutter/FlutterKey/#labeledglobalkey","text":"LabeledGlobalKey\u662f\u7528\u4e8e\u8c03\u8bd5\u7684\u3002 \u7ed3\u675f \u8fd9\u662f\u7b2c\u4e00\u7bc7\u5f00\u59cb\u6df1\u5165\u6846\u67b6\u4ee3\u7801\u7684\u6587\u7ae0\uff0c\u4ee3\u7801\u9605\u8bfb\u8fd8\u4e0d\u662f\u5f88\u5168\u9762\uff0c\u5f88\u6709\u53ef\u80fd\u4f1a\u6709\u9519\u6f0f\uff0c\u5982\u6709\u53d1\u73b0\uff0c\u5e0c\u671b\u80fd\u591f\u53ca\u65f6\u6307\u6b63\u3002","title":"LabeledGlobalKey"},{"location":"android/flutter/FlutterLib/","text":"Flutter\u5f00\u53d1\u5e38\u4f7f\u7528\u7684\u5e93 Flutter App\u5f00\u53d1\u76f8\u5173\u77e5\u8bc6\u70b9 1.Flutter\u5f02\u6b65\u7f16\u7a0basync,await,Future/Stream async,await Stream\u5b8c\u5168\u89e3\u6790 2.Flutter \u9519\u8bef\u5f02\u5e38\u5904\u7406 \u9519\u8bef\u5f02\u5e38\u5904\u7406 3.Flutter\u5168\u5c40\u72b6\u6001\u7ba1\u7406 Flutter\u5168\u5c40\u72b6\u6001\u7ba1\u7406 \u5e8f\u5217\u5316 dependencies: json_annotation: ^0.2.3 dev_dependencies: build_runner: ^0.8.0 json_serializable: ^0.5.0 \u6267\u884c\u751f\u6210\u6587\u4ef6 \u53ef\u4ee5\u624b\u52a8\u6216\u81ea\u52a8\u89e6\u53d1\u4ee3\u7801\u751f\u6210\u3002 \u8981\u624b\u52a8\u8fd0\u884c\uff0c\u8bf7\u4f7f\u7528\u8be5\u547d\u4ee4flutter packages pub run build_runner build\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8be5\u547d\u4ee4flutter packages pub run build_runner watch\u8bbe\u7f6e\u89c2\u5bdf\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u5728\u6587\u4ef6\u66f4\u6539\u65f6\u81ea\u52a8\u8fd0\u884c\u4ee3\u7801\u751f\u6210\u3002 \u5728\u751f\u6210\u65b0\u6587\u4ef6\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4f20\u9012\u53c2\u6570--delete-conflicting-outputs\u4ee5flutter packages pub run build_runner build\u5220\u9664\u65e7\u751f\u6210\u7684\u6587\u4ef6\u3002 \u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316","title":"Flutter\u5e93"},{"location":"android/flutter/FlutterLib/#flutter","text":"","title":"Flutter\u5f00\u53d1\u5e38\u4f7f\u7528\u7684\u5e93"},{"location":"android/flutter/FlutterLib/#flutter-app","text":"1.Flutter\u5f02\u6b65\u7f16\u7a0basync,await,Future/Stream async,await Stream\u5b8c\u5168\u89e3\u6790 2.Flutter \u9519\u8bef\u5f02\u5e38\u5904\u7406 \u9519\u8bef\u5f02\u5e38\u5904\u7406 3.Flutter\u5168\u5c40\u72b6\u6001\u7ba1\u7406 Flutter\u5168\u5c40\u72b6\u6001\u7ba1\u7406","title":"Flutter App\u5f00\u53d1\u76f8\u5173\u77e5\u8bc6\u70b9"},{"location":"android/flutter/FlutterLib/#_1","text":"dependencies: json_annotation: ^0.2.3 dev_dependencies: build_runner: ^0.8.0 json_serializable: ^0.5.0","title":"\u5e8f\u5217\u5316"},{"location":"android/flutter/FlutterLib/#_2","text":"\u53ef\u4ee5\u624b\u52a8\u6216\u81ea\u52a8\u89e6\u53d1\u4ee3\u7801\u751f\u6210\u3002 \u8981\u624b\u52a8\u8fd0\u884c\uff0c\u8bf7\u4f7f\u7528\u8be5\u547d\u4ee4flutter packages pub run build_runner build\u3002 \u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8be5\u547d\u4ee4flutter packages pub run build_runner watch\u8bbe\u7f6e\u89c2\u5bdf\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u5728\u6587\u4ef6\u66f4\u6539\u65f6\u81ea\u52a8\u8fd0\u884c\u4ee3\u7801\u751f\u6210\u3002 \u5728\u751f\u6210\u65b0\u6587\u4ef6\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u4f20\u9012\u53c2\u6570--delete-conflicting-outputs\u4ee5flutter packages pub run build_runner build\u5220\u9664\u65e7\u751f\u6210\u7684\u6587\u4ef6\u3002 \u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316","title":"\u6267\u884c\u751f\u6210\u6587\u4ef6"},{"location":"android/flutter/FlutterQuestion/","text":"Flutter \u5e38\u89c1\u95ee\u9898 \u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4ec0\u4e48\u662fFlutter\uff1f \u5b83\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u5305\u542b\u54ea\u51e0\u90e8\u5206\uff0c\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\uff0c\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\u7684\u5462\uff1f Flutter\u5982\u4f55\u505a\u5230Debug\u6a21\u5f0fHot Reload\u5feb\u901f\u751f\u6548\u53d8\u66f4\uff0cRelease\u6a21\u5f0f\u539f\u751f\u4f53\u9a8c\u7684\u5462\uff1f Flutter\u5de5\u7a0b\u548c\u6211\u4eec\u7684Android/iOS\u5de5\u7a0b\u6709\u4f55\u5dee\u522b\uff0c\u5173\u7cfb\u5982\u4f55\uff0c\u53c8\u662f\u5982\u4f55\u5d4c\u5165Android/iOS\u7684\u5462\uff1f Flutter\u7684\u6e32\u67d3\u548c\u4e8b\u4ef6\u4f20\u9012\u673a\u5236\u5982\u4f55\u5de5\u4f5c\uff1fFlutter\u652f\u6301\u70ed\u66f4\u65b0\u5417\uff1f Flutter\u5b98\u65b9\u5e76\u672a\u63d0\u4f9biOS\u4e0b\u7684armv7\u652f\u6301\uff0c\u786e\u5b9e\u5982\u6b64\u5417\uff1f\u5728\u4f7f\u7528Flutter\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u4e86engine\u7684bug\uff0c\u5982\u4f55\u53bb\u4fee\u6539\u548c\u751f\u6548\uff1f\u6784\u5efa\u7f13\u6162\u6216\u51fa\u9519\u53c8\u5982\u4f55\u53bb\u5b9a\u4f4d\uff0c\u4fee\u6539\u548c\u751f\u6548\u5462\uff1f","title":"Flutter\u5e38\u89c1\u95ee\u9898"},{"location":"android/flutter/FlutterQuestion/#flutter","text":"\u5bf9\u4e8e\u5f00\u53d1\u8005\u800c\u8a00\uff0c\u4ec0\u4e48\u662fFlutter\uff1f \u5b83\u662f\u7528\u4ec0\u4e48\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u5305\u542b\u54ea\u51e0\u90e8\u5206\uff0c\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\uff0c\u8fd0\u884c\u5230\u8bbe\u5907\u4e0a\u7684\u5462\uff1f Flutter\u5982\u4f55\u505a\u5230Debug\u6a21\u5f0fHot Reload\u5feb\u901f\u751f\u6548\u53d8\u66f4\uff0cRelease\u6a21\u5f0f\u539f\u751f\u4f53\u9a8c\u7684\u5462\uff1f Flutter\u5de5\u7a0b\u548c\u6211\u4eec\u7684Android/iOS\u5de5\u7a0b\u6709\u4f55\u5dee\u522b\uff0c\u5173\u7cfb\u5982\u4f55\uff0c\u53c8\u662f\u5982\u4f55\u5d4c\u5165Android/iOS\u7684\u5462\uff1f Flutter\u7684\u6e32\u67d3\u548c\u4e8b\u4ef6\u4f20\u9012\u673a\u5236\u5982\u4f55\u5de5\u4f5c\uff1fFlutter\u652f\u6301\u70ed\u66f4\u65b0\u5417\uff1f Flutter\u5b98\u65b9\u5e76\u672a\u63d0\u4f9biOS\u4e0b\u7684armv7\u652f\u6301\uff0c\u786e\u5b9e\u5982\u6b64\u5417\uff1f\u5728\u4f7f\u7528Flutter\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u4e86engine\u7684bug\uff0c\u5982\u4f55\u53bb\u4fee\u6539\u548c\u751f\u6548\uff1f\u6784\u5efa\u7f13\u6162\u6216\u51fa\u9519\u53c8\u5982\u4f55\u53bb\u5b9a\u4f4d\uff0c\u4fee\u6539\u548c\u751f\u6548\u5462\uff1f","title":"Flutter \u5e38\u89c1\u95ee\u9898"},{"location":"android/flutter/FlutterSupportView/","text":"\u8ba9Flutter\u771f\u6b63\u652f\u6301View\u7ea7\u522b\u7684\u6df7\u5408\u5f00\u53d1","title":"FlutterSupportView"},{"location":"android/flutter/FlutterTools/","text":"1.flutter \u76f8\u5173\uff1a 1.android studio\u63d2\u4ef6 2.pub\u4f9d\u8d56\u5e93\u7684\u7ba1\u7406 3.flutter\u5de5\u5177\u94fe \u76f8\u5173\u6e90\u4ee3\u7801\u4e0b\u8f7d: https://github.com/flutter Dart for web: https://webdev.dartlang.org/tools/sdk#install sample: https://github.com/flutter/samples/blob/master/INDEX.md Flutter \u5f00\u53d1: https://flutter.dev/ Flutter: \u5f00\u53d1\u6848\u4f8bApp\uff1a https://github.com/iampawan/FlutterExampleApps Flutter DEMO: https://github.com/nisrulz/flutter-examples Flutter \u6587\u6863: https://docs.flutter.io/ Flutter\u6846\u67b6\u6e90\u7801 Flutter \u6846\u67b6\u5c42\u4ee3\u7801: https://github.com/flutter/flutter \u8bbf\u95ee\u672c\u5730\u4ee3\u7801\u7684\u4e24\u79cd\u65b9\u5f0f: \u4f7f\u7528Package: https://flutter.dev/docs/development/packages-and-plugins/using-packages platform-channels https://flutter.dev/docs/development/platform-integration/platform-channels \u5b89\u88c5\u5de5\u5177\u547d\u4ee4 Mac: brew cask install android-platform-tools Linux: sudo apt-get install android-tools-adb :cangchengkun/flutter.git brew install ant git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git solutions = [ { \"managed\": False, \"name\": \"src/flutter\", \"url\": \" :cangchengkun/engine.git\", \"custom_deps\": {}, \"deps_file\": \"DEPS\", \"safesync_url\": \"\", }, ] Flutter \u6a21\u5f0f Flutter's modes: https://github.com/flutter/flutter/wiki/Flutter%27s-modes","title":"FlutterSdk"},{"location":"android/flutter/FlutterTools/#flutter","text":"https://docs.flutter.io/","title":"Flutter \u6587\u6863:"},{"location":"android/flutter/FlutterTools/#flutter_1","text":"Flutter \u6846\u67b6\u5c42\u4ee3\u7801: https://github.com/flutter/flutter","title":"Flutter\u6846\u67b6\u6e90\u7801"},{"location":"android/flutter/FlutterTools/#_1","text":"\u4f7f\u7528Package: https://flutter.dev/docs/development/packages-and-plugins/using-packages platform-channels https://flutter.dev/docs/development/platform-integration/platform-channels","title":"\u8bbf\u95ee\u672c\u5730\u4ee3\u7801\u7684\u4e24\u79cd\u65b9\u5f0f:"},{"location":"android/flutter/FlutterTools/#_2","text":"Mac: brew cask install android-platform-tools Linux: sudo apt-get install android-tools-adb :cangchengkun/flutter.git brew install ant git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git solutions = [ { \"managed\": False, \"name\": \"src/flutter\", \"url\": \" :cangchengkun/engine.git\", \"custom_deps\": {}, \"deps_file\": \"DEPS\", \"safesync_url\": \"\", }, ]","title":"\u5b89\u88c5\u5de5\u5177\u547d\u4ee4"},{"location":"android/flutter/FlutterTools/#flutter_2","text":"Flutter's modes: https://github.com/flutter/flutter/wiki/Flutter%27s-modes","title":"Flutter \u6a21\u5f0f"},{"location":"android/flutter/GNTools/","text":"Flutter Engine \u7f16\u8bd1\u4f7f\u7528 GN Tools \u4ecb\u7ecd gn \u662f\u4e00\u6b3e\u6784\u5efa\u7cfb\u7edf\uff0c\u7528\u4e8e\u7f16\u8bd1\u5927\u89c4\u6a21\u4ee3\u7801\u751f\u6210ninja\u6587\u4ef6 \u4f18\u70b9 1.\u53ef\u8bfb\u6027\u597d 2.\u901f\u5ea6\u66f4\u5feb 3.\u4fee\u6539gn \u4e4b\u540e \u6784\u5efaninja\u6587\u4ef6\u65f6\u5019\u4f1a\u81ea\u52a8\u66f4\u65b0 4.\u4f9d\u8d56\u5206\u660e \u7ecf\u8fc7\u51e0\u5929\u7684\u6478\u7d22\u53d1\u73b0\u8fd9\u79cd\u6784\u5efa\u7cfb\u7edf\u975e\u5e38\u6709\u5c42\u6b21\u6027\uff0c\u901a\u5e38\u6bcf\u4e2a\u6a21\u5757\u53ef\u4ee5\u5355\u72ec\u5199\u4e00\u4e2agn\u6587\u4ef6\uff0c\u4f46\u662f\u4e00\u822c\u91c7\u7528\u5c42\u7ea7\u7ed3\u6784 \u6587\u4ef6\u6839\u76ee\u5f55\u4e0b\u901a\u5e38\u6709\u4e00\u4e2aBUILD.gn\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u6240\u6709\u7684\u4ee3\u7801\u6a21\u5757\u7ec4\u88c5\u7684\u96c6\u5408 .gni \u6587\u4ef6\uff1a\u4e00\u822c\u7528\u6765\u6dfb\u52a0\u4e00\u4e9b\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u5728gn\u6587\u4ef6\u4e2dimport\u8fd9\u4e9b\u6587\u4ef6\u6216\u8005\u91cc\u9762\u5b9a\u4e49\u7684\u53d8\u91cf\u53c2\u6570\u503c \u672c\u6587\u63cf\u8ff0\u4e86\u8bb8\u591aGN\u7684\u8bed\u6cd5\u7ec6\u8282\u548c\u884c\u4e3a\u3002 1.1 \u4f7f\u7528\u5185\u7f6e\u7684\u5e2e\u52a9\uff01 GN\u5177\u6709\u5e7f\u6cdb\u7684\u5185\u7f6e\u5e2e\u52a9\u7cfb\u7edf\uff0c\u4e3a\u6bcf\u4e2a\u51fd\u6570\u548c\u5185\u7f6e\u53d8\u91cf\u63d0\u4f9b\u53c2\u8003\u3002 \u8fd9\u4e2a\u9875\u9762\u66f4\u9ad8\u7ea7\u3002 GN help \u60a8\u8fd8\u53ef\u4ee5\u9605\u8bfb2016\u5e743\u6708\u7684GN\u4ecb\u7ecd\u7684\u5e7b\u706f\u7247\u3002\u6f14\u8bb2\u8005\u5907\u6ce8\u5305\u542b\u5b8c\u6574\u5185\u5bb9\u3002 1.2 \u8bbe\u8ba1\u7406\u5ff5 \u7f16\u5199\u6784\u5efa\u6587\u4ef6\u4e0d\u5e94\u8be5\u6709\u592a\u591a\u7684\u521b\u9020\u6027\u7684\u5de5\u4f5c\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u7ed9\u5b9a\u76f8\u540c\u7684\u8981\u6c42\uff0c\u4e24\u4e2a\u4eba\u5e94\u8be5\u751f\u6210\u76f8\u540c\u7684\u6784\u5efa\u6587\u4ef6\u3002 \u9664\u975e\u786e\u5b9e\u9700\u8981\uff0c\u5426\u5219\u4e0d\u5e94\u6709\u7075\u6d3b\u6027\u3002\u56e0\u4e3a\u8bb8\u591a\u4e8b\u60c5\u5e94\u8be5\u5c3d\u53ef\u80fd\u4f5c\u4e3a\u81f4\u547d\u9519\u8bef\u3002 \u5b9a\u4e49\u5e94\u8be5\u66f4\u50cf\u4ee3\u7801\u800c\u4e0d\u662f\u89c4\u5219\u3002\u6211\u4e0d\u60f3\u5199\u6216\u8c03\u8bd5Prolog\u3002\u4f46\u662f\u6211\u4eec\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u7f16\u5199\u548c\u8c03\u8bd5C ++\u548cPython\u3002 \u5e94\u8be5\u8003\u8651\u6784\u5efa\u8bed\u8a00\u5e94\u8be5\u5982\u4f55\u5de5\u4f5c\u3002\u5b83\u6ca1\u5fc5\u8981\u53bb\u5bb9\u6613\u751a\u81f3\u662f\u53ef\u80fd\u8868\u8fbe\u62bd\u8c61\u4e8b\u7269\u3002 \u6211\u4eec\u5e94\u8be5\u901a\u8fc7\u6539\u53d8\u6e90\u7801\u6216\u5de5\u5177\u6765\u4f7f\u6784\u5efa\u66f4\u52a0\u7b80\u5355\uff0c\u800c\u4e0d\u662f\u4f7f\u6784\u5efa\u52a0\u4ee5\u590d\u6742\u6765\u6ee1\u8db3\u5916\u90e8\u9700\u6c42\uff08\u5728\u5408\u7406\u7684\u8303\u56f4\u5185\uff09\u3002 \u50cfBlaze\uff0c\u5b83\u4ec0\u4e48\u65f6\u5019\u662f\u6709\u610f\u4e49\u7684\uff08\u89c1\u4e0b\u6587\u201c\u4e0eBlaze\u7684\u533a\u522b\u548c\u76f8\u4f3c\u4e4b\u5904\u201d\uff09\u3002 \u5982\u4f55\u4f7f\u7528 \u91cd\u8981\u53c2\u6570\u8bb2\u89e3 group \uff1a\u4e00\u4e2a\u62e5\u6709\u547d\u540d\u7684\u76ee\u6807\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u5305\u542b\u5f88\u591a\u7684\u4f9d\u8d56\u6a21\u5757 \u53ef\u914d\u7f6e\u9879\uff1a 1.\u4f9d\u8d56\u7684\u6a21\u5757 data_deps,deps,public_deps \u914d\u7f6e\u53c2\u6570 \uff1aall_dependent_configs,public_configs \u6839\u76ee\u5f55\u7684gn\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u4e2a\u7684group\u7ec4\u6210\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6dfb\u52a0\u6216\u8005\u51cf\u5c11\u6a21\u5757\u4f9d\u8d56\uff0c\u6240\u6709\u5728\u6839\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u4e2d\u521b\u5efa\u7684\u6a21\u5757\u60f3\u53d1\u6325\u4f5c\u7528\u9700\u8981\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u8fdb\u884c\u6dfb\u52a0\u4f9d\u8d56 config \uff1a\u5b9a\u4e49\u4e00\u4e2a\u914d\u7f6e\u5bf9\u8c61 \u901a\u4fd7\u7684\u89e3\u91ca\uff0cconfig\u5c31\u662f\u6784\u9020\u4e00\u4e2a\u6a21\u677f\uff0c\u8fd9\u4e2a\u6a21\u677f\u6709\u5404\u79cd\u5404\u6837\u7684\u5c5e\u6027 source_set :\u9700\u8981\u88ab\u7f16\u8bd1\u7684\u8d44\u6e90\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u88ab\u7f16\u8bd1\u4f46\u662f\u4e0d\u4ea7\u751f\u4efb\u4f55\u7684\u5e93 static_library :\u751f\u6210\u9759\u6001\u5e93\u76ee\u6807 target : \u6307\u5b9a\u76ee\u6807\u7684\u7c7b\u578b\u5e76\u751f\u6210\u8be5\u76ee\u6807 template: \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u51fd\u6570 component \uff1a \u5b9a\u4e49\u4e00\u4e2a\u7ec4\u4ef6\u76f8\u5f53\u4e8e\u4f7f\u7528gn\u7684component\u6a21\u677f\u66ff\u4ee3\u4e86\u9759\u6001\u5e93\u3001\u52a8\u6001\u5e93\u6216\u8005sourceset\uff0c\u5f53\u5141\u8bb8\u4f7f\u7528\u8fd9\u4e2a\uff08\u7f16\u8bd1\u53c2\u6570 is_component_build \u4e3atrue\u7684\u65f6\u5019\uff09\uff0c\u6a21\u677f\u4f1a\u751f\u6210\u4e00\u4e2a\u52a8\u6001\u5e93\uff0c\u4e0d\u5141\u8bb8\u7684\u8bdd\u4f1a\u751f\u6210\u4e00\u4e2a\u52a8\u6001\u5e93\uff0c\u8fd9\u4e2a\u5f88\u590d\u6742\uff0c\u8be6\u60c5\u952ecomponent\u5b98\u65b9\u8be6\u89e3 define :\u5b9a\u4e49\u5b57\u7b26\u4e32\uff0c\u88ab\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\uff0c\u529f\u80fd\u7c7b\u4f3c\u4e8e# defines include_dirs \uff1a\u6dfb\u52a0\u989d\u5916\u8def\u5f84\u6587\u4ef6 inputs \uff1a \u6dfb\u52a0\u5f53\u524d\u7f16\u8bd1\u76ee\u6807\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u9700\u8981\u7684target ldflags \uff1a\u4f20\u9012\u7ed9\u94fe\u63a5\u5668\u7684\u6807\u5fd7 \uff0c\u73b0\u5728\u5927\u90e8\u5206\u53ef\u4ee5\u7528libs\u548clib_dirs\u66ff\u4ee3\u4f7f\u7528 lib_dirs :\u989d\u5916\u7684\u5e93\u8def\u5f84\u5217\u8868 \u8bed\u6cd5 GN\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u3002\u7684\u7c7b\u578b\u662f\uff1a \u5e03\u5c14\uff08true\uff0cfalse\uff09\u3002 64\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002 \u5b57\u7b26\u4e32\u3002 \u5217\u8868\uff08\u4efb\u4f55\u5176\u5b83\u7c7b\u578b\uff09\u3002 \u4f5c\u7528\u57df\uff08\u6709\u70b9\u50cf\u5b57\u5178\uff0c\u53ea\u662f\u5185\u7f6e\u7684\u4e1c\u897f\uff09\u3002 \u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u53d8\u91cf\uff0c\u5176\u503c\u53d6\u51b3\u4e8e\u5f53\u524d\u7684\u73af\u5883\u3002\u53c2\u89c1gn help\u66f4\u591a\u3002 GN\u4e2d\u6709\u8bb8\u591a\u6545\u610f\u7684\u9057\u6f0f\u3002\u4f8b\u5982\u6ca1\u6709\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u8c03\u7528\uff08\u6a21\u677f\u662f\u6700\u63a5\u8fd1\u7684\u4e86\uff09\u3002 \u6839\u636e\u4e0a\u8ff0\u8bbe\u8ba1\u7406\u5ff5\uff0c\u5982\u679c\u4f60\u9700\u8981\u8fd9\u79cd\u4e1c\u897f\uff0c\u5df2\u7ecf\u4e0d\u7b26\u5408\u5176\u8bbe\u8ba1\u7406\u5ff5\u4e86\u3002 \u53d8\u91cfsources\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\uff1a\u5f53\u5206\u914d\u7ed9\u5b83\u65f6\uff0c\u6392\u9664\u6a21\u5f0f\u7684\u5217\u8868\u4f1a\u5e94\u7528\u4e8e\u5b83\u3002 \u8fd9\u662f\u4e3a\u4e86\u81ea\u52a8\u8fc7\u6ee4\u6389\u4e00\u4e9b\u7c7b\u578b\u7684\u6587\u4ef6\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605gn help set_sources_assignment_filter\u548cgn help label_pattern\u3002 \u4e66\u5446\u5b50\u4f3c\u7684GN\u7684\u5b8c\u6574\u8bed\u6cd5\u5728gn help grammar\u4e2d\u63d0\u4f9b\u3002 2.1 \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u7528\u53cc\u5f15\u53f7\u548c\u53cd\u659c\u7ebf\u4f7f\u7528\u4f5c\u4e3a\u8f6c\u4e49\u5b57\u7b26\u3002\u552f\u4e00\u652f\u6301\u7684\u8f6c\u4e49\u5e8f\u5217\u662f\uff1a \\\u201d \uff08\u5b57\u7b26\u5f15\u7528\uff09 $ \uff08\u5b57\u7b26\u7f8e\u5143\u7b26\u53f7\uff09 \uff08\u5b57\u7b26\u53cd\u659c\u6760\uff09 \u53cd\u659c\u6760\u7684\u4efb\u4f55\u5176\u4ed6\u7528\u6cd5\u88ab\u89c6\u4e3a\u5b57\u7b26\u53cd\u659c\u6760\u3002 \u56e0\u6b64\uff0c\u4f8b\u5982\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528\u7684\\b\u4e0d\u9700\u8981\u8f6c\u4e49\uff0cWindows\u8def\u5f84\uff0c\u5982\u201cC\\foo\\bar.h\u201d\u4e5f\u4e0d\u9700\u8981\u8f6c\u4e49\u3002 \u901a\u8fc7\u652f\u6301\u7b80\u5355\u7684\u53d8\u91cf\u66ff\u6362\uff0c\u5176\u4e2d\u7f8e\u5143\u7b26\u53f7\u540e\u9762\u7684\u5b57\u66ff\u6362\u4e3a\u53d8\u91cf\u7684\u503c\u3002\u5982\u679c\u6ca1\u6709\u975evariable\u2212name\u5b57\u7b26\u4ee5\u7ec8\u6b62\u53d8\u91cf\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u9009\u62e9\u6027\u5730\u5305\u56f4\u540d\u79f0\u3002\u4e0d\u652f\u6301\u66f4\u590d\u6742\u7684\u8868\u8fbe\u5f0f\uff0c\u53ea\u652f\u6301\u53d8\u91cf\u540d\u79f0\u66ff\u6362\u3002 a = \u201cmypath\u201db = \u201ca/foo.cc\u201d # b - \u201cmypath/foo.cc\u201d c = \u201cfoo { a } bar.cc\u201d # c - \u201cfoomypathbar.cc\u201d \u4f60\u53ef\u4ee5\u4f7f\u7528\u201c0xFF\u201d\u8bed\u6cd5\u7f16\u78018\u4f4d\u5b57\u7b26\uff0c\u6240\u4ee5\u5e26\u6709\u6362\u884c\u7b26\uff08\u5341\u516d\u8fdb\u52360A\uff09\u7684\u5b57\u7b26\u4e32\u5982\u4e0b\uff1a`\u201clook0x0Alike0x0Athis\u201d\u3002 2.2 \u6e05\u5355 \u6211\u4eec\u662f\u6ca1\u6709\u529e\u6cd5\u5f97\u5230\u5217\u8868\u7684\u957f\u5ea6\u7684\u3002 \u5982\u679c\u4f60\u53d1\u73b0\u81ea\u5df1\u60f3\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u90a3\u662f\u4f60\u5728\u6784\u5efa\u4e2d\u505a\u4e86\u592a\u591a\u7684\u5de5\u4f5c\u3002 \u5217\u8868\u652f\u6301\u9644\u52a0\uff1a a = [ first ] a += [ second ] # [ first , second ] a += [ third , fourth ] # [ first , second , third , fourth ] b = a + [ fifth ] # [ first , second , third , fourth , fifth ] \u5c06\u5217\u8868\u9644\u52a0\u5230\u53e6\u4e00\u4e2a\u5217\u8868\u5c06\u9879\u76ee\u9644\u52a0\u5728\u7b2c\u4e8c\u4e2a\u5217\u8868\u4e2d\uff0c\u800c\u4e0d\u662f\u5c06\u5217\u8868\u9644\u52a0\u4e3a\u5d4c\u5957\u6210\u5458\u3002 \u60a8\u53ef\u4ee5\u4ece\u5217\u8868\u4e2d\u5220\u9664\u9879\u76ee\uff1a a = [ first , second , third , first ] b = a - [ first ] # [ second , third ] a - = [ second ] # [ first , third , fourth ] \u5217\u8868\u4e2d\u7684 - \u8fd0\u7b97\u7b26\u641c\u7d22\u5339\u914d\u9879\u5e76\u5220\u9664\u6240\u6709\u5339\u914d\u7684\u9879\u3002 \u4ece\u53e6\u4e00\u4e2a\u5217\u8868\u4e2d\u51cf\u53bb\u5217\u8868\u5c06\u5220\u9664\u7b2c\u4e8c\u4e2a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u5339\u914d\u7684\u9879\u76ee\uff0c\u5c06\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u63d0\u524d\u77e5\u9053\u8be5\u9879\u76ee\u5728\u90a3\u91cc\uff0c\u7136\u540e\u518d\u5220\u9664\u5b83\u3002 \u5047\u5b9a\u6ca1\u6709\u529e\u6cd5\u6d4b\u8bd5\u662f\u5426\u5305\u542b\uff0c\u4e3b\u8981\u7528\u4f8b\u662f\u8bbe\u7f6e\u6587\u4ef6\u6216\u6807\u5fd7\u7684\u4e3b\u5217\u8868\uff0c\u5e76\u6839\u636e\u5404\u79cd\u6761\u4ef6\u5220\u9664\u4e0d\u9002\u7528\u4e8e\u5f53\u524d\u6784\u5efa\u7684\u4e3b\u5217\u8868\u3002 \u5728\u6587\u4f53\u98ce\u683c\u4e0a\uff0c\u53ea\u559c\u6b22\u6dfb\u52a0\u5230\u5217\u8868\uff0c\u5e76\u8ba9\u6bcf\u4e2a\u6e90\u6587\u4ef6\u6216\u4f9d\u8d56\u9879\u51fa\u73b0\u4e00\u6b21\u3002 \u8fd9\u4e0eFlutter Engine\u56e2\u961f\u4e3aGYP\u63d0\u4f9b\u7684\u5efa\u8bae\uff08GYP\u66f4\u613f\u610f\u5217\u51fa\u6240\u6709\u6587\u4ef6\uff0c\u7136\u540e\u5220\u9664\u5728\u6761\u4ef6\u8bed\u4e2d\u4e0d\u9700\u8981\u7684\u6587\u4ef6\uff09\u76f8\u53cd\u3002 \u5217\u8868\u652f\u6301\u57fa\u4e8e\u96f6\u7684\u4e0b\u6807\u6765\u63d0\u53d6\u503c\uff1a a = [ first , second , third ] b = a [ 1 ] # - second []\u8fd0\u7b97\u7b26\u662f\u53ea\u8bfb\u7684\uff0c\u4e0d\u80fd\u7528\u4e8e\u6539\u53d8\u5217\u8868\u3002 \u4e3b\u8981\u7528\u4f8b\u662f\u5f53\u5916\u90e8\u811a\u672c\u8fd4\u56de\u51e0\u4e2a\u5df2\u77e5\u503c\uff0c\u5e76\u4e14\u8981\u63d0\u53d6\u5b83\u4eec\u65f6\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f53\u4f60\u60f3\u8981\u9644\u52a0\u5230\u5217\u8868\u65f6\uff0c\u5f88\u5bb9\u6613\u8986\u76d6\u5217\u8868\u3002 \u4e3a\u4e86\u5e2e\u52a9\u6355\u83b7\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c06\u975e\u7a7a\u5217\u8868\u8d4b\u7ed9\u5305\u542b\u975e\u7a7a\u5217\u8868\u7684\u53d8\u91cf\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u5982\u679c\u8981\u89e3\u51b3\u6b64\u9650\u5236\uff0c\u8bf7\u5148\u5c06\u7a7a\u5217\u8868\u8d4b\u7ed9\u76ee\u6807\u53d8\u91cf\u3002\u5982\u4e0b\uff1a a = [ \u201cone\u201d ] a = [ \u201ctwo\u201d ] # Error: overwriting nonempty list with a nonempty list. a = [] # OK a = [ \u201ctwo\u201d ] # OK \u6ce8\u610f\uff0c\u6784\u5efa\u811a\u672c\u6267\u884c\u65f6\u5e76\u4e0d\u7406\u89e3\u6f5c\u5728\u6570\u636e\u7684\u542b\u4e49\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5e76\u4e0d\u77e5\u9053sources\u662f\u4e00\u4e2a\u6587\u4ef6\u540d\u7684\u5217\u8868\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5220\u9664\u5176\u4e2d\u4e00\u9879\uff0c\u5b83\u5fc5\u987b\u5b57\u7b26\u4e32\u5b8c\u5168\u5339\u914d\uff0c\u800c\u4e0d\u662f\u6307\u5b9a\u4e00\u4e2a\u4e0d\u5e26\u540e\u7f00\u7684\u540d\u79f0\uff0c\u5b83\u5e76\u4e0d\u4f1a\u89e3\u6790\u4e3a\u76f8\u540c\u7684\u6587\u4ef6\u540d\u3002 2.3 \u6761\u4ef6\u8bed\u53e5 \u6761\u4ef6\u8868\u8fbe\u5f0f\u770b\u8d77\u6765\u50cfC\uff1a if ( is_linux || ( is_win target_cpu == x86 )) { sources - = [ something.cc ] } else if ( ... ) { ... } else { ... } \u5982\u679c\u76ee\u6807\u53ea\u5e94\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u58f0\u660e\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\uff0c\u751a\u81f3\u662f\u6574\u4e2a\u76ee\u6807\u3002 2.4 \u5faa\u73af \u4f60\u53ef\u4ee5\u7528foreach\u904d\u5386\u4e00\u4e2a\u5217\u8868\u3002 \u4f46\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a\u3002\u6784\u5efa\u505a\u7684\u5927\u591a\u6570\u4e8b\u60c5\u5e94\u8be5\u90fd\u53ef\u4ee5\u8868\u8fbe\uff0c\u800c\u4e0d\u662f\u5faa\u73af\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u6709\u5fc5\u8981\u4f7f\u7528\u5faa\u73af\uff0c\u8fd9\u53ef\u80fd\u8bf4\u660e\u4f60\u5728\u6784\u5efa\u4e2d\u505a\u4e86\u4e00\u4e9b\u65e0\u7528\u7684\u5de5\u4f5c\u3002 foreach ( i, mylist ) { print ( i ) # Note: i is a copy of each element, not a reference to it. } 2.5 \u51fd\u6570\u8c03\u7528 \u7b80\u5355\u7684\u51fd\u6570\u8c03\u7528\u770b\u8d77\u6765\u50cf\u5927\u591a\u6570\u5176\u4ed6\u7684\u8bed\u8a00\uff1a print(\u201chello, world\u201d) assert(is_win, \u201cThis should only be executed on Windows\u201d) \u8fd9\u4e9b\u529f\u80fd\u662f\u5185\u7f6e\u7684\uff0c\u7528\u6237\u4e0d\u80fd\u5b9a\u4e49\u65b0\u7684\u529f\u80fd\u3002 \u4e00\u4e9b\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u7531{}\u62ec\u8d77\u6765\u7684\u4ee3\u7801\u5757\uff1a static_library( mylibrary ) { sources = [ a.cc ] } \u5176\u4e2d\u5927\u591a\u6570\u5b9a\u4e49\u76ee\u6807\u3002 \u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8ba8\u8bba\u7684\u6a21\u677f\u673a\u5236\u6765\u5b9a\u4e49\u8fd9\u6837\u7684functions\u3002 \u786e\u5207\u5730\u8bf4\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u610f\u5473\u7740\u8be5\u5757\u53d8\u6210\u7528\u4e8e\u51fd\u6570\u6267\u884c\u7684\u51fd\u6570\u7684\u53c2\u6570\u3002 \u5927\u591a\u6570\u5757\u98ce\u683c\u51fd\u6570\u6267\u884c\u5757\u5e76\u5c06\u7ed3\u679c\u4f5c\u4e3a\u8981\u8bfb\u53d6\u7684\u53d8\u91cf\u7684\u5b57\u5178\u3002 2.6 \u4f5c\u7528\u57df\u548c\u6267\u884c \u6587\u4ef6\u548c\u51fd\u6570\u8c03\u7528\u540e\u8ddf{}\u5757\u5c06\u5f15\u5165\u65b0\u4f5c\u7528\u57df\u3002 \u4f5c\u7528\u57df\u662f\u5d4c\u5957\u7684\u3002 \u5f53\u4f60\u8bfb\u53d6\u53d8\u91cf\u65f6\uff0c\u5c06\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u641c\u7d22\u5305\u542b\u7684\u4f5c\u7528\u57df\uff0c\u76f4\u5230\u627e\u5230\u5339\u914d\u7684\u540d\u79f0\u3002 \u53d8\u91cf\u5199\u5165\u59cb\u7ec8\u4f4d\u4e8e\u6700\u5185\u5c42\u3002 \u6ca1\u6709\u529e\u6cd5\u4fee\u6539\u9664\u6700\u5185\u5c42\u4e4b\u5916\u7684\u4efb\u4f55\u5c01\u95ed\u4f5c\u7528\u57df\u3002 \u8fd9\u610f\u5473\u7740\uff0c\u5f53\u4f60\u5b9a\u4e49\u4e00\u4e2a\u76ee\u6807\uff0c\u4f8b\u5982\uff0c\u4f60\u5728\u5757\u91cc\u9762\u505a\u7684\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u201c\u6cc4\u6f0f\u201d\u5230\u6587\u4ef6\u7684\u5176\u4f59\u90e8\u5206\u3002 if/else/foreach\u8bed\u53e5\uff0c\u5373\u4f7f\u4ed6\u4eec\u4f7f\u7528{}\uff0c\u4e0d\u4f1a\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\uff0c\u6240\u4ee5\u66f4\u6539\u4f1a\u5f71\u54cd\u5230\u8bed\u53e5\u4e4b\u5916\u3002 \u547d\u540d 3.1\u6587\u4ef6\u548c\u76ee\u5f55\u540d \u6587\u4ef6\u548c\u76ee\u5f55\u540d\u79f0\u662f\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u88ab\u89e3\u91ca\u4e3a\u76f8\u5bf9\u4e8e\u5f53\u524d\u6784\u5efa\u6587\u4ef6\u7684\u76ee\u5f55\u3002 \u6709\u4e09\u79cd\u53ef\u80fd\u7684\u5f62\u5f0f\uff1a \u76f8\u5bf9\u540d\u79f0\uff1a \u201cfoo.cc\u201d \u201cSRC/foo.cc\u201d \u201c../src/foo.cc\u201d Source-tree\u7edd\u5bf9\u540d\u79f0\uff1a \u201c//net/foo.cc\u201d \u201c//base/test/foo.cc\u201d \u7cfb\u7edf\u7edd\u5bf9\u540d\u79f0\uff08\u5f88\u5c11\uff0c\u901a\u5e38\u7528\u4e8e\u5305\u542b\u76ee\u5f55\uff09\uff1a /usr/local/include/ /C:/Program Files/Windows Kits/Include 3.2 \u6807\u8bc6 \u6807\u8bc6\u662f\u6709\u7740\u9884\u5b9a\u4e49\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4f9d\u8d56\u56fe\u4e2d\u6240\u6709\u7684\u5143\u7d20\uff08\u76ee\u6807\uff0c\u914d\u7f6e\u548c\u5de5\u5177\u94fe\uff09\u90fd\u7531\u6807\u8bc6\u552f\u4e00\u8bc6\u522b\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6807\u8bc6\u770b\u53bb\u662f\u4ee5\u4e0b\u6837\u5b50\u3002 \"\u5b83\u7531\u4e09\u90e8\u5206\u7ec4\u6210 source-tree\u7edd\u5bf9\u8def\u5f84 \u5192\u53f7 \u540d\u79f0 \u4e0a\u9762\u8fd9\u4e2a\u6807\u8bc6\u6307\u793a\u5230/base/test/BUILD.gn\u4e2d\u67e5\u627e\u540d\u79f0\u662f\u201ctest_support\u201d\u7684\u6807\u8bc6\u3002 \u5f53\u52a0\u8f7d\u6784\u5efa\u6587\u4ef6\u65f6\uff0c\u5982\u679c\u5728\u76f8\u5bf9\u4e8esource root\u7ed9\u5b9a\u7684\u8def\u5f84\u4e0d\u5b58\u5728\u65f6\uff0cGN\u5c06\u67e5\u627ebuild/secondary\u4e2d\u7684\u8f85\u52a9\u6811\u3002\u8be5\u6811\u7684\u955c\u50cf\u7ed3\u6784\u4e3b\u5b58\u50a8\u5e93\u662f\u4e00\u79cd\u4ece\u5176\u5b83\u5b58\u50a8\u5e93\u6dfb\u52a0\u6784\u5efa\u6587\u4ef6\u7684\u65b9\u5f0f\uff08\u90a3\u4e9b\u6211\u4eec\u65e0\u6cd5\u7b80\u5355\u5730\u5408\u5165BUILD\u6587\u4ef6\uff09 \u8f85\u52a9\u6811\u53ea\u662f\u5907\u7528\u800c\u4e0d\u662f\u8986\u76d6\uff0c\u56e0\u6b64\u6b63\u5e38\u4f4d\u7f6e\u4e2d\u7684\u6587\u4ef6\u59cb\u7ec8\u4f18\u5148\u3002 \u5b8c\u6574\u7684\u6807\u8bc6\u8fd8\u5305\u62ec\u5904\u7406\u8be5\u6807\u8bc6\u8981\u4f7f\u7528\u7684\u5de5\u5177\u94fe\u3002\u5de5\u5177\u94fe\u901a\u5e38\u662f\u4ee5\u7ee7\u627f\u7684\u65b9\u5f0f\u88ab\u9ed8\u8ba4\u6307\u5b9a\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u663e\u793a\u6307\u5b9a\u3002 \u201c//base/test:test_support(//build/toolchain/win:msvc)\u201d \u4e0a\u9762\u8fd9\u4e2a\u6807\u8bc6\u4f1a\u53bb\u201c//build/toolchain/win\u201d\u6587\u4ef6\u67e5\u5230\u540d\u53eb\u201dmsvc\u201d\u7684\u5de5\u5177\u94fe\u5b9a\u4e49\uff0c\u90a3\u4e2a\u5b9a\u4e49\u4f1a\u77e5\u9053\u5982\u4f55\u5904\u7406\u201ctest_support\u201d\u8fd9\u4e2a\u6807\u8bc6\u3002 \u5982\u679c\u4f60\u6307\u5411\u7684\u6807\u8bc6\u5c31\u5728\u6b64\u4e2abuild\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u7701\u7565\u8def\u5f84\uff0c\u800c\u53ea\u662f\u4ece\u5192\u53f7\u5f00\u59cb\u3002 \u201c:base\u201d \u4f60\u53ef\u4ee5\u4ee5\u76f8\u5bf9\u4e8e\u5f53\u524d\u76ee\u5f55\u7684\u65b9\u5f0f\u6307\u5b9a\u8def\u5f84\u3002\u6807\u51c6\u4e0a\u8bf4\uff0c\u8981\u5f15\u7528\u975e\u672c\u6587\u4ef6\u4e2d\u6807\u8bc6\u65f6\uff0c\u9664\u4e86\u5b83\u8981\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u8fd0\u884c\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u3002\u4ec0\u4e48\u662f\u8981\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u8fd0\u884c\uff1f\u4e3e\u4e2a\u5217\u5b50\uff0c\u4e00\u4e2a\u9879\u76ee\u5b83\u65e2\u8981\u80fd\u6784\u9020\u72ec\u7acb\u7248\u672c\uff0c\u53c8\u53ef\u80fd\u662f\u5176\u5b83\u9879\u76ee\u7684\u5b50\u6a21\u5757\u3002 \u201csource/plugin:myplugin\u201d # Prefer not to do these. \u201c../net:url_request\u201d \u4e66\u5199\u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u6807\u8bc6\u7684\u7b2c\u4e8c\u90e8\u5206\u3001\u7b2c\u4e09\u90e8\u5206\uff0c\u5373\u5192\u53f7\u548c\u540d\u79f0\uff0c\u8fd9\u65f6\u540d\u79f0\u9ed8\u8ba4\u4f7f\u7528\u76ee\u5f55\u7684\u6700\u540e\u4e00\u6bb5\u3002\u6807\u51c6\u4e0a\u8bf4\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u5efa\u8bae\u7701\u7565\u7b2c\u4e8c\u3001\u4e09\u90e8\u5206\u3002\uff08\u4ee5\u4e0b\u7684\u201c=\u201d\u8868\u793a\u7b49\u540c\uff09 \u201c//net\u201d = \u201c//net:net\u201d \u201c//tools/gn\u201d = \u201c//tools/gn:gn\u201d \u6784\u5efa\u914d\u7f6e 4.1 \u603b\u4f53\u6784\u5efa\u6d41\u7a0b \u5728\u5f53\u524d\u76ee\u5f55\u67e5\u627e.gn\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u5411\u4e0a\u4e00\u7ea7\u76ee\u5f55\u67e5\u627e\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u3002\u5c06\u8fd9\u4e2a\u76ee\u5f55\u8bbe\u4e3a\u201dsouce root\u201d, \u89e3\u6790\u8be5\u76ee\u5f55\u4e0b\u7684gn\u6587\u4ef6\u4ee5\u83b7\u53d6build confing\u6587\u4ef6\u540d\u79f0\u3002 \u6267\u884cbuild config\u6587\u4ef6\uff08\u8fd9\u662f\u4e00\u4e2a\u9ed8\u8ba4\u5de5\u5177\u94fe\uff09\uff0c\u5728chromium\u4e2d\u662f//build/config/BUILDCONFIG.gn; \u52a0\u8f7droot\u76ee\u5f55\u4e0b\u7684BUILD.gn\u6587\u4ef6; \u6839\u636eroot\u76ee\u5f55\u4e0b\u7684BUILD.gn\u5185\u5bb9\u52a0\u8f7d\u5176\u4f9d\u8d56\u7684\u5176\u5b83\u76ee\u5f55\u4e0b\u7684BUILD.gn\u6587\u4ef6\uff0c\u5982\u679c\u5728\u6307\u5b9a\u4f4d\u7f6e\u627e\u4e0d\u5230\u4e00\u4e2agn\u6587\u4ef6\uff0cGN\u5c06\u67e5\u627e build/secondary \u7684\u76f8\u5e94\u4f4d\u7f6e\uff1b \u5f53\u4e00\u4e2a\u76ee\u6807\u7684\u4f9d\u8d56\u90fd\u89e3\u51b3\u4e86\uff0c\u7f16\u8bd1\u51fa.ninja\u6587\u4ef6\u4fdd\u5b58\u5230out_dir/dir\uff0c\u4f8b\u5982./out/arm/obj/ui/web_dialogs/web_dialogs.ninja; \u5f53\u6240\u6709\u7684\u76ee\u6807\u90fd\u89e3\u51b3\u4e86\uff0c \u7f16\u8bd1\u51fa\u4e00\u4e2a\u6839 build.ninja \u6587\u4ef6\u5b58\u653e\u5728out_dir\u6839\u76ee\u5f55\u4e0b\u3002 4.2 \u6784\u5efa\u914d\u7f6e\u6587\u4ef6 \u7b2c\u4e00\u4e2a\u8981\u6267\u884c\u7684\u662f\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u5728\u6307\u793a\u6e90\u7801\u5e93\u6839\u76ee\u5f55\u7684\u201c.gn\u201d\u6587\u4ef6\u4e2d\u6307\u5b9a\u3002Flutter Engine\u6e90\u7801\u6811\u4e2d\u8be5\u6587\u4ef6\u662f\u201c//build/config/BUILDCONFIG.gn\u201d\u3002\u6574\u4e2a\u7cfb\u7edf\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u914d\u7f6e\u6587\u4ef6\u3002 \u9664\u8bbe\u7f6e\u5176\u5b83build\u6587\u4ef6\u6267\u884c\u65f6\u7684\u5de5\u4f5c\u57df\u5916\uff0c\u8be5\u6587\u4ef6\u8fd8\u8bbe\u7f6e\u53c2\u6570\u3001\u53d8\u91cf\u3001\u9ed8\u8ba4\u503c\uff0c\u7b49\u7b49\u3002\u8bbe\u7f6e\u5728\u8be5\u6587\u4ef6\u7684\u503c\u5bf9\u6240\u6709build\u6587\u4ef6\u53ef\u89c1\u3002 \u6bcf\u4e2a\u5de5\u5177\u94fe\u4f1a\u6267\u884c\u4e00\u6b21\u8be5\u6587\u4ef6\uff08\u89c1\u201c\u5de5\u5177\u94fe\u201d\uff09\u3002 4.3 \u6784\u5efa\u53c2\u6570 \u53c2\u6570\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\uff08\u548c\u5176\u4ed6\u5de5\u5177\u94fe\uff0c\u53c2\u89c1\u4e0b\u9762\u7684\u201c\u5de5\u5177\u94fe\u201d\uff09\u4f20\u5165\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7declare_args\u58f0\u660e\u63a5\u53d7\u54ea\u4e9b\u53c2\u6570\u548c\u6307\u5b9a\u9ed8\u8ba4\u503c\u3002 \u6709\u5173\u53c2\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8bf7\u53c2\u9605gn help buildargs\u3002 \u6709\u5173\u58f0\u660e\u5b83\u4eec\u7684\u7ec6\u8282\uff0c\u8bf7\u53c2\u9605gn help declare_args\u3002 \u5728\u7ed9\u5b9a\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\u7ed9\u5b9a\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u9519\u8bef\u3002 \u901a\u5e38\uff0c\u53c2\u6570\u5c06\u5728\u5bfc\u5165\u6587\u4ef6\u4e2d\u58f0\u660e\uff08\u5728\u6784\u5efa\u7684\u67d0\u4e9b\u5b50\u96c6\u4e4b\u95f4\u5171\u4eab\u5b83\u4eec\uff09\u6216\u5728\u4e3b\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u4e2d\uff08\u4f7f\u5b83\u4eec\u662f\u5168\u5c40\u7684\uff09\u3002 4.4 \u9ed8\u8ba4\u76ee\u6807 \u60a8\u53ef\u4ee5\u4e3a\u7ed9\u5b9a\u7684\u76ee\u6807\u7c7b\u578b\u8bbe\u7f6e\u4e00\u4e9b\u9ed8\u8ba4\u503c\u3002 \u8fd9\u901a\u5e38\u5728\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b8c\u6210\uff0c\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u914d\u7f6e\u5217\u8868\uff0c\u5b83\u5b9a\u4e49\u6bcf\u4e2a\u76ee\u6807\u7c7b\u578b\u7684\u6784\u5efa\u6807\u5fd7\u548c\u5176\u4ed6\u8bbe\u7f6e\u4fe1\u606f\u3002 \u8bf7\u53c2\u9605gn help set_defaults\u3002 \u4f8b\u5982\uff0c\u5f53\u60a8\u58f0\u660estatic_library\u65f6\uff0c\u5c06\u5e94\u7528\u9759\u6001\u5e93\u7684\u76ee\u6807\u9ed8\u8ba4\u503c\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7531\u76ee\u6807\u8986\u76d6\uff0c\u4fee\u6539\u6216\u4fdd\u7559\u3002 #This call is typically in the build config file (see above). set_defaults ( static_library ) { configs = [ //build:rtti_setup , //build:extra_warnings ] } # This would be in your directory s BUILD.gn file. static_library ( mylib ) { # At this point configs is set to [ //build:rtti_setup , //build:extra_warnings ] # by default but may be modified. configs - = //build:extra_warnings # Don t want these warnings. configs += :mylib_config # Add some more configs. } \u7528\u4e8e\u8bbe\u7f6e\u76ee\u6807\u9ed8\u8ba4\u503c\u7684\u5176\u4ed6\u7528\u4f8b\u662f\uff0c\u5f53\u60a8\u901a\u8fc7\u6a21\u677f\u5b9a\u4e49\u81ea\u5df1\u7684\u76ee\u6807\u7c7b\u578b\u5e76\u60f3\u8981\u6307\u5b9a\u67d0\u4e9b\u9ed8\u8ba4\u503c\u3002 \u76ee\u6807 \u76ee\u6807\u662f\u6784\u9020\u8868\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u901a\u5e38\u7528\u4e8e\u8868\u793a\u67d0\u4e2a\u8981\u4ea7\u751f\u7684\u53ef\u6267\u884c\u6216\u5e93\u6587\u4ef6\u3002\u76ee\u6807\u7ecf\u5e38\u4f1a\u4f9d\u8d56\u5176\u5b83\u76ee\u6807\uff0c\u4ee5\u4e0b\u662f\u5185\u7f6e\u7684\u76ee\u6807\u7c7b\u578b\uff08\u53c2\u8003gn help \uff09\uff1a gn help action\uff1a\u8fd0\u884c\u4e00\u4e2a\u811a\u672c\u6765\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\u3002 action_foreach\uff1a\u5faa\u73af\u8fd0\u884c\u811a\u672c\u4f9d\u6b21\u4ea7\u751f\u6587\u4ef6\u3002 bundle_data\uff1a\u4ea7\u751f\u8981\u52a0\u5165Mac/iOS\u5305\u7684\u6570\u636e\u3002 create_bundle\uff1a\u4ea7\u751fMac/iOS\u5305\u3002 executable\uff1a\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002 group\uff1a\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u76ee\u6807\u7684\u865a\u62df\u8282\u70b9\uff08\u76ee\u6807\uff09\u3002 shared_library\uff1a\u4e00\u4e2a.dll\u6216\u7684.so\u3002 loadable_module\uff1a\u4e00\u4e2a\u53ea\u7528\u4e8e\u8fd0\u884c\u65f6\u7684.dll\u6216.so\u3002 source_set\uff1a\u4e00\u4e2a\u8f7b\u91cf\u7684\u865a\u62df\u9759\u6001\u5e93\uff08\u901a\u5e38\u6307\u5411\u4e00\u4e2a\u771f\u5b9e\u9759\u6001\u5e93\uff09\u3002 static_library\uff1a\u4e00\u4e2a\u7684.lib\u6216\u67d0\u6587\u4ef6\uff08\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f60\u4f1a\u60f3\u8981\u4e00\u4e2asource_set\u4ee3\u66ff\uff09\u3002 \u4f60\u53ef\u4ee5\u7528\u6a21\u677f\uff08templates\uff09\u6765\u6269\u5c55\u53ef\u4f7f\u7528\u7684\u76ee\u6807\u3002Flutter Engine\u5c31\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u7c7b\u578b\u3002 component\uff1a\u57fa\u4e8e\u6784\u9020\u7c7b\u578b\uff0c\u6216\u662f\u6e90\u6587\u4ef6\u96c6\u5408\u6216\u662f\u5171\u4eab\u5e93\u3002 test\uff1a\u53ef\u6267\u884c\u6d4b\u8bd5\u3002\u5728\u79fb\u52a8\u5e73\u53f0\uff0c\u5b83\u7528\u4e8e\u521b\u5efa\u6d4b\u8bd5\u539f\u751fapp\u3002 app\uff1a\u53ef\u6267\u884c\u7a0b\u5e8f\u6216Mac/iOS\u5e94\u7528\u3002 android_apk\uff1a\u751f\u6210\u4e00\u4e2aAPK\u3002\u6709\u8bb8\u591aAndroid\u5e94\u7528\uff0c\u53c2\u8003//build/config/android/rules.gni\u3002 CONFIGS \u914d\u7f6e\u662f\u6307\u5b9a\u6807\u5fd7\u96c6\uff0c\u5305\u542b\u76ee\u5f55\u548c\u5b9a\u4e49\u7684\u547d\u540d\u5bf9\u8c61\u3002 \u5b83\u4eec\u53ef\u4ee5\u5e94\u7528\u4e8e\u76ee\u6807\u5e76\u63a8\u9001\u5230\u4f9d\u8d56\u76ee\u6807\u3002 config ( myconfig ) { includes = [ src/include ] defines = [ ENABLE_DOOM_MELON ] } \u5c06\u914d\u7f6e\u5e94\u7528\u4e8e\u76ee\u6807\uff1a executable ( doom_melon ) { configs = [ :myconfig ] } build config\u6587\u4ef6\u901a\u5e38\u6307\u5b9a\u8bbe\u7f6e\u9ed8\u8ba4\u914d\u7f6e\u5217\u8868\u7684\u76ee\u6807\u9ed8\u8ba4\u503c\u3002 \u6839\u636e\u9700\u8981\uff0c\u76ee\u6807\u53ef\u4ee5\u6dfb\u52a0\u6216\u5220\u9664\u5230\u6b64\u5217\u8868\u3002 \u6240\u4ee5\u5728\u5b9e\u8df5\u4e2d\uff0c\u4f60\u901a\u5e38\u4f7f\u7528configs + =\u201c\uff1amyconfig\u201d\u9644\u52a0\u5230\u9ed8\u8ba4\u5217\u8868\u3002 \u6709\u5173\u5982\u4f55\u58f0\u660e\u548c\u5e94\u7528\u914d\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605gn help config\u3002 \u516c\u5171CONFIGS \u76ee\u6807\u53ef\u4ee5\u5c06\u8bbe\u7f6e\u5e94\u7528\u4e8e\u4f9d\u8d56\u5b83\u7684\u76ee\u6807\u3002 \u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u7b2c\u4e09\u65b9\u76ee\u6807\uff0c\u5b83\u9700\u8981\u4e00\u4e9b\u5b9a\u4e49\u6216\u5305\u542b\u76ee\u5f55\u6765\u4f7f\u5176\u5934\u6587\u4ef6\u6b63\u786einclude\u3002 \u5e0c\u671b\u8fd9\u4e9b\u8bbe\u7f6e\u9002\u7528\u4e8e\u7b2c\u4e09\u65b9\u5e93\u672c\u8eab\uff0c\u4ee5\u53ca\u4f7f\u7528\u8be5\u5e93\u7684\u6240\u6709\u76ee\u6807\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8981\u5e94\u7528\u7684\u8bbe\u7f6e\u7f16\u5199config\uff1a config ( my_external_library_config ) { includes = . defines = [ DISABLE_JANK ] } \u7136\u540e\u5c06\u8fd9\u4e2a\u914d\u7f6e\u88ab\u6dfb\u52a0\u5230public_configs\u3002 \u5b83\u5c06\u5e94\u7528\u4e8e\u8be5\u76ee\u6807\u4ee5\u53ca\u76f4\u63a5\u4f9d\u8d56\u8be5\u76ee\u6807\u7684\u76ee\u6807\u3002 shared_library ( my_external_library ) { ... # Targets that depend on this get this config applied. public_configs = [ :my_external_library_config ] } \u4f9d\u8d56\u76ee\u6807\u53ef\u4ee5\u901a\u8fc7\u5c06\u4f60\u7684\u76ee\u6807\u4f5c\u4e3a\u201c\u516c\u5171\u201d\u4f9d\u8d56\u6765\u5c06\u8be5\u4f9d\u8d56\u6811\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a\u7ea7\u522b\u3002 static_library ( intermediate_library ) { ... # Targets that depend on this one also get the configs from my external library . public_deps = [ :my_external_library ] } \u76ee\u6807\u53ef\u4ee5\u5c06\u914d\u7f6e\u8f6c\u53d1\u5230\u6240\u6709\u4f9d\u8d56\u9879\uff0c\u76f4\u5230\u8fbe\u5230\u94fe\u63a5\u8fb9\u754c\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3aall_dependent_config\u3002 \u4f46\u5efa\u8bae\u4e0d\u8981\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u55b7\u6d82\u6807\u5fd7\u548c\u5b9a\u4e49\u8d85\u8fc7\u5fc5\u8981\u7684\u66f4\u591a\u7684\u6784\u5efa\u3002 \u76f8\u53cd\uff0c\u4f7f\u7528public_deps\u63a7\u5236\u54ea\u4e9b\u6807\u5fd7\u9002\u7528\u4e8e\u54ea\u91cc\u3002 \u5728Flutter Engine\u4e2d\uff0c\u66f4\u559c\u6b22\u4f7f\u7528\u6784\u5efa\u6807\u5fd7\u5934\u7cfb\u7edf\uff08build/buildflag_header.gni\uff09\u6765\u9632\u6b62\u7f16\u8bd1\u5668\u5b9a\u4e49\u5bfc\u81f4\u7684\u5927\u591a\u6570\u7f16\u8bd1\u9519\u8bef\u3002 \u5de5\u5177\u94fe Toolchains \u662f\u4e00\u7ec4\u6784\u5efa\u547d\u4ee4\u6765\u8fd0\u884c\u4e0d\u540c\u7c7b\u578b\u7684\u8f93\u5165\u6587\u4ef6\u548c\u94fe\u63a5\u7684\u4efb\u52a1\u3002 \u53ef\u4ee5\u8bbe\u7f6e\u6709\u591a\u4e2a Toolchains \u7684 build\u3002 \u4e0d\u8fc7\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u6bcf\u4e2a toolchains \u5206\u5f00 build\u540c\u65f6\u5728\u4ed6\u4eec\u4e4b\u95f4\u52a0\u4e0a\u4f9d\u8d56\u5173\u7cfb\u3002 \u8fd9\u610f\u5473\u7740,\u4f8b\u5982,32 \u4f4d Windows \u5efa\u7acb\u53ef\u80fd\u53d6\u51b3\u4e8e\u4e00\u4e2a 64 \u4f4d\u52a9\u624b\u7684 target\u3002 \u4ed6\u4eec\u6bcf\u4e2a\u53ef\u4ee5\u4f9d\u8d56\u201c//base:base\u201d\u5c06 32 \u4f4d\u57fa\u7840\u80cc\u666f\u4e0b\u7684 32 \u4f4d\u5de5\u5177\u94fe,\u548c 64 \u4f4d\u80cc\u666f\u4e0b\u7684 64 \u4f4d\u5de5\u5177\u94fe\u3002 \u5f53 target \u6307\u5b9a\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a target,\u5f53\u524d\u7684 toolchains \u662f\u7ee7\u627f\u7684,\u9664\u975e\u5b83\u662f\u660e\u786e\u8986\u76d6(\u8bf7\u53c2\u89c1\u4e0a\u9762\u7684\u201cLabels\u201d)\u3002 7.1 \u5de5\u5177\u94fe\u548c\u6784\u5efa\u914d\u7f6e \u5f53\u4f60\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u7248\u672c\u53ea\u6709\u4e00\u4e2a toolchain\uff0cbuild config \u6587\u4ef6\u662f\u5728\u6784\u5efa\u4e4b\u521d\u53ea\u52a0\u8f7d\u4e00\u6b21\u3002\u5b83\u5fc5\u987b\u8c03\u7528 set_default_toolchain \u544a\u8bc9 GN toolchain \u5b9a\u4e49\u7684 label \u6807\u7b7e\u3002 \u6b64 toolchain \u5b9a\u4e49\u4e86\u9700\u8981\u7528\u7684\u7f16\u8bd1\u5668\u548c\u8fde\u63a5\u5668\u7684\u547d\u4ee4\u3002 toolchain \u5b9a\u4e49\u7684 toolchain_args \u88ab\u5ffd\u7565\u3002\u5f53 target \u5bf9\u4f7f\u7528\u4e0d\u540c\u7684 toolchain target \u7684\u4f9d\u8d56\uff0c GN \u5c06\u4f7f\u7528\u8f85\u52a9\u5de5\u5177\u94fe\u6765\u89e3\u51b3\u76ee\u6807\u5f00\u59cb\u6784\u5efa\u3002 GN \u5c06\u52a0\u8f7d\u4e0e\u5de5\u5177\u94fe\u5b9a\u4e49\u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u3002 \u7531\u4e8e\u5de5\u5177\u94fe\u5df2\u7ecf\u77e5\u9053\uff0c \u8c03\u7528 set_default_toolchain \u5c06\u88ab\u5ffd\u7565\u3002\u6240\u4ee5 oolchain configuration \u7ed3\u6784\u662f\u53cc\u5411\u7684\u3002 \u5728\u9ed8\u8ba4\u7684 toolchain\uff08\u5373\u4e3b\u8981\u7684\u6784\u5efa target\uff09\u7684\u914d\u7f6e\u4ece\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u7684\u5de5\u5177\u94fe\u6d41\u5411\uff1a \u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u7740\u773c\u4e8e\u6784\u5efa\uff08\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\uff0c CPU \u67b6\u6784\u7b49\uff09\u7684\u72b6\u6001\uff0c \u5e76\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e9b toolchain\uff08\u901a\u8fc7 set_default_toolchin\uff09\u3002 \u5728\u4e8c\u6b21 toolchain\uff0c\u914d\u7f6e\u4ece toolchain \u6d41\u5411\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\uff1a\u5728 toolchain \u5b9a\u4e49 toolchain_args \u6307\u5b9a\u7684\u53c2\u6570\u91cd\u65b0\u8c03\u7528\u6784\u5efa\u3002 7.2 \u5de5\u5177\u94fe\u4f8b\u5b50 \u5047\u8bbe\u9ed8\u8ba4\u7684\u6784\u5efa\u662f\u4e00\u4e2a 64 \u4f4d\u7248\u672c\u3002 \u65e0\u8bba\u8fd9\u662f\u6839\u636e\u5f53\u524d\u7cfb\u7edf\u9ed8\u8ba4\u7684 CPU \u67b6\u6784\uff0c \u6216\u8005\u7528\u6237\u5728\u547d\u4ee4\u884c\u4e0a\u4f20\u9012 target_cpu=\u201c64\u201d\u3002 build config file \u5e94\u8be5\u50cf\u8fd9\u6837\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5de5\u5177\u94fe\uff1a # Set default toolchain only has an effect when run in the context of # the default toolchain. Pick the right one according to the current CPU # architecture. if ( target_cpu == x64 ) { set_default_toolchain ( //toolchains:64 ) } else if ( target_cpu == x86 ) { set_default_toolchain ( //toolchains:32 ) } \u5982\u679c\u4e00\u4e2a 64 \u4f4d\u7684 target \u8981\u4f9d\u9760\u4e00\u4e2a 32 \u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c \u5b83\u4f1a\u4f7f\u7528 data_deps \u6307\u5b9a\u7684\u4f9d\u8d56\u5173\u7cfb\uff08data_deps \u4f9d\u8d56\u5e93\u5728\u8fd0\u884c\u65f6\u624d\u9700\u8981\u94fe\u63a5\u65f6\u4e0d\u9700\u8981\uff0c \u56e0\u4e3a\u4f60\u4e0d\u80fd\u76f4\u63a5\u94fe\u63a5 32 \u4f4d\u548c 64\u4f4d\u7684\u5e93\uff09\u3002 executable ( my_program ) { ... if ( target_cpu == x64 ) { # The 64-bit build needs this 32-bit helper. data_deps = [ :helper(//toolchains:32) ] } } if ( target_cpu == x86 ) { # Our helper library is only compiled in 32-bits. shared_library ( helper ) { ... } } \u4e0a\u8ff0\uff08\u5f15\u7528\u7684\u5de5\u5177\u94fe\u6587\u4ef6toolchains/BUILD.gn\uff09\u5c06\u5b9a\u4e49\u4e24\u4e2a\u5de5\u5177\u94fe\uff1a toolchain ( 32 ) { tool ( cc ) { ... } ... more tools ... # Arguments to the build when re-invoking as a secondary toolchain. toolchain_args = { current_cpu = x86 } } toolchain ( 64 ) { tool ( cc ) { ... } ... more tools ... # Arguments to the build when re-invoking as a secondary toolchain. toolchain_args = { current_cpu = x64 } \u5de5\u5177\u94feargs\u660e\u786e\u6307\u5b9aCPU\u4f53\u7cfb\u7ed3\u6784\uff0c\u56e0\u6b64\u5982\u679c\u76ee\u6807\u4f9d\u8d56\u4e8e\u4f7f\u7528\u8be5\u5de5\u5177\u94fe\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u5728\u91cd\u65b0\u8c03\u7528\u8be5\u751f\u6210\u65f6\uff0c\u5c06\u8bbe\u7f6e\u8be5cpu\u4f53\u7cfb\u7ed3\u6784\u3002 \u8fd9\u4e9b\u53c2\u6570\u88ab\u5ffd\u7565\u4e3a\u9ed8\u8ba4\u5de5\u5177\u94fe\uff0c\u56e0\u4e3a\u5f53\u4ed6\u4eec\u77e5\u9053\u7684\u65f6\u5019\uff0c\u6784\u5efa\u914d\u7f6e\u5df2\u7ecf\u8fd0\u884c\u3002 \u901a\u5e38\uff0c\u5de5\u5177\u94feargs\u548c\u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u5de5\u5177\u94fe\u7684\u6761\u4ef6\u5e94\u8be5\u4e00\u81f4\u3002 \u6709\u5173\u591a\u7248\u672c\u8bbe\u7f6e\u7684\u597d\u5904\u662f\uff0c \u4f60\u53ef\u4ee5\u5199\u4f60\u7684\u76ee\u6807\u6761\u4ef6\u8bed\u53e5\u6765\u5f15\u7528\u5f53\u524d toolchain \u7684\u72b6\u6001\u3002\u6784\u5efa\u6587\u4ef6\u5c06\u6839\u636e\u6bcf\u4e2a toolchain \u4e0d\u540c\u7684\u72b6\u6001\u91cd\u65b0\u8fd0\u884c\u3002 \u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50 my_program\uff0c \u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u67e5\u8be2 CPU \u67b6\u6784\uff0c \u52a0\u5165\u4e86\u53ea\u4f9d\u8d56\u8be5\u7a0b\u5e8f\u7684 64 \u4f4d\u7248\u672c\u3002 32 \u4f4d\u7248\u672c\u4fbf\u4e0d\u4f1a\u5f97\u5230\u8fd9\u79cd\u4f9d\u8d56\u6027\u3002 7.3 \u58f0\u660e\u5de5\u5177\u94fe \u5de5\u5177\u94fe\u5747\u4f7f\u7528 toolchain \u7684\u547d\u4ee4\u58f0\u660e\uff0c \u5b83\u7684\u547d\u4ee4\u7528\u4e8e\u6bcf\u4e2a\u7f16\u8bd1\u548c\u94fe\u63a5\u64cd\u4f5c\u3002 \u8be5toolchain \u5728\u6267\u884c\u65f6\u8fd8\u6307\u5b9a\u4e00\u7ec4\u53c2\u6570\u4f20\u9012\u5230 build config \u6587\u4ef6\u3002 \u8fd9\u4f7f\u60a8\u53ef\u4ee5\u914d\u7f6e\u4fe1\u606f\u4f20\u9012\u7ed9\u5907\u7528 toolchain\u3002 \u6a21\u677f \u6a21\u677f\u662f GN \u91cd\u590d\u4f7f\u7528\u4ee3\u7801\u7684\u4e3b\u8981\u65b9\u5f0f\u3002 \u901a\u5e38\uff0c \u6a21\u677f\u4f1a\u6269\u5c55\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u5176\u4ed6\u76ee\u6807\u7c7b\u578b\u3002 # Declares a script that compiles IDL files to source, and then compiles those # source files. template ( idl ) { # Always base helper targets on target_name so they re unique. Target name # will be the string passed as the name when the template is invoked. idl_target_name = ${ target_name } _generate action_foreach ( idl_target_name ) { ... } # Your template should always define a target with the name target_name. # When other targets depend on your template invocation, this will be the # destination of that dependency. source_set ( target_name ) { ... deps = [ : $idl_target_name ] # Require the sources to be compiled. } } \u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u7684\u6a21\u677f\u5b9a\u4e49\u5728\u4e00\u4e2a.gni \u6587\u4ef6\u4e2d\uff0c \u7528\u6237 import \u8be5\u6587\u4ef6\u770b\u5230\u6a21\u677f\u7684\u5b9a\u4e49\uff1a import ( //tools/idl_compiler.gni ) idl ( my_interfaces ) { sources = [ a.idl , b.idl ] } \u58f0\u660e\u6a21\u677f\u4f1a\u5728\u5f53\u65f6\u5728\u8303\u56f4\u5185\u7684\u53d8\u91cf\u5468\u56f4\u521b\u5efa\u4e00\u4e2a\u95ed\u5305\u3002 \u5f53\u8c03\u7528\u6a21\u677f\u65f6\uff0c\u9b54\u672f\u53d8\u91cf\u8c03\u7528\u5668\u7528\u4e8e\u4ece\u8c03\u7528\u4f5c\u7528\u57df\u8bfb\u53d6\u53d8\u91cf\u3002 \u6a21\u677f\u901a\u5e38\u5c06\u5176\u611f\u5174\u8da3\u7684\u503c\u590d\u5236\u5230\u5176\u81ea\u5df1\u7684\u8303\u56f4\u4e2d\uff1a template ( idl ) { source_set ( target_name ) { sources = invoker.sources } } \u6a21\u677f\u6267\u884c\u65f6\u7684\u5f53\u524d\u76ee\u5f55\u5c06\u662f\u8c03\u7528\u6784\u5efa\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u6a21\u677f\u6e90\u6587\u4ef6\u3002 \u8fd9\u662f\u4ece\u6a21\u677f\u8c03\u7528\u5668\u4f20\u9012\u7684\u6587\u4ef6\u5c06\u662f\u6b63\u786e\u7684\uff08\u8fd9\u901a\u5e38\u8bf4\u660e\u5927\u591a\u6570\u6587\u4ef6\u5904\u7406\u6a21\u677f\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u6a21\u677f\u672c\u8eab\u6709\u6587\u4ef6\uff08\u4e5f\u8bb8\u5b83\u751f\u6210\u4e00\u4e2a\u8fd0\u884c\u811a\u672c\u7684\u52a8\u4f5c\uff09\uff0c\u4f60\u5c06\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff08\u201c// foo / \u2026\u201d\uff09\u6765\u5f15\u7528\u8fd9\u4e9b\u6587\u4ef6\uff0c \u5f53\u524d\u76ee\u5f55\u5728\u8c03\u7528\u671f\u95f4\u5c06\u4e0d\u53ef\u9884\u6d4b\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\u548c\u66f4\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605gn\u5e2e\u52a9\u6a21\u677f\u3002 \u5176\u4ed6\u529f\u80fd 9.1 Imports \u60a8\u53ef\u4ee5 import .gni \u6587\u4ef6\u5230\u5f53\u524d\u6587\u4ef6\u4e2d\u3002 \u8fd9\u4e0d\u662f C++\u4e2d\u7684 include\u3002 Import \u7684\u6587\u4ef6\u5c06\u72ec\u7acb\u6267\u884c\u5e76\u5c06\u6267\u884c\u7684\u7ed3\u679c\u590d\u5236\u5230\u5f53\u524d\u6587\u4ef6\u4e2d\uff08C ++\u6267\u884c\u7684\u65f6\u5019\uff0c \u5f53\u9047\u5230 include \u6307\u4ee4\u65f6\u624d\u4f1a\u5728\u5f53\u524d\u73af\u5883\u4e2d include \u6587\u4ef6\uff09\u3002 Import \u5141\u8bb8\u5bfc\u5165\u7684\u7ed3\u679c\u88ab\u7f13\u5b58\uff0c \u5e76\u4e14\u8fd8\u9632\u6b62\u4e86\u4e00\u4e9b\u201ccreative\u201d\u7684\u7528\u9014\u5305\u62ec\u50cf\u5d4c\u5957 include \u6587\u4ef6\u3002\u901a\u5e38\u4e00\u4e2a.gni \u6587\u4ef6\u5c06\u5b9a\u4e49 build \u7684\u53c2\u6570\u548c\u6a21\u677f\u3002 \u547d\u4ee4 gn help import \u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002.gni \u6587\u4ef6\u53ef\u4ee5\u5b9a\u4e49\u50cf_this \u540d\u5b57\u524d\u4f7f\u7528\u4e00\u4e2a\u4e0b\u5212\u7ebf\u7684\u4e34\u65f6\u53d8\u91cf\uff0c \u4ece\u800c\u5b83\u4e0d\u4f1a\u88ab\u4f20\u51fa\u6587\u4ef6\u5916\u3002\u3002 9.2 \u8def\u5f84\u5904\u7406 \u901a\u5e38\u4f60\u60f3\u4f7f\u4e00\u4e2a\u6587\u4ef6\u540d\u6216\u6587\u4ef6\u5217\u8868\u540d\u76f8\u5bf9\u4e8e\u4e0d\u540c\u7684\u76ee\u5f55\u3002 \u8fd9\u5728\u8fd0\u884c scripts \u65f6\u7279\u522b\u5e38\u89c1\u7684\uff0c \u5f53\u6784\u5efa\u8f93\u51fa\u76ee\u5f55\u4e3a\u5f53\u524d\u76ee\u5f55\u6267\u884c\u7684\u65f6\u5019\uff0c \u6784\u5efa\u6587\u4ef6\u901a\u5e38\u662f\u6307\u76f8\u5bf9\u4e8e\u5305\u542b\u4ed6\u4eec\u7684\u76ee\u5f55\u7684\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 rebase_path \u8f6c\u5316\u76ee\u5f55\u3002\u547d\u4ee4 gn help rebase_path \u67e5\u770b\u7ea4\u7ec6\u4fe1\u606f\u3002 9.3 \u6a21\u5f0f Patterns \u88ab\u7528\u6765\u5728\u4e00\u4e2a\u90e8\u5206\u8868\u793a\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u3002 \u547d\u4ee4\uff1a gn help set_sources_assignment_filter gn help label_pattern \u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002 9.4 \u6267\u884c\u811a\u672c \u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u6267\u884c\u811a\u672c\u3002 GN\u4e2d\u7684\u6240\u6709\u5916\u90e8\u811a\u672c\u90fd\u5728Python\u4e2d\u3002\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\u6784\u5efa\u6b65\u9aa4\u3002\u8fd9\u6837\u7684\u811a\u672c\u5c06\u9700\u8981\u4e00\u4e9b\u8f93\u5165\u5e76\u751f\u6210\u4e00\u4e9b\u8f93\u51fa\u4f5c\u4e3a\u6784\u5efa\u7684\u4e00\u90e8\u5206\u3002\u8c03\u7528\u811a\u672c\u7684\u76ee\u6807\u4f7f\u7528\u201caction\u201d\u76ee\u6807\u7c7b\u578b\u58f0\u660e\uff08\u8bf7\u53c2\u9605gn help action\uff09\u3002 \u5728\u6784\u5efa\u6587\u4ef6\u6267\u884c\u671f\u95f4\uff0c\u6267\u884c\u811a\u672c\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u540c\u6b65\u7684\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u4ee5\u786e\u5b9a\u8981\u7f16\u8bd1\u7684\u6587\u4ef6\u96c6\uff0c\u6216\u8005\u83b7\u53d6\u6784\u5efa\u6587\u4ef6\u53ef\u80fd\u4f9d\u8d56\u7684\u67d0\u4e9b\u7cfb\u7edf\u914d\u7f6e\u3002\u6784\u5efa\u6587\u4ef6\u53ef\u4ee5\u8bfb\u53d6\u811a\u672c\u7684stdout\u5e76\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5bf9\u5176\u6267\u884c\u64cd\u4f5c\u3002 \u540c\u6b65\u811a\u672c\u6267\u884c\u7531exec_script\u51fd\u6570\u5b8c\u6210\uff08\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\u548c\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605gn help exec_script\uff09\u3002\u56e0\u4e3a\u540c\u6b65\u6267\u884c\u811a\u672c\u9700\u8981\u6682\u505c\u5f53\u524d\u7684buildfile\u6267\u884c\uff0c\u76f4\u5230Python\u8fdb\u7a0b\u5b8c\u6210\u6267\u884c\uff0c\u6240\u4ee5\u4f9d\u8d56\u5916\u90e8\u811a\u672c\u5f88\u6162\uff0c\u5e94\u8be5\u6700\u5c0f\u5316\u3002 \u4e3a\u4e86\u9632\u6b62\u6ee5\u7528\uff0c\u5141\u8bb8\u8c03\u7528exec_script\u7684\u6587\u4ef6\u53ef\u4ee5\u5728toplevel .gn\u6587\u4ef6\u4e2d\u5217\u5165\u767d\u540d\u5355\u3002 Flutter Engine\u4f1a\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u9700\u8981\u5bf9\u6b64\u7c7b\u6dfb\u52a0\u8fdb\u884c\u5176\u4ed6\u4ee3\u7801\u5ba1\u6838\u3002\u8bf7\u53c2\u9605gn help dotfile\u3002 \u60a8\u53ef\u4ee5\u540c\u6b65\u8bfb\u53d6\u548c\u5199\u5165\u5728\u540c\u6b65\u8fd0\u884c\u811a\u672c\u65f6\u4e0d\u9f13\u52b1\u4f46\u5076\u5c14\u9700\u8981\u7684\u6587\u4ef6\u3002\u5178\u578b\u7684\u7528\u4f8b\u662f\u4f20\u9012\u6bd4\u5f53\u524d\u5e73\u53f0\u7684\u547d\u4ee4\u884c\u9650\u5236\u66f4\u957f\u7684\u6587\u4ef6\u540d\u5217\u8868\u3002\u6709\u5173\u5982\u4f55\u8bfb\u53d6\u548c\u5199\u5165\u6587\u4ef6\uff0c\u8bf7\u53c2\u9605gn help read_file\u548cgn help write_file\u3002\u5982\u679c\u53ef\u80fd\uff0c\u5e94\u907f\u514d\u8fd9\u4e9b\u529f\u80fd\u3002 \u8d85\u8fc7\u547d\u4ee4\u884c\u957f\u5ea6\u9650\u5236\u7684\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u54cd\u5e94\u6587\u4ef6\u6765\u89e3\u51b3\u6b64\u9650\u5236\uff0c\u800c\u4e0d\u540c\u6b65\u5199\u5165\u6587\u4ef6\u3002\u8bf7\u53c2\u9605gn help response_file_contents\u3002 \u4e0eBlaze\u7684\u533a\u522b\u548c\u76f8\u4f3c\u4e4b\u5904 Blaze\u662fGoogle\u7684\u5185\u90e8\u6784\u5efa\u7cfb\u7edf\uff0c\u73b0\u5728\u4f5c\u4e3aBazel\u516c\u5f00\u53d1\u5e03\u3002\u5b83\u542f\u53d1\u4e86\u8bb8\u591a\u5176\u4ed6\u7cfb\u7edf\uff0c\u5982Pants\u548cbuck\u3002 \u5728Google\u7684\u540c\u7c7b\u73af\u5883\u4e2d\uff0c\u5bf9\u6761\u4ef6\u7684\u9700\u6c42\u975e\u5e38\u4f4e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9bhacks\uff08abi_deps\uff09\u6765\u5b9e\u73b0\u3002 Flutter Engine\u5728\u6240\u6709\u5730\u65b9\u4f7f\u7528\u6761\u4ef6\uff0c\u9700\u8981\u6dfb\u52a0\u8fd9\u4e9b\u662f\u6587\u4ef6\u770b\u8d77\u6765\u4e0d\u540c\u7684\u4e3b\u8981\u539f\u56e0\u3002 GN\u8fd8\u6dfb\u52a0\u4e86\u201cconfigs\u201d\u7684\u6982\u5ff5\u6765\u7ba1\u7406\u4e00\u4e9b\u68d8\u624b\u7684\u4f9d\u8d56\u548c\u914d\u7f6e\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u540c\u6837\u4e0d\u4f1a\u51fa\u73b0\u5728\u670d\u52a1\u5668\u4e0a\u3002 Blaze\u6709\u4e00\u4e2a\u201c\u914d\u7f6e\u201d\u7684\u6982\u5ff5\uff0c\u5b83\u50cfGN\u5de5\u5177\u94fe\uff0c\u4f46\u5185\u7f6e\u5230\u5de5\u5177\u672c\u8eab\u3002\u5de5\u5177\u94fe\u5728GN\u4e2d\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u5c1d\u8bd5\u5c06\u8fd9\u4e2a\u6982\u5ff5\u4ee5\u5e72\u51c0\u7684\u65b9\u5f0f\u5206\u79bb\u5230\u6784\u5efa\u6587\u4ef6\u4e2d\u7684\u7ed3\u679c\u3002 GN\u4fdd\u6301\u4e00\u4e9bGYP\u6982\u5ff5\u50cf\u201c\u6240\u6709\u4f9d\u8d56\u201d\u8bbe\u7f6e\uff0c\u5728Blaze\u4e2d\u5de5\u4f5c\u65b9\u5f0f\u6709\u70b9\u4e0d\u540c\u3002\u8fd9\u90e8\u5206\u5730\u4f7f\u5f97\u4ece\u73b0\u6709GYP\u4ee3\u7801\u7684\u8f6c\u6362\u66f4\u5bb9\u6613\uff0c\u5e76\u4e14GYP\u6784\u9020\u901a\u5e38\u63d0\u4f9b\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff08\u5176\u53d6\u51b3\u4e8e\u60c5\u51b5\u662f\u597d\u8fd8\u662f\u574f\uff09\u3002 GN\u4e5f\u4f7f\u7528\u50cf\u201csources\u201d\u800c\u4e0d\u662f\u201csrcs\u201d\u7684GYP\u540d\u79f0\uff0c\u56e0\u4e3a\u7f29\u5199\u8fd9\u4f3c\u4e4e\u4e0d\u5fc5\u8981\u5730\u6a21\u7cca\uff0c\u867d\u7136\u5b83\u4f7f\u7528Blaze\u7684\u201cdeps\u201d\uff0c\u56e0\u4e3a\u201cdependencies\u201d\u5f88\u96be\u952e\u5165\u3002 Chromium\u8fd8\u5728\u4e00\u4e2a\u76ee\u6807\u4e2d\u7f16\u8bd1\u591a\u79cd\u8bed\u8a00\uff0c\u56e0\u6b64\u6307\u5b9a\u4e86\u76ee\u6807\u540d\u79f0\u524d\u7f00\u7684\u8bed\u8a00\u7c7b\u578b\uff08\u4f8b\u5982\u4ececc_library\uff09\u3002 \u603b\u7ed3 GN\u6784\u5efa\u7cfb\u7edf\u662f\u4e00\u4e2a\u7ec4\u7ec7\u6e90\u4ee3\u7801\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u4e14\u80fd\u591f\u914d\u7f6e\u7f16\u8bd1\u4e0d\u540c\u4ea7\u7269\u7684\u53c2\u6570\uff0cGN\u6784\u5efa\u7cfb\u7edf\u4f7f\u7528\u7684\u662f\u4e00\u4e2a \u987a\u85e4\u6478\u74dc \u7684\u65b9\u5f0f\u4ece\u6e90\u7801 root \u76ee\u5f55\u7684 .gn \u6587\u4ef6\u5f00\u53d1\uff0c\u4e0d\u65ad\u8bfb\u53d6\u76f8\u5173\u5173\u8054\u7684\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u4e3a\u4e0b\u4e00\u6b65\u7684\u7f16\u8bd1\u6784\u5efa\u597d\uff0c\u7f16\u8bd1\u6587\u4ef6\u4f9d\u8d56\u548c\u76f8\u5173\u7684\u53c2\u6570\u914d\u7f6e\uff0c\u4e0b\u4e00\u6b65\u624d\u662f\u6b63\u5728\u7684\u7f16\u8bd1\u5de5\u4f5c\uff0c Ninja \u5de5\u5177\u5728\u6784\u5efa\u7684\u65f6\u5019\u53ea\u4f1a\u66f4\u52a0 GN \u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u6e90\u4ee3\u7801\u67e5\u627e\u7f16\u8bd1,\u4e0b\u4e00\u7bc7\u4e2d\u6211\u4eec\u89c1\u4ecb\u7ecd\u76f8\u5173\u7684 Ninja \u811a\u672c\u6587\u4ef6 \u53c2\u8003\u8d44\u6599 GN\u5b98\u65b9\u6587\u6863 \u6e90\u4ee3\u7801\u4ed3\u5e93 How GN handles cross-compiling depot_tools_tutorial","title":"GNTools"},{"location":"android/flutter/GNTools/#flutter-engine-gn-tools","text":"","title":"Flutter Engine \u7f16\u8bd1\u4f7f\u7528 GN Tools"},{"location":"android/flutter/GNTools/#_1","text":"gn \u662f\u4e00\u6b3e\u6784\u5efa\u7cfb\u7edf\uff0c\u7528\u4e8e\u7f16\u8bd1\u5927\u89c4\u6a21\u4ee3\u7801\u751f\u6210ninja\u6587\u4ef6 \u4f18\u70b9 1.\u53ef\u8bfb\u6027\u597d 2.\u901f\u5ea6\u66f4\u5feb 3.\u4fee\u6539gn \u4e4b\u540e \u6784\u5efaninja\u6587\u4ef6\u65f6\u5019\u4f1a\u81ea\u52a8\u66f4\u65b0 4.\u4f9d\u8d56\u5206\u660e \u7ecf\u8fc7\u51e0\u5929\u7684\u6478\u7d22\u53d1\u73b0\u8fd9\u79cd\u6784\u5efa\u7cfb\u7edf\u975e\u5e38\u6709\u5c42\u6b21\u6027\uff0c\u901a\u5e38\u6bcf\u4e2a\u6a21\u5757\u53ef\u4ee5\u5355\u72ec\u5199\u4e00\u4e2agn\u6587\u4ef6\uff0c\u4f46\u662f\u4e00\u822c\u91c7\u7528\u5c42\u7ea7\u7ed3\u6784 \u6587\u4ef6\u6839\u76ee\u5f55\u4e0b\u901a\u5e38\u6709\u4e00\u4e2aBUILD.gn\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u662f\u6240\u6709\u7684\u4ee3\u7801\u6a21\u5757\u7ec4\u88c5\u7684\u96c6\u5408 .gni \u6587\u4ef6\uff1a\u4e00\u822c\u7528\u6765\u6dfb\u52a0\u4e00\u4e9b\u53c2\u6570\u7684\u914d\u7f6e\uff0c\u5728gn\u6587\u4ef6\u4e2dimport\u8fd9\u4e9b\u6587\u4ef6\u6216\u8005\u91cc\u9762\u5b9a\u4e49\u7684\u53d8\u91cf\u53c2\u6570\u503c \u672c\u6587\u63cf\u8ff0\u4e86\u8bb8\u591aGN\u7684\u8bed\u6cd5\u7ec6\u8282\u548c\u884c\u4e3a\u3002 1.1 \u4f7f\u7528\u5185\u7f6e\u7684\u5e2e\u52a9\uff01 GN\u5177\u6709\u5e7f\u6cdb\u7684\u5185\u7f6e\u5e2e\u52a9\u7cfb\u7edf\uff0c\u4e3a\u6bcf\u4e2a\u51fd\u6570\u548c\u5185\u7f6e\u53d8\u91cf\u63d0\u4f9b\u53c2\u8003\u3002 \u8fd9\u4e2a\u9875\u9762\u66f4\u9ad8\u7ea7\u3002 GN help \u60a8\u8fd8\u53ef\u4ee5\u9605\u8bfb2016\u5e743\u6708\u7684GN\u4ecb\u7ecd\u7684\u5e7b\u706f\u7247\u3002\u6f14\u8bb2\u8005\u5907\u6ce8\u5305\u542b\u5b8c\u6574\u5185\u5bb9\u3002 1.2 \u8bbe\u8ba1\u7406\u5ff5 \u7f16\u5199\u6784\u5efa\u6587\u4ef6\u4e0d\u5e94\u8be5\u6709\u592a\u591a\u7684\u521b\u9020\u6027\u7684\u5de5\u4f5c\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u7ed9\u5b9a\u76f8\u540c\u7684\u8981\u6c42\uff0c\u4e24\u4e2a\u4eba\u5e94\u8be5\u751f\u6210\u76f8\u540c\u7684\u6784\u5efa\u6587\u4ef6\u3002 \u9664\u975e\u786e\u5b9e\u9700\u8981\uff0c\u5426\u5219\u4e0d\u5e94\u6709\u7075\u6d3b\u6027\u3002\u56e0\u4e3a\u8bb8\u591a\u4e8b\u60c5\u5e94\u8be5\u5c3d\u53ef\u80fd\u4f5c\u4e3a\u81f4\u547d\u9519\u8bef\u3002 \u5b9a\u4e49\u5e94\u8be5\u66f4\u50cf\u4ee3\u7801\u800c\u4e0d\u662f\u89c4\u5219\u3002\u6211\u4e0d\u60f3\u5199\u6216\u8c03\u8bd5Prolog\u3002\u4f46\u662f\u6211\u4eec\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u7f16\u5199\u548c\u8c03\u8bd5C ++\u548cPython\u3002 \u5e94\u8be5\u8003\u8651\u6784\u5efa\u8bed\u8a00\u5e94\u8be5\u5982\u4f55\u5de5\u4f5c\u3002\u5b83\u6ca1\u5fc5\u8981\u53bb\u5bb9\u6613\u751a\u81f3\u662f\u53ef\u80fd\u8868\u8fbe\u62bd\u8c61\u4e8b\u7269\u3002 \u6211\u4eec\u5e94\u8be5\u901a\u8fc7\u6539\u53d8\u6e90\u7801\u6216\u5de5\u5177\u6765\u4f7f\u6784\u5efa\u66f4\u52a0\u7b80\u5355\uff0c\u800c\u4e0d\u662f\u4f7f\u6784\u5efa\u52a0\u4ee5\u590d\u6742\u6765\u6ee1\u8db3\u5916\u90e8\u9700\u6c42\uff08\u5728\u5408\u7406\u7684\u8303\u56f4\u5185\uff09\u3002 \u50cfBlaze\uff0c\u5b83\u4ec0\u4e48\u65f6\u5019\u662f\u6709\u610f\u4e49\u7684\uff08\u89c1\u4e0b\u6587\u201c\u4e0eBlaze\u7684\u533a\u522b\u548c\u76f8\u4f3c\u4e4b\u5904\u201d\uff09\u3002","title":"\u4ecb\u7ecd"},{"location":"android/flutter/GNTools/#_2","text":"\u91cd\u8981\u53c2\u6570\u8bb2\u89e3 group \uff1a\u4e00\u4e2a\u62e5\u6709\u547d\u540d\u7684\u76ee\u6807\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u5305\u542b\u5f88\u591a\u7684\u4f9d\u8d56\u6a21\u5757 \u53ef\u914d\u7f6e\u9879\uff1a 1.\u4f9d\u8d56\u7684\u6a21\u5757 data_deps,deps,public_deps \u914d\u7f6e\u53c2\u6570 \uff1aall_dependent_configs,public_configs \u6839\u76ee\u5f55\u7684gn\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u4e2a\u7684group\u7ec4\u6210\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6dfb\u52a0\u6216\u8005\u51cf\u5c11\u6a21\u5757\u4f9d\u8d56\uff0c\u6240\u6709\u5728\u6839\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u4e2d\u521b\u5efa\u7684\u6a21\u5757\u60f3\u53d1\u6325\u4f5c\u7528\u9700\u8981\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u8fdb\u884c\u6dfb\u52a0\u4f9d\u8d56 config \uff1a\u5b9a\u4e49\u4e00\u4e2a\u914d\u7f6e\u5bf9\u8c61 \u901a\u4fd7\u7684\u89e3\u91ca\uff0cconfig\u5c31\u662f\u6784\u9020\u4e00\u4e2a\u6a21\u677f\uff0c\u8fd9\u4e2a\u6a21\u677f\u6709\u5404\u79cd\u5404\u6837\u7684\u5c5e\u6027 source_set :\u9700\u8981\u88ab\u7f16\u8bd1\u7684\u8d44\u6e90\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u88ab\u7f16\u8bd1\u4f46\u662f\u4e0d\u4ea7\u751f\u4efb\u4f55\u7684\u5e93 static_library :\u751f\u6210\u9759\u6001\u5e93\u76ee\u6807 target : \u6307\u5b9a\u76ee\u6807\u7684\u7c7b\u578b\u5e76\u751f\u6210\u8be5\u76ee\u6807 template: \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u51fd\u6570 component \uff1a \u5b9a\u4e49\u4e00\u4e2a\u7ec4\u4ef6\u76f8\u5f53\u4e8e\u4f7f\u7528gn\u7684component\u6a21\u677f\u66ff\u4ee3\u4e86\u9759\u6001\u5e93\u3001\u52a8\u6001\u5e93\u6216\u8005sourceset\uff0c\u5f53\u5141\u8bb8\u4f7f\u7528\u8fd9\u4e2a\uff08\u7f16\u8bd1\u53c2\u6570 is_component_build \u4e3atrue\u7684\u65f6\u5019\uff09\uff0c\u6a21\u677f\u4f1a\u751f\u6210\u4e00\u4e2a\u52a8\u6001\u5e93\uff0c\u4e0d\u5141\u8bb8\u7684\u8bdd\u4f1a\u751f\u6210\u4e00\u4e2a\u52a8\u6001\u5e93\uff0c\u8fd9\u4e2a\u5f88\u590d\u6742\uff0c\u8be6\u60c5\u952ecomponent\u5b98\u65b9\u8be6\u89e3 define :\u5b9a\u4e49\u5b57\u7b26\u4e32\uff0c\u88ab\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\uff0c\u529f\u80fd\u7c7b\u4f3c\u4e8e# defines include_dirs \uff1a\u6dfb\u52a0\u989d\u5916\u8def\u5f84\u6587\u4ef6 inputs \uff1a \u6dfb\u52a0\u5f53\u524d\u7f16\u8bd1\u76ee\u6807\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u9700\u8981\u7684target ldflags \uff1a\u4f20\u9012\u7ed9\u94fe\u63a5\u5668\u7684\u6807\u5fd7 \uff0c\u73b0\u5728\u5927\u90e8\u5206\u53ef\u4ee5\u7528libs\u548clib_dirs\u66ff\u4ee3\u4f7f\u7528 lib_dirs :\u989d\u5916\u7684\u5e93\u8def\u5f84\u5217\u8868","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"android/flutter/GNTools/#_3","text":"GN\u4f7f\u7528\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u3002\u7684\u7c7b\u578b\u662f\uff1a \u5e03\u5c14\uff08true\uff0cfalse\uff09\u3002 64\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u3002 \u5b57\u7b26\u4e32\u3002 \u5217\u8868\uff08\u4efb\u4f55\u5176\u5b83\u7c7b\u578b\uff09\u3002 \u4f5c\u7528\u57df\uff08\u6709\u70b9\u50cf\u5b57\u5178\uff0c\u53ea\u662f\u5185\u7f6e\u7684\u4e1c\u897f\uff09\u3002 \u6709\u4e00\u4e9b\u5185\u7f6e\u7684\u53d8\u91cf\uff0c\u5176\u503c\u53d6\u51b3\u4e8e\u5f53\u524d\u7684\u73af\u5883\u3002\u53c2\u89c1gn help\u66f4\u591a\u3002 GN\u4e2d\u6709\u8bb8\u591a\u6545\u610f\u7684\u9057\u6f0f\u3002\u4f8b\u5982\u6ca1\u6709\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\u8c03\u7528\uff08\u6a21\u677f\u662f\u6700\u63a5\u8fd1\u7684\u4e86\uff09\u3002 \u6839\u636e\u4e0a\u8ff0\u8bbe\u8ba1\u7406\u5ff5\uff0c\u5982\u679c\u4f60\u9700\u8981\u8fd9\u79cd\u4e1c\u897f\uff0c\u5df2\u7ecf\u4e0d\u7b26\u5408\u5176\u8bbe\u8ba1\u7406\u5ff5\u4e86\u3002 \u53d8\u91cfsources\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\uff1a\u5f53\u5206\u914d\u7ed9\u5b83\u65f6\uff0c\u6392\u9664\u6a21\u5f0f\u7684\u5217\u8868\u4f1a\u5e94\u7528\u4e8e\u5b83\u3002 \u8fd9\u662f\u4e3a\u4e86\u81ea\u52a8\u8fc7\u6ee4\u6389\u4e00\u4e9b\u7c7b\u578b\u7684\u6587\u4ef6\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605gn help set_sources_assignment_filter\u548cgn help label_pattern\u3002 \u4e66\u5446\u5b50\u4f3c\u7684GN\u7684\u5b8c\u6574\u8bed\u6cd5\u5728gn help grammar\u4e2d\u63d0\u4f9b\u3002","title":"\u8bed\u6cd5"},{"location":"android/flutter/GNTools/#21","text":"\u5b57\u7b26\u4e32\u7528\u53cc\u5f15\u53f7\u548c\u53cd\u659c\u7ebf\u4f7f\u7528\u4f5c\u4e3a\u8f6c\u4e49\u5b57\u7b26\u3002\u552f\u4e00\u652f\u6301\u7684\u8f6c\u4e49\u5e8f\u5217\u662f\uff1a \\\u201d \uff08\u5b57\u7b26\u5f15\u7528\uff09 $ \uff08\u5b57\u7b26\u7f8e\u5143\u7b26\u53f7\uff09 \uff08\u5b57\u7b26\u53cd\u659c\u6760\uff09 \u53cd\u659c\u6760\u7684\u4efb\u4f55\u5176\u4ed6\u7528\u6cd5\u88ab\u89c6\u4e3a\u5b57\u7b26\u53cd\u659c\u6760\u3002 \u56e0\u6b64\uff0c\u4f8b\u5982\u5728\u6a21\u5f0f\u4e2d\u4f7f\u7528\u7684\\b\u4e0d\u9700\u8981\u8f6c\u4e49\uff0cWindows\u8def\u5f84\uff0c\u5982\u201cC\\foo\\bar.h\u201d\u4e5f\u4e0d\u9700\u8981\u8f6c\u4e49\u3002 \u901a\u8fc7\u652f\u6301\u7b80\u5355\u7684\u53d8\u91cf\u66ff\u6362\uff0c\u5176\u4e2d\u7f8e\u5143\u7b26\u53f7\u540e\u9762\u7684\u5b57\u66ff\u6362\u4e3a\u53d8\u91cf\u7684\u503c\u3002\u5982\u679c\u6ca1\u6709\u975evariable\u2212name\u5b57\u7b26\u4ee5\u7ec8\u6b62\u53d8\u91cf\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u9009\u62e9\u6027\u5730\u5305\u56f4\u540d\u79f0\u3002\u4e0d\u652f\u6301\u66f4\u590d\u6742\u7684\u8868\u8fbe\u5f0f\uff0c\u53ea\u652f\u6301\u53d8\u91cf\u540d\u79f0\u66ff\u6362\u3002 a = \u201cmypath\u201db = \u201ca/foo.cc\u201d # b - \u201cmypath/foo.cc\u201d c = \u201cfoo { a } bar.cc\u201d # c - \u201cfoomypathbar.cc\u201d \u4f60\u53ef\u4ee5\u4f7f\u7528\u201c0xFF\u201d\u8bed\u6cd5\u7f16\u78018\u4f4d\u5b57\u7b26\uff0c\u6240\u4ee5\u5e26\u6709\u6362\u884c\u7b26\uff08\u5341\u516d\u8fdb\u52360A\uff09\u7684\u5b57\u7b26\u4e32\u5982\u4e0b\uff1a`\u201clook0x0Alike0x0Athis\u201d\u3002","title":"2.1 \u5b57\u7b26\u4e32"},{"location":"android/flutter/GNTools/#22","text":"\u6211\u4eec\u662f\u6ca1\u6709\u529e\u6cd5\u5f97\u5230\u5217\u8868\u7684\u957f\u5ea6\u7684\u3002 \u5982\u679c\u4f60\u53d1\u73b0\u81ea\u5df1\u60f3\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u90a3\u662f\u4f60\u5728\u6784\u5efa\u4e2d\u505a\u4e86\u592a\u591a\u7684\u5de5\u4f5c\u3002 \u5217\u8868\u652f\u6301\u9644\u52a0\uff1a a = [ first ] a += [ second ] # [ first , second ] a += [ third , fourth ] # [ first , second , third , fourth ] b = a + [ fifth ] # [ first , second , third , fourth , fifth ] \u5c06\u5217\u8868\u9644\u52a0\u5230\u53e6\u4e00\u4e2a\u5217\u8868\u5c06\u9879\u76ee\u9644\u52a0\u5728\u7b2c\u4e8c\u4e2a\u5217\u8868\u4e2d\uff0c\u800c\u4e0d\u662f\u5c06\u5217\u8868\u9644\u52a0\u4e3a\u5d4c\u5957\u6210\u5458\u3002 \u60a8\u53ef\u4ee5\u4ece\u5217\u8868\u4e2d\u5220\u9664\u9879\u76ee\uff1a a = [ first , second , third , first ] b = a - [ first ] # [ second , third ] a - = [ second ] # [ first , third , fourth ] \u5217\u8868\u4e2d\u7684 - \u8fd0\u7b97\u7b26\u641c\u7d22\u5339\u914d\u9879\u5e76\u5220\u9664\u6240\u6709\u5339\u914d\u7684\u9879\u3002 \u4ece\u53e6\u4e00\u4e2a\u5217\u8868\u4e2d\u51cf\u53bb\u5217\u8868\u5c06\u5220\u9664\u7b2c\u4e8c\u4e2a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u5339\u914d\u7684\u9879\u76ee\uff0c\u5c06\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u63d0\u524d\u77e5\u9053\u8be5\u9879\u76ee\u5728\u90a3\u91cc\uff0c\u7136\u540e\u518d\u5220\u9664\u5b83\u3002 \u5047\u5b9a\u6ca1\u6709\u529e\u6cd5\u6d4b\u8bd5\u662f\u5426\u5305\u542b\uff0c\u4e3b\u8981\u7528\u4f8b\u662f\u8bbe\u7f6e\u6587\u4ef6\u6216\u6807\u5fd7\u7684\u4e3b\u5217\u8868\uff0c\u5e76\u6839\u636e\u5404\u79cd\u6761\u4ef6\u5220\u9664\u4e0d\u9002\u7528\u4e8e\u5f53\u524d\u6784\u5efa\u7684\u4e3b\u5217\u8868\u3002 \u5728\u6587\u4f53\u98ce\u683c\u4e0a\uff0c\u53ea\u559c\u6b22\u6dfb\u52a0\u5230\u5217\u8868\uff0c\u5e76\u8ba9\u6bcf\u4e2a\u6e90\u6587\u4ef6\u6216\u4f9d\u8d56\u9879\u51fa\u73b0\u4e00\u6b21\u3002 \u8fd9\u4e0eFlutter Engine\u56e2\u961f\u4e3aGYP\u63d0\u4f9b\u7684\u5efa\u8bae\uff08GYP\u66f4\u613f\u610f\u5217\u51fa\u6240\u6709\u6587\u4ef6\uff0c\u7136\u540e\u5220\u9664\u5728\u6761\u4ef6\u8bed\u4e2d\u4e0d\u9700\u8981\u7684\u6587\u4ef6\uff09\u76f8\u53cd\u3002 \u5217\u8868\u652f\u6301\u57fa\u4e8e\u96f6\u7684\u4e0b\u6807\u6765\u63d0\u53d6\u503c\uff1a a = [ first , second , third ] b = a [ 1 ] # - second []\u8fd0\u7b97\u7b26\u662f\u53ea\u8bfb\u7684\uff0c\u4e0d\u80fd\u7528\u4e8e\u6539\u53d8\u5217\u8868\u3002 \u4e3b\u8981\u7528\u4f8b\u662f\u5f53\u5916\u90e8\u811a\u672c\u8fd4\u56de\u51e0\u4e2a\u5df2\u77e5\u503c\uff0c\u5e76\u4e14\u8981\u63d0\u53d6\u5b83\u4eec\u65f6\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f53\u4f60\u60f3\u8981\u9644\u52a0\u5230\u5217\u8868\u65f6\uff0c\u5f88\u5bb9\u6613\u8986\u76d6\u5217\u8868\u3002 \u4e3a\u4e86\u5e2e\u52a9\u6355\u83b7\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c06\u975e\u7a7a\u5217\u8868\u8d4b\u7ed9\u5305\u542b\u975e\u7a7a\u5217\u8868\u7684\u53d8\u91cf\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u5982\u679c\u8981\u89e3\u51b3\u6b64\u9650\u5236\uff0c\u8bf7\u5148\u5c06\u7a7a\u5217\u8868\u8d4b\u7ed9\u76ee\u6807\u53d8\u91cf\u3002\u5982\u4e0b\uff1a a = [ \u201cone\u201d ] a = [ \u201ctwo\u201d ] # Error: overwriting nonempty list with a nonempty list. a = [] # OK a = [ \u201ctwo\u201d ] # OK \u6ce8\u610f\uff0c\u6784\u5efa\u811a\u672c\u6267\u884c\u65f6\u5e76\u4e0d\u7406\u89e3\u6f5c\u5728\u6570\u636e\u7684\u542b\u4e49\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5e76\u4e0d\u77e5\u9053sources\u662f\u4e00\u4e2a\u6587\u4ef6\u540d\u7684\u5217\u8868\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u5220\u9664\u5176\u4e2d\u4e00\u9879\uff0c\u5b83\u5fc5\u987b\u5b57\u7b26\u4e32\u5b8c\u5168\u5339\u914d\uff0c\u800c\u4e0d\u662f\u6307\u5b9a\u4e00\u4e2a\u4e0d\u5e26\u540e\u7f00\u7684\u540d\u79f0\uff0c\u5b83\u5e76\u4e0d\u4f1a\u89e3\u6790\u4e3a\u76f8\u540c\u7684\u6587\u4ef6\u540d\u3002","title":"2.2 \u6e05\u5355"},{"location":"android/flutter/GNTools/#23","text":"\u6761\u4ef6\u8868\u8fbe\u5f0f\u770b\u8d77\u6765\u50cfC\uff1a if ( is_linux || ( is_win target_cpu == x86 )) { sources - = [ something.cc ] } else if ( ... ) { ... } else { ... } \u5982\u679c\u76ee\u6807\u53ea\u5e94\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u58f0\u660e\uff0c\u4f60\u5c31\u53ef\u4ee5\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\uff0c\u751a\u81f3\u662f\u6574\u4e2a\u76ee\u6807\u3002","title":"2.3 \u6761\u4ef6\u8bed\u53e5"},{"location":"android/flutter/GNTools/#24","text":"\u4f60\u53ef\u4ee5\u7528foreach\u904d\u5386\u4e00\u4e2a\u5217\u8868\u3002 \u4f46\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a\u3002\u6784\u5efa\u505a\u7684\u5927\u591a\u6570\u4e8b\u60c5\u5e94\u8be5\u90fd\u53ef\u4ee5\u8868\u8fbe\uff0c\u800c\u4e0d\u662f\u5faa\u73af\uff0c\u5982\u679c\u4f60\u53d1\u73b0\u6709\u5fc5\u8981\u4f7f\u7528\u5faa\u73af\uff0c\u8fd9\u53ef\u80fd\u8bf4\u660e\u4f60\u5728\u6784\u5efa\u4e2d\u505a\u4e86\u4e00\u4e9b\u65e0\u7528\u7684\u5de5\u4f5c\u3002 foreach ( i, mylist ) { print ( i ) # Note: i is a copy of each element, not a reference to it. }","title":"2.4 \u5faa\u73af"},{"location":"android/flutter/GNTools/#25","text":"\u7b80\u5355\u7684\u51fd\u6570\u8c03\u7528\u770b\u8d77\u6765\u50cf\u5927\u591a\u6570\u5176\u4ed6\u7684\u8bed\u8a00\uff1a print(\u201chello, world\u201d) assert(is_win, \u201cThis should only be executed on Windows\u201d) \u8fd9\u4e9b\u529f\u80fd\u662f\u5185\u7f6e\u7684\uff0c\u7528\u6237\u4e0d\u80fd\u5b9a\u4e49\u65b0\u7684\u529f\u80fd\u3002 \u4e00\u4e9b\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u7531{}\u62ec\u8d77\u6765\u7684\u4ee3\u7801\u5757\uff1a static_library( mylibrary ) { sources = [ a.cc ] } \u5176\u4e2d\u5927\u591a\u6570\u5b9a\u4e49\u76ee\u6807\u3002 \u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8ba8\u8bba\u7684\u6a21\u677f\u673a\u5236\u6765\u5b9a\u4e49\u8fd9\u6837\u7684functions\u3002 \u786e\u5207\u5730\u8bf4\uff0c\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u610f\u5473\u7740\u8be5\u5757\u53d8\u6210\u7528\u4e8e\u51fd\u6570\u6267\u884c\u7684\u51fd\u6570\u7684\u53c2\u6570\u3002 \u5927\u591a\u6570\u5757\u98ce\u683c\u51fd\u6570\u6267\u884c\u5757\u5e76\u5c06\u7ed3\u679c\u4f5c\u4e3a\u8981\u8bfb\u53d6\u7684\u53d8\u91cf\u7684\u5b57\u5178\u3002","title":"2.5 \u51fd\u6570\u8c03\u7528"},{"location":"android/flutter/GNTools/#26","text":"\u6587\u4ef6\u548c\u51fd\u6570\u8c03\u7528\u540e\u8ddf{}\u5757\u5c06\u5f15\u5165\u65b0\u4f5c\u7528\u57df\u3002 \u4f5c\u7528\u57df\u662f\u5d4c\u5957\u7684\u3002 \u5f53\u4f60\u8bfb\u53d6\u53d8\u91cf\u65f6\uff0c\u5c06\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u641c\u7d22\u5305\u542b\u7684\u4f5c\u7528\u57df\uff0c\u76f4\u5230\u627e\u5230\u5339\u914d\u7684\u540d\u79f0\u3002 \u53d8\u91cf\u5199\u5165\u59cb\u7ec8\u4f4d\u4e8e\u6700\u5185\u5c42\u3002 \u6ca1\u6709\u529e\u6cd5\u4fee\u6539\u9664\u6700\u5185\u5c42\u4e4b\u5916\u7684\u4efb\u4f55\u5c01\u95ed\u4f5c\u7528\u57df\u3002 \u8fd9\u610f\u5473\u7740\uff0c\u5f53\u4f60\u5b9a\u4e49\u4e00\u4e2a\u76ee\u6807\uff0c\u4f8b\u5982\uff0c\u4f60\u5728\u5757\u91cc\u9762\u505a\u7684\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u201c\u6cc4\u6f0f\u201d\u5230\u6587\u4ef6\u7684\u5176\u4f59\u90e8\u5206\u3002 if/else/foreach\u8bed\u53e5\uff0c\u5373\u4f7f\u4ed6\u4eec\u4f7f\u7528{}\uff0c\u4e0d\u4f1a\u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u4f5c\u7528\u57df\uff0c\u6240\u4ee5\u66f4\u6539\u4f1a\u5f71\u54cd\u5230\u8bed\u53e5\u4e4b\u5916\u3002","title":"2.6 \u4f5c\u7528\u57df\u548c\u6267\u884c"},{"location":"android/flutter/GNTools/#_4","text":"","title":"\u547d\u540d"},{"location":"android/flutter/GNTools/#31","text":"\u6587\u4ef6\u548c\u76ee\u5f55\u540d\u79f0\u662f\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u88ab\u89e3\u91ca\u4e3a\u76f8\u5bf9\u4e8e\u5f53\u524d\u6784\u5efa\u6587\u4ef6\u7684\u76ee\u5f55\u3002 \u6709\u4e09\u79cd\u53ef\u80fd\u7684\u5f62\u5f0f\uff1a \u76f8\u5bf9\u540d\u79f0\uff1a \u201cfoo.cc\u201d \u201cSRC/foo.cc\u201d \u201c../src/foo.cc\u201d Source-tree\u7edd\u5bf9\u540d\u79f0\uff1a \u201c//net/foo.cc\u201d \u201c//base/test/foo.cc\u201d \u7cfb\u7edf\u7edd\u5bf9\u540d\u79f0\uff08\u5f88\u5c11\uff0c\u901a\u5e38\u7528\u4e8e\u5305\u542b\u76ee\u5f55\uff09\uff1a /usr/local/include/ /C:/Program Files/Windows Kits/Include","title":"3.1\u6587\u4ef6\u548c\u76ee\u5f55\u540d"},{"location":"android/flutter/GNTools/#32","text":"\u6807\u8bc6\u662f\u6709\u7740\u9884\u5b9a\u4e49\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4f9d\u8d56\u56fe\u4e2d\u6240\u6709\u7684\u5143\u7d20\uff08\u76ee\u6807\uff0c\u914d\u7f6e\u548c\u5de5\u5177\u94fe\uff09\u90fd\u7531\u6807\u8bc6\u552f\u4e00\u8bc6\u522b\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6807\u8bc6\u770b\u53bb\u662f\u4ee5\u4e0b\u6837\u5b50\u3002 \"\u5b83\u7531\u4e09\u90e8\u5206\u7ec4\u6210 source-tree\u7edd\u5bf9\u8def\u5f84 \u5192\u53f7 \u540d\u79f0 \u4e0a\u9762\u8fd9\u4e2a\u6807\u8bc6\u6307\u793a\u5230/base/test/BUILD.gn\u4e2d\u67e5\u627e\u540d\u79f0\u662f\u201ctest_support\u201d\u7684\u6807\u8bc6\u3002 \u5f53\u52a0\u8f7d\u6784\u5efa\u6587\u4ef6\u65f6\uff0c\u5982\u679c\u5728\u76f8\u5bf9\u4e8esource root\u7ed9\u5b9a\u7684\u8def\u5f84\u4e0d\u5b58\u5728\u65f6\uff0cGN\u5c06\u67e5\u627ebuild/secondary\u4e2d\u7684\u8f85\u52a9\u6811\u3002\u8be5\u6811\u7684\u955c\u50cf\u7ed3\u6784\u4e3b\u5b58\u50a8\u5e93\u662f\u4e00\u79cd\u4ece\u5176\u5b83\u5b58\u50a8\u5e93\u6dfb\u52a0\u6784\u5efa\u6587\u4ef6\u7684\u65b9\u5f0f\uff08\u90a3\u4e9b\u6211\u4eec\u65e0\u6cd5\u7b80\u5355\u5730\u5408\u5165BUILD\u6587\u4ef6\uff09 \u8f85\u52a9\u6811\u53ea\u662f\u5907\u7528\u800c\u4e0d\u662f\u8986\u76d6\uff0c\u56e0\u6b64\u6b63\u5e38\u4f4d\u7f6e\u4e2d\u7684\u6587\u4ef6\u59cb\u7ec8\u4f18\u5148\u3002 \u5b8c\u6574\u7684\u6807\u8bc6\u8fd8\u5305\u62ec\u5904\u7406\u8be5\u6807\u8bc6\u8981\u4f7f\u7528\u7684\u5de5\u5177\u94fe\u3002\u5de5\u5177\u94fe\u901a\u5e38\u662f\u4ee5\u7ee7\u627f\u7684\u65b9\u5f0f\u88ab\u9ed8\u8ba4\u6307\u5b9a\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u663e\u793a\u6307\u5b9a\u3002 \u201c//base/test:test_support(//build/toolchain/win:msvc)\u201d \u4e0a\u9762\u8fd9\u4e2a\u6807\u8bc6\u4f1a\u53bb\u201c//build/toolchain/win\u201d\u6587\u4ef6\u67e5\u5230\u540d\u53eb\u201dmsvc\u201d\u7684\u5de5\u5177\u94fe\u5b9a\u4e49\uff0c\u90a3\u4e2a\u5b9a\u4e49\u4f1a\u77e5\u9053\u5982\u4f55\u5904\u7406\u201ctest_support\u201d\u8fd9\u4e2a\u6807\u8bc6\u3002 \u5982\u679c\u4f60\u6307\u5411\u7684\u6807\u8bc6\u5c31\u5728\u6b64\u4e2abuild\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u7701\u7565\u8def\u5f84\uff0c\u800c\u53ea\u662f\u4ece\u5192\u53f7\u5f00\u59cb\u3002 \u201c:base\u201d \u4f60\u53ef\u4ee5\u4ee5\u76f8\u5bf9\u4e8e\u5f53\u524d\u76ee\u5f55\u7684\u65b9\u5f0f\u6307\u5b9a\u8def\u5f84\u3002\u6807\u51c6\u4e0a\u8bf4\uff0c\u8981\u5f15\u7528\u975e\u672c\u6587\u4ef6\u4e2d\u6807\u8bc6\u65f6\uff0c\u9664\u4e86\u5b83\u8981\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u8fd0\u884c\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u3002\u4ec0\u4e48\u662f\u8981\u5728\u4e0d\u540c\u4e0a\u4e0b\u6587\u8fd0\u884c\uff1f\u4e3e\u4e2a\u5217\u5b50\uff0c\u4e00\u4e2a\u9879\u76ee\u5b83\u65e2\u8981\u80fd\u6784\u9020\u72ec\u7acb\u7248\u672c\uff0c\u53c8\u53ef\u80fd\u662f\u5176\u5b83\u9879\u76ee\u7684\u5b50\u6a21\u5757\u3002 \u201csource/plugin:myplugin\u201d # Prefer not to do these. \u201c../net:url_request\u201d \u4e66\u5199\u65f6\uff0c\u53ef\u4ee5\u7701\u7565\u6807\u8bc6\u7684\u7b2c\u4e8c\u90e8\u5206\u3001\u7b2c\u4e09\u90e8\u5206\uff0c\u5373\u5192\u53f7\u548c\u540d\u79f0\uff0c\u8fd9\u65f6\u540d\u79f0\u9ed8\u8ba4\u4f7f\u7528\u76ee\u5f55\u7684\u6700\u540e\u4e00\u6bb5\u3002\u6807\u51c6\u4e0a\u8bf4\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u5efa\u8bae\u7701\u7565\u7b2c\u4e8c\u3001\u4e09\u90e8\u5206\u3002\uff08\u4ee5\u4e0b\u7684\u201c=\u201d\u8868\u793a\u7b49\u540c\uff09 \u201c//net\u201d = \u201c//net:net\u201d \u201c//tools/gn\u201d = \u201c//tools/gn:gn\u201d","title":"3.2 \u6807\u8bc6"},{"location":"android/flutter/GNTools/#_5","text":"","title":"\u6784\u5efa\u914d\u7f6e"},{"location":"android/flutter/GNTools/#41","text":"\u5728\u5f53\u524d\u76ee\u5f55\u67e5\u627e.gn\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u5411\u4e0a\u4e00\u7ea7\u76ee\u5f55\u67e5\u627e\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u3002\u5c06\u8fd9\u4e2a\u76ee\u5f55\u8bbe\u4e3a\u201dsouce root\u201d, \u89e3\u6790\u8be5\u76ee\u5f55\u4e0b\u7684gn\u6587\u4ef6\u4ee5\u83b7\u53d6build confing\u6587\u4ef6\u540d\u79f0\u3002 \u6267\u884cbuild config\u6587\u4ef6\uff08\u8fd9\u662f\u4e00\u4e2a\u9ed8\u8ba4\u5de5\u5177\u94fe\uff09\uff0c\u5728chromium\u4e2d\u662f//build/config/BUILDCONFIG.gn; \u52a0\u8f7droot\u76ee\u5f55\u4e0b\u7684BUILD.gn\u6587\u4ef6; \u6839\u636eroot\u76ee\u5f55\u4e0b\u7684BUILD.gn\u5185\u5bb9\u52a0\u8f7d\u5176\u4f9d\u8d56\u7684\u5176\u5b83\u76ee\u5f55\u4e0b\u7684BUILD.gn\u6587\u4ef6\uff0c\u5982\u679c\u5728\u6307\u5b9a\u4f4d\u7f6e\u627e\u4e0d\u5230\u4e00\u4e2agn\u6587\u4ef6\uff0cGN\u5c06\u67e5\u627e build/secondary \u7684\u76f8\u5e94\u4f4d\u7f6e\uff1b \u5f53\u4e00\u4e2a\u76ee\u6807\u7684\u4f9d\u8d56\u90fd\u89e3\u51b3\u4e86\uff0c\u7f16\u8bd1\u51fa.ninja\u6587\u4ef6\u4fdd\u5b58\u5230out_dir/dir\uff0c\u4f8b\u5982./out/arm/obj/ui/web_dialogs/web_dialogs.ninja; \u5f53\u6240\u6709\u7684\u76ee\u6807\u90fd\u89e3\u51b3\u4e86\uff0c \u7f16\u8bd1\u51fa\u4e00\u4e2a\u6839 build.ninja \u6587\u4ef6\u5b58\u653e\u5728out_dir\u6839\u76ee\u5f55\u4e0b\u3002","title":"4.1 \u603b\u4f53\u6784\u5efa\u6d41\u7a0b"},{"location":"android/flutter/GNTools/#42","text":"\u7b2c\u4e00\u4e2a\u8981\u6267\u884c\u7684\u662f\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u5728\u6307\u793a\u6e90\u7801\u5e93\u6839\u76ee\u5f55\u7684\u201c.gn\u201d\u6587\u4ef6\u4e2d\u6307\u5b9a\u3002Flutter Engine\u6e90\u7801\u6811\u4e2d\u8be5\u6587\u4ef6\u662f\u201c//build/config/BUILDCONFIG.gn\u201d\u3002\u6574\u4e2a\u7cfb\u7edf\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u914d\u7f6e\u6587\u4ef6\u3002 \u9664\u8bbe\u7f6e\u5176\u5b83build\u6587\u4ef6\u6267\u884c\u65f6\u7684\u5de5\u4f5c\u57df\u5916\uff0c\u8be5\u6587\u4ef6\u8fd8\u8bbe\u7f6e\u53c2\u6570\u3001\u53d8\u91cf\u3001\u9ed8\u8ba4\u503c\uff0c\u7b49\u7b49\u3002\u8bbe\u7f6e\u5728\u8be5\u6587\u4ef6\u7684\u503c\u5bf9\u6240\u6709build\u6587\u4ef6\u53ef\u89c1\u3002 \u6bcf\u4e2a\u5de5\u5177\u94fe\u4f1a\u6267\u884c\u4e00\u6b21\u8be5\u6587\u4ef6\uff08\u89c1\u201c\u5de5\u5177\u94fe\u201d\uff09\u3002","title":"4.2 \u6784\u5efa\u914d\u7f6e\u6587\u4ef6"},{"location":"android/flutter/GNTools/#43","text":"\u53c2\u6570\u53ef\u4ee5\u4ece\u547d\u4ee4\u884c\uff08\u548c\u5176\u4ed6\u5de5\u5177\u94fe\uff0c\u53c2\u89c1\u4e0b\u9762\u7684\u201c\u5de5\u5177\u94fe\u201d\uff09\u4f20\u5165\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7declare_args\u58f0\u660e\u63a5\u53d7\u54ea\u4e9b\u53c2\u6570\u548c\u6307\u5b9a\u9ed8\u8ba4\u503c\u3002 \u6709\u5173\u53c2\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8bf7\u53c2\u9605gn help buildargs\u3002 \u6709\u5173\u58f0\u660e\u5b83\u4eec\u7684\u7ec6\u8282\uff0c\u8bf7\u53c2\u9605gn help declare_args\u3002 \u5728\u7ed9\u5b9a\u4f5c\u7528\u57df\u5185\u591a\u6b21\u58f0\u660e\u7ed9\u5b9a\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u9519\u8bef\u3002 \u901a\u5e38\uff0c\u53c2\u6570\u5c06\u5728\u5bfc\u5165\u6587\u4ef6\u4e2d\u58f0\u660e\uff08\u5728\u6784\u5efa\u7684\u67d0\u4e9b\u5b50\u96c6\u4e4b\u95f4\u5171\u4eab\u5b83\u4eec\uff09\u6216\u5728\u4e3b\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u4e2d\uff08\u4f7f\u5b83\u4eec\u662f\u5168\u5c40\u7684\uff09\u3002","title":"4.3 \u6784\u5efa\u53c2\u6570"},{"location":"android/flutter/GNTools/#44","text":"\u60a8\u53ef\u4ee5\u4e3a\u7ed9\u5b9a\u7684\u76ee\u6807\u7c7b\u578b\u8bbe\u7f6e\u4e00\u4e9b\u9ed8\u8ba4\u503c\u3002 \u8fd9\u901a\u5e38\u5728\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b8c\u6210\uff0c\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u914d\u7f6e\u5217\u8868\uff0c\u5b83\u5b9a\u4e49\u6bcf\u4e2a\u76ee\u6807\u7c7b\u578b\u7684\u6784\u5efa\u6807\u5fd7\u548c\u5176\u4ed6\u8bbe\u7f6e\u4fe1\u606f\u3002 \u8bf7\u53c2\u9605gn help set_defaults\u3002 \u4f8b\u5982\uff0c\u5f53\u60a8\u58f0\u660estatic_library\u65f6\uff0c\u5c06\u5e94\u7528\u9759\u6001\u5e93\u7684\u76ee\u6807\u9ed8\u8ba4\u503c\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7531\u76ee\u6807\u8986\u76d6\uff0c\u4fee\u6539\u6216\u4fdd\u7559\u3002 #This call is typically in the build config file (see above). set_defaults ( static_library ) { configs = [ //build:rtti_setup , //build:extra_warnings ] } # This would be in your directory s BUILD.gn file. static_library ( mylib ) { # At this point configs is set to [ //build:rtti_setup , //build:extra_warnings ] # by default but may be modified. configs - = //build:extra_warnings # Don t want these warnings. configs += :mylib_config # Add some more configs. } \u7528\u4e8e\u8bbe\u7f6e\u76ee\u6807\u9ed8\u8ba4\u503c\u7684\u5176\u4ed6\u7528\u4f8b\u662f\uff0c\u5f53\u60a8\u901a\u8fc7\u6a21\u677f\u5b9a\u4e49\u81ea\u5df1\u7684\u76ee\u6807\u7c7b\u578b\u5e76\u60f3\u8981\u6307\u5b9a\u67d0\u4e9b\u9ed8\u8ba4\u503c\u3002","title":"4.4 \u9ed8\u8ba4\u76ee\u6807"},{"location":"android/flutter/GNTools/#_6","text":"\u76ee\u6807\u662f\u6784\u9020\u8868\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u901a\u5e38\u7528\u4e8e\u8868\u793a\u67d0\u4e2a\u8981\u4ea7\u751f\u7684\u53ef\u6267\u884c\u6216\u5e93\u6587\u4ef6\u3002\u76ee\u6807\u7ecf\u5e38\u4f1a\u4f9d\u8d56\u5176\u5b83\u76ee\u6807\uff0c\u4ee5\u4e0b\u662f\u5185\u7f6e\u7684\u76ee\u6807\u7c7b\u578b\uff08\u53c2\u8003gn help \uff09\uff1a gn help action\uff1a\u8fd0\u884c\u4e00\u4e2a\u811a\u672c\u6765\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\u3002 action_foreach\uff1a\u5faa\u73af\u8fd0\u884c\u811a\u672c\u4f9d\u6b21\u4ea7\u751f\u6587\u4ef6\u3002 bundle_data\uff1a\u4ea7\u751f\u8981\u52a0\u5165Mac/iOS\u5305\u7684\u6570\u636e\u3002 create_bundle\uff1a\u4ea7\u751fMac/iOS\u5305\u3002 executable\uff1a\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002 group\uff1a\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u76ee\u6807\u7684\u865a\u62df\u8282\u70b9\uff08\u76ee\u6807\uff09\u3002 shared_library\uff1a\u4e00\u4e2a.dll\u6216\u7684.so\u3002 loadable_module\uff1a\u4e00\u4e2a\u53ea\u7528\u4e8e\u8fd0\u884c\u65f6\u7684.dll\u6216.so\u3002 source_set\uff1a\u4e00\u4e2a\u8f7b\u91cf\u7684\u865a\u62df\u9759\u6001\u5e93\uff08\u901a\u5e38\u6307\u5411\u4e00\u4e2a\u771f\u5b9e\u9759\u6001\u5e93\uff09\u3002 static_library\uff1a\u4e00\u4e2a\u7684.lib\u6216\u67d0\u6587\u4ef6\uff08\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f60\u4f1a\u60f3\u8981\u4e00\u4e2asource_set\u4ee3\u66ff\uff09\u3002 \u4f60\u53ef\u4ee5\u7528\u6a21\u677f\uff08templates\uff09\u6765\u6269\u5c55\u53ef\u4f7f\u7528\u7684\u76ee\u6807\u3002Flutter Engine\u5c31\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u7c7b\u578b\u3002 component\uff1a\u57fa\u4e8e\u6784\u9020\u7c7b\u578b\uff0c\u6216\u662f\u6e90\u6587\u4ef6\u96c6\u5408\u6216\u662f\u5171\u4eab\u5e93\u3002 test\uff1a\u53ef\u6267\u884c\u6d4b\u8bd5\u3002\u5728\u79fb\u52a8\u5e73\u53f0\uff0c\u5b83\u7528\u4e8e\u521b\u5efa\u6d4b\u8bd5\u539f\u751fapp\u3002 app\uff1a\u53ef\u6267\u884c\u7a0b\u5e8f\u6216Mac/iOS\u5e94\u7528\u3002 android_apk\uff1a\u751f\u6210\u4e00\u4e2aAPK\u3002\u6709\u8bb8\u591aAndroid\u5e94\u7528\uff0c\u53c2\u8003//build/config/android/rules.gni\u3002","title":"\u76ee\u6807"},{"location":"android/flutter/GNTools/#configs","text":"\u914d\u7f6e\u662f\u6307\u5b9a\u6807\u5fd7\u96c6\uff0c\u5305\u542b\u76ee\u5f55\u548c\u5b9a\u4e49\u7684\u547d\u540d\u5bf9\u8c61\u3002 \u5b83\u4eec\u53ef\u4ee5\u5e94\u7528\u4e8e\u76ee\u6807\u5e76\u63a8\u9001\u5230\u4f9d\u8d56\u76ee\u6807\u3002 config ( myconfig ) { includes = [ src/include ] defines = [ ENABLE_DOOM_MELON ] } \u5c06\u914d\u7f6e\u5e94\u7528\u4e8e\u76ee\u6807\uff1a executable ( doom_melon ) { configs = [ :myconfig ] } build config\u6587\u4ef6\u901a\u5e38\u6307\u5b9a\u8bbe\u7f6e\u9ed8\u8ba4\u914d\u7f6e\u5217\u8868\u7684\u76ee\u6807\u9ed8\u8ba4\u503c\u3002 \u6839\u636e\u9700\u8981\uff0c\u76ee\u6807\u53ef\u4ee5\u6dfb\u52a0\u6216\u5220\u9664\u5230\u6b64\u5217\u8868\u3002 \u6240\u4ee5\u5728\u5b9e\u8df5\u4e2d\uff0c\u4f60\u901a\u5e38\u4f7f\u7528configs + =\u201c\uff1amyconfig\u201d\u9644\u52a0\u5230\u9ed8\u8ba4\u5217\u8868\u3002 \u6709\u5173\u5982\u4f55\u58f0\u660e\u548c\u5e94\u7528\u914d\u7f6e\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605gn help config\u3002 \u516c\u5171CONFIGS \u76ee\u6807\u53ef\u4ee5\u5c06\u8bbe\u7f6e\u5e94\u7528\u4e8e\u4f9d\u8d56\u5b83\u7684\u76ee\u6807\u3002 \u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u7b2c\u4e09\u65b9\u76ee\u6807\uff0c\u5b83\u9700\u8981\u4e00\u4e9b\u5b9a\u4e49\u6216\u5305\u542b\u76ee\u5f55\u6765\u4f7f\u5176\u5934\u6587\u4ef6\u6b63\u786einclude\u3002 \u5e0c\u671b\u8fd9\u4e9b\u8bbe\u7f6e\u9002\u7528\u4e8e\u7b2c\u4e09\u65b9\u5e93\u672c\u8eab\uff0c\u4ee5\u53ca\u4f7f\u7528\u8be5\u5e93\u7684\u6240\u6709\u76ee\u6807\u3002 \u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8981\u5e94\u7528\u7684\u8bbe\u7f6e\u7f16\u5199config\uff1a config ( my_external_library_config ) { includes = . defines = [ DISABLE_JANK ] } \u7136\u540e\u5c06\u8fd9\u4e2a\u914d\u7f6e\u88ab\u6dfb\u52a0\u5230public_configs\u3002 \u5b83\u5c06\u5e94\u7528\u4e8e\u8be5\u76ee\u6807\u4ee5\u53ca\u76f4\u63a5\u4f9d\u8d56\u8be5\u76ee\u6807\u7684\u76ee\u6807\u3002 shared_library ( my_external_library ) { ... # Targets that depend on this get this config applied. public_configs = [ :my_external_library_config ] } \u4f9d\u8d56\u76ee\u6807\u53ef\u4ee5\u901a\u8fc7\u5c06\u4f60\u7684\u76ee\u6807\u4f5c\u4e3a\u201c\u516c\u5171\u201d\u4f9d\u8d56\u6765\u5c06\u8be5\u4f9d\u8d56\u6811\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a\u7ea7\u522b\u3002 static_library ( intermediate_library ) { ... # Targets that depend on this one also get the configs from my external library . public_deps = [ :my_external_library ] } \u76ee\u6807\u53ef\u4ee5\u5c06\u914d\u7f6e\u8f6c\u53d1\u5230\u6240\u6709\u4f9d\u8d56\u9879\uff0c\u76f4\u5230\u8fbe\u5230\u94fe\u63a5\u8fb9\u754c\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3aall_dependent_config\u3002 \u4f46\u5efa\u8bae\u4e0d\u8981\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u55b7\u6d82\u6807\u5fd7\u548c\u5b9a\u4e49\u8d85\u8fc7\u5fc5\u8981\u7684\u66f4\u591a\u7684\u6784\u5efa\u3002 \u76f8\u53cd\uff0c\u4f7f\u7528public_deps\u63a7\u5236\u54ea\u4e9b\u6807\u5fd7\u9002\u7528\u4e8e\u54ea\u91cc\u3002 \u5728Flutter Engine\u4e2d\uff0c\u66f4\u559c\u6b22\u4f7f\u7528\u6784\u5efa\u6807\u5fd7\u5934\u7cfb\u7edf\uff08build/buildflag_header.gni\uff09\u6765\u9632\u6b62\u7f16\u8bd1\u5668\u5b9a\u4e49\u5bfc\u81f4\u7684\u5927\u591a\u6570\u7f16\u8bd1\u9519\u8bef\u3002","title":"CONFIGS"},{"location":"android/flutter/GNTools/#_7","text":"Toolchains \u662f\u4e00\u7ec4\u6784\u5efa\u547d\u4ee4\u6765\u8fd0\u884c\u4e0d\u540c\u7c7b\u578b\u7684\u8f93\u5165\u6587\u4ef6\u548c\u94fe\u63a5\u7684\u4efb\u52a1\u3002 \u53ef\u4ee5\u8bbe\u7f6e\u6709\u591a\u4e2a Toolchains \u7684 build\u3002 \u4e0d\u8fc7\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u6bcf\u4e2a toolchains \u5206\u5f00 build\u540c\u65f6\u5728\u4ed6\u4eec\u4e4b\u95f4\u52a0\u4e0a\u4f9d\u8d56\u5173\u7cfb\u3002 \u8fd9\u610f\u5473\u7740,\u4f8b\u5982,32 \u4f4d Windows \u5efa\u7acb\u53ef\u80fd\u53d6\u51b3\u4e8e\u4e00\u4e2a 64 \u4f4d\u52a9\u624b\u7684 target\u3002 \u4ed6\u4eec\u6bcf\u4e2a\u53ef\u4ee5\u4f9d\u8d56\u201c//base:base\u201d\u5c06 32 \u4f4d\u57fa\u7840\u80cc\u666f\u4e0b\u7684 32 \u4f4d\u5de5\u5177\u94fe,\u548c 64 \u4f4d\u80cc\u666f\u4e0b\u7684 64 \u4f4d\u5de5\u5177\u94fe\u3002 \u5f53 target \u6307\u5b9a\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a target,\u5f53\u524d\u7684 toolchains \u662f\u7ee7\u627f\u7684,\u9664\u975e\u5b83\u662f\u660e\u786e\u8986\u76d6(\u8bf7\u53c2\u89c1\u4e0a\u9762\u7684\u201cLabels\u201d)\u3002","title":"\u5de5\u5177\u94fe"},{"location":"android/flutter/GNTools/#71","text":"\u5f53\u4f60\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u7248\u672c\u53ea\u6709\u4e00\u4e2a toolchain\uff0cbuild config \u6587\u4ef6\u662f\u5728\u6784\u5efa\u4e4b\u521d\u53ea\u52a0\u8f7d\u4e00\u6b21\u3002\u5b83\u5fc5\u987b\u8c03\u7528 set_default_toolchain \u544a\u8bc9 GN toolchain \u5b9a\u4e49\u7684 label \u6807\u7b7e\u3002 \u6b64 toolchain \u5b9a\u4e49\u4e86\u9700\u8981\u7528\u7684\u7f16\u8bd1\u5668\u548c\u8fde\u63a5\u5668\u7684\u547d\u4ee4\u3002 toolchain \u5b9a\u4e49\u7684 toolchain_args \u88ab\u5ffd\u7565\u3002\u5f53 target \u5bf9\u4f7f\u7528\u4e0d\u540c\u7684 toolchain target \u7684\u4f9d\u8d56\uff0c GN \u5c06\u4f7f\u7528\u8f85\u52a9\u5de5\u5177\u94fe\u6765\u89e3\u51b3\u76ee\u6807\u5f00\u59cb\u6784\u5efa\u3002 GN \u5c06\u52a0\u8f7d\u4e0e\u5de5\u5177\u94fe\u5b9a\u4e49\u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u3002 \u7531\u4e8e\u5de5\u5177\u94fe\u5df2\u7ecf\u77e5\u9053\uff0c \u8c03\u7528 set_default_toolchain \u5c06\u88ab\u5ffd\u7565\u3002\u6240\u4ee5 oolchain configuration \u7ed3\u6784\u662f\u53cc\u5411\u7684\u3002 \u5728\u9ed8\u8ba4\u7684 toolchain\uff08\u5373\u4e3b\u8981\u7684\u6784\u5efa target\uff09\u7684\u914d\u7f6e\u4ece\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u7684\u5de5\u5177\u94fe\u6d41\u5411\uff1a \u6784\u5efa\u914d\u7f6e\u6587\u4ef6\u7740\u773c\u4e8e\u6784\u5efa\uff08\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\uff0c CPU \u67b6\u6784\u7b49\uff09\u7684\u72b6\u6001\uff0c \u5e76\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e9b toolchain\uff08\u901a\u8fc7 set_default_toolchin\uff09\u3002 \u5728\u4e8c\u6b21 toolchain\uff0c\u914d\u7f6e\u4ece toolchain \u6d41\u5411\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\uff1a\u5728 toolchain \u5b9a\u4e49 toolchain_args \u6307\u5b9a\u7684\u53c2\u6570\u91cd\u65b0\u8c03\u7528\u6784\u5efa\u3002","title":"7.1 \u5de5\u5177\u94fe\u548c\u6784\u5efa\u914d\u7f6e"},{"location":"android/flutter/GNTools/#72","text":"\u5047\u8bbe\u9ed8\u8ba4\u7684\u6784\u5efa\u662f\u4e00\u4e2a 64 \u4f4d\u7248\u672c\u3002 \u65e0\u8bba\u8fd9\u662f\u6839\u636e\u5f53\u524d\u7cfb\u7edf\u9ed8\u8ba4\u7684 CPU \u67b6\u6784\uff0c \u6216\u8005\u7528\u6237\u5728\u547d\u4ee4\u884c\u4e0a\u4f20\u9012 target_cpu=\u201c64\u201d\u3002 build config file \u5e94\u8be5\u50cf\u8fd9\u6837\u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5de5\u5177\u94fe\uff1a # Set default toolchain only has an effect when run in the context of # the default toolchain. Pick the right one according to the current CPU # architecture. if ( target_cpu == x64 ) { set_default_toolchain ( //toolchains:64 ) } else if ( target_cpu == x86 ) { set_default_toolchain ( //toolchains:32 ) } \u5982\u679c\u4e00\u4e2a 64 \u4f4d\u7684 target \u8981\u4f9d\u9760\u4e00\u4e2a 32 \u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c \u5b83\u4f1a\u4f7f\u7528 data_deps \u6307\u5b9a\u7684\u4f9d\u8d56\u5173\u7cfb\uff08data_deps \u4f9d\u8d56\u5e93\u5728\u8fd0\u884c\u65f6\u624d\u9700\u8981\u94fe\u63a5\u65f6\u4e0d\u9700\u8981\uff0c \u56e0\u4e3a\u4f60\u4e0d\u80fd\u76f4\u63a5\u94fe\u63a5 32 \u4f4d\u548c 64\u4f4d\u7684\u5e93\uff09\u3002 executable ( my_program ) { ... if ( target_cpu == x64 ) { # The 64-bit build needs this 32-bit helper. data_deps = [ :helper(//toolchains:32) ] } } if ( target_cpu == x86 ) { # Our helper library is only compiled in 32-bits. shared_library ( helper ) { ... } } \u4e0a\u8ff0\uff08\u5f15\u7528\u7684\u5de5\u5177\u94fe\u6587\u4ef6toolchains/BUILD.gn\uff09\u5c06\u5b9a\u4e49\u4e24\u4e2a\u5de5\u5177\u94fe\uff1a toolchain ( 32 ) { tool ( cc ) { ... } ... more tools ... # Arguments to the build when re-invoking as a secondary toolchain. toolchain_args = { current_cpu = x86 } } toolchain ( 64 ) { tool ( cc ) { ... } ... more tools ... # Arguments to the build when re-invoking as a secondary toolchain. toolchain_args = { current_cpu = x64 } \u5de5\u5177\u94feargs\u660e\u786e\u6307\u5b9aCPU\u4f53\u7cfb\u7ed3\u6784\uff0c\u56e0\u6b64\u5982\u679c\u76ee\u6807\u4f9d\u8d56\u4e8e\u4f7f\u7528\u8be5\u5de5\u5177\u94fe\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u5728\u91cd\u65b0\u8c03\u7528\u8be5\u751f\u6210\u65f6\uff0c\u5c06\u8bbe\u7f6e\u8be5cpu\u4f53\u7cfb\u7ed3\u6784\u3002 \u8fd9\u4e9b\u53c2\u6570\u88ab\u5ffd\u7565\u4e3a\u9ed8\u8ba4\u5de5\u5177\u94fe\uff0c\u56e0\u4e3a\u5f53\u4ed6\u4eec\u77e5\u9053\u7684\u65f6\u5019\uff0c\u6784\u5efa\u914d\u7f6e\u5df2\u7ecf\u8fd0\u884c\u3002 \u901a\u5e38\uff0c\u5de5\u5177\u94feargs\u548c\u7528\u4e8e\u8bbe\u7f6e\u9ed8\u8ba4\u5de5\u5177\u94fe\u7684\u6761\u4ef6\u5e94\u8be5\u4e00\u81f4\u3002 \u6709\u5173\u591a\u7248\u672c\u8bbe\u7f6e\u7684\u597d\u5904\u662f\uff0c \u4f60\u53ef\u4ee5\u5199\u4f60\u7684\u76ee\u6807\u6761\u4ef6\u8bed\u53e5\u6765\u5f15\u7528\u5f53\u524d toolchain \u7684\u72b6\u6001\u3002\u6784\u5efa\u6587\u4ef6\u5c06\u6839\u636e\u6bcf\u4e2a toolchain \u4e0d\u540c\u7684\u72b6\u6001\u91cd\u65b0\u8fd0\u884c\u3002 \u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50 my_program\uff0c \u4f60\u53ef\u4ee5\u770b\u5230\u5b83\u67e5\u8be2 CPU \u67b6\u6784\uff0c \u52a0\u5165\u4e86\u53ea\u4f9d\u8d56\u8be5\u7a0b\u5e8f\u7684 64 \u4f4d\u7248\u672c\u3002 32 \u4f4d\u7248\u672c\u4fbf\u4e0d\u4f1a\u5f97\u5230\u8fd9\u79cd\u4f9d\u8d56\u6027\u3002","title":"7.2 \u5de5\u5177\u94fe\u4f8b\u5b50"},{"location":"android/flutter/GNTools/#73","text":"\u5de5\u5177\u94fe\u5747\u4f7f\u7528 toolchain \u7684\u547d\u4ee4\u58f0\u660e\uff0c \u5b83\u7684\u547d\u4ee4\u7528\u4e8e\u6bcf\u4e2a\u7f16\u8bd1\u548c\u94fe\u63a5\u64cd\u4f5c\u3002 \u8be5toolchain \u5728\u6267\u884c\u65f6\u8fd8\u6307\u5b9a\u4e00\u7ec4\u53c2\u6570\u4f20\u9012\u5230 build config \u6587\u4ef6\u3002 \u8fd9\u4f7f\u60a8\u53ef\u4ee5\u914d\u7f6e\u4fe1\u606f\u4f20\u9012\u7ed9\u5907\u7528 toolchain\u3002","title":"7.3 \u58f0\u660e\u5de5\u5177\u94fe"},{"location":"android/flutter/GNTools/#_8","text":"\u6a21\u677f\u662f GN \u91cd\u590d\u4f7f\u7528\u4ee3\u7801\u7684\u4e3b\u8981\u65b9\u5f0f\u3002 \u901a\u5e38\uff0c \u6a21\u677f\u4f1a\u6269\u5c55\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u5176\u4ed6\u76ee\u6807\u7c7b\u578b\u3002 # Declares a script that compiles IDL files to source, and then compiles those # source files. template ( idl ) { # Always base helper targets on target_name so they re unique. Target name # will be the string passed as the name when the template is invoked. idl_target_name = ${ target_name } _generate action_foreach ( idl_target_name ) { ... } # Your template should always define a target with the name target_name. # When other targets depend on your template invocation, this will be the # destination of that dependency. source_set ( target_name ) { ... deps = [ : $idl_target_name ] # Require the sources to be compiled. } } \u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u7684\u6a21\u677f\u5b9a\u4e49\u5728\u4e00\u4e2a.gni \u6587\u4ef6\u4e2d\uff0c \u7528\u6237 import \u8be5\u6587\u4ef6\u770b\u5230\u6a21\u677f\u7684\u5b9a\u4e49\uff1a import ( //tools/idl_compiler.gni ) idl ( my_interfaces ) { sources = [ a.idl , b.idl ] } \u58f0\u660e\u6a21\u677f\u4f1a\u5728\u5f53\u65f6\u5728\u8303\u56f4\u5185\u7684\u53d8\u91cf\u5468\u56f4\u521b\u5efa\u4e00\u4e2a\u95ed\u5305\u3002 \u5f53\u8c03\u7528\u6a21\u677f\u65f6\uff0c\u9b54\u672f\u53d8\u91cf\u8c03\u7528\u5668\u7528\u4e8e\u4ece\u8c03\u7528\u4f5c\u7528\u57df\u8bfb\u53d6\u53d8\u91cf\u3002 \u6a21\u677f\u901a\u5e38\u5c06\u5176\u611f\u5174\u8da3\u7684\u503c\u590d\u5236\u5230\u5176\u81ea\u5df1\u7684\u8303\u56f4\u4e2d\uff1a template ( idl ) { source_set ( target_name ) { sources = invoker.sources } } \u6a21\u677f\u6267\u884c\u65f6\u7684\u5f53\u524d\u76ee\u5f55\u5c06\u662f\u8c03\u7528\u6784\u5efa\u6587\u4ef6\u7684\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u6a21\u677f\u6e90\u6587\u4ef6\u3002 \u8fd9\u662f\u4ece\u6a21\u677f\u8c03\u7528\u5668\u4f20\u9012\u7684\u6587\u4ef6\u5c06\u662f\u6b63\u786e\u7684\uff08\u8fd9\u901a\u5e38\u8bf4\u660e\u5927\u591a\u6570\u6587\u4ef6\u5904\u7406\u6a21\u677f\uff09\u3002 \u4f46\u662f\uff0c\u5982\u679c\u6a21\u677f\u672c\u8eab\u6709\u6587\u4ef6\uff08\u4e5f\u8bb8\u5b83\u751f\u6210\u4e00\u4e2a\u8fd0\u884c\u811a\u672c\u7684\u52a8\u4f5c\uff09\uff0c\u4f60\u5c06\u9700\u8981\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\uff08\u201c// foo / \u2026\u201d\uff09\u6765\u5f15\u7528\u8fd9\u4e9b\u6587\u4ef6\uff0c \u5f53\u524d\u76ee\u5f55\u5728\u8c03\u7528\u671f\u95f4\u5c06\u4e0d\u53ef\u9884\u6d4b\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\u548c\u66f4\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605gn\u5e2e\u52a9\u6a21\u677f\u3002","title":"\u6a21\u677f"},{"location":"android/flutter/GNTools/#_9","text":"","title":"\u5176\u4ed6\u529f\u80fd"},{"location":"android/flutter/GNTools/#91-imports","text":"\u60a8\u53ef\u4ee5 import .gni \u6587\u4ef6\u5230\u5f53\u524d\u6587\u4ef6\u4e2d\u3002 \u8fd9\u4e0d\u662f C++\u4e2d\u7684 include\u3002 Import \u7684\u6587\u4ef6\u5c06\u72ec\u7acb\u6267\u884c\u5e76\u5c06\u6267\u884c\u7684\u7ed3\u679c\u590d\u5236\u5230\u5f53\u524d\u6587\u4ef6\u4e2d\uff08C ++\u6267\u884c\u7684\u65f6\u5019\uff0c \u5f53\u9047\u5230 include \u6307\u4ee4\u65f6\u624d\u4f1a\u5728\u5f53\u524d\u73af\u5883\u4e2d include \u6587\u4ef6\uff09\u3002 Import \u5141\u8bb8\u5bfc\u5165\u7684\u7ed3\u679c\u88ab\u7f13\u5b58\uff0c \u5e76\u4e14\u8fd8\u9632\u6b62\u4e86\u4e00\u4e9b\u201ccreative\u201d\u7684\u7528\u9014\u5305\u62ec\u50cf\u5d4c\u5957 include \u6587\u4ef6\u3002\u901a\u5e38\u4e00\u4e2a.gni \u6587\u4ef6\u5c06\u5b9a\u4e49 build \u7684\u53c2\u6570\u548c\u6a21\u677f\u3002 \u547d\u4ee4 gn help import \u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002.gni \u6587\u4ef6\u53ef\u4ee5\u5b9a\u4e49\u50cf_this \u540d\u5b57\u524d\u4f7f\u7528\u4e00\u4e2a\u4e0b\u5212\u7ebf\u7684\u4e34\u65f6\u53d8\u91cf\uff0c \u4ece\u800c\u5b83\u4e0d\u4f1a\u88ab\u4f20\u51fa\u6587\u4ef6\u5916\u3002\u3002","title":"9.1 Imports"},{"location":"android/flutter/GNTools/#92","text":"\u901a\u5e38\u4f60\u60f3\u4f7f\u4e00\u4e2a\u6587\u4ef6\u540d\u6216\u6587\u4ef6\u5217\u8868\u540d\u76f8\u5bf9\u4e8e\u4e0d\u540c\u7684\u76ee\u5f55\u3002 \u8fd9\u5728\u8fd0\u884c scripts \u65f6\u7279\u522b\u5e38\u89c1\u7684\uff0c \u5f53\u6784\u5efa\u8f93\u51fa\u76ee\u5f55\u4e3a\u5f53\u524d\u76ee\u5f55\u6267\u884c\u7684\u65f6\u5019\uff0c \u6784\u5efa\u6587\u4ef6\u901a\u5e38\u662f\u6307\u76f8\u5bf9\u4e8e\u5305\u542b\u4ed6\u4eec\u7684\u76ee\u5f55\u7684\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 rebase_path \u8f6c\u5316\u76ee\u5f55\u3002\u547d\u4ee4 gn help rebase_path \u67e5\u770b\u7ea4\u7ec6\u4fe1\u606f\u3002","title":"9.2 \u8def\u5f84\u5904\u7406"},{"location":"android/flutter/GNTools/#93","text":"Patterns \u88ab\u7528\u6765\u5728\u4e00\u4e2a\u90e8\u5206\u8868\u793a\u4e00\u4e2a\u6216\u591a\u4e2a\u6807\u7b7e\u3002 \u547d\u4ee4\uff1a gn help set_sources_assignment_filter gn help label_pattern \u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002","title":"9.3 \u6a21\u5f0f"},{"location":"android/flutter/GNTools/#94","text":"\u6709\u4e24\u79cd\u65b9\u5f0f\u6765\u6267\u884c\u811a\u672c\u3002 GN\u4e2d\u7684\u6240\u6709\u5916\u90e8\u811a\u672c\u90fd\u5728Python\u4e2d\u3002\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\u6784\u5efa\u6b65\u9aa4\u3002\u8fd9\u6837\u7684\u811a\u672c\u5c06\u9700\u8981\u4e00\u4e9b\u8f93\u5165\u5e76\u751f\u6210\u4e00\u4e9b\u8f93\u51fa\u4f5c\u4e3a\u6784\u5efa\u7684\u4e00\u90e8\u5206\u3002\u8c03\u7528\u811a\u672c\u7684\u76ee\u6807\u4f7f\u7528\u201caction\u201d\u76ee\u6807\u7c7b\u578b\u58f0\u660e\uff08\u8bf7\u53c2\u9605gn help action\uff09\u3002 \u5728\u6784\u5efa\u6587\u4ef6\u6267\u884c\u671f\u95f4\uff0c\u6267\u884c\u811a\u672c\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\u540c\u6b65\u7684\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u4ee5\u786e\u5b9a\u8981\u7f16\u8bd1\u7684\u6587\u4ef6\u96c6\uff0c\u6216\u8005\u83b7\u53d6\u6784\u5efa\u6587\u4ef6\u53ef\u80fd\u4f9d\u8d56\u7684\u67d0\u4e9b\u7cfb\u7edf\u914d\u7f6e\u3002\u6784\u5efa\u6587\u4ef6\u53ef\u4ee5\u8bfb\u53d6\u811a\u672c\u7684stdout\u5e76\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5bf9\u5176\u6267\u884c\u64cd\u4f5c\u3002 \u540c\u6b65\u811a\u672c\u6267\u884c\u7531exec_script\u51fd\u6570\u5b8c\u6210\uff08\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\u548c\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605gn help exec_script\uff09\u3002\u56e0\u4e3a\u540c\u6b65\u6267\u884c\u811a\u672c\u9700\u8981\u6682\u505c\u5f53\u524d\u7684buildfile\u6267\u884c\uff0c\u76f4\u5230Python\u8fdb\u7a0b\u5b8c\u6210\u6267\u884c\uff0c\u6240\u4ee5\u4f9d\u8d56\u5916\u90e8\u811a\u672c\u5f88\u6162\uff0c\u5e94\u8be5\u6700\u5c0f\u5316\u3002 \u4e3a\u4e86\u9632\u6b62\u6ee5\u7528\uff0c\u5141\u8bb8\u8c03\u7528exec_script\u7684\u6587\u4ef6\u53ef\u4ee5\u5728toplevel .gn\u6587\u4ef6\u4e2d\u5217\u5165\u767d\u540d\u5355\u3002 Flutter Engine\u4f1a\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u9700\u8981\u5bf9\u6b64\u7c7b\u6dfb\u52a0\u8fdb\u884c\u5176\u4ed6\u4ee3\u7801\u5ba1\u6838\u3002\u8bf7\u53c2\u9605gn help dotfile\u3002 \u60a8\u53ef\u4ee5\u540c\u6b65\u8bfb\u53d6\u548c\u5199\u5165\u5728\u540c\u6b65\u8fd0\u884c\u811a\u672c\u65f6\u4e0d\u9f13\u52b1\u4f46\u5076\u5c14\u9700\u8981\u7684\u6587\u4ef6\u3002\u5178\u578b\u7684\u7528\u4f8b\u662f\u4f20\u9012\u6bd4\u5f53\u524d\u5e73\u53f0\u7684\u547d\u4ee4\u884c\u9650\u5236\u66f4\u957f\u7684\u6587\u4ef6\u540d\u5217\u8868\u3002\u6709\u5173\u5982\u4f55\u8bfb\u53d6\u548c\u5199\u5165\u6587\u4ef6\uff0c\u8bf7\u53c2\u9605gn help read_file\u548cgn help write_file\u3002\u5982\u679c\u53ef\u80fd\uff0c\u5e94\u907f\u514d\u8fd9\u4e9b\u529f\u80fd\u3002 \u8d85\u8fc7\u547d\u4ee4\u884c\u957f\u5ea6\u9650\u5236\u7684\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u54cd\u5e94\u6587\u4ef6\u6765\u89e3\u51b3\u6b64\u9650\u5236\uff0c\u800c\u4e0d\u540c\u6b65\u5199\u5165\u6587\u4ef6\u3002\u8bf7\u53c2\u9605gn help response_file_contents\u3002","title":"9.4 \u6267\u884c\u811a\u672c"},{"location":"android/flutter/GNTools/#blaze","text":"Blaze\u662fGoogle\u7684\u5185\u90e8\u6784\u5efa\u7cfb\u7edf\uff0c\u73b0\u5728\u4f5c\u4e3aBazel\u516c\u5f00\u53d1\u5e03\u3002\u5b83\u542f\u53d1\u4e86\u8bb8\u591a\u5176\u4ed6\u7cfb\u7edf\uff0c\u5982Pants\u548cbuck\u3002 \u5728Google\u7684\u540c\u7c7b\u73af\u5883\u4e2d\uff0c\u5bf9\u6761\u4ef6\u7684\u9700\u6c42\u975e\u5e38\u4f4e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9bhacks\uff08abi_deps\uff09\u6765\u5b9e\u73b0\u3002 Flutter Engine\u5728\u6240\u6709\u5730\u65b9\u4f7f\u7528\u6761\u4ef6\uff0c\u9700\u8981\u6dfb\u52a0\u8fd9\u4e9b\u662f\u6587\u4ef6\u770b\u8d77\u6765\u4e0d\u540c\u7684\u4e3b\u8981\u539f\u56e0\u3002 GN\u8fd8\u6dfb\u52a0\u4e86\u201cconfigs\u201d\u7684\u6982\u5ff5\u6765\u7ba1\u7406\u4e00\u4e9b\u68d8\u624b\u7684\u4f9d\u8d56\u548c\u914d\u7f6e\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u540c\u6837\u4e0d\u4f1a\u51fa\u73b0\u5728\u670d\u52a1\u5668\u4e0a\u3002 Blaze\u6709\u4e00\u4e2a\u201c\u914d\u7f6e\u201d\u7684\u6982\u5ff5\uff0c\u5b83\u50cfGN\u5de5\u5177\u94fe\uff0c\u4f46\u5185\u7f6e\u5230\u5de5\u5177\u672c\u8eab\u3002\u5de5\u5177\u94fe\u5728GN\u4e2d\u7684\u5de5\u4f5c\u65b9\u5f0f\u662f\u5c1d\u8bd5\u5c06\u8fd9\u4e2a\u6982\u5ff5\u4ee5\u5e72\u51c0\u7684\u65b9\u5f0f\u5206\u79bb\u5230\u6784\u5efa\u6587\u4ef6\u4e2d\u7684\u7ed3\u679c\u3002 GN\u4fdd\u6301\u4e00\u4e9bGYP\u6982\u5ff5\u50cf\u201c\u6240\u6709\u4f9d\u8d56\u201d\u8bbe\u7f6e\uff0c\u5728Blaze\u4e2d\u5de5\u4f5c\u65b9\u5f0f\u6709\u70b9\u4e0d\u540c\u3002\u8fd9\u90e8\u5206\u5730\u4f7f\u5f97\u4ece\u73b0\u6709GYP\u4ee3\u7801\u7684\u8f6c\u6362\u66f4\u5bb9\u6613\uff0c\u5e76\u4e14GYP\u6784\u9020\u901a\u5e38\u63d0\u4f9b\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\uff08\u5176\u53d6\u51b3\u4e8e\u60c5\u51b5\u662f\u597d\u8fd8\u662f\u574f\uff09\u3002 GN\u4e5f\u4f7f\u7528\u50cf\u201csources\u201d\u800c\u4e0d\u662f\u201csrcs\u201d\u7684GYP\u540d\u79f0\uff0c\u56e0\u4e3a\u7f29\u5199\u8fd9\u4f3c\u4e4e\u4e0d\u5fc5\u8981\u5730\u6a21\u7cca\uff0c\u867d\u7136\u5b83\u4f7f\u7528Blaze\u7684\u201cdeps\u201d\uff0c\u56e0\u4e3a\u201cdependencies\u201d\u5f88\u96be\u952e\u5165\u3002 Chromium\u8fd8\u5728\u4e00\u4e2a\u76ee\u6807\u4e2d\u7f16\u8bd1\u591a\u79cd\u8bed\u8a00\uff0c\u56e0\u6b64\u6307\u5b9a\u4e86\u76ee\u6807\u540d\u79f0\u524d\u7f00\u7684\u8bed\u8a00\u7c7b\u578b\uff08\u4f8b\u5982\u4ececc_library\uff09\u3002","title":"\u4e0eBlaze\u7684\u533a\u522b\u548c\u76f8\u4f3c\u4e4b\u5904"},{"location":"android/flutter/GNTools/#_10","text":"GN\u6784\u5efa\u7cfb\u7edf\u662f\u4e00\u4e2a\u7ec4\u7ec7\u6e90\u4ee3\u7801\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u4e14\u80fd\u591f\u914d\u7f6e\u7f16\u8bd1\u4e0d\u540c\u4ea7\u7269\u7684\u53c2\u6570\uff0cGN\u6784\u5efa\u7cfb\u7edf\u4f7f\u7528\u7684\u662f\u4e00\u4e2a \u987a\u85e4\u6478\u74dc \u7684\u65b9\u5f0f\u4ece\u6e90\u7801 root \u76ee\u5f55\u7684 .gn \u6587\u4ef6\u5f00\u53d1\uff0c\u4e0d\u65ad\u8bfb\u53d6\u76f8\u5173\u5173\u8054\u7684\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u4e3a\u4e0b\u4e00\u6b65\u7684\u7f16\u8bd1\u6784\u5efa\u597d\uff0c\u7f16\u8bd1\u6587\u4ef6\u4f9d\u8d56\u548c\u76f8\u5173\u7684\u53c2\u6570\u914d\u7f6e\uff0c\u4e0b\u4e00\u6b65\u624d\u662f\u6b63\u5728\u7684\u7f16\u8bd1\u5de5\u4f5c\uff0c Ninja \u5de5\u5177\u5728\u6784\u5efa\u7684\u65f6\u5019\u53ea\u4f1a\u66f4\u52a0 GN \u751f\u6210\u7684\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u6e90\u4ee3\u7801\u67e5\u627e\u7f16\u8bd1,\u4e0b\u4e00\u7bc7\u4e2d\u6211\u4eec\u89c1\u4ecb\u7ecd\u76f8\u5173\u7684 Ninja \u811a\u672c\u6587\u4ef6","title":"\u603b\u7ed3"},{"location":"android/flutter/GNTools/#_11","text":"GN\u5b98\u65b9\u6587\u6863 \u6e90\u4ee3\u7801\u4ed3\u5e93 How GN handles cross-compiling depot_tools_tutorial","title":"\u53c2\u8003\u8d44\u6599"},{"location":"android/flutter/MessageLoop/","text":"MessageLoop \b\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217\u5728ThreadHost\u521d\u59cb\u5316\u662f\u7ebf\u7a0b\u5173\u8054\u5230 MessageLoop \u65f6\u8fdb\u884c\u521d\u59cb\u5316 // Copyright 2013 The Flutter Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. #include flutter/fml/message_loop.h #include utility #include flutter/fml/memory/ref_counted.h #include flutter/fml/memory/ref_ptr.h #include flutter/fml/message_loop_impl.h #include flutter/fml/task_runner.h #include flutter/fml/thread_local.h namespace fml { // \u4f7f\u7528\u672c\u5730\u7ebf\u7a0b\u5bf9\u8c61\u4fdd\u5b58\u4e0d\u540cioslate\u7684\u6d88\u606f\u961f\u5217\u4fe1\u606f FML_THREAD_LOCAL ThreadLocal tls_message_loop ([]( intptr_t value ) { delete reinterpret_cast MessageLoop * ( value ); }); // \u83b7\u53d6\u5f53\u524d\u7684\u7ebf\u7a0b\u4fe1\u606f MessageLoop MessageLoop :: GetCurrent () { auto * loop = reinterpret_cast MessageLoop * ( tls_message_loop . Get ()); FML_CHECK ( loop != nullptr ) MessageLoop::EnsureInitializedForCurrentThread was not called on this thread prior to message loop use. ; return * loop ; } void MessageLoop :: EnsureInitializedForCurrentThread () { if ( tls_message_loop . Get () != 0 ) { // Already initialized. return ; } tls_message_loop . Set ( reinterpret_cast intptr_t ( new MessageLoop ())); } bool MessageLoop :: IsInitializedForCurrentThread () { return tls_message_loop . Get () != 0 ; } // \u521b\u5efa\u6d88\u606f\u961f\u5217 MessageLoop :: MessageLoop () : loop_ ( MessageLoopImpl :: Create ()), task_runner_ ( fml :: MakeRefCounted fml :: TaskRunner ( loop_ )) { FML_CHECK ( loop_ ); FML_CHECK ( task_runner_ ); } MessageLoop ::~ MessageLoop () = default ; void MessageLoop :: Run () { loop_ - DoRun (); } void MessageLoop :: Terminate () { loop_ - DoTerminate (); } fml :: RefPtr fml :: TaskRunner MessageLoop :: GetTaskRunner () const { return task_runner_ ; } fml :: RefPtr MessageLoopImpl MessageLoop :: GetLoopImpl () const { return loop_ ; } void MessageLoop :: AddTaskObserver ( intptr_t key , fml :: closure callback ) { loop_ - AddTaskObserver ( key , callback ); } void MessageLoop :: RemoveTaskObserver ( intptr_t key ) { loop_ - RemoveTaskObserver ( key ); } void MessageLoop :: RunExpiredTasksNow () { loop_ - RunExpiredTasksNow (); } } // namespace fml \u4f7f\u7528\u672c\u5730\u7ebf\u7a0b\u5bf9\u8c61\u4fdd\u5b58\u4e0d\u540cioslate\u7684\u6d88\u606f\u961f\u5217\u4fe1\u606f,\u4f7f\u7528 ThreadLocal \u8fdb\u884c\b\b\u6d88\u606f\b\u5faa\u73af\u7684\u4fdd\u5b58 FML_THREAD_LOCAL ThreadLocal tls_message_loop ([]( intptr_t value ) { delete reinterpret_cast MessageLoop * ( value ); }); \u521d\u59cb\u5316MessageLoop: // \u521b\u5efa\u6d88\u606f\u961f\u5217 MessageLoop :: MessageLoop () : loop_ ( MessageLoopImpl :: Create ()), task_runner_ ( fml :: MakeRefCounted fml :: TaskRunner ( loop_ )) { FML_CHECK ( loop_ ); FML_CHECK ( task_runner_ ); } message_loop_impl\u662fMessageLoop\u7684\u5b9e\u73b0\b\u7c7b\uff0c\u771f\u6b63\b\u7ba1\u7406\u6d88\u606f\u7684\u7c7b engine/src/flutter/fml/message_loop_impl.cc ,\b\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u7684\u5177\u4f53\b\u5b9e\u73b0 // Copyright 2013 The Flutter Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. #define FML_USED_ON_EMBEDDER #include flutter/fml/message_loop_impl.h #include algorithm #include vector #include flutter/fml/build_config.h #include flutter/fml/logging.h #include flutter/fml/trace_event.h #if OS_MACOSX #include flutter/fml/platform/darwin/message_loop_darwin.h #elif OS_ANDROID #include flutter/fml/platform/android/message_loop_android.h #elif OS_LINUX #include flutter/fml/platform/linux/message_loop_linux.h #elif OS_WIN #include flutter/fml/platform/win/message_loop_win.h #endif namespace fml { // \u4f7f\u7528\u7f16\u8bd1\u547d\u4ee4\u6765\u6807\u8bb0\u52a0\u8f7d\u4e0d\u540c\u5e73\u53f0\u7684\u6d88\u606f\u961f\u5217 fml :: RefPtr MessageLoopImpl MessageLoopImpl :: Create () { #if OS_MACOSX return fml :: MakeRefCounted MessageLoopDarwin (); #elif OS_ANDROID return fml :: MakeRefCounted MessageLoopAndroid (); #elif OS_LINUX return fml :: MakeRefCounted MessageLoopLinux (); #elif OS_WIN return fml :: MakeRefCounted MessageLoopWin (); #else return nullptr ; #endif }","title":"MessageLoop"},{"location":"android/flutter/NativeExtensions/","text":"native-extensions","title":"NativeExtensions"},{"location":"android/flutter/NinjaSystem/","text":"Ninja \u6784\u5efa\u7cfb\u7edf \u6ce8:\u672c\u6587\u6765\u81ea\u7f51\u7edc\u8d44\u6599\u6574\u7406\uff0c\u4e3b\u8981\u662f\u6c47\u603b\u5b66\u4e60\u8d44\u6599\uff0c\u65b9\u4fbf\u5b8c\u6210FlutterEngine\u7f16\u8bd1\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u5b66\u4e60\u8d44\u6599\u8def\u7ebf \u6982\u8ff0 Ninja \u662f\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\uff0c\u4e0e Make \u7c7b\u4f3c\u3002 \u4f5c\u4e3a\u8f93\u5165\uff0c\u4f60\u9700\u8981\u63cf\u8ff0\u5c06\u6e90\u6587\u4ef6\u5904\u7406\u4e3a\u76ee\u6807\u6587\u4ef6\u8fd9\u4e00\u8fc7\u7a0b\u6240\u9700\u7684\u547d\u4ee4 \u3002 Ninja \u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u4fdd\u6301\u76ee\u6807\u5904\u4e8e\u6700\u65b0\u72b6\u6001\u3002\u4e0e\u5176\u5b83\u4e00\u4e9b\u6784\u5efa\u7cfb\u7edf\u4e0d\u540c\uff0cNinja \u7684\u4e3b\u8981\u8bbe\u8ba1\u76ee\u6807\u662f\u901f\u5ea6\u3002 Ninja \u4e5f\u6709\u5176\u5b83\u4e00\u4e9b\u8bbe\u8ba1\u76ee\u6807\uff1aNinja \u5fc5\u987b\u6613\u4e8e\u5d4c\u5165\u5927\u578b\u6784\u5efa\u7cfb\u7edf\u3002 Ninja \u83b7\u5f97\u4e86\u76f8\u5f53\u7684\u6210\u529f\uff0c\u9010\u6e10\u53d6\u4ee3\u4e86\u6240\u4f7f\u7528\u7684\u6784\u5efa\u7cfb\u7edf\u3002Ninja \u516c\u5f00\u540e\uff0c\u4e00\u4e9b\u4eba\u8d21\u732e\u4e86\u4ee3\u7801\uff0c\u4f7f\u5f97\u6d41\u884c\u7684 CMake \u6784\u5efa\u7cfb\u7edf\u80fd\u591f\u751f\u6210 Ninja \u6587\u4ef6\u3002\u73b0\u5728\uff0cNinja \u4e5f\u88ab\u7528\u6765\u5f00\u53d1\u57fa\u4e8e CMake \u7684\u7cfb\u7edf\uff0c\u5982 LLVM \u548c ReactOS\u3002\u5176\u5b83\u4e00\u4e9b\u62e5\u6709\u5b9a\u5236\u6784\u5efa\u7cfb\u7edf\u7684\u9879\u76ee\uff0c\u5982 TextMate\uff0c\u76f4\u63a5\u5c06 Ninja \u4f5c\u4e3a\u5176\u6784\u5efa\u76ee\u6807\u3002 \u5386\u53f2\u5c0f\u4ecb Ninja \u7684\u8bbe\u8ba1 \u5728\u9ad8\u5c42\u89c6\u89d2\u4e0b\uff0c\u4efb\u4f55\u6784\u5efa\u7cfb\u7edf\u4e3b\u8981\u6267\u884c\u4e09\u9879\u4efb\u52a1\u3002 (1)\u52a0\u8f7d\u548c\u5206\u6790\u6784\u5efa\u76ee\u6807\uff0c (2)\u8ba1\u7b97\u51fa\u8fbe\u5230\u6784\u5efa\u76ee\u6807\u6240\u9700\u7684\u6b65\u9aa4\uff0c (3)\u6267\u884c\u8fd9\u4e9b\u6b65\u9aa4\u3002 Ninja \u505a\u4e86\u4ec0\u4e48 Ninja \u5c06\u7edd\u5927\u90e8\u5206\u5de5\u4f5c\u63a8\u7ed9\u4e86\u6784\u5efa\u6587\u4ef6\u751f\u6210\u5668\uff0c\u90a3\u81ea\u5df1\u8fd8\u6709\u4ec0\u4e48\u4e8b\u5462\uff1f\u4e0a\u8ff0\u60f3\u6cd5\u7406\u8bba\u770b\u4e0a\u5f88\u4e0d\u9519\uff0c\u4f46\u771f\u5b9e\u4e16\u754c\u7684\u9700\u8981\u6c38\u8fdc\u66f4\u590d\u6742\u3002Ninja \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\uff08\u4e5f\u5931\u53bb\uff09\u4e86\u5f88\u591a\u7279\u6027\u3002\u4e0d\u8bba\u4f55\u65f6\uff0c\u91cd\u8981\u7684\u95ee\u9898\u90fd\u662f\u201c\u6211\u4eec\u80fd\u505a\u5f97\u66f4\u5c11\u5417\uff1f\u201d\u6b64\u5904\u6982\u8ff0\u8fd9\u5982\u4f55\u8fd0\u4f5c\u3002 \u5728\u6784\u5efa\u89c4\u5219\u51fa\u9519\u65f6\u9700\u8981\u4eba\u53bb\u8c03\u8bd5\uff08\u6784\u5efa\uff09\u6587\u4ef6\uff0c\u6240\u4ee5 .ninja \u6784\u5efa\u6587\u4ef6\u662f\u666e\u901a\u6587\u672c\uff0c\u4e0e Makefiles \u7c7b\u4f3c\u3002\u4e3a\u4e86\u589e\u5f3a\u53ef\u8bfb\u6027.ninja \u4e5f\u652f\u6301\u4e00\u4e9b\u62bd\u8c61\u3002 \u7b2c\u4e00\u79cd\u62bd\u8c61\u662f\u201crule\u201d \u53ef\u4ee5\u4ee3\u8868\u5355\u4e2a\u547d\u4ee4\u884c\u8c03\u7528\uff0crule \u5b9a\u4e49\u540e\u5728\u4e0d\u540c\u7684\u6784\u5efa\u6b65\u9aa4\u95f4\u5171\u4eab\u3002\u8fd9\u662f Ninja \u8bed\u6cd5\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u58f0\u660e\u4e86\u4e00\u6761\u540d\u4e3a\u201ccompile\u201d\u7684 rule\u2014\u2014\u8fd9\u6761 rule \u4f1a\u8c03\u7528 gcc \u7f16\u8bd1\u5668\uff0c\u6b64\u5916\u8fd8\u6709\u4e24\u6761 build \u8bed\u53e5\u5bf9\u7279\u5b9a\u6587\u4ef6\u4f7f\u7528\u4e86 compile\u3002 rule compile command = gcc -Wall -c $in -o $out build out/foo.o: compile src/foo.c build out/bar.o: compile src/bar.c \u7b2c\u4e8c\u79cd\u62bd\u8c61\u662f\u53d8\u91cf\u3002 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u90a3\u4e9b\u4ee5\u201d\"\u4e3a\u524d\u7f00\u7684\u6807\u8bc6\u7b26\u5c31\u662f\u53d8\u91cf\uff08\"\u4e3a\u524d\u7f00\u7684\u6807\u8bc6\u7b26\u5c31\u662f\u53d8\u91cf\uff08in \u548c $out\uff09\u3002\u53d8\u91cf\u5373\u53ef\u4ee5\u8868\u793a\u547d\u4ee4\u7684\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u547d\u4ee4\u7684\u8f93\u51fa\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u957f\u5b57\u7b26\u4e32\u8d77\u4e00\u4e2a\u77ed\u70b9\u7684\u540d\u5b57\u3002\u8fd9\u91cc\u6709\u4e00\u4e2acompile\u5b9a\u4e49\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u7f16\u8bd1\u5668\u7684\u6807\u5fd7\uff1a cflags = -Wall rule compile command = gcc $cflags -c $in -o $out \u4e00\u6761\u89c4\u5219\u4e2d\u4f7f\u7528\u7684 \u53d8\u91cf \u53ef\u4ee5\u5728\u5355\u4e2a build \u5757\u4e2d\u88ab\u7f29\u8fdb\u8868\u8ff0\u7684\u65b0\u5b9a\u4e49\u8986\u76d6\u3002\u7ee7\u7eed\u4e0a\u9762\u7684\u4f8b\u5b50\uff0ccflags \u7684\u503c\u53ef\u4ee5\u5728\u5355\u4e2a\u6587\u4ef6\u5904\u8c03\u6574\uff1a build out/file_with_extra_flags.o: compile src/baz.c cflags = -Wall -Wextra rule \u4e0e\u51fd\u6570\u5f88\u50cf\uff0c\u800c\u4e14\u53d8\u91cf\u53c8\u9177\u4f3c\u53c2\u6570\u3002\u8fd9\u4e24\u4e2a\u7b80\u5355\u7684\u529f\u80fd\u4f7f Ninja \u7684\u8bed\u6cd5\u4e0e\u7f16\u7a0b\u8bed\u8a00\u8fc7\u4e8e\u76f8\u4f3c\uff0c\u8fd9\u5f88\u5371\u9669\u2014\u2014\u662f\u201c\u4e0d\u505a\u591a\u4f59\u4e8b\u201d\u7684\u5bf9\u7acb\u9762\u3002\u4f46\u4ed6\u4eec\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e0d\u4ec5\u5bf9\u4eba\u975e\u5e38\u6709\u7528\uff0c\u4e5f\u6709\u5229\u4e8e\u7535\u8111\u8ba1\u7b97\uff0c\u56e0\u4e3a\u51cf\u5c11\u4e86\u9700\u8981\u5206\u6790\u7684\u6587\u672c\u91cf\u3002 \u6784\u5efa\u6587\u4ef6\uff0c\u4e00\u65e6\u5b8c\u6210\u5206\u6790\uff0c\u5c31\u53ef\u4ee5\u63cf\u7ed8\u51fa\u4e00\u5e45\u4f9d\u8d56\u56fe\uff1a\u6700\u7ec8\u7684\u4e8c\u8fdb\u5236\u8f93\u51fa\u4f9d\u8d56\u4e8e\u4e00\u7ec4\u5bf9\u8c61\u6587\u4ef6\uff0c\u8fd9\u7ec4\u5bf9\u8c61\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e2a\u90fd\u662f\u7f16\u8bd1\u6e90\u6587\u4ef6\u7684\u7ed3\u679c\u3002\u7279\u522b\u5730\uff0c\u8fd9\u662f\u4e00\u5e45\u4e8c\u5206\u56fe\uff08bipartite graph\uff09\uff0c\u201c\u7ed3\u70b9\u201d\uff08\u8f93\u5165\u6587\u4ef6\uff09\u6307\u5411\u201c\u8fb9\u201d\uff08\u6784\u5efa\u6307\u4ee4\uff09\uff0c\u6784\u5efa\u6307\u4ee4\u518d\u6307\u5411\u201c\u7ed3\u70b9\u201d\uff08\u8f93\u51fa\u6587\u4ef6\uff09[6]\u3002\u6784\u5efa\u8fc7\u7a0b\u5c31\u662f\u904d\u5386\u8fd9\u5e45\u56fe\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6784\u5efa\u76ee\u6807\uff0cNinja \u9996\u5148\u904d\u5386\u8fd9\u5e45\u56fe\u4ee5\u786e\u5b9a\u6bcf\u6761\u201c\u8fb9\u201d\u4e0a\u8f93\u5165\u6587\u4ef6\u7684\u72b6\u6001\uff1a\u5373\uff0c\u8f93\u5165\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u4ee5\u53ca\u88ab\u4fee\u6539\u7684\u65f6\u95f4\u3002Ninja \u968f\u5373\u8ba1\u7b97\u51fa\u4e00\u4efd\u8ba1\u5212\u3002\u8ba1\u5212\u5373\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6700\u7ec8\u76ee\u6807\u5904\u4e8e\u6700\u65b0\u72b6\u6001\u800c\u5fc5\u987b\u6267\u884c\u7684\u201c\u8fb9\u201d\u7684\u96c6\u5408\uff0c\u4f9d\u636e\u4e2d\u95f4\u6587\u4ef6\u7684\u4fee\u6539\u65f6\u95f4\u5224\u65ad\u3002\u6700\u540e\uff0c\u6267\u884c\u8ba1\u5212\uff0c\u904d\u5386\u56fe\u5e76\u5c06\u201c\u8fb9\u201d\u6807\u8bb0\u4e3a\u5df2\u6267\u884c\uff0c\u81f3\u6b64\u987a\u5229\u7ed3\u675f\u3002 \u4f18\u5316 Ninja Ninja \u6700\u521d\u7684\u5b9e\u73b0\u4ed4\u7ec6\u5730\u7ec4\u7ec7\u4e86\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u5feb\u901f\u6784\u5efa\u521b\u9020\u6761\u4ef6\u3002\u4f46\u4ece\u4f18\u5316\u7684\u89d2\u5ea6\u6765\u8bf4\u8fd9\u5e76\u4e0d\u662f\u4e2a\u806a\u660e\u7684\u60f3\u6cd5\u3002\u5728\u7a0b\u5e8f\u5b8c\u6210\u4e4b\u9645\uff0c\u6211\u60f3\u5230\uff0c\u4e00\u4e2a\u5206\u6790\u5668\uff08profiler\uff09\u53ef\u4ee5\u63ed\u793a\u54ea\u4e9b\u4ee3\u7801\u5bf9\u6027\u80fd\u4ea7\u751f\u91cd\u8981\u5f71\u54cd\u3002 \u8fd9\u4e9b\u5e74\u6765\uff0c\u5206\u6790\uff08profiling\uff09\u7684\u7ed3\u679c\u6307\u5411\u8fc7\u7a0b\u5e8f\u7684\u4e0d\u540c\u7684\u533a\u57df\u3002\u6709\u65f6\u662f\u5355\u4e2a\u70ed\u70b9\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5fae\u4f18\u5316\uff08micro-optimized\uff09\u3002\u66f4\u591a\u65f6\u5019\uff0c\u5206\u6790\u4f1a\u6307\u5411\u4e00\u4e9b\u66f4\u5e7f\u6cdb\u7684\u95ee\u9898\uff0c\u5982\uff0c\u9664\u975e\u5fc5\u8981\uff0c\u4e0d\u8981\u5206\u914d\u6216\u590d\u5236\u5185\u5b58\u3002\u4e5f\u5b58\u5728\u67d0\u4e9b\u60c5\u578b\uff0c\u91c7\u7528\u66f4\u597d\u7684\u8868\u793a\u65b9\u6cd5\u6216\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u83b7\u5f97\u6700\u597d\u7684\u6548\u679c\u3002\u63a5\u4e0b\u6765\u662f\u5bf9 Ninja \u7684\u5b9e\u73b0\u7684\u7b80\u5355\u8868\u8ff0\uff0c\u4ee5\u53ca\u56f4\u7ed5 Ninja \u6027\u80fd\u7684\u6709\u8da3\u6545\u4e8b\u3002 \u89e3\u6790(Parsing) \u8d77\u521d\uff0cNinja \u4f7f\u7528\u7684\u662f\u624b\u5199\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u548c\u9012\u5f52\u4e0b\u964d\u5206\u6790\u5668\u3002\u6211\u4ee5\u4e3a\u8bed\u6cd5\u8db3\u591f\u7b80\u5355\u4e86\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5bf9\u4e8e\u50cf \u8fd9\u6837\u591f\u5927\u7684\u9879\u76ee\u4ec5\u4ec5\u662f\u89e3\u6790\u6784\u5efa\u6587\u4ef6\uff08\u62d3\u5c55\u540d\u4ee5 .ninja \u7ed3\u5c3e\uff09\u6240\u6d88\u8017\u7684\u65f6\u95f4\u90fd\u5341\u5206\u4ee4\u4eba\u5403\u3002 \u5f88\u5feb\uff0c\u6700\u521d\u7528\u6765\u89e3\u6790\u5355\u4e2a\u5b57\u7b26\u7684\u51fd\u6570\u5f88\u5feb\u51fa\u73b0\u5728\u5206\u6790\u7ed3\u679c\u4e2d\uff1a static bool IsIdentifierCharacter ( char c ) { return ( a = c c = z ) || ( A = c c = Z ) || // and so on... } `` \u4e00\u4e2a\u7b80\u5355\u7684\u8c03\u6574\u5c31\u53ef\u4ee5\u8282\u7701 200 \u6beb\u79d2\u2014\u2014\u7528\u4e00\u4e2a\u6709 256 \u4e2a\u6761\u76ee\u3001\u4ee5\u8f93\u5165\u5b57\u7b26\u4e3a\u7d22\u5f15\u7684\u67e5\u627e\u8868\u66ff\u6362\u8fd9\u4e2a\u51fd\u6570\u3002\u8fd9\u6837\u4e00\u5f20\u8868\u7528 Python \u4ee3\u7801\u5f88\u597d\u751f\u6210\uff0c\u50cf\u8fd9\u6837\uff1a ``` shell cs = set () for c in string.ascii_letters + string.digits + r +,-./\\_$ : cs.add ( ord ( c )) for i in range ( 256 ) : print %d, % ( i in cs ) , \u8fd9\u4e2a\u6280\u5de7\u4f7f Ninja \u5728\u76f8\u5f53\u4e00\u6bb5\u65f6\u95f4\u91cc\u4fdd\u8bc1\u4e86\u8fd0\u884c\u901f\u5ea6\u3002\u6700\u7ec8\u6211\u4eec\u8f6c\u79fb\u5230\u4e86\u66f4\u6b63\u5f0f\u7684\u5de5\u5177\uff1are2c\uff0cPHP\u6240\u7528\u7684\u8bcd\u6cd5\u5206\u6790\u5668\uff08lexer\uff09\u751f\u6210\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u751f\u6210\u66f4\u590d\u6742\u7684\u67e5\u627e\u8868\uff0c\u548c\u4eba\u65e0\u6cd5\u7406\u89e3\u7684\u4ee3\u7801\u3002\u4f8b\u5982\uff1a if ( yych = b ) { if ( yych == ` ) goto yy24 ; if ( yych = a ) goto yy21 ; // and so on... \u5f53\u521d\u91c7\u7528\u6587\u672c\u683c\u5f0f\u4f5c\u4e3a\u8f93\u5165\u683c\u5f0f\u662f\u5426\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1f\u8fd9\u4e00\u70b9\u4f9d\u7136\u4e0d\u660e\u786e\u3002\u6216\u8bb8\u6700\u7ec8\u6211\u4eec\u4f1a\u91c7\u7528\u67d0\u79cd\u673a\u5668\u53cb\u597d\u7684\u683c\u5f0f\u4f5c\u4e3a Ninja \u8f93\u5165\u6587\u4ef6\u7684\u683c\u5f0f\uff0c\u8fd9\u4e5f\u8bb8\u53ef\u4ee5\u907f\u514d\u7edd\u5927\u90e8\u5206\u89e3\u6790\u5de5\u4f5c\u3002 \u89c4\u8303\u5316\uff08Canonicalization\uff09 Ninja \u907f\u514d\u7528\u5b57\u7b26\u4e32\u8bc6\u522b\u8def\u5f84\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0cNinja \u5c06\u5b83\u9047\u5230\u7684\u6bcf\u4e2a\u8def\u5f84\u6620\u5c04\u5230\u552f\u4e00\u7684 Node \u5bf9\u8c61\uff0c\u5728\u540e\u7eed\u4ee3\u7801\u4e2d\u4ee5 Node \u5bf9\u8c61\u8868\u793a\u8fd9\u4e00\u8def\u5f84\u3002\u590d\u7528 Node \u5bf9\u8c61\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8def\u5f84\u53ea\u5728\u786c\u76d8\u4e0a\u68c0\u67e5\u4e00\u6b21\uff0c\u68c0\u67e5\u7684\u7ed3\u679c\uff08\u4f8b\u5982\uff0c\u4fee\u6539\u65f6\u95f4\uff09\u53ef\u5728\u5176\u5b83\u4ee3\u7801\u4e2d\u590d\u7528\u3002 \u6307\u5411 Node \u5bf9\u8c61\u7684\u6307\u9488\u5982\u540c\u8fd9\u4e00\u8def\u5f84\u7684\u552f\u4e00\u6807\u8bc6\u3002\u5982\u679c\u60f3\u8981\u6d4b\u8bd5\u4e24\u4e2a Node \u662f\u5426\u6307\u5411\u540c\u4e00\u8def\u5f84\uff0c\u6bd4\u8f83\u6307\u9488\u5c31\u8db3\u591f\u4e86\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u6602\u8d35\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002\u4f8b\u5982\uff0c\u5728 Ninja \u904d\u5386\u8f93\u5165\u6587\u4ef6\u6784\u6210\u7684\u56fe\u65f6\uff0c\u4f1a\u4fdd\u5b58\u4e00\u4e2a Node \u4f9d\u8d56\u6808\uff0c\u4ee5\u68c0\u67e5\u4f9d\u8d56\u662f\u5426\u6709\u73af\uff1a\u5982\u679c A \u4f9d\u8d56 B\uff0cB\u4f9d\u8d56 C\uff0c\u800c C \u53c8\u4f9d\u8d56 A\u3002\u6784\u5efa\u5c31\u65e0\u6cd5\u8fdb\u884c\u3002\u8fd9\u4e2a\u6808\uff0c\u4ee3\u8868\u4e00\u7ec4\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u6307\u9488\u76f8\u7b49\u6027\u5224\u65ad\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u6307\u5411\u4e00\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u603b\u662f\u6307\u5411\u540c\u4e00 Node\uff0cNinja \u5fc5\u987b\u53ef\u9760\u5730\u5c06\u4e00\u4e2a\u6587\u4ef6\u6240\u6709\u53ef\u80fd\u7684\u540d\u5b57\u6620\u5c04\u5230\u540c\u4e00 Node \u5bf9\u8c61\u3002\u8fd9\u9700\u8981\u5bf9\u8f93\u5165\u6587\u4ef6\u4e2d\u63d0\u5230\u7684\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u89c4\u8303\u5316\uff08canonicalization\uff09\uff0c\u5c06\u50cf foo/../bar.h \u8fd9\u6837\u7684\u8def\u5f84\u8f6c\u6362\u4e3a bar.h\u3002\u6700\u521d\uff0cNinja \u53ea\u662f\u7b80\u5355\u5730\u8981\u6c42\u6240\u6709\u8def\u5f84\u4ee5\u89c4\u8303\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u4f46\u7531\u4e8e\u51e0\u4e2a\u539f\u56e0\uff0c\u8fd9\u6700\u540e\u8fd8\u662f\u4e0d\u884c\u3002\u4e00\u4e2a\u539f\u56e0\u662f\u7528\u6237\u6307\u5b9a\u7684\u8def\u5f84\uff08\u4f8b\u5982\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 ninja ./bar.h \uff09\u5e94\u8be5\u80fd\u6b63\u786e\u5de5\u4f5c\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u53d8\u91cf\u7684\u7ec4\u5408\u53ef\u80fd\u4ea7\u751f\u51fa\u4e0d\u89c4\u8303\u7684\u8def\u5f84\u3002\u6700\u540e\uff0cgcc \u7ed9\u51fa\u7684\u4f9d\u8d56\u4fe1\u606f\u53ef\u80fd\u4e0d\u89c4\u8303\u3002 \u4e8e\u662f\uff0c\u6700\u7ec8\uff0cNinja \u5bf9\u8def\u5f84\u8fdb\u5904\u7406\u3002\u8fd9\u4e5f\u5bfc\u81f4\u8def\u5f84\u529f\u80fd\u6210\u80fd\u6210\u4e3a\u5206\u6790\u7ed3\u679c\u4e2d\u7684\u53e6\u4e00\u5904\u70ed\u70b9\u3002\u539f\u6765\u7684\u5b9e\u73b0\u662f\u4ee5\u6e05\u6670\u800c\u4e0d\u662f\u4ee5\u6027\u80fd\u4e3a\u91cd\u70b9\u7f16\u5199\u7684\uff0c\u6240\u4ee5\u6807\u51c6\u7684\u4f18\u5316\u6280\u672f\uff0c\u5982\u79fb\u9664\u53cc\u5faa\u73af\uff08removing a double loop\uff09\u6216\u907f\u514d\u5185\u5b58\u5206\u914d\uff0c\u4f5c\u7528\u663e\u8457\u3002 \u8bbe\u8ba1\u76ee\u6807 \u8fd9\u91cc\u662fNinja\u7684\u8bbe\u8ba1\u76ee\u6807 \u975e\u5e38\u5feb\uff08\u5373\u77ac\u95f4\uff09\u589e\u91cf\u6784\u5efa\uff0c\u5373\u4f7f\u662f\u975e\u5e38\u5927\u7684\u9879\u76ee\u3002 \u4ee3\u7801\u5982\u4f55\u6784\u5efa\u7684\u7b56\u7565\u975e\u5e38\u5c11\u3002\u5173\u4e8e\u4ee3\u7801\u5982\u4f55\u6784\u5efa\u4e0d\u540c\u7684\u9879\u76ee\u548c\u9ad8\u7ea7\u6784\u5efa\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u610f\u89c1\uff1b\u4f8b\u5982\uff0c\u6784\u5efa\u76ee\u6807\u662f\u5e94\u8be5\u4e0e\u4ee3\u7801\u653e\u5728\u4e00\u8d77\u8fd8\u662f\u653e\u5728\u5355\u72ec\u7684\u76ee\u5f55\u91cc\uff1f\u662f\u5426\u6709\u4e3a\u9879\u76ee\u6784\u5efa\u4e00\u4e2a\u53ef\u5206\u53d1\u7684\u201c\u5305\u201d\u7684\u89c4\u5219\uff1f\u89c4\u907f\u8fd9\u4e9b\u7b56\u7565\uff0c\u800c\u4e0d\u662f\u9009\u62e9\uff0c\u5426\u5219\u53ea\u4f1a\u53d8\u5f97\u590d\u6742\u3002 \u83b7\u53d6\u6b63\u786e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u60c5\u51b5\u4e0bMakefiles\u5f88\u96be\u83b7\u53d6\u6b63\u786e\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u4f8b\u5982\uff1a\u8f93\u51fa\u9690\u5f0f\u4f9d\u8d56\u4e8e\u547d\u4ee4\u884c\u751f\u6210\uff0c\u6784\u5efac\u4ee3\u7801\u4f60\u9700\u8981\u4f7f\u7528gcc\u7684-M\u6807\u5fd7\u53bb\u751f\u6210\u5176\u5934\u6587\u4ef6\u4f9d\u8d56\uff09 \u5f53\u76ee\u6807\u548c\u904d\u5386\u51b2\u7a81\u65f6\u6211\u4eec\u9009\u62e9\u901f\u5ea6. \u4e00\u4e9b\u660e\u786e\u7684 non-goals: \u65b9\u4fbf\u4eba\u5de5\u7f16\u5199\u6784\u5efa\u6587\u4ef6\u7684\u8bed\u6cd5\u3002\u4f60\u5e94\u8be5\u4f7f\u7528\u5176\u5b83\u7a0b\u5e8f\u6765\u751f\u6210\u4f60\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u8fd9\u662f\u6211\u4eec\u53ef\u4ee5\u56de\u907f\u8bb8\u591a\u7b56\u7565\u51b3\u5b9a\u3002 built-in rules. _Out of the box, Ninja has no rules for e.g. compiling C code._ build-time customization of the build. _Options belong in the program that generates the ninja files_. build-time decision-making ability such as conditionals or search paths. Making decisions is slow. \u91cd\u7533\u4e00\u4e0b\uff0cNinja\u6bd4\u5176\u5b83\u6784\u5efa\u7cfb\u7edf\u8981\u5feb\uff0c\u56e0\u4e3a\u5b83\u662f\u5f02\u5e38\u7684\u7b80\u5355\u3002\u5728\u4f60\u4e3a\u4f60\u7684\u9879\u76ee\u7f16\u5199.ninja\u6587\u4ef6\u65f6\u4f60\u5fc5\u987b\u544a\u8bc9Ninja\u8981\u5b83\u505a\u4ec0\u4e48\u3002 \u4e0eMake\u6bd4\u8f83 Ninja\u7684\u5b9a\u4f4d\u975e\u5e38\u6e05\u6670\uff0c\u5c31\u662f\u8fbe\u5230\u66f4\u5feb\u7684\u6784\u5efa\u901f\u5ea6\u3002 ninja\u7684\u8bbe\u8ba1\u662f\u5bf9\u4e8emake\u7684\u7f3a\u9677\u7684\u8003\u8651\uff0c\u8ba4\u4e3amake\u6709\u4e0b\u9762\u51e0\u70b9\u9020\u6210\u7f16\u8bd1\u901f\u5ea6\u8fc7\u6162\uff1a \u9690\u5f0f\u89c4\u5219\uff0cmake\u5305\u542b\u5f88\u591a\u9ed8\u8ba4 \u53d8\u91cf\u8ba1\u7b97\uff0c\u6bd4\u5982\u7f16\u8bd1\u53c2\u4e0e\u5e94\u8be5\u5982\u4f55\u8ba1\u7b97\u51fa\u6765 \u4f9d\u8d56\u5bf9\u8c61\u8ba1\u7b97 ninja\u8ba4\u4e3a\u63cf\u8ff0\u6587\u4ef6\u5e94\u8be5\u662f\u8fd9\u6837\u7684: \u4f9d\u8d56\u5fc5\u987b\u663e\u5f0f\u5199\u660e(\u4e3a\u4e86\u65b9\u4fbf\u53ef\u4ee5\u4ea7\u751f\u4f9d\u8d56\u63cf\u8ff0\u6587\u4ef6) \u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u8ba1\u7b97 \u6ca1\u6709\u9ed8\u8ba4\u89c4\u5219\uff0c\u6ca1\u6709\u4efb\u4f55\u9ed8\u8ba4\u503c \u9488\u5bf9\u8fd9\u70b9\u6240\u4ee5\u57fa\u672c\u4e0a\u53ef\u4ee5\u8ba4\u4e3aninja\u5c31\u662fmake\u7684\u6700\u6700\u7cbe\u7b80\u7248\u3002 ninja\u76f8\u5bf9\u4e8emake\u589e\u52a0\u4e86\u4e0b\u9762\u8fd9\u4e9b\u529f\u80fd\uff1a \u5982\u679c\u6784\u5efa\u547d\u4ee4\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6784\u5efa\u4e5f\u4f1a\u91cd\u65b0\u6267\u884c\u3002 \u6240\u4f9d\u8d56\u7684\u76ee\u5f55\u5728\u6784\u5efa\u4e4b\u524d\u90fd\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u6267\u884c\u547d\u4ee4\u4e4b\u524d\u90fd\u8981\u53bb\u751f\u6210\u76ee\u5f55\u3002 \u6bcf\u6761\u6784\u5efa\u89c4\u5219\uff0c\u9664\u4e86\u6267\u884c\u547d\u4ee4\u4e4b\u5916\uff0c\u8fd8\u5141\u8bb8\u6709\u4e00\u4e2a\u63cf\u8ff0\uff0c\u771f\u6b63\u6267\u884c\u6253\u5370\u8fd9\u4e2a\u63cf\u8ff0\u800c\u4e0d\u662f\u5b9e\u9645\u6267\u884c\u547d\u4ee4\u3002 \u6bcf\u6761\u89c4\u5219\u7684\u8f93\u51fa\u90fd\u662fbuffered\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5e76\u884c\u7f16\u8bd1\uff0c\u8f93\u5165\u5185\u5bb9\u4e0d\u4f1a\u88ab\u6405\u548c\u5728\u4e00\u8d77\u3002 \u6784\u5efa\u5de5\u5177\u592a\u591a\u4e86\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97make\u4e3b\u8981\u504f\u5927\u4f17\u5316\u4e00\u70b9\uff0c\u53ef\u4ee5\u8fdb\u884c\u5404\u79cd\u9690\u5f0f\u63a8\u5bfc\uff0c\u6bd4\u8f83\u7075\u6d3b\uff0c\u6bcf\u4e00\u6761\u547d\u4ee4\u6267\u884c\u90fd\u6709\u8f93\u51fa\u3002 \u800cNinja\u4e3b\u8981\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u4e3a\u4e86\u50cfchromium\u8fd9\u79cd\u5927\u578b\u9879\u76ee\uff0c\u80fd\u591f\u663e\u8457\u7684\u63d0\u9ad8\u7f16\u8bd1\u901f\u5ea6\uff0c\u4e00\u65b9\u9762\u5b83\u53bb\u6389\u4e86\u5404\u79cd\u8ba1\u7b97\u548c\u63a8\u5bfc\uff0c\u628a\u4e00\u4e9b\u8017\u65f6\u7684\u9700\u8981\u8ba1\u7b97\u7684\u4e1c\u897f\u53bb\u6389\u4e86\uff0c\u53ea\u7559\u4e0b\u7b80\u5355\u91cd\u8981\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u5982\u679c\u81ea\u5df1\u53bb\u5199build.ninja\u6587\u4ef6\u7684\u8bdd\u6bd4\u8f83\u7e41\u7410\uff0c\u6240\u4ee5\u90fd\u662f\u4f9d\u8d56\u4e8e\u5176\u5b83\u6784\u5efa\u5de5\u5177\u751f\u6210\u7684\uff0c\u53e6\u4e00\u65b9\u9762\u5b83\u6bcf\u6b21\u8f93\u51fa\u53ea\u8f93\u51fa\u4e00\u4e2a\u63cf\u8ff0\uff0c\u800c\u4e0d\u662f\u771f\u6b63\u7684\u547d\u4ee4\u6267\u884c\u8f93\u51fa\uff0c\u771f\u6b63\u7684\u547d\u4ee4\u6267\u884c\u518d\u540e\u53f0\u8fd0\u884c\uff0c\u53ea\u6709\u8b66\u544a\u548c\u62a5\u9519\u4fe1\u606f\u624d\u4f1a\u663e\u793a\u51fa\u6765\uff0c\u8fd9\u4e5f\u63d0\u9ad8\u4e86\u5b83\u7684\u901f\u5ea6\u3002 Make vs Ninja Performance Comparison\u8fd9\u7bc7\u6587\u7ae0\u5bf9Make\u63a5Ninja\u8fdb\u884c\u6d4b\u8bd5\u5bf9\u6bd4\u3002 \u5728\u4f60\u7684\u9879\u76ee\u4e2d\u4f7f\u7528ninja Ninja \u76ee\u524d\u5728Windows\u548c\u7c7bUnix\u7cfb\u7edf\u90fd\u652f\u6301\uff0c\u867d\u7136\u5927\u90e8\u5206\u6d4b\u8bd5\u90fd\u662f\u5728linux\u4e0a\u5b8c\u6210\u7684\uff08\u5e76\u4e14\u5728Linux\u4e0a\u6027\u80fd\u4e5f\u6700\u597d\uff09\uff0c\u4e0d\u8fc7\u5728MAC OS X\u548cFreeBSD \u4e0a\u4e5f\u90fd\u80fd\u5f88\u597d\u7684\u5de5\u4f5c\u3002 \u5982\u679c\u4f60\u7684\u9879\u76ee\u5f88\u5c0f\uff0cNinja\u7684\u901f\u5ea6\u4f18\u52bf\u53ef\u80fd\u4e0d\u90a3\u4e48\u660e\u663e\uff08\u7136\u800c\uff0c\u5373\u4f7f\u662f\u5c0f\u9879\u76ee\uff0cNinja\u7684\u6781\u5176\u7b80\u6d01\u7684\u8bed\u6cd5\u548c\u6781\u5176\u7b80\u5355\u7684\u6784\u5efa\u89c4\u5219\uff0c\u4e5f\u4f7f\u4f60\u7684\u9879\u76ee\u80fd\u591f\u66f4\u52a0\u5feb\u901f\u7684\u6784\u5efa\uff09\u3002\u6362\u4e00\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5bf9\u4f60\u7684\u9879\u76ee\u7f16\u8f91-\u7f16\u8bd1\u7684\u5faa\u73af\u65f6\u95f4\u611f\u5230\u6ee1\u610f\uff0c\u90a3\u4e48Ninja\u53ef\u80fd\u5bf9\u4f60\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u5e2e\u52a9\u3002 \u8fd8\u6709\u8bb8\u591a\u5176\u5b83\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u6bd4Ninja\u4f7f\u7528\u66f4\u52a0\u53cb\u597d\uff0c\u529f\u80fd\u4e5f\u66f4\u52a0\u5f3a\u5927\u3002\u4f5c\u8005\u89c9\u5f97Ninja\u7684\u8bbe\u8ba1\u53d7\u5230\u4e86tup\u6784\u5efa\u7cfb\u7edf\u8bbe\u8ba1\u7684\u5f71\u54cd\uff0c\u5e76\u8ba4\u4e3a\u91cd\u505a\u7684\u8bbe\u8ba1\u975e\u5e38\u806a\u660e\u3002 Ninja\u7684\u597d\u5904\u662f\u53ef\u4ee5\u5c06\u5b83\u4e0e\u667a\u80fd\u7684\u5143\u6784\u5efa\u7cfb\u7edf\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002 gyp\u7528\u4e8e\u751f\u6210Google \u548c\u76f8\u5173\u9879\u76ee\uff08v8\uff0cnode.js\uff09\u7684\u5143\u6784\u5efa\u6587\u4ef6\u5efa\u7acb\u7cfb\u7edf\uff0c\u5df2\u88abGN\u53d6\u4ee3\u3002 gyp\u53ef\u4ee5\u4e3a\u652f\u6301\u7684\u6240\u6709\u5e73\u53f0\u751f\u6210Ninja\u6587\u4ef6\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Chromium Ninja\u6587\u6863\u3002 CMake\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u5143\u6784\u5efa\u7cfb\u7edf\uff0c\u5728Linux\u4e0aCMake 2.8.8\u7248\u672c\u53ef\u4ee5\u751f\u6210Ninja\u6587\u4ef6\u3002 \u8f83\u65b0\u7248\u672c\u7684CMake\u652f\u6301\u5728Windows\u548cMac OS X\u4e0a\u751f\u6210Ninja\u6587\u4ef6\u3002 \u5176\u4ed6:Ninja\u5e94\u8be5\u5b8c\u5584\u5176\u4ed6\u5143\u6784\u5efa\u8f6f\u4ef6\u7684\u652f\u6301\uff0c\u4f8b\u5982premake\u3002 \u5982\u679c\u4f60\u5728\u505a\u8fd9\u9879\u5de5\u4f5c\uff0c\u8bf7\u8ba9\u6211\u4eec\u77e5\u9053\uff01 \u8fd0\u884cNinja \u8fd0\u884cninja\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u67e5\u627e\u540d\u4e3abuild.ninja\u7684\u6587\u4ef6 \u5e76\u6784\u5efa\u6240\u6709\u8fc7\u671f\u76ee\u6807\u3002 \u60a8\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u6307\u5b9a\u8981\u6784\u5efa\u7684\u76ee\u6807\uff08\u6587\u4ef6\uff09\u3002 \u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u8bed\u6cd5,\u76ee\u6807^\u6307\u5b9a\u7684\u76ee\u6807\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u8f93\u51fa\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6307\u5b9a\u76ee\u6807 foo.c ^, \u90a3\u4e48foo.o\u5c06\u9996\u5148\u88ab\u6784\u5efa\uff08\u5047\u8bbe\u4f60\u7684\u6784\u5efa\u6587\u4ef6\u4e2d\u5b58\u5728\u8fd9\u4e9b\u76ee\u6807\uff09\u3002 ninja -h \u6253\u5370\u5e2e\u52a9\u3002 \u8bb8\u591aNinja\u7684flags\u4e0eMake\u662f\u5339\u914d\u7684; \u4f8b\u5982ninja -C build -j 20\u6539\u6210\u6784\u5efa\u76ee\u5f55\u5e76\u5e76\u884c\u8fd0\u884c20\u4e2a\u6784\u5efa\u547d\u4ee4\u3002 \uff08\u6ce8\u610f Ninja\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ee5\u5e76\u884c\u65b9\u5f0f\u8fd0\u884c\u547d\u4ee4\uff0c\u6240\u4ee5\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u4f20\u9012-j\u3002\uff09 Ninja \u9ed8\u8ba4\u57fa\u4e8e\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684 CPU \u6570\u91cf\u4ee5\u5e76\u53d1\u65b9\u5f0f\u6267\u884c\u6307\u4ee4\u3002\u56e0\u4e3a\u540c\u65f6\u8fd0\u884c\u7684\u547d\u4ee4\u4eec\u7684\u8f93\u51fa\u53ef\u80fd\u6df7\u6dc6\uff0cNinja \u4f1a\u5728\u4e00\u4e2a\u547d\u4ee4\u5b8c\u6210\u524d\u7f13\u5b58\u5176\u8f93\u51fa\u3002\u4ece\u7ed3\u679c\u770b\uff0c\u5982\u540c\u547d\u4ee4\u662f\u4e32\u884c\u7684\u3002 \u8fd9\u79cd\u5bf9\u547d\u4ee4\u8f93\u51fa\u7684\u63a7\u5236\u4f7f\u5f97 Ninja \u53ef\u4ee5\u5c0f\u5fc3\u63a7\u5236\u603b\u7684\u8f93\u51fa\u3002\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d Ninja \u663e\u793a\u4e00\u884c\u8868\u793a\u72b6\u6001\uff1b\u5982\u679c\u6784\u5efa\u987a\u5229\u5b8c\u6210\uff0cNinja \u7684\u5168\u90e8\u8f93\u51fa\u5c31\u53ea\u6709\u4e00\u884c\u3002\u8fd9\u4e0d\u4f1a\u4f7f Ninja \u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u4f46\u53ef\u4ee5\u4f7f\u4eba\u611f\u89c9 Ninja \u5f88\u5feb\uff0c\u8fd9\u51e0\u4e4e\u4e0e\u5728\u771f\u5b9e\u901f\u5ea6\u4e0a\u7684\u76ee\u6807\u4e00\u6837\u91cd\u8981\u3002 \u73af\u5883\u53d8\u91cf Ninja\u652f\u6301\u7528\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u6765\u63a7\u5236\u5176\u884c\u4e3a\uff1a NINJA STATUS\uff0c\u5728\u8fd0\u884c\u89c4\u5219\u4e4b\u524d\u4f1a\u6253\u5370\u8fdb\u5ea6\u72b6\u6001\u3002 \u4e0b\u9762\u662f\u51e0\u4e2a\u53ef\u7528\u7684\u5360\u4f4d\u7b26\uff1a %s:: The number of started edges. %t:: The total number of edges that must be run to complete the build. %p:: The percentage of started edges. %r:: The number of currently running edges. %u:: The number of remaining edges to start. %f:: The number of finished edges. %o:: Overall rate of finished edges per second %c:: Current rate of finished edges per second ( average over builds specified by -j or its default ) %e:: Elapsed time in seconds. ( Available since Ninja 1 .2. ) %%:: A plain % character. \u9ed8\u8ba4\u8fdb\u5ea6\u72b6\u6001\u4e3a \"[%f/%t] \" ( \u6ce8\u610f\u7ed3\u5c3e\u7a7a\u683c\u4ee5\u4e0e\u6784\u5efa\u89c4\u5219\u5206\u5f00). \u53e6\u4e00\u4e2a\u53ef\u80fd\u7684\u8fdb\u5ea6\u72b6\u6001\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a \"[%u/%r/%f] \". \u6269\u5c55\u5de5\u5177 \u5728Ninja\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u547d\u4ee4\u884c\u91cc\u4f7f\u7528-t\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e9b\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u76ee\u524d\u6709\u4ee5\u4e0b\u4e00\u4e9b\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528\uff1a query:: dump\u6307\u5b9atarget\u7684\u8f93\u5165\u548c\u8f93\u51fa. browse:: \u5728Web\u6d4f\u89c8\u5668\u4e2d\u6d4f\u89c8\u4f9d\u8d56\u5173\u7cfb\u56fe\u3002 \u5355\u51fb\u6587\u4ef6\u5c06\u7126\u70b9\u5207\u5230\u8be5\u6587\u4ef6\u4e0a\uff0c\u4f1a\u663e\u793a\u8f93\u5165\u548c\u8f93\u51fa\u3002 \u8fd9\u4e2a \u529f\u80fd\u9700\u8981Python\u5b89\u88c5\u3002 \u9ed8\u8ba4\u4f7f\u7528\u7aef\u53e38000\u5e76\u6253\u5f00Web\u6d4f\u89c8\u5668\u3002 \u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u4fee\u6539\uff1a ninja -t browse --port=8000 --no-browser mytarget graph::\u4ee5\u81ea\u52a8\u56fe\u5f62\u5e03\u5c40\u5de5\u5177graphviz\u7684\u8bed\u6cd5\u8f93\u51fa\u4e00\u4e2a\u6587\u4ef6\u3002 \u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a ninja -t graph mytarget | dot -Tpng -ograph.png \u5728Ninja\u6e90\u4ee3\u7801\u6811\u4e2d\uff0c\u8fd0\u884c\u201cninja graph.png\u201d\u547d\u4ee4\u5c06\u4e3aNinja\u672c\u8eab\u751f\u6210\u4e00\u5f20\u56fe\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u76ee\u6807\u5219\u5c06\u4e3a all\u76ee\u6807\u751f\u6210\u3002 \u7f16\u5199\u4f60\u81ea\u5df1\u7684Ninja\u6587\u4ef6 \u6982\u8ff0 Ninja\u548cMake\u975e\u5e38\u76f8\u4f3c\u3002\u4ed6\u6267\u884c\u4e00\u4e2a\u6587\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u56fe\uff0c\u901a\u8fc7\u68c0\u6d4b\u6587\u4ef6\u4fee\u6539\u65f6\u95f4,\u8fd0\u884c\u5fc5\u8981\u7684\u547d\u4ee4\u6765\u66f4\u65b0\u4f60\u7684\u6784\u5efa\u76ee\u6807\u3002 \u4e00\u4e2a\u6784\u5efa\u6587\u4ef6\uff08\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3a\uff1abuild.ninja\uff09\u63d0\u4f9b\u4e00\u4e2arule\uff08\u89c4\u5219\uff09\u8868\u2014\u2014\u957f\u547d\u4ee4\u7684\u7b80\u77ed\u540d\u79f0\uff0c\u548c\u8fd0\u884c\u7f16\u8bd1\u5668\u7684\u65b9\u5f0f\u3002\u540c\u65f6\uff0c\u9644\u5e26\u63d0\u4f9bbuild\uff08\u6784\u5efa\uff09\u8bed\u53e5\u5217\u8868\uff0c\u8868\u660e\u901a\u8fc7rule\u5982\u4f55\u6784\u5efa\u6587\u4ef6\u2014\u2014\u54ea\u6761\u89c4\u5219\u5e94\u7528\u4e8e\u54ea\u4e2a\u8f93\u5165\u4ea7\u751f\u54ea\u4e00\u4e2a\u8f93\u51fa\u3002 \u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0cbuild\u8bed\u53e5\u63cf\u8ff0\u9879\u76ee\u7684\u4f9d\u8d56\u56fe\uff1b\u800crule\u8bed\u53e5\u63cf\u8ff0\u5f53\u7ed9\u5b9a\u4e00\u4e2a\u56fe\u7684\u4e00\u6761\u8fb9\u65f6\uff0c\u5982\u4f55\u751f\u6210\u6587\u4ef6\u3002 \u8bed\u6cd5\u4f8b\u5b50 \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u9a8c\u8bc1\u7edd\u5927\u90e8\u5206\u8bed\u6cd5\u7684.ninja\u6587\u4ef6\uff0c\u5c06\u4f5c\u4e3a\u540e\u7eed\u63cf\u8ff0\u76f8\u5173\u7684\u793a\u4f8b\u3002\u5177\u4f53\u5185\u5bb9\uff0c\u5982\u4e0b\uff1a cflags = -Wall rule cc command = gcc $cflags -c $in -o $out build foo.o: cc foo.c \u53d8\u91cf ninja\u652f\u6301\u4e3a\u5b57\u7b26\u4e32\u58f0\u660e\u7b80\u77ed\u53ef\u8bfb\u7684\u540d\u5b57\u3002\u4e00\u4e2a\u58f0\u660e\u7684\u8bed\u6cd5\uff0c\u5982\u4e0b\uff1a cflags = -g \u53ef\u4ee5\u5728=\u53f3\u8fb9\u4f7f\u7528\uff0c\u5e76\u901a\u8fc7$\u8fdb\u884c\u5f15\u7528\uff08\u7c7b\u4f3cshell\u548cperl\u7684\u8bed\u6cd5\uff09\u3002\u5177\u4f53\u5f62\u5f0f\uff0c\u5982\u4e0b\uff1a rule cc command = gcc $cflags -c $in -o $out \u53d8\u91cf\u8fd8\u53ef\u4ee5\u7528 {in}( {in}( \u548c\u6210\u5bf9\u7684\u5927\u62ec\u53f7)\u6765\u5f15\u7528\u3002 \u5f53\u7ed9\u5b9a\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u53ea\u80fd\u8986\u76d6\uff08shadowed\uff09\u65f6,\u53d8\u91cf\u66f4\u6070\u5f53\u7684\u53eb\u6cd5\u662f\u7ed1\u5b9a\uff08\u201dbindings\u201d\uff09\u3002 \u89c4\u5219 \u89c4\u5219\u4e3a\u547d\u4ee4\u884c\u58f0\u660e\u4e00\u4e2a\u7b80\u77ed\u7684\u540d\u79f0\u3002\u4ed6\u4eec\u7531\u5173\u952e\u5b57rule\u548c\u4e00\u4e2a\u89c4\u5219\u540d\u79f0\u6253\u5934\u7684\u884c\u5f00\u59cb\uff0c\u7136\u540e\u7d27\u8ddf\u7740\u4e00\u7ec4\u5e26\u7f29\u8fdb\u683c\u5f0f\u7684 variable = value\u884c\u7ec4\u6210\u3002 \u4ee5\u4e0a\u793a\u4f8b\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3acc\u7684rule\uff0c\u8fde\u540c\u4e00\u4e2a\u5f85\u8fd0\u884c\u7684\u547d\u4ee4\u3002\u5728rule\uff08\u89c4\u5219\uff09\u4e0a\u4e0b\u6587\u4e2d\uff0ccommand\u53d8\u91cf\u7528\u4e8e\u5b9a\u4e49\u5f85\u6267\u884c\u7684\u547d\u4ee4\uff0c in\u5c55\u5f00\uff08expands\uff09\u4e3a\u8f93\u5165\u6587\u4ef6\u5217\u8868\uff08foo.c\uff09,\u800c in\u5c55\u5f00\uff08expands\uff09\u4e3a\u8f93\u5165\u6587\u4ef6\u5217\u8868\uff08foo.c\uff09,\u800c out\u4e3a\u547d\u4ee4\u7684\u8f93\u51fa\u6587\u4ef6\u5217\u8868\uff08foo.o\uff09\u3002 \u53c2\u8003\u624b\u518c\u4e2d\u7f57\u5217\u4e86\u6240\u6709\u7279\u6b8a\u7684\u53d8\u91cf\u3002 Build \u8bed\u53e5 build\u8bed\u53e5\u58f0\u660e\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u4e4b\u95f4\u7684\u4e00\u4e2a\u5173\u7cfb\u3002\u6784\u5efa\u8bed\u53e5\u7531\u5173\u952e\u5b57build\u5f00\u5934\uff0c\u683c\u5f0f\u4e3a build outputs: rulename inputs 1 \u8fd9\u6837\u7684\u4e00\u4e2a\u58f0\u660e\uff0c\u6240\u6709\u7684\u8f93\u51fa\u6587\u4ef6\u6765\u6e90\u4e8e\u8f93\u5165\u6587\u4ef6\u3002\u5f53\u7f3a\u8f93\u51fa\u6587\u4ef6\u6216\u8f93\u5165\u6587\u4ef6\u53d8\u66f4\u65f6\uff0cNinja\u5c06\u4f1a\u8fd0\u884c\u6b64\u89c4\u5219\u6765\u91cd\u65b0\u751f\u6210\u8f93\u51fa\u3002 \u4ee5\u4e0a\u7684\u7b80\u5355\u793a\u4f8b\uff0c\u63cf\u8ff0\u4e86\u4f7f\u7528cc\u89c4\u5219\u5982\u4f55\u6784\u5efafoo.o\u6587\u4ef6\u3002 \u5728build block\u8303\u56f4\u5185\uff08\u5305\u62ec\u76f8\u5173\u89c4\u5219\u7684\u6267\u884c\uff09\uff0c\u53d8\u91cf in\u8868\u793a\u8f93\u5165\u5217\u8868\uff0c in\u8868\u793a\u8f93\u5165\u5217\u8868\uff0c out\u8868\u793a\u8f93\u51fa\u5217\u8868\u3002 \u4e00\u4e2a\u6784\u5efa\u8bed\u53e5\uff0c\u53ef\u4ee5\u548crule\u4e00\u6837\uff0c\u7d27\u8ddf\u4e00\u7ec4\u5e26\u7f29\u8fdb\u683c\u5f0f\u7684key = value\u5bf9\u3002\u5f53\u5728\u547d\u4ee4\u4e2d\u53d8\u91cf\u6267\u884c\u65f6\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u8986\u76d6\uff08shadow\uff09\u4efb\u4f55\u53d8\u91cf\u3002\u6bd4\u5982\uff1a cflags = -Wall -Werror rule cc command = gcc $cflags -c $in -o $out # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0cbuild\u7684\u8f93\u51fa\u5c06\u662f$cflags build foo.o: cc foo.c # \u4f46\u662f\uff0c\u4f60\u53ef\u4ee5\u5728\u7279\u6b8a\u7684build\u4e2d\u8986\u76d6cflags\u8fd9\u6837\u7684\u53d8\u91cf build special.o: cc special.c cflags = -Wall # cflags\u53d8\u91cf\u4ec5\u4ec5\u8986\u76d6\u4e86special.o\u7684\u8303\u56f4 # \u4ee5\u4e0b\u7684\u5b50\u5e8f\u5217build\u884c\u5f97\u5230\u7684\u662f\u5916\u90e8\u7684(\u539f\u59cb\u7684)cflags build bar.o: cc bar.c \u5982\u679c\u4f60\u8981\u4ecebuild\u8bed\u53e5\u4f20\u9012\u66f4\u591a\u7684\u4fe1\u606f\u5230rule\u89c4\u5219\uff08\u4f8b\u5982\uff0c\u5982\u679c\u89c4\u5219\u9700\u8981\u77e5\u9053\u201d\u7b2c\u4e00\u8f93\u5165\u6587\u4ef6\u7684\u6269\u5c55\u540d\u201d\uff09,\u90a3\u4e48\u8bf7\u901a\u8fc7\u6269\u5c55\u53d8\u91cf\u4f20\u9012\uff0c\u5c31\u50cfcflags\u4e00\u6837\u3002 \u5982\u679c\u9876\u7ea7Ninja\u6587\u4ef6\u4f7f\u7528build\u6307\u5b9a\u4e86\u4efb\u4f55\u8f93\u51fa\uff0c\u5e76\u4e14\u5b83\u53c8\u8fc7\u671f\u4e86\uff0c\u90a3\u4e48\u518d\u4e3a\u6784\u5efa\u7528\u6237\u76ee\u6807\u4e4b\u524d\u4f1a\u5148\u6784\u5efa\u9876\u7ea7\u6587\u4ef6\u91cc\u7684\u76ee\u6807\u3002 \u6839\u636e\u4ee3\u7801\u751f\u6210Ninja\u6587\u4ef6 Ninja\u53d1\u884c\u5305\u4e2d\u7684misc/ninja_syntax.py\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684python\u6a21\u5757\uff0c\u7528\u4e8e\u751f\u6210Ninja\u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528python\uff0c\u6267\u884c\u5982 ninja.rule(name='foo', command='bar',depfile='$out.d') \u7684\u8c03\u7528\uff0c\u751f\u6210\u5408\u9002\u7684\u8bed\u6cd5\u3002\u5982\u679c\u8fd9\u6837\u8fd8\u4e0d\u9519\uff0c\u53ef\u4ee5\u5c06\u5176\u6574\u5408\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u3002 \u66f4\u591a\u7ec6\u8282 phony \u89c4\u5219 \u53ef\u4ee5\u4f7f\u7528phony\u521b\u5efa\u5176\u5b83target\uff08\u7f16\u8bd1\u6784\u5efa\u76ee\u6807\uff09\u7684\u522b\u540d\u3002\u6bd4\u5982\uff1a build foo: phony some/file/in/a/faraway/subdir/foo \u8fd9\u6837\u4f7f\u5f97ninja foo\u6784\u5efa\u66f4\u957f\u7684\u8def\u5f84\u3002\u4ece\u8bed\u4e49\u4e0a\u8bb2\uff0cphony\u89c4\u5219\u7b49\u540c\u4e8e\u4e00\u4e2a\u6ca1\u6709\u505a\u4efb\u4f55\u64cd\u4f5c\u7684\u666e\u901a\u89c4\u5219\uff0c\u4f46\u662fphony\u89c4\u5219\u901a\u8fc7\u7279\u6b8a\u7684\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u6837\u5f53\u5176\u8fd0\u884c\u65f6\u4e0d\u4f1a\u88ab\u6253\u5370\uff0c\u8bb0\u65e5\u5fd7\uff0c\u4e5f\u4e0d\u4f5c\u4e3a\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6253\u5370\u51fa\u6765\u7684\u547d\u4ee4\u8ba1\u6570\u3002 \u8fd8\u53ef\u4ee5\u7528phony\u4e3a\u6784\u5efa\u65f6\u53ef\u80fd\u8fd8\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u521b\u5efadummy\u76ee\u6807\u3002 \u9ed8\u8ba4\u76ee\u6807 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u5728\u547d\u4ee4\u884c\u4e2d\u6307\u5b9atarget\uff0c\u90a3\u4e48Ninja\u5c06\u6784\u5efa\u4efb\u4f55\u5730\u65b9\u6ca1\u6709\u4f5c\u4e3a\u8f93\u5165\u547d\u540d\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u3002\u53ef\u4ee5\u901a\u8fc7default\u76ee\u6807\u8bed\u53e5\u6765\u91cd\u5199\u8fd9\u4e2a\u884c\u4e3a\u3002\u4e00\u4e2adefault\u8bed\u53e5\uff0c\u8ba9Ninja\u6784\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8f93\u51fa\u6587\u4ef6\u5b50\u96c6\uff0c\u5982\u679c\u547d\u4ee4\u884c\u4e2d\u6ca1\u6709\u6307\u5b9a\u6784\u5efa\u76ee\u6807\u3002 \u9ed8\u8ba4\u76ee\u6807\u8bed\u53e5\uff0c\u7531\u5173\u952e\u5b57default\u6253\u5934\uff0c\u5e76\u4e14\u91c7\u7528default targets\u7684\u683c\u5f0f\u3002\u4e00\u4e2adefault\u76ee\u6807\u8bed\u53e5\u5fc5\u987b\u51fa\u73b0\u5728\uff0c\u58f0\u660e\u8fd9\u4e2a\u76ee\u6807\u4f5c\u4e3a\u4e00\u4e2a\u8f93\u51fa\u6587\u4ef6\u7684\u6784\u5efa\u8bed\u53e5\u4e4b\u540e\u3002\u4ed6\u4eec\u662f\u7d2f\u79ef\u7684\uff08cumulative\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2adefault\u8bed\u53e5\u6765\u6269\u5c55\u9ed8\u8ba4\u76ee\u6807\u5217\u8868\u3002\u6bd4\u5982\uff1a default foo bar default baz This causes Ninja to build the foo, bar and baz targets by default. Ninja \u65e5\u5fd7 Ninja\u6784\u5efa\u65e5\u5fd7\u4fdd\u5b58\u5728\u6784\u5efa\u8fc7\u7a0b\u7684\u6839\u76ee\u5f55\u6216.ninja\u6587\u4ef6\u4e2dbuilddir\u53d8\u91cf\u5bf9\u5e94\u7684\u76ee\u5f55\u7684.ninja_log\u6587\u4ef6\u4e2d\u3002 \u4e00\u822c\u800c\u8a00\uff0c\u50cf\u4e0a\u9762\u8fd9\u6837\u7684\u5fae\u4f18\u5316\u4e0d\u5982\u6539\u53d8\u7b97\u6cd5\u6216\u5904\u7406\u65b9\u5f0f\u7684\u7ed3\u6784\u6027\u4f18\u5316\u6709\u6548\u3002Ninja \u7684\u6784\u5efa\u65e5\u5fd7\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\u3002 Linux kernel \u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u4f1a\u8ffd\u8e2a\u7528\u4e8e\u751f\u6210\u8f93\u51fa\u7684\u547d\u4ee4\u3002\u8003\u8651\u4e00\u4e2a\u542f\u53d1\u6027\u7684\u4f8b\u5b50\uff1a\u4f60\u5c06\u8f93\u5165\u6587\u4ef6 foo.c \u7f16\u8bd1\u4e3a\u8f93\u51fa\u6587\u4ef6 foo.o\uff0c\u968f\u540e\u4fee\u6539\u4e86\u6784\u5efa\u6587\u4ef6\u5bfc\u81f4\u5e94\u8be5\u7528\u4e0d\u540c\u7684\u7f16\u8bd1\u9009\u9879\u91cd\u65b0\u7f16\u8bd1 foo.c\u3002\u4ece\u6784\u5efa\u7cfb\u7edf\u7684\u89d2\u5ea6\u770b\uff0c\u4e3a\u4e86\u611f\u77e5\u9700\u8981\u6784\u5efa\uff0c\u5fc5\u987b\u8981\u4e48\u6ce8\u610f\u5230 foo.o \u4f9d\u8d56\u4e8e\u6784\u5efa\u6587\u4ef6\uff08\u6784\u5efa\u6587\u4ef6\u4f9d\u8d56\u4e8e\u9879\u76ee\u7684\u7ec4\u7ec7\uff0c\u8fd9\u4e5f\u8bb8\u610f\u5473\u7740\u5bf9\u6784\u5efa\u6587\u4ef6\u7684\u4fee\u6539\u5c06\u5bfc\u81f4\u6574\u4e2a\u9879\u76ee\u7684\u91cd\u65b0\u6784\u5efa\uff09\uff0c\u6216\u8bb0\u5f55\u751f\u6210\u6bcf\u4e2a\u8f93\u51fa\u7684\u547d\u4ee4\uff0c\u5728\u6bcf\u6b21\u6784\u5efa\u65f6\u8fdb\u884c\u6bd4\u8f83\u3002 kernel\uff08\u4ee5\u53ca Makefiles \u548c Ninja\uff09\u91c7\u7528\u540e\u4e00\u79cd\u65b9\u6cd5\u3002\u5728\u6784\u5efa\u65f6\uff0cNinja \u5199\u4e0b\u4e00\u4efd\u6784\u5efa\u65e5\u5fd7\uff0c\u8bb0\u5f55\u751f\u6210\u6bcf\u4e2a\u8f93\u51fa\u7684\u5b8c\u6574\u547d\u4ee4\u3002[9]\u5728\u540e\u7eed\u6784\u5efa\u4e2d\uff0cNinja \u8f7d\u5165\u4e4b\u524d\u7684\u6784\u5efa\u65e5\u5fd7\uff0c\u901a\u8fc7\u6bd4\u8f83\u5f53\u524d\u547d\u4ee4\u4e0e\u6784\u5efa\u65e5\u5fd7\u4e2d\u7684\u547d\u4ee4\u6765\u53d1\u73b0\u53d8\u66f4\u3002\u5c31\u50cf\u52a0\u8f7d\u6784\u5efa\u6587\u4ef6\u6216\u8def\u5f84\u89c4\u8303\u5316\uff0c\u8fd9\u6210\u4e3a\u4e86\u5206\u6790\u7ed3\u679c\u4e2d\u7684\u53c8\u4e00\u5904\u70ed\u70b9\u3002 \u5728\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u4f18\u5316\u540e\uff0cNico Weber\uff0c\u4e00\u4e2a\u5bf9 Ninja \u8d21\u732e\u4e86\u5f88\u591a\u4ee3\u7801\u7684\u4eba\uff0c\u5b9e\u73b0\u4e00\u79cd\u65b0\u7684\u6784\u5efa\u65e5\u5fd7\u683c\u5f0f\u3002\u6bd4\u8d77\u901a\u5e38\u5f88\u957f\u4e14\u9700\u8981\u5927\u91cf\u65f6\u95f4\u8fdb\u884c\u89e3\u6790\u7684\u8bb0\u5f55\u547d\u4ee4\uff0cNinja \u53d6\u800c\u4ee3\u4e4b\u4ee5\u547d\u4ee4\u7684\u54c8\u5e0c\uff08hash\uff09\u3002\u5728\u540e\u7eed\u6784\u5efa\u4e2d\uff0cNinja \u6bd4\u8f83\u5c06\u8981\u6267\u884c\u7684\u660e\u4ee4\u7684\u54c8\u5e0c\u4e0e\u8bb0\u5f55\u4e2d\u7684\u54c8\u5e0c\u3002\u5982\u679c\u4e24\u8005\u4e0d\u540c\uff0c\u5219\u53ef\u4ee5\u786e\u5b9a\u8f93\u51fa\u5df2\u8fc7\u671f\u3002\u8fd9\u4e00\u65b9\u6cd5\u5f88\u6210\u529f\u3002\u4f7f\u7528\u54c8\u5e0c\u6025\u5267\u964d\u4f4e\u4e86\u6784\u5efa\u65e5\u5fd7\u7684\u5927\u5c0f\u2014\u2014\u5728 Mac OX X \u4e0a\uff0c\u4ece 200MB \u964d\u5230 2MB\u2014\u2014\u5e76\u4f7f\u52a0\u8f7d\u901f\u5ea6\u5feb\u4e86 20 \u500d\u3002 \u7248\u672c\u517c\u5bb9\u6027 Available since Ninja 1.2. Ninja version labels follow the standard major.minor.patch format, where the major version is increased on backwards-incompatible syntax/behavioral changes and the minor version is increased on new behaviors. Your build.ninja may declare a \u53d8\u91cf named ninja_required_version that asserts the minimum Ninja version required to use the generated file. For example, ninja_required_version = 1.1 1 declares that the build file relies on some feature that was introduced in Ninja 1.1 (perhaps the pool syntax), and that Ninja 1.1 or greater must be used to build. Unlike other Ninja \u53d8\u91cfs, this version requirement is checked immediately when the \u53d8\u91cf is encountered in parsing, so it\u2019s best to put it at the top of the build file. Ninja always warns if the major versions of Ninja and the ninja_required_version don\u2019t match; a major version change hasn\u2019t come up yet so it\u2019s difficult to predict what behavior might be required. \u6587\u4ef6\u4f9d\u8d56 \u8fd8\u6709\u53e6\u4e00\u79cd\u5143\u6570\u636e\uff08metadata\uff09\u5fc5\u9700\u8de8\u6784\u5efa\u4fdd\u5b58\u7528\u3002\u4e3a\u4e86\u6b63\u786e\u6784\u5efa C/C++ \u4ee3\u7801\uff0c\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\u5fc5\u9700\u80fd\u611f\u77e5\u5934\u6587\u4ef6\u95f4\u7684\u4f9d\u8d56\u3002\u5047\u5b9a foo.c \u5305\u542b\u4e00\u884c #inclue \u201cbar.h\u201d \u3002\u800c bar.h \u81ea\u8eab\u53c8\u5305\u542b\u4e00\u884c #include \u201cbar.h\u201d\u3002\u6240\u6709\u7684\u4e09\u4e2a\u6587\u4ef6\u90fd\u4f1a\u5f71\u54cd\u540e\u7eed\u7f16\u8bd1\u3002\u4f8b\u5982\uff0cbaz.h \u7684\u6539\u53d8\u4e5f\u4f1a\u89e6\u53d1 foo.o \u7684\u91cd\u65b0\u6784\u5efa\u3002 \u4e00\u4e9b\u6784\u5efa\u7cfb\u7edf\u4f7f\u7528\u4e00\u4e2a\u201c\u5934\u6587\u4ef6\u626b\u63cf\u5668\u201d\u5728\u6784\u5efa\u65f6\u63d0\u53d6\u8fd9\u90e8\u5206\u4f9d\u8d56\u4fe1\u606f\u3002\u4f46\u8fd9\u4e2a\u65b9\u6cd5\u592a\u6162\uff0c\u800c\u4e14\u5f88\u96be\u7cbe\u786e\u5904\u7406\u6709 #ifdef \u6307\u4ee4\u51fa\u73b0\u7684\u60c5\u5f62\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u8981\u6c42\u6784\u5efa\u6587\u4ef6\u6b63\u786e\u5730\u62a5\u544a\u6240\u6709\u4f9d\u8d56\uff0c\u5305\u62ec\u5934\u6587\u4ef6\u7684\u4f9d\u8d56\uff0c\u4f46\u8fd9\u5bf9\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u5341\u5206\u7b28\u91cd\uff1a\u6bcf\u6b21\u4f60\u6dfb\u52a0\u6216\u5220\u9664 #include \u8bed\u53e5\u65f6\uff0c\u90fd\u9700\u8981\u4fee\u6539\u6216\u91cd\u65b0\u751f\u6210\u6784\u5efa\u6587\u4ef6\u3002 \u4e00\u4e2a\u6709\u7528\u7684\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u8fd9\u6837\u7684\u4e8b\u5b9e\uff1a\u5728\u7f16\u8bd1\u65f6\uff0cgcc \uff08\u4ee5\u53ca\u5fae\u8f6f\u7684 Visual Studio\uff09\u53ef\u4ee5\u7ed9\u51fa\u5728\u6784\u5efa\u8f93\u51fa\u65f6\u7528\u5230\u4e86\u54ea\u4e9b\u5934\u6587\u4ef6\u3002\u8fd9\u4efd\u4fe1\u606f\uff0c\u5982\u540c\u7528\u4e8e\u751f\u6210\u8f93\u51fa\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u88ab\u6784\u5efa\u7cfb\u7edf\u8bb0\u5f55\u548c\u52a0\u8f7d\u3002\u7531\u6b64\uff0c\u4f9d\u8d56\u53ef\u4ee5\u88ab\u7cbe\u786e\u8ffd\u8e2a\u3002\u5728\u7b2c\u4e00\u6b21\u7f16\u8bd1\u65f6\uff0c\u56e0\u4e3a\u8fd8\u672a\u6709\u8f93\u51fa\uff0c\u6240\u6709\u6587\u4ef6\u90fd\u4f1a\u88ab\u7f16\u8bd1\uff0c\u6545\u4e0d\u9700\u5934\u6587\u4ef6\u4f9d\u8d56\u3002\u7b2c\u4e00\u6b21\u7f16\u8bd1\u540e\uff0c\u5bf9\u4e8e\u88ab\u67d0\u4e2a\u8f93\u51fa\u7528\u5230\u7684\u4efb\u4f55\u6587\u4ef6\u5982\u679c\u53d1\u751f\u66f4\u6539\uff08\u5305\u62ec\u589e\u52a0\u6216\u5220\u9664\u989d\u5916\u7684\u4f9d\u8d56\uff09\uff0c\u5c31\u4f1a\u5bfc\u81f4\u91cd\u65b0\u6784\u5efa\u3002\u8fd9\u4fdd\u8bc1\u4e86\u4f9d\u8d56\u4fe1\u606f\u7684\u66f4\u65b0\u3002 \u5728\u7f16\u8bd1\u65f6\uff0cgcc \u4ee5 Makefile \u7684\u683c\u5f0f\u8bb0\u4e0b\u5934\u6587\u4ef6\u4f9d\u8d56\u3002Ninja \u5305\u62ec\u4e00\u4e2a\u89e3\u6790\u5668\u5904\u7406\u8fd9\u4e00Makefile \u8bed\u6cd5\uff08\u7684\u7b80\u5316\u5b50\u96c6\uff09\uff0c\u5e76\u5728\u4e0b\u4e00\u6b21\u6784\u5efa\u65f6\u8f7d\u5165\u8fd9\u4efd\u4f9d\u8d56\u4fe1\u606f\u3002\u5728 \u7684\u6700\u8fd1\u4e00\u6b21\u6784\u5efa\uff0cgcc \u4ea7\u751f\u4e86\u5171 90MB \u7684 Makefile\uff0c\u5168\u90e8\u5e26\u6709\u5fc5\u987b\u89c4\u8303\u5316\u7684\u5f15\u7528\u8def\u5f84\u3002 \u5c31\u50cf\u5176\u5b83\u89e3\u6790\u8fc7\u7a0b\uff0c\u901a\u8fc7\u4f7f\u7528 re2c \u53ca\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u590d\u5236\u53ef\u4ee5\u4f7f\u6027\u80fd\u6709\u6240\u63d0\u5347\uff0c\u4f46\u5c31\u50cf GYP \u9879\u76ee\uff0c\u8fd9\u4e00\u89e3\u6790\u5de5\u4f5c\u53ef\u4ee5\u4e0d\u5728\u5173\u952e\u65f6\u95f4\u8def\u5f84\u4e0a\u5b8c\u6210\u3002\u8fd1\u671f\uff0c\u6211\u4eec\u5728 Ninja \u4e0a\u7684\u5de5\u4f5c\uff08\u5728\u5199\u4f5c\u672c\u6587\u65f6\uff0c\u8fd9\u4e00\u5de5\u80fd\u5df2\u7ecf\u5b8c\u6210\uff0c\u4f46\u8fd8\u672a\u53d1\u5e03\uff09\u662f\u8ba9\u8fd9\u4e00\u8fc7\u7a0b\u53d1\u751f\u7684\u65e9\u4e00\u4e9b\u3002 \u4e00\u65e6 Ninja \u5f00\u59cb\u6267\u884c\u6784\u5efa\u6307\u4ee4\uff0c\u6240\u6709\u5f71\u54cd\u6027\u80fd\u7684\u5de5\u4f5c\u90fd\u5df2\u5b8c\u6210\uff0cNinja \u5728\u7b49\u5f85\u5b83\u542f\u52a8\u7684\u547d\u4ee4\u5b8c\u6210\u7684\u8fc7\u7a0b\u4e2d\u8fd1\u4e4e\u95f2\u7f6e\u3002\u5728\u5904\u7406\u5934\u6587\u4ef6\u4f9d\u8d56\u7684\u65b0\u65b9\u6cd5\u4e2d\uff0cNinja \u5229\u7528\u8fd9\u6bb5\u65f6\u95f4\u5904\u7406 gcc \u7ed9\u51fa\u7684 Makefile \uff0c\u89c4\u8303\u5316\u8def\u5f84\uff0c\u5c06\u4f9d\u8d56\u5904\u7406\u4e3a\u4e00\u79cd\u53ef\u4ee5\u5feb\u901f\u8bc6\u522b\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u3002\u5728\u4e0b\u4e00\u6b21\u6784\u5efa\u4e2d\uff0cNinja \u53ea\u9700\u8981\u52a0\u8f7d\u8fd9\u4e00\u6587\u4ef6\u3002\u6539\u8fdb\u975e\u5e38\u5267\u70c8\uff0c\u7279\u522b\u662f\u5728 Windows \u4e0a\u3002\uff08\u672c\u7ae0\u7a0d\u540e\u8ba8\u8bba\u8fd9\u4e2a\uff09 \u201c\u4f9d\u8d56\u65e5\u5fd7\u201d\u9700\u8981\u50a8\u5b58\u4e0a\u5343\u6761\u8def\u5f84\u53ca\u8def\u5f84\u95f4\u7684\u4f9d\u8d56\u3002\u8f7d\u5165\u65e5\u5fd7\u548c\u8ffd\u52a0\u65e5\u5fd7\u90fd\u5fc5\u987b\u8fc5\u901f\u3002\u8ffd\u52a0\u65e5\u5fd7\u64cd\u4f5c\u5e94\u8be5\u662f\u5b89\u5168\u7684\uff0c\u5373\u4f7f\u88ab\u6253\u65ad\uff0c\u6bd4\u5982\u6784\u5efa\u88ab\u53d6\u6d88\u3002 \u5728\u8003\u8651\u4e86\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684\u65b9\u6848\u540e\uff0c\u6211\u6700\u7ec8\u60f3\u5230\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff1a\u6587\u4ef6\u7531\u8bb0\u5f55\u7684\u5e8f\u5217\u7ec4\u6210\uff0c\u800c\u8bb0\u5f55\u8981\u4e48\u662f\u4e00\u4e2a\u8def\u5f84\uff0c\u8981\u4e48\u662f\u4e00\u4e2a\u4f9d\u8d56\u5217\u8868\u3002\u6bcf\u4e2a\u5199\u5165\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u88ab\u8d4b\u4e8e\u4e86\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\u53f7\u3002\u6545\u800c\u4f9d\u8d56\u5c31\u662f\u4e00\u5217\u6574\u6570\u3002\u4e3a\u4e86\u5411\u6587\u4ef6\u6dfb\u52a0\u4f9d\u8d56\uff0cNinja \u9996\u5148\u8bb0\u5f55\u4e0b\u8fd8\u6ca1\u6709\u5e8f\u5217\u53f7\u7684\u8def\u5f84\uff0c\u7136\u540e\u7528\u8fd9\u4e9b\u5e8f\u5217\u53f7\u8bb0\u5f55\u4f9d\u8d56\u3002\u5728\u540e\u7eed\u7684\u6784\u5efa\u8f7d\u5165\u8fd9\u4e00\u6587\u4ef6\u65f6\uff0cNinja \u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5c06\u5e8f\u5217\u53f7\u6620\u5c04\u5230\u5bf9\u5e94\u7684 Node \u6307\u9488\u3002 C/C++ \u5934\u4f9d\u8d56 Ninja\u76ee\u524d\u652f\u6301depfile\u548cdeps\u6a21\u5f0f\u7684C/C++\u5934\u6587\u4ef6\u4f9d\u8d56\u751f\u6210\u3002 \u5982 rule cc depfile = $out.d command = gcc -MMD -MF $out.d [other gcc flags here] -MMD\u6807\u8bc6\u544a\u8bc9gcc\u8981\u751f\u6210\u5934\u6587\u4ef6\u4f9d\u8d56\uff0c-MF\u5219\u8bf4\u660e\u8981\u5199\u5230\u54ea\u91cc\u3002 deps\u6309\u7167\u7f16\u8bd1\u5668\u7684\u540d\u8bcd\u6765\u7ba1\u7406\u3002\u5177\u4f53\u5982\u4e0b\uff1a\uff08\u9488\u5bf9\u5fae\u8f6f\u7684VC\uff1amsvc\uff09 rule cc deps = msvc command = cl /showIncludes -c $in /Fo$out \u5de5\u4f5c\u6c60 \u4e3a\u4e86\u652f\u6301\u5e76\u53d1\u4f5c\u4e1a\uff0cNinja\u8fd8\u652f\u6301pool\u7684\u673a\u5236\uff08\u548c\u7528-j\u5e76\u884c\u6a21\u5f0f\u4e00\u6837\uff09\u3002\u6b64\u5904\u4e0d\u8be6\u7ec6\u63cf\u8ff0\u4e86\u3002\u5177\u4f53\u793a\u4f8b\uff0c\u5982\u4e0b\uff1a # No more than 4 links at a time. pool link_pool depth = 4 # No more than 1 heavy object at a time. pool heavy_object_pool depth = 1 rule link ... pool = link_pool rule cc ... # The link_pool is used here. Only 4 links will run concurrently. build foo.exe: link input.obj # A build statement can be exempted from its rule s pool by setting an # empty pool. This effectively puts the build statement back into the default # pool, which has infinite depth. build other.exe: link input.obj pool = # A build statement can specify a pool directly. # Only one of these builds will run at a time. build heavy_object1.obj: cc heavy_obj1.cc pool = heavy_object_pool build heavy_object2.obj: cc heavy_obj2.cc pool = heavy_object_pool console \u6c60 \u8fd9\u91cc\u6709\u4e00\u4e2a\u540d\u4e3aconsole\u6df1\u5ea6\u4e3a1\u7684\u9884\u5b9a\u4e49\u6c60\uff0c\u6c60\u4e2d\u7684\u4efb\u4f55\u4efb\u52a1\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6807\u51c6\u8f93\u5165\u3001\u8f93\u51fa\u548c\u9519\u8bef\u6d41\u5e76\u63d0\u4f9b\u7ed9Ninja\uff0c\u901a\u5e38\u662f\u8fde\u63a5\u5230\u7528\u6237\u7684\u63a7\u5236\u53f0\u3002\u8fd9\u5bf9\u4e8e\u4ea4\u4e92\u5f0f\u4efb\u52a1\u6216\u8fd0\u884c\u65f6\u95f4\u8f83\u957f\u7684\u4efb\u52a1\u6bd4\u8f83\u6709\u7528\u3002\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e0a\u66f4\u65b0\u72b6\u6001\uff08\u4f8b\u5982\u6d4b\u8bd5\u5957\u4ef6\uff09\u3002 \u5f53\u2019console\u2019\u6c60\u4e2d\u7684\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\u65f6\uff0cNinja\u7684\u6b63\u5e38\u8f93\u51fa\uff08\u5982\u8fdb\u5ea6\u72b6\u6001\u548c\u5e76\u53d1\u4efb\u52a1\u7684\u8f93\u51fa\uff09\u5c06\u88ab\u7f13\u51b2\u8d77\u6765\u76f4\u5230\u63a7\u5236\u53f0\u4efb\u52a1\u8fd0\u884c\u5b8c\u6210\u3002 Ninja \u6587\u4ef6\u53c2\u8003 \u4e00\u4e2aNinja\u6587\u4ef6\u662f\u4e00\u7cfb\u5217\u58f0\u660e\uff0c\u58f0\u660e\u53ef\u4ee5\u662f\u4e0b\u5217\u4e4b\u4e00\uff1a \u89c4\u5219\u58f0\u660e\uff0c\u4ee5rulename\u5f00\u5934,\u7136\u540e\u662f\u4e00\u4e9b\u5217\u7684\u53d8\u91cf\u7684\u5b9a\u4e49\uff1b A build edge, which looks like +build output1 output2: rulename input1 input2+. + Implicit dependencies may be tacked on the end with +| dependency1 dependency2+. + Order-only dependencies may be tacked on the end with +|| dependency1 dependency2+. (See lt; \u8bed\u6cd5 Ninja\u4ec5\u652f\u6301ASCII\u5b57\u7b26\u96c6\u3002 \u6ce8\u91ca\u4ee5\u4e3a#\u5f00\u59cb\u4e00\u76f4\u5230\u884c\u672b\u3002 \u65b0\u884c\u662f\u5f88\u91cd\u8981\u7684\u3002\u50cfbuild foo bar\u7684\u8bed\u53e5\uff0c\u662f\u4e00\u5806\u7a7a\u683c\u5206\u5272\u5206\u8bcd\uff08token\uff09\uff0c\u5230\u6362\u884c\u7ed3\u675f\u3002\u4e00\u4e2a\u5206\u8bcd\u4e2d\u7684\u65b0\u884c\u548c\u7a7a\u683c\u5fc5\u987b\u8fdb\u884c\u8f6c\u8bd1\u3002\u76ee\u524d\u53ea\u6709\u4e00\u4e2a\u8f6c\u8bd1\u5b57\u7b26\uff0c$\uff0c\u5176\u5177\u6709\u4ee5\u4e0b\u884c\u4e3a\uff1a $ followed by a newline \u8f6c\u8bd1\u6362\u884c\uff0c\u8ba9\u5f53\u524d\u884c\u4e00\u76f4\u6269\u5c55\u5230\u4e0b\u4e00\u884c\u3002 $ followed by text \u8fd9\u662f\uff0c \u53d8\u91cf\u5f15\u7528\u3002 ${varname} \u8fd9\u662f\uff0c\u53e6$varname\u7684\u53e6\u4e00\u79cd\u8bed\u6cd5\u3002 $ followed by space \u8fd9\u8868\u793a\u4e00\u4e2a\u7a7a\u683c\u3002(\u4ec5\u5728path\u5217\u8868\u4e2d\uff0c\u9700\u8981\u7528\u7a7a\u683c\u5206\u5272\u6587\u4ef6\u540d) \u8fd9\u8868\u793a\u4e00\u4e2a\u5192\u53f7\u3002\uff08\u4ec5\u5728build\u884c\u4e2d\u9700\u8981\u3002\u6b64\u65f6\u5192\u53f7\u7ec8\u6b62\u8f93\u51fa\u5217\u8868\uff09 \u8fd9\u4e2a\u8868\u793a\uff0c\u5b57\u9762\u503c\u7684$\u3002 \u4e00\u4e2abuild\u6216default\u8bed\u53e5\uff0c\u6700\u5148\u88ab\u89e3\u6790\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7a7a\u683c\u5206\u5272\u7684\u6587\u4ef6\u540d\u5217\u8868\uff0c\u7136\u540e\u6bcf\u4e00\u4e2aname\u90fd\u88ab\u5c55\u5f00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d8\u91cf\u4e2d\u7684\u4e00\u4e2a\u7a7a\u683c\u5c06\u4f5c\u4e3a\u88ab\u5c55\u5f00\u540e\u6587\u4ef6\u540d\u4e2d\u7684\u4e00\u4e2a\u7a7a\u683c\u3002 spaced = foo bar build $spaced/baz other$ file: ... \u5728\u4e00\u4e2aname = value\u8bed\u53e5\u4e2d\uff0cvalue\u524d\u7684\u7a7a\u767d\u90fd\u4f1a\u88ab\u53bb\u6389\u3002\u51fa\u73b0\u8de8\u884c\u65f6\uff0c\u540e\u7eed\u884c\u8d77\u59cb\u7684\u7a7a\u767d\u4e5f\u4f1a\u88ab\u53bb\u6389\u3002 two_words_with_one_space = foo $ bar one_word_with_no_space = foo$ bar \u5176\u4ed6\u7684\u7a7a\u767d\uff0c\u4ec5\u4f4d\u4e8e\u884c\u5f00\u59cb\u5904\u7684\u5f88\u91cd\u8981\u3002\u5982\u679c\u4e00\u884c\u7684\u7f29\u8fdb\u6bd4\u524d\u4e00\u884c\u591a\uff0c\u90a3\u4e48\u88ab\u4eba\u4e3a\u662f\u5176\u7236\u8fb9\u754c\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u7f29\u8fdb\u6bd4\u524d\u4e00\u884c\u5c11\uff0c\u90a3\u4ed6\u5c31\u5173\u95ed\u524d\u4e00\u4e2a\u8fb9\u754c\u3002 \u9876\u5c42\u53d8\u91cf Ninja\u652f\u6301\u7684\u9876\u5c42\u53d8\u91cf\u6709builddir\u548cninja_required_version\u3002\u5177\u4f53\u8bf4\u660e\uff0c\u5982\u4e0b\uff1a builddir: \u6784\u5efa\u7684\u4e00\u4e9b\u8f93\u51fa\u6587\u4ef6\u7684\u5b58\u653e\u76ee\u5f55\u3002 ninja_required_version:\u6307\u5b9a\u6ee1\u8db3\u6784\u5efa\u9700\u6c42\u7684\u6700\u5c0fNinja\u7248\u672c\u3002 Rule \u53d8\u91cf \u4e00\u4e2arule\u5757\u5305\u542b\u4e00\u4e2akey = value\u7684\u5217\u8868\u58f0\u660e\uff0c\u8fd9\u76f4\u63a5\u5f71\u54cd\u89c4\u5219\u7684\u5904\u7406\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7279\u6b8a\u7684key\uff1a command (required)\uff1a \u5f85\u6267\u884c\u7684\u547d\u4ee4\u3002\u8fd9\u4e2a\u5b57\u7b26\u4e32 $variables\u88ab\u5c55\u5f00\u4e4b\u540e\uff0c\u88ab\u76f4\u63a5\u4f20\u9012\u7ed9sh -c\uff0c\u4e0d\u7ecf\u8fc7Ninja\u7ffb\u8bd1\u3002\u6bcf\u4e00\u4e2a\u89c4\u5219\u53ea\u80fd\u5305\u542b\u4e00\u6761command\u58f0\u660e\u3002\u5982\u679c\u6709\u591a\u6761\u547d\u4ee4\uff0c\u9700\u8981\u4f7f\u7528 amp; amp;\u7b26\u53f7\u8fdb\u884c\u94fe\u63a5\u3002 depfile\uff1a \u6307\u5411\u4e00\u4e2a\u53ef\u9009\u7684Makefile\uff0c\u5176\u4e2d\u5305\u542b\u989d\u5916\u7684\u9690\u5f0f\u4f9d\u8d56\u3002\u8fd9\u4e2a\u660e\u786e\u7684\u4e3a\u4e86\u652f\u6301C/C++\u7684\u5934\u6587\u4ef6\u4f9d\u8d56\u3002 deps: \uff081.3\u7248\u672c\u5f00\u59cb\u652f\u6301\uff09\u5982\u679c\u5b58\u5728\uff0c\u5fc5\u987b\u662fgcc\u6216msvc\uff0c\u6765\u6307\u5b9a\u7279\u6b8a\u7684\u4f9d\u8d56\u3002\u4ea7\u751f\u7684\u6570\u636e\u5e93\u4fdd\u5b58\u5728builddir\u6307\u5b9a\u76ee\u5f55.ninja_deps\u6587\u4ef6\u4e2d\u3002 msvc_deps_prefix\uff1a \uff081.5\u7248\u672c\u5f00\u59cb\u652f\u6301\uff09\u5b9a\u4e49\u5fc5\u987b\u4ecemsvc\u7684/showIncludes\u8f93\u51fa\u4e2d\u53bb\u6389\u7684\u5b57\u7b26\u4e32\u3002\u4ec5\u5728deps = msvc\u800c\u4e14\u4f7f\u7528\u975e\u82f1\u8bed\u7684Visual Studio\u7248\u672c\u65f6\u4f7f\u7528\u3002 description\uff1a \u547d\u4ee4\u7684\u7b80\u77ed\u63cf\u8ff0\uff0c\u4f5c\u4e3a\u547d\u4ee4\u8fd0\u884c\u65f6\u66f4\u597d\u7684\u6253\u5370\u8f93\u51fa\u3002\u6253\u5370\u6574\u884c\u8fd8\u662f\u5bf9\u5e94\u7684\u63cf\u8ff0\uff0c\u7531-v\u6807\u8bb0\u63a7\u5236\u3002\u5982\u679c\u4e00\u4e2a\u547d\u4ee4\u6267\u884c\u5931\u8d25\uff0c\u6574\u4e2a\u547d\u4ee4\u884c\u603b\u662f\u5728\u547d\u4ee4\u8f93\u51fa\u4e4b\u524d\u6253\u5370\u3002 generator\uff1a \u5982\u679c\u5b58\u5728\uff0c\u6307\u660e\u8fd9\u6761\u89c4\u5219\u662f\u7528\u6765\u91cd\u590d\u8c03\u7528\u751f\u6210\u5668\u7a0b\u5e8f\u3002\u901a\u8fc7\u4e24\u79cd\u7279\u6b8a\u7684\u65b9\u5f0f\uff0c\u5904\u7406\u4f7f\u7528\u751f\u6210\u5668\u89c4\u5219\u6784\u5efa\u6587\u4ef6\uff1a\u9996\u5148\uff0c\u5982\u679c\u547d\u4ee4\u884c\u4fee\u6539\u4e86\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u91cd\u65b0\u6784\u5efa\uff1b\u5176\u6b21\uff0c\u9ed8\u8ba4\u4e0d\u4f1a\u88ab\u6e05\u9664\u3002 in\uff1a \u7a7a\u683c\u5206\u5272\u7684\u6587\u4ef6\u5217\u8868\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u8f93\u5165\u4f20\u9012\u7ed9\u5f15\u7528\u6b64rule\u7684\u6784\u5efa\u884c\uff0c\u5982\u679c\u51fa\u73b0\u5728\u547d\u4ee4\u4e2d\u9700\u8981\u4f7f\u7528${in}(shell-quoted)\u3002\uff08\u63d0\u4f9b$in\u4ec5\u4ec5\u4e3a\u4e86\u56fe\u4e2a\u65b9\u4fbf\uff0c\u5982\u679c\u4f60\u9700\u8981\u6587\u4ef6\u5217\u8868\u7684\u5b50\u96c6\u6216\u53d8\u79cd\uff0c\u8bf7\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u7136\u540e\u4f20\u9012\u65b0\u7684\u53d8\u91cf\u3002\uff09 in_newline\uff1a \u548c$in\u4e00\u6837\uff0c\u53ea\u662f\u5206\u5272\u7b26\u4e3a\u6362\u884c\u800c\u4e0d\u662f\u7a7a\u683c\u3002\uff08\u4ec5\u4e3a\u4e86\u548c$rspfile_content\u4e00\u8d77\u4f7f\u7528\uff0c\u89e3\u51b3MSVC - linker\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u533a\u5904\u7406\u8f93\u5165\uff0c\u800c\u9020\u6210\u7684\u4e00\u4e2abug\u3002\uff09 out\uff1a \u7a7a\u683c\u5206\u5272\u7684\u6587\u4ef6\u5217\u8868\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u8f93\u51fa\u4f20\u9012\u7ed9\u5f15\u7528\u6b64rule\u7684\u6784\u5efa\u884c\uff0c\u5982\u679c\u51fa\u73b0\u5728\u547d\u4ee4\u4e2d\u9700\u8981\u4f7f\u7528${out}\uff1b restat: \u5982\u679c\u5b58\u5728\uff0c\u5f15\u53d1Ninja\u5728\u547d\u4ee4\u884c\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u91cd\u65b0\u7edf\u8ba1\u547d\u4ee4\u7684\u8f93\u51fa\u3002 rspfile, rspfile_content\uff1a \u5982\u679c\u5b58\u5728\uff08\u4e24\u4e2a\u540c\u65f6\uff09\uff0cNinja\u5c06\u4e3a\u7ed9\u5b9a\u547d\u4ee4\u63d0\u4f9b\u4e00\u4e2a\u54cd\u5e94\u6587\u4ef6\uff0c\u6bd4\u5982\uff0c\u5728\u8c03\u7528\u547d\u4ee4\u4e4b\u524d\u5c06\u9009\u5b9a\u7684\u5b57\u7b26\u4e32(rspfile_content)\u5199\u5230\u7ed9\u5b9a\u7684\u6587\u4ef6\uff08rspfile\uff09\uff0c\u547d\u4ee4\u6267\u884c\u6210\u529f\u4e4b\u540e\u9610\u8ff0\u6587\u4ef6\u3002 \u8fd9\u4e2a\u5728Windows\u7cfb\u7edf\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u6b64\u65f6\u547d\u4ee4\u884c\u7684\u6700\u5927\u957f\u5ea6\u975e\u5e38\u53d7\u9650\uff0c\u5fc5\u987b\u4f7f\u7528\u54cd\u5e94\u6587\u4ef6\u66ff\u4ee3\u3002\u5177\u4f53\u4f7f\u7528\u65b9\u5f0f\uff0c\u5982\u4e0b\uff1a rule link command = link.exe /OUT$out [usual link flags here] @$out.rsp rspfile = $out.rsp rspfile_content = $in build myapp.exe: link a.obj b.obj [possibly many other .obj files] command\u53d8\u91cf\u7684\u89e3\u91ca \u5728Unixes\u548cWindows\u4e0a\u547d\u4ee4\u884c\u7684\u884c\u4e3a\u662f\u4e0d\u540c\u7684\u3002 \u5728Unixes\u4e0a\uff0c\u547d\u4ee4\u662f\u53c2\u6570\u6570\u7ec4\u3002 Ninja\u547d\u4ee4\u53d8\u91cf\u76f4\u63a5\u4f20\u9012\u7ed9sh -c\uff0c\u7136\u540e\u8d1f\u8d23 \u5c06\u8be5\u5b57\u7b26\u4e32\u89e3\u91ca\u4e3aargv\u6570\u7ec4\u3002 \u56e0\u6b64\u5f15\u7528\u89c4\u5219\u7531shell\u51b3\u5b9a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u6b63\u5e38\u7684shell \u8fd0\u7b97\u7b26\uff0c\u5982\u94fe\u63a5\u591a\u4e2a\u547d\u4ee4\uff0c\u6216VAR = value cmd \u6765\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u5728Windows\u4e0a\uff0c\u547d\u4ee4\u662f\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64Ninja\u76f4\u63a5\u5c06command\u5b57\u7b26\u4e32 \u4f20\u9012\u7ed9CreateProcess\u3002 \uff08\u5728\u5e38\u89c1\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u7b80\u5355\u6267\u884c\u8fd9\u610f\u5473\u7740\u6709\u66f4\u5c11\u7684\u5f00\u9500\u3002\uff09\u56e0\u6b64\u5f15\u7528\u89c4\u5219\u7531\u88ab\u8c03\u7528\u7684\u7a0b\u5e8f\u786e\u5b9a\uff0c\u5728Windows\u4e0a\u901a\u5e38\u7531C\u5e93\u63d0\u4f9b\u3002 \u5982\u679c\u4f60\u9700\u8981shell\u89e3\u91ca\u547d\u4ee4\uff08\u5982\u4f7f\u7528 \u6765\u94fe\u63a5\u591a\u4e2a\u547d\u4ee4\uff09\uff0c\u4f7f\u547d\u4ee4\u6267\u884cWindows shell\u524d\u7f00\u547d\u4ee4\u4e0ecmd / c\u3002 \u6784\u5efa\u8f93\u51fa \u6709\u4e24\u79cd\u7a0d\u5fae\u6709\u70b9\u533a\u522b\u7684\u8f93\u51fa\uff1a \u663e\u793a\u8f93\u51fa, \u5728build\u884c\u4f1a\u5217\u51fa\u6765\uff0c\u5728rule\u89c4\u5219\u4e2d\u53ef\u4ee5\u901a\u8fc7$out\u53d8\u91cf\u8bbf\u95ee\u3002 \u8fd9\u662f\u6807\u51c6\u7684\u8f93\u51fa\u4f7f\u7528\u5f62\u5f0f\uff0c\u4f8b\u5982\u4e00\u4e2a\u7f16\u8bd1\u547d\u4ee4\u7684\u76ee\u6807\u6587\u4ef6\u3002 \u9690\u5f0f\u8f93\u51fa, \u5728build\u884c\u5176\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff0c\u5728build\u884c\u7684:\u524dout1 out2\uff08\u5728Ninja1.7\u7248\u672c\u5f00\u59cb\u652f\u6301\uff09.\u8bed\u4e49\u4e0e\u663e\u5f0f\u8f93\u51fa\u76f8\u540c\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u9690\u5f0f\u8f93\u51fa\u4e0d\u4f1a\u51fa\u73b0\u5728$out\u53d8\u91cf\u91cc\u3002\u8fd9\u662f\u4e3a\u4e86\u8868\u793a\u5728\u547d\u4ee4\u884c\u4e2d\u6ca1\u6709\u6307\u5b9a\u8f93\u51fa\u7684\u547d\u4ee4\u3002 \u6784\u5efa\u4f9d\u8d56 Ninja\u76ee\u524d\u652f\u63013\u79cd\u7c7b\u578b\u7684\u6784\u5efa\u4f9d\u8d56\u3002\u5206\u522b\u662f\uff1a \u7f57\u5217\u5728build\u884c\u4e2d\u7684\u663e\u5f0f\u7684\u4f9d\u8d56\u3002\u4ed6\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u89c4\u5219\u4e2d\u7684 in\u53d8\u91cf\u3002\u8fd9\u662f\u6807\u51c6\u4f9d\u8d56\u683c\u5f0f\u3002 \u4ecedepfile\u5c5e\u6027\u6216\u6784\u5efa\u8bed\u53e5\u672b\u5c3e\u7684| dep1 dep2\u8bed\u6cd5\u83b7\u5f97\u7684\u9690\u5f0f\u4f9d\u8d56\u3002\u8fd9\u4e2a\u548c\u663e\u5f0f\u4f9d\u8d56\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u80fd\u5728 in\u53d8\u91cf\u3002\u8fd9\u662f\u6807\u51c6\u4f9d\u8d56\u683c\u5f0f\u3002 \u4ecedepfile\u5c5e\u6027\u6216\u6784\u5efa\u8bed\u53e5\u672b\u5c3e\u7684| dep1 dep2\u8bed\u6cd5\u83b7\u5f97\u7684\u9690\u5f0f\u4f9d\u8d56\u3002\u8fd9\u4e2a\u548c\u663e\u5f0f\u4f9d\u8d56\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u80fd\u5728 in\u4e2d\u4f7f\u7528\uff08\u4e0d\u53ef\u89c1\uff09\u3002 \u901a\u8fc7\u6784\u5efa\u884c\u672b|| dep1 dep2\u8bed\u6cd5\u8868\u793a\u7684\u6b21\u5e8f\u552f\u4e00\uff08Order-only\uff09\u4f9d\u8d56\u3002\u4ed6\u4eec\u8fc7\u671f\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u4e0d\u4f1a\u88ab\u91cd\u65b0\u6784\u5efa\uff0c\u76f4\u5230\u4ed6\u4eec\u88ab\u91cd\u5efa\uff0c\u4f46\u4ec5\u4fee\u6539\u8fd9\u79cd\u4f9d\u8d56\u4e0d\u4f1a\u5f15\u53d1\u8f93\u51fa\u91cd\u5efa\u3002 \u53d8\u91cf\u5c55\u5f00 \u53d8\u91cf\u5728\u8def\u5f84\uff08\u5728build\u6216default\u8bed\u53e5\uff09\u548cname = value\u53f3\u8fb9\u88ab\u5c55\u5f00\u3002 \u5f53name = value\u8bed\u53e5\u88ab\u6267\u884c\uff0c\u53f3\u624b\u8fb9\u7684\u88ab\u7acb\u5373\u5c55\u5f00\uff08\u6839\u636e\u4ee5\u4e0b\u7684\u89c4\u5219\uff09\uff0c\u4ece\u6b64$name\u6269\u5c55\u4e3a\u88ab\u5c55\u5f00\u7ed3\u679c\u7684\u9759\u6001\u5b57\u7b26\u4e32\u3002\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u5b58\u5728\uff0c\u4f60\u5c06\u9700\u8981\u4f7f\u7528\u53cc\u8f6c\u8bd1\uff08\"double-escape\"\uff09\u6765\u4fdd\u62a4\u4e00 \u4e2a\u503c\u88ab\u7b2c\u4e8c\u6b21\u5c55\u5f00\u3002 \u6240\u6709\u53d8\u91cf\u5728\u89e3\u6790\u8fc7\u7a0b\uff0c\u9047\u5230\u7684\u65f6\u5019\u7acb\u5373\u88ab\u5c55\u5f00\uff0c\u9664\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4f8b\u5916\uff1arule\u5757\u4e2d\u7684\u53d8\u91cf\u4ec5\u5728\u89c4\u5219\u88ab\u4f7f\u7528\u7684\u65f6\u5019\u624d\u88ab\u5c55\u5f00\uff0c\u800c\u4e0d\u662f\u58f0\u660e\u7684\u65f6\u5019\u3002\u5728\u4ee5\u4e0b\u7684\u793a\u4f8b\u4e2d\uff0cdemo\u6253\u5370\u51fa\"this is a demo of bar\"\u800c\u4e0d\u662f\"this is a demo of $foo\"\u3002 rule demo command = echo this is a demo of $foo build out: demo foo = bar \u8bc4\u4f30\u548c\u8fb9\u754c \u9876\u5c42\uff08Top-level\uff09\u53d8\u91cf\u58f0\u660e\u7684\u8fb9\u754c\uff0c\u662f\u76f8\u5173\u7684\u6587\u4ef6\u3002 subninja\u5173\u952e\u81ea\uff0c\u7528\u4e8e\u5305\u542b\u53e6\u4e00\u4e2a.ninja\u6587\u4ef6\uff0c\u5176\u8868\u793a\u65b0\u7684\u8fb9\u754c\u3002\u88ab\u5305\u542b\u7684subninja\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528\u7236\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\uff0c\u5728\u6587\u4ef6\u8fb9\u754c\u4e2d\u8986\u76d6\u4ed6\u4eec\u7684\u503c\uff0c\u4f46\u662f\u8fd9\u4e0d\u5f71\u54cd\u7236\u6587\u4ef6\u4e2d\u53d8\u91cf\u7684\u503c\u3002 \u540c\u65f6\uff0c\u53ef\u4ee5\u7528#include\u8bed\u53e5\u5728\u5f53\u524d\u8fb9\u754c\u5185\uff0c\u5f15\u5165\u53e6\u4e00\u4e2a.ninja\u6587\u4ef6\u3002\u8fd9\u4e2a\u6709\u70b9\u50cfC\u4e2d\u7684#include\u8bed\u53e5\u3002 \u6784\u5efa\u5757\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\u7684\u8fb9\u754c\uff0c\u5c31\u662f\u5176\u6240\u5c5e\u7684\u5757\u3002\u4e00\u4e2a\u6784\u5efa\u5757\u4e2d\u5c55\u5f00\u7684\u53d8\u91cf\u7684\u6240\u6709\u67e5\u8be2\u6b21\u5e8f\u4e3a\uff1a \u7279\u6b8a\u5185\u5efa\u53d8\u91cf( in, in, out)\uff1b build/rule\u5757\u4e2d\u6784\u5efa\u5c42\u7684\u53d8\u91cf\uff1b \u6784\u5efa\u884c\u6240\u5728\u6587\u4ef6\u4e2d\u7684\u6587\u4ef6\u5c42\u53d8\u91cf\uff08File-level\uff09\uff1b \u4f7f\u7528subninja\u5173\u952e\u5b57\u5f15\u5165\u90a3\u4e2a\u6587\u4ef6\u7684\uff08\u7236\uff09\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3002 \u603b\u7ed3 \u5728\u4e0a\u4e00\u7bc7 GN \u6784\u5efa\u7cfb\u7edf\u4e2d\u4e3b\u8981\u4ecb\u7ecd\u4e86 GN \u662f\u4e00\u4e2a\u6784\u5efa\u7f16\u8bd1\u6587\u4ef6\u76f8\u5173\u4f9d\u8d56\u548c\u914d\u7f6e\u53c2\u6570\u7684\u5de5\u5177\uff0c\u4e3b\u8981\u662f\u9759\u6001\u7684\u751f\u4ea7 Ninja \u9700\u8981\u7684\u6784\u5efa\u6587\u4ef6 Ninja \u4e3b\u8981\u662f\u5206\u6790\u6587\u4ef6\u7684\u5185\u90e8\u5185\u5bb9\uff0c\u548c\u5206\u6790\u6587\u4ef6\u5185\u5bb9\u7684\u5f02\u5e38\u60c5\u51b5\u548c\u4f9d\u8d56\uff0c\u66f4\u52a0\u5173\u6ce8\u7cfb\u7edf\u548c\u7f16\u8bd1\u73af\u5883\u7684\u914d\u7f6e\u548c\u51fa\u6765 GN :\u4e00\u4e2a\u9759\u6001\u6587\u4ef6\u4f9d\u8d56\u5173\u7cfb\u548c \u7cfb\u7edf , CPU \uff0c \u5de5\u5177\u94fe \u76f8\u5173\u7684\u4f9d\u8d56\u5173\u7cfb( \u9759\u6001\u5173\u7cfb ) Ninja :\u5728GN\u751f\u6210\u7684\u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840\uff0c\u51fa\u6765\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6587\u4ef6\u7684\u53d8\u52a8\uff0c\u6e90\u4ee3\u7801\u8fdb\u884c\u68c0\u67e5\uff0c\u4f18\u5316\uff0c\u6700\u7ec8\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 note: \u00b7","title":"Ninja\u7f16\u8bd1\u7cfb\u7edf"},{"location":"android/flutter/NinjaSystem/#ninja","text":"\u6ce8:\u672c\u6587\u6765\u81ea\u7f51\u7edc\u8d44\u6599\u6574\u7406\uff0c\u4e3b\u8981\u662f\u6c47\u603b\u5b66\u4e60\u8d44\u6599\uff0c\u65b9\u4fbf\u5b8c\u6210FlutterEngine\u7f16\u8bd1\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u5b66\u4e60\u8d44\u6599\u8def\u7ebf","title":"Ninja \u6784\u5efa\u7cfb\u7edf"},{"location":"android/flutter/NinjaSystem/#_1","text":"Ninja \u662f\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\uff0c\u4e0e Make \u7c7b\u4f3c\u3002 \u4f5c\u4e3a\u8f93\u5165\uff0c\u4f60\u9700\u8981\u63cf\u8ff0\u5c06\u6e90\u6587\u4ef6\u5904\u7406\u4e3a\u76ee\u6807\u6587\u4ef6\u8fd9\u4e00\u8fc7\u7a0b\u6240\u9700\u7684\u547d\u4ee4 \u3002 Ninja \u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u4fdd\u6301\u76ee\u6807\u5904\u4e8e\u6700\u65b0\u72b6\u6001\u3002\u4e0e\u5176\u5b83\u4e00\u4e9b\u6784\u5efa\u7cfb\u7edf\u4e0d\u540c\uff0cNinja \u7684\u4e3b\u8981\u8bbe\u8ba1\u76ee\u6807\u662f\u901f\u5ea6\u3002 Ninja \u4e5f\u6709\u5176\u5b83\u4e00\u4e9b\u8bbe\u8ba1\u76ee\u6807\uff1aNinja \u5fc5\u987b\u6613\u4e8e\u5d4c\u5165\u5927\u578b\u6784\u5efa\u7cfb\u7edf\u3002 Ninja \u83b7\u5f97\u4e86\u76f8\u5f53\u7684\u6210\u529f\uff0c\u9010\u6e10\u53d6\u4ee3\u4e86\u6240\u4f7f\u7528\u7684\u6784\u5efa\u7cfb\u7edf\u3002Ninja \u516c\u5f00\u540e\uff0c\u4e00\u4e9b\u4eba\u8d21\u732e\u4e86\u4ee3\u7801\uff0c\u4f7f\u5f97\u6d41\u884c\u7684 CMake \u6784\u5efa\u7cfb\u7edf\u80fd\u591f\u751f\u6210 Ninja \u6587\u4ef6\u3002\u73b0\u5728\uff0cNinja \u4e5f\u88ab\u7528\u6765\u5f00\u53d1\u57fa\u4e8e CMake \u7684\u7cfb\u7edf\uff0c\u5982 LLVM \u548c ReactOS\u3002\u5176\u5b83\u4e00\u4e9b\u62e5\u6709\u5b9a\u5236\u6784\u5efa\u7cfb\u7edf\u7684\u9879\u76ee\uff0c\u5982 TextMate\uff0c\u76f4\u63a5\u5c06 Ninja \u4f5c\u4e3a\u5176\u6784\u5efa\u76ee\u6807\u3002","title":"\u6982\u8ff0"},{"location":"android/flutter/NinjaSystem/#_2","text":"","title":"\u5386\u53f2\u5c0f\u4ecb"},{"location":"android/flutter/NinjaSystem/#ninja_1","text":"\u5728\u9ad8\u5c42\u89c6\u89d2\u4e0b\uff0c\u4efb\u4f55\u6784\u5efa\u7cfb\u7edf\u4e3b\u8981\u6267\u884c\u4e09\u9879\u4efb\u52a1\u3002 (1)\u52a0\u8f7d\u548c\u5206\u6790\u6784\u5efa\u76ee\u6807\uff0c (2)\u8ba1\u7b97\u51fa\u8fbe\u5230\u6784\u5efa\u76ee\u6807\u6240\u9700\u7684\u6b65\u9aa4\uff0c (3)\u6267\u884c\u8fd9\u4e9b\u6b65\u9aa4\u3002","title":"Ninja \u7684\u8bbe\u8ba1"},{"location":"android/flutter/NinjaSystem/#ninja_2","text":"Ninja \u5c06\u7edd\u5927\u90e8\u5206\u5de5\u4f5c\u63a8\u7ed9\u4e86\u6784\u5efa\u6587\u4ef6\u751f\u6210\u5668\uff0c\u90a3\u81ea\u5df1\u8fd8\u6709\u4ec0\u4e48\u4e8b\u5462\uff1f\u4e0a\u8ff0\u60f3\u6cd5\u7406\u8bba\u770b\u4e0a\u5f88\u4e0d\u9519\uff0c\u4f46\u771f\u5b9e\u4e16\u754c\u7684\u9700\u8981\u6c38\u8fdc\u66f4\u590d\u6742\u3002Ninja \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\uff08\u4e5f\u5931\u53bb\uff09\u4e86\u5f88\u591a\u7279\u6027\u3002\u4e0d\u8bba\u4f55\u65f6\uff0c\u91cd\u8981\u7684\u95ee\u9898\u90fd\u662f\u201c\u6211\u4eec\u80fd\u505a\u5f97\u66f4\u5c11\u5417\uff1f\u201d\u6b64\u5904\u6982\u8ff0\u8fd9\u5982\u4f55\u8fd0\u4f5c\u3002 \u5728\u6784\u5efa\u89c4\u5219\u51fa\u9519\u65f6\u9700\u8981\u4eba\u53bb\u8c03\u8bd5\uff08\u6784\u5efa\uff09\u6587\u4ef6\uff0c\u6240\u4ee5 .ninja \u6784\u5efa\u6587\u4ef6\u662f\u666e\u901a\u6587\u672c\uff0c\u4e0e Makefiles \u7c7b\u4f3c\u3002\u4e3a\u4e86\u589e\u5f3a\u53ef\u8bfb\u6027.ninja \u4e5f\u652f\u6301\u4e00\u4e9b\u62bd\u8c61\u3002 \u7b2c\u4e00\u79cd\u62bd\u8c61\u662f\u201crule\u201d \u53ef\u4ee5\u4ee3\u8868\u5355\u4e2a\u547d\u4ee4\u884c\u8c03\u7528\uff0crule \u5b9a\u4e49\u540e\u5728\u4e0d\u540c\u7684\u6784\u5efa\u6b65\u9aa4\u95f4\u5171\u4eab\u3002\u8fd9\u662f Ninja \u8bed\u6cd5\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u58f0\u660e\u4e86\u4e00\u6761\u540d\u4e3a\u201ccompile\u201d\u7684 rule\u2014\u2014\u8fd9\u6761 rule \u4f1a\u8c03\u7528 gcc \u7f16\u8bd1\u5668\uff0c\u6b64\u5916\u8fd8\u6709\u4e24\u6761 build \u8bed\u53e5\u5bf9\u7279\u5b9a\u6587\u4ef6\u4f7f\u7528\u4e86 compile\u3002 rule compile command = gcc -Wall -c $in -o $out build out/foo.o: compile src/foo.c build out/bar.o: compile src/bar.c \u7b2c\u4e8c\u79cd\u62bd\u8c61\u662f\u53d8\u91cf\u3002 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u90a3\u4e9b\u4ee5\u201d\"\u4e3a\u524d\u7f00\u7684\u6807\u8bc6\u7b26\u5c31\u662f\u53d8\u91cf\uff08\"\u4e3a\u524d\u7f00\u7684\u6807\u8bc6\u7b26\u5c31\u662f\u53d8\u91cf\uff08in \u548c $out\uff09\u3002\u53d8\u91cf\u5373\u53ef\u4ee5\u8868\u793a\u547d\u4ee4\u7684\u8f93\u5165\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u547d\u4ee4\u7684\u8f93\u51fa\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u957f\u5b57\u7b26\u4e32\u8d77\u4e00\u4e2a\u77ed\u70b9\u7684\u540d\u5b57\u3002\u8fd9\u91cc\u6709\u4e00\u4e2acompile\u5b9a\u4e49\uff0c\u7528\u4e00\u4e2a\u53d8\u91cf\u8868\u793a\u7f16\u8bd1\u5668\u7684\u6807\u5fd7\uff1a cflags = -Wall rule compile command = gcc $cflags -c $in -o $out \u4e00\u6761\u89c4\u5219\u4e2d\u4f7f\u7528\u7684 \u53d8\u91cf \u53ef\u4ee5\u5728\u5355\u4e2a build \u5757\u4e2d\u88ab\u7f29\u8fdb\u8868\u8ff0\u7684\u65b0\u5b9a\u4e49\u8986\u76d6\u3002\u7ee7\u7eed\u4e0a\u9762\u7684\u4f8b\u5b50\uff0ccflags \u7684\u503c\u53ef\u4ee5\u5728\u5355\u4e2a\u6587\u4ef6\u5904\u8c03\u6574\uff1a build out/file_with_extra_flags.o: compile src/baz.c cflags = -Wall -Wextra rule \u4e0e\u51fd\u6570\u5f88\u50cf\uff0c\u800c\u4e14\u53d8\u91cf\u53c8\u9177\u4f3c\u53c2\u6570\u3002\u8fd9\u4e24\u4e2a\u7b80\u5355\u7684\u529f\u80fd\u4f7f Ninja \u7684\u8bed\u6cd5\u4e0e\u7f16\u7a0b\u8bed\u8a00\u8fc7\u4e8e\u76f8\u4f3c\uff0c\u8fd9\u5f88\u5371\u9669\u2014\u2014\u662f\u201c\u4e0d\u505a\u591a\u4f59\u4e8b\u201d\u7684\u5bf9\u7acb\u9762\u3002\u4f46\u4ed6\u4eec\u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e0d\u4ec5\u5bf9\u4eba\u975e\u5e38\u6709\u7528\uff0c\u4e5f\u6709\u5229\u4e8e\u7535\u8111\u8ba1\u7b97\uff0c\u56e0\u4e3a\u51cf\u5c11\u4e86\u9700\u8981\u5206\u6790\u7684\u6587\u672c\u91cf\u3002 \u6784\u5efa\u6587\u4ef6\uff0c\u4e00\u65e6\u5b8c\u6210\u5206\u6790\uff0c\u5c31\u53ef\u4ee5\u63cf\u7ed8\u51fa\u4e00\u5e45\u4f9d\u8d56\u56fe\uff1a\u6700\u7ec8\u7684\u4e8c\u8fdb\u5236\u8f93\u51fa\u4f9d\u8d56\u4e8e\u4e00\u7ec4\u5bf9\u8c61\u6587\u4ef6\uff0c\u8fd9\u7ec4\u5bf9\u8c61\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e2a\u90fd\u662f\u7f16\u8bd1\u6e90\u6587\u4ef6\u7684\u7ed3\u679c\u3002\u7279\u522b\u5730\uff0c\u8fd9\u662f\u4e00\u5e45\u4e8c\u5206\u56fe\uff08bipartite graph\uff09\uff0c\u201c\u7ed3\u70b9\u201d\uff08\u8f93\u5165\u6587\u4ef6\uff09\u6307\u5411\u201c\u8fb9\u201d\uff08\u6784\u5efa\u6307\u4ee4\uff09\uff0c\u6784\u5efa\u6307\u4ee4\u518d\u6307\u5411\u201c\u7ed3\u70b9\u201d\uff08\u8f93\u51fa\u6587\u4ef6\uff09[6]\u3002\u6784\u5efa\u8fc7\u7a0b\u5c31\u662f\u904d\u5386\u8fd9\u5e45\u56fe\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6784\u5efa\u76ee\u6807\uff0cNinja \u9996\u5148\u904d\u5386\u8fd9\u5e45\u56fe\u4ee5\u786e\u5b9a\u6bcf\u6761\u201c\u8fb9\u201d\u4e0a\u8f93\u5165\u6587\u4ef6\u7684\u72b6\u6001\uff1a\u5373\uff0c\u8f93\u5165\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u4ee5\u53ca\u88ab\u4fee\u6539\u7684\u65f6\u95f4\u3002Ninja \u968f\u5373\u8ba1\u7b97\u51fa\u4e00\u4efd\u8ba1\u5212\u3002\u8ba1\u5212\u5373\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6700\u7ec8\u76ee\u6807\u5904\u4e8e\u6700\u65b0\u72b6\u6001\u800c\u5fc5\u987b\u6267\u884c\u7684\u201c\u8fb9\u201d\u7684\u96c6\u5408\uff0c\u4f9d\u636e\u4e2d\u95f4\u6587\u4ef6\u7684\u4fee\u6539\u65f6\u95f4\u5224\u65ad\u3002\u6700\u540e\uff0c\u6267\u884c\u8ba1\u5212\uff0c\u904d\u5386\u56fe\u5e76\u5c06\u201c\u8fb9\u201d\u6807\u8bb0\u4e3a\u5df2\u6267\u884c\uff0c\u81f3\u6b64\u987a\u5229\u7ed3\u675f\u3002 \u4f18\u5316 Ninja Ninja \u6700\u521d\u7684\u5b9e\u73b0\u4ed4\u7ec6\u5730\u7ec4\u7ec7\u4e86\u6570\u636e\u7ed3\u6784\uff0c\u4e3a\u5feb\u901f\u6784\u5efa\u521b\u9020\u6761\u4ef6\u3002\u4f46\u4ece\u4f18\u5316\u7684\u89d2\u5ea6\u6765\u8bf4\u8fd9\u5e76\u4e0d\u662f\u4e2a\u806a\u660e\u7684\u60f3\u6cd5\u3002\u5728\u7a0b\u5e8f\u5b8c\u6210\u4e4b\u9645\uff0c\u6211\u60f3\u5230\uff0c\u4e00\u4e2a\u5206\u6790\u5668\uff08profiler\uff09\u53ef\u4ee5\u63ed\u793a\u54ea\u4e9b\u4ee3\u7801\u5bf9\u6027\u80fd\u4ea7\u751f\u91cd\u8981\u5f71\u54cd\u3002 \u8fd9\u4e9b\u5e74\u6765\uff0c\u5206\u6790\uff08profiling\uff09\u7684\u7ed3\u679c\u6307\u5411\u8fc7\u7a0b\u5e8f\u7684\u4e0d\u540c\u7684\u533a\u57df\u3002\u6709\u65f6\u662f\u5355\u4e2a\u70ed\u70b9\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u5fae\u4f18\u5316\uff08micro-optimized\uff09\u3002\u66f4\u591a\u65f6\u5019\uff0c\u5206\u6790\u4f1a\u6307\u5411\u4e00\u4e9b\u66f4\u5e7f\u6cdb\u7684\u95ee\u9898\uff0c\u5982\uff0c\u9664\u975e\u5fc5\u8981\uff0c\u4e0d\u8981\u5206\u914d\u6216\u590d\u5236\u5185\u5b58\u3002\u4e5f\u5b58\u5728\u67d0\u4e9b\u60c5\u578b\uff0c\u91c7\u7528\u66f4\u597d\u7684\u8868\u793a\u65b9\u6cd5\u6216\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u83b7\u5f97\u6700\u597d\u7684\u6548\u679c\u3002\u63a5\u4e0b\u6765\u662f\u5bf9 Ninja \u7684\u5b9e\u73b0\u7684\u7b80\u5355\u8868\u8ff0\uff0c\u4ee5\u53ca\u56f4\u7ed5 Ninja \u6027\u80fd\u7684\u6709\u8da3\u6545\u4e8b\u3002 \u89e3\u6790(Parsing) \u8d77\u521d\uff0cNinja \u4f7f\u7528\u7684\u662f\u624b\u5199\u7684\u8bcd\u6cd5\u5206\u6790\u5668\u548c\u9012\u5f52\u4e0b\u964d\u5206\u6790\u5668\u3002\u6211\u4ee5\u4e3a\u8bed\u6cd5\u8db3\u591f\u7b80\u5355\u4e86\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5bf9\u4e8e\u50cf \u8fd9\u6837\u591f\u5927\u7684\u9879\u76ee\u4ec5\u4ec5\u662f\u89e3\u6790\u6784\u5efa\u6587\u4ef6\uff08\u62d3\u5c55\u540d\u4ee5 .ninja \u7ed3\u5c3e\uff09\u6240\u6d88\u8017\u7684\u65f6\u95f4\u90fd\u5341\u5206\u4ee4\u4eba\u5403\u3002 \u5f88\u5feb\uff0c\u6700\u521d\u7528\u6765\u89e3\u6790\u5355\u4e2a\u5b57\u7b26\u7684\u51fd\u6570\u5f88\u5feb\u51fa\u73b0\u5728\u5206\u6790\u7ed3\u679c\u4e2d\uff1a static bool IsIdentifierCharacter ( char c ) { return ( a = c c = z ) || ( A = c c = Z ) || // and so on... } `` \u4e00\u4e2a\u7b80\u5355\u7684\u8c03\u6574\u5c31\u53ef\u4ee5\u8282\u7701 200 \u6beb\u79d2\u2014\u2014\u7528\u4e00\u4e2a\u6709 256 \u4e2a\u6761\u76ee\u3001\u4ee5\u8f93\u5165\u5b57\u7b26\u4e3a\u7d22\u5f15\u7684\u67e5\u627e\u8868\u66ff\u6362\u8fd9\u4e2a\u51fd\u6570\u3002\u8fd9\u6837\u4e00\u5f20\u8868\u7528 Python \u4ee3\u7801\u5f88\u597d\u751f\u6210\uff0c\u50cf\u8fd9\u6837\uff1a ``` shell cs = set () for c in string.ascii_letters + string.digits + r +,-./\\_$ : cs.add ( ord ( c )) for i in range ( 256 ) : print %d, % ( i in cs ) , \u8fd9\u4e2a\u6280\u5de7\u4f7f Ninja \u5728\u76f8\u5f53\u4e00\u6bb5\u65f6\u95f4\u91cc\u4fdd\u8bc1\u4e86\u8fd0\u884c\u901f\u5ea6\u3002\u6700\u7ec8\u6211\u4eec\u8f6c\u79fb\u5230\u4e86\u66f4\u6b63\u5f0f\u7684\u5de5\u5177\uff1are2c\uff0cPHP\u6240\u7528\u7684\u8bcd\u6cd5\u5206\u6790\u5668\uff08lexer\uff09\u751f\u6210\u5de5\u5177\u3002\u5b83\u53ef\u4ee5\u751f\u6210\u66f4\u590d\u6742\u7684\u67e5\u627e\u8868\uff0c\u548c\u4eba\u65e0\u6cd5\u7406\u89e3\u7684\u4ee3\u7801\u3002\u4f8b\u5982\uff1a if ( yych = b ) { if ( yych == ` ) goto yy24 ; if ( yych = a ) goto yy21 ; // and so on... \u5f53\u521d\u91c7\u7528\u6587\u672c\u683c\u5f0f\u4f5c\u4e3a\u8f93\u5165\u683c\u5f0f\u662f\u5426\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff1f\u8fd9\u4e00\u70b9\u4f9d\u7136\u4e0d\u660e\u786e\u3002\u6216\u8bb8\u6700\u7ec8\u6211\u4eec\u4f1a\u91c7\u7528\u67d0\u79cd\u673a\u5668\u53cb\u597d\u7684\u683c\u5f0f\u4f5c\u4e3a Ninja \u8f93\u5165\u6587\u4ef6\u7684\u683c\u5f0f\uff0c\u8fd9\u4e5f\u8bb8\u53ef\u4ee5\u907f\u514d\u7edd\u5927\u90e8\u5206\u89e3\u6790\u5de5\u4f5c\u3002 \u89c4\u8303\u5316\uff08Canonicalization\uff09 Ninja \u907f\u514d\u7528\u5b57\u7b26\u4e32\u8bc6\u522b\u8def\u5f84\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0cNinja \u5c06\u5b83\u9047\u5230\u7684\u6bcf\u4e2a\u8def\u5f84\u6620\u5c04\u5230\u552f\u4e00\u7684 Node \u5bf9\u8c61\uff0c\u5728\u540e\u7eed\u4ee3\u7801\u4e2d\u4ee5 Node \u5bf9\u8c61\u8868\u793a\u8fd9\u4e00\u8def\u5f84\u3002\u590d\u7528 Node \u5bf9\u8c61\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8def\u5f84\u53ea\u5728\u786c\u76d8\u4e0a\u68c0\u67e5\u4e00\u6b21\uff0c\u68c0\u67e5\u7684\u7ed3\u679c\uff08\u4f8b\u5982\uff0c\u4fee\u6539\u65f6\u95f4\uff09\u53ef\u5728\u5176\u5b83\u4ee3\u7801\u4e2d\u590d\u7528\u3002 \u6307\u5411 Node \u5bf9\u8c61\u7684\u6307\u9488\u5982\u540c\u8fd9\u4e00\u8def\u5f84\u7684\u552f\u4e00\u6807\u8bc6\u3002\u5982\u679c\u60f3\u8981\u6d4b\u8bd5\u4e24\u4e2a Node \u662f\u5426\u6307\u5411\u540c\u4e00\u8def\u5f84\uff0c\u6bd4\u8f83\u6307\u9488\u5c31\u8db3\u591f\u4e86\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u6602\u8d35\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002\u4f8b\u5982\uff0c\u5728 Ninja \u904d\u5386\u8f93\u5165\u6587\u4ef6\u6784\u6210\u7684\u56fe\u65f6\uff0c\u4f1a\u4fdd\u5b58\u4e00\u4e2a Node \u4f9d\u8d56\u6808\uff0c\u4ee5\u68c0\u67e5\u4f9d\u8d56\u662f\u5426\u6709\u73af\uff1a\u5982\u679c A \u4f9d\u8d56 B\uff0cB\u4f9d\u8d56 C\uff0c\u800c C \u53c8\u4f9d\u8d56 A\u3002\u6784\u5efa\u5c31\u65e0\u6cd5\u8fdb\u884c\u3002\u8fd9\u4e2a\u6808\uff0c\u4ee3\u8868\u4e00\u7ec4\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\u5b9e\u73b0\uff0c\u53ef\u4ee5\u4f7f\u7528\u6307\u9488\u76f8\u7b49\u6027\u5224\u65ad\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u3002 \u4e3a\u4e86\u4fdd\u8bc1\u6307\u5411\u4e00\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\u603b\u662f\u6307\u5411\u540c\u4e00 Node\uff0cNinja \u5fc5\u987b\u53ef\u9760\u5730\u5c06\u4e00\u4e2a\u6587\u4ef6\u6240\u6709\u53ef\u80fd\u7684\u540d\u5b57\u6620\u5c04\u5230\u540c\u4e00 Node \u5bf9\u8c61\u3002\u8fd9\u9700\u8981\u5bf9\u8f93\u5165\u6587\u4ef6\u4e2d\u63d0\u5230\u7684\u6240\u6709\u6587\u4ef6\u8fdb\u884c\u89c4\u8303\u5316\uff08canonicalization\uff09\uff0c\u5c06\u50cf foo/../bar.h \u8fd9\u6837\u7684\u8def\u5f84\u8f6c\u6362\u4e3a bar.h\u3002\u6700\u521d\uff0cNinja \u53ea\u662f\u7b80\u5355\u5730\u8981\u6c42\u6240\u6709\u8def\u5f84\u4ee5\u89c4\u8303\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u4f46\u7531\u4e8e\u51e0\u4e2a\u539f\u56e0\uff0c\u8fd9\u6700\u540e\u8fd8\u662f\u4e0d\u884c\u3002\u4e00\u4e2a\u539f\u56e0\u662f\u7528\u6237\u6307\u5b9a\u7684\u8def\u5f84\uff08\u4f8b\u5982\uff0c\u5728\u547d\u4ee4\u884c\u8f93\u5165 ninja ./bar.h \uff09\u5e94\u8be5\u80fd\u6b63\u786e\u5de5\u4f5c\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u53d8\u91cf\u7684\u7ec4\u5408\u53ef\u80fd\u4ea7\u751f\u51fa\u4e0d\u89c4\u8303\u7684\u8def\u5f84\u3002\u6700\u540e\uff0cgcc \u7ed9\u51fa\u7684\u4f9d\u8d56\u4fe1\u606f\u53ef\u80fd\u4e0d\u89c4\u8303\u3002 \u4e8e\u662f\uff0c\u6700\u7ec8\uff0cNinja \u5bf9\u8def\u5f84\u8fdb\u5904\u7406\u3002\u8fd9\u4e5f\u5bfc\u81f4\u8def\u5f84\u529f\u80fd\u6210\u80fd\u6210\u4e3a\u5206\u6790\u7ed3\u679c\u4e2d\u7684\u53e6\u4e00\u5904\u70ed\u70b9\u3002\u539f\u6765\u7684\u5b9e\u73b0\u662f\u4ee5\u6e05\u6670\u800c\u4e0d\u662f\u4ee5\u6027\u80fd\u4e3a\u91cd\u70b9\u7f16\u5199\u7684\uff0c\u6240\u4ee5\u6807\u51c6\u7684\u4f18\u5316\u6280\u672f\uff0c\u5982\u79fb\u9664\u53cc\u5faa\u73af\uff08removing a double loop\uff09\u6216\u907f\u514d\u5185\u5b58\u5206\u914d\uff0c\u4f5c\u7528\u663e\u8457\u3002 \u8bbe\u8ba1\u76ee\u6807 \u8fd9\u91cc\u662fNinja\u7684\u8bbe\u8ba1\u76ee\u6807 \u975e\u5e38\u5feb\uff08\u5373\u77ac\u95f4\uff09\u589e\u91cf\u6784\u5efa\uff0c\u5373\u4f7f\u662f\u975e\u5e38\u5927\u7684\u9879\u76ee\u3002 \u4ee3\u7801\u5982\u4f55\u6784\u5efa\u7684\u7b56\u7565\u975e\u5e38\u5c11\u3002\u5173\u4e8e\u4ee3\u7801\u5982\u4f55\u6784\u5efa\u4e0d\u540c\u7684\u9879\u76ee\u548c\u9ad8\u7ea7\u6784\u5efa\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u610f\u89c1\uff1b\u4f8b\u5982\uff0c\u6784\u5efa\u76ee\u6807\u662f\u5e94\u8be5\u4e0e\u4ee3\u7801\u653e\u5728\u4e00\u8d77\u8fd8\u662f\u653e\u5728\u5355\u72ec\u7684\u76ee\u5f55\u91cc\uff1f\u662f\u5426\u6709\u4e3a\u9879\u76ee\u6784\u5efa\u4e00\u4e2a\u53ef\u5206\u53d1\u7684\u201c\u5305\u201d\u7684\u89c4\u5219\uff1f\u89c4\u907f\u8fd9\u4e9b\u7b56\u7565\uff0c\u800c\u4e0d\u662f\u9009\u62e9\uff0c\u5426\u5219\u53ea\u4f1a\u53d8\u5f97\u590d\u6742\u3002 \u83b7\u53d6\u6b63\u786e\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u60c5\u51b5\u4e0bMakefiles\u5f88\u96be\u83b7\u53d6\u6b63\u786e\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u4f8b\u5982\uff1a\u8f93\u51fa\u9690\u5f0f\u4f9d\u8d56\u4e8e\u547d\u4ee4\u884c\u751f\u6210\uff0c\u6784\u5efac\u4ee3\u7801\u4f60\u9700\u8981\u4f7f\u7528gcc\u7684-M\u6807\u5fd7\u53bb\u751f\u6210\u5176\u5934\u6587\u4ef6\u4f9d\u8d56\uff09 \u5f53\u76ee\u6807\u548c\u904d\u5386\u51b2\u7a81\u65f6\u6211\u4eec\u9009\u62e9\u901f\u5ea6. \u4e00\u4e9b\u660e\u786e\u7684 non-goals: \u65b9\u4fbf\u4eba\u5de5\u7f16\u5199\u6784\u5efa\u6587\u4ef6\u7684\u8bed\u6cd5\u3002\u4f60\u5e94\u8be5\u4f7f\u7528\u5176\u5b83\u7a0b\u5e8f\u6765\u751f\u6210\u4f60\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u8fd9\u662f\u6211\u4eec\u53ef\u4ee5\u56de\u907f\u8bb8\u591a\u7b56\u7565\u51b3\u5b9a\u3002 built-in rules. _Out of the box, Ninja has no rules for e.g. compiling C code._ build-time customization of the build. _Options belong in the program that generates the ninja files_. build-time decision-making ability such as conditionals or search paths. Making decisions is slow. \u91cd\u7533\u4e00\u4e0b\uff0cNinja\u6bd4\u5176\u5b83\u6784\u5efa\u7cfb\u7edf\u8981\u5feb\uff0c\u56e0\u4e3a\u5b83\u662f\u5f02\u5e38\u7684\u7b80\u5355\u3002\u5728\u4f60\u4e3a\u4f60\u7684\u9879\u76ee\u7f16\u5199.ninja\u6587\u4ef6\u65f6\u4f60\u5fc5\u987b\u544a\u8bc9Ninja\u8981\u5b83\u505a\u4ec0\u4e48\u3002 \u4e0eMake\u6bd4\u8f83 Ninja\u7684\u5b9a\u4f4d\u975e\u5e38\u6e05\u6670\uff0c\u5c31\u662f\u8fbe\u5230\u66f4\u5feb\u7684\u6784\u5efa\u901f\u5ea6\u3002 ninja\u7684\u8bbe\u8ba1\u662f\u5bf9\u4e8emake\u7684\u7f3a\u9677\u7684\u8003\u8651\uff0c\u8ba4\u4e3amake\u6709\u4e0b\u9762\u51e0\u70b9\u9020\u6210\u7f16\u8bd1\u901f\u5ea6\u8fc7\u6162\uff1a \u9690\u5f0f\u89c4\u5219\uff0cmake\u5305\u542b\u5f88\u591a\u9ed8\u8ba4 \u53d8\u91cf\u8ba1\u7b97\uff0c\u6bd4\u5982\u7f16\u8bd1\u53c2\u4e0e\u5e94\u8be5\u5982\u4f55\u8ba1\u7b97\u51fa\u6765 \u4f9d\u8d56\u5bf9\u8c61\u8ba1\u7b97 ninja\u8ba4\u4e3a\u63cf\u8ff0\u6587\u4ef6\u5e94\u8be5\u662f\u8fd9\u6837\u7684: \u4f9d\u8d56\u5fc5\u987b\u663e\u5f0f\u5199\u660e(\u4e3a\u4e86\u65b9\u4fbf\u53ef\u4ee5\u4ea7\u751f\u4f9d\u8d56\u63cf\u8ff0\u6587\u4ef6) \u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u8ba1\u7b97 \u6ca1\u6709\u9ed8\u8ba4\u89c4\u5219\uff0c\u6ca1\u6709\u4efb\u4f55\u9ed8\u8ba4\u503c \u9488\u5bf9\u8fd9\u70b9\u6240\u4ee5\u57fa\u672c\u4e0a\u53ef\u4ee5\u8ba4\u4e3aninja\u5c31\u662fmake\u7684\u6700\u6700\u7cbe\u7b80\u7248\u3002 ninja\u76f8\u5bf9\u4e8emake\u589e\u52a0\u4e86\u4e0b\u9762\u8fd9\u4e9b\u529f\u80fd\uff1a \u5982\u679c\u6784\u5efa\u547d\u4ee4\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6784\u5efa\u4e5f\u4f1a\u91cd\u65b0\u6267\u884c\u3002 \u6240\u4f9d\u8d56\u7684\u76ee\u5f55\u5728\u6784\u5efa\u4e4b\u524d\u90fd\u5df2\u7ecf\u521b\u5efa\u4e86\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u6267\u884c\u547d\u4ee4\u4e4b\u524d\u90fd\u8981\u53bb\u751f\u6210\u76ee\u5f55\u3002 \u6bcf\u6761\u6784\u5efa\u89c4\u5219\uff0c\u9664\u4e86\u6267\u884c\u547d\u4ee4\u4e4b\u5916\uff0c\u8fd8\u5141\u8bb8\u6709\u4e00\u4e2a\u63cf\u8ff0\uff0c\u771f\u6b63\u6267\u884c\u6253\u5370\u8fd9\u4e2a\u63cf\u8ff0\u800c\u4e0d\u662f\u5b9e\u9645\u6267\u884c\u547d\u4ee4\u3002 \u6bcf\u6761\u89c4\u5219\u7684\u8f93\u51fa\u90fd\u662fbuffered\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5e76\u884c\u7f16\u8bd1\uff0c\u8f93\u5165\u5185\u5bb9\u4e0d\u4f1a\u88ab\u6405\u548c\u5728\u4e00\u8d77\u3002 \u6784\u5efa\u5de5\u5177\u592a\u591a\u4e86\uff0c\u6211\u4e2a\u4eba\u89c9\u5f97make\u4e3b\u8981\u504f\u5927\u4f17\u5316\u4e00\u70b9\uff0c\u53ef\u4ee5\u8fdb\u884c\u5404\u79cd\u9690\u5f0f\u63a8\u5bfc\uff0c\u6bd4\u8f83\u7075\u6d3b\uff0c\u6bcf\u4e00\u6761\u547d\u4ee4\u6267\u884c\u90fd\u6709\u8f93\u51fa\u3002 \u800cNinja\u4e3b\u8981\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u4e3a\u4e86\u50cfchromium\u8fd9\u79cd\u5927\u578b\u9879\u76ee\uff0c\u80fd\u591f\u663e\u8457\u7684\u63d0\u9ad8\u7f16\u8bd1\u901f\u5ea6\uff0c\u4e00\u65b9\u9762\u5b83\u53bb\u6389\u4e86\u5404\u79cd\u8ba1\u7b97\u548c\u63a8\u5bfc\uff0c\u628a\u4e00\u4e9b\u8017\u65f6\u7684\u9700\u8981\u8ba1\u7b97\u7684\u4e1c\u897f\u53bb\u6389\u4e86\uff0c\u53ea\u7559\u4e0b\u7b80\u5355\u91cd\u8981\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u5982\u679c\u81ea\u5df1\u53bb\u5199build.ninja\u6587\u4ef6\u7684\u8bdd\u6bd4\u8f83\u7e41\u7410\uff0c\u6240\u4ee5\u90fd\u662f\u4f9d\u8d56\u4e8e\u5176\u5b83\u6784\u5efa\u5de5\u5177\u751f\u6210\u7684\uff0c\u53e6\u4e00\u65b9\u9762\u5b83\u6bcf\u6b21\u8f93\u51fa\u53ea\u8f93\u51fa\u4e00\u4e2a\u63cf\u8ff0\uff0c\u800c\u4e0d\u662f\u771f\u6b63\u7684\u547d\u4ee4\u6267\u884c\u8f93\u51fa\uff0c\u771f\u6b63\u7684\u547d\u4ee4\u6267\u884c\u518d\u540e\u53f0\u8fd0\u884c\uff0c\u53ea\u6709\u8b66\u544a\u548c\u62a5\u9519\u4fe1\u606f\u624d\u4f1a\u663e\u793a\u51fa\u6765\uff0c\u8fd9\u4e5f\u63d0\u9ad8\u4e86\u5b83\u7684\u901f\u5ea6\u3002 Make vs Ninja Performance Comparison\u8fd9\u7bc7\u6587\u7ae0\u5bf9Make\u63a5Ninja\u8fdb\u884c\u6d4b\u8bd5\u5bf9\u6bd4\u3002","title":"Ninja \u505a\u4e86\u4ec0\u4e48"},{"location":"android/flutter/NinjaSystem/#ninja_3","text":"Ninja \u76ee\u524d\u5728Windows\u548c\u7c7bUnix\u7cfb\u7edf\u90fd\u652f\u6301\uff0c\u867d\u7136\u5927\u90e8\u5206\u6d4b\u8bd5\u90fd\u662f\u5728linux\u4e0a\u5b8c\u6210\u7684\uff08\u5e76\u4e14\u5728Linux\u4e0a\u6027\u80fd\u4e5f\u6700\u597d\uff09\uff0c\u4e0d\u8fc7\u5728MAC OS X\u548cFreeBSD \u4e0a\u4e5f\u90fd\u80fd\u5f88\u597d\u7684\u5de5\u4f5c\u3002 \u5982\u679c\u4f60\u7684\u9879\u76ee\u5f88\u5c0f\uff0cNinja\u7684\u901f\u5ea6\u4f18\u52bf\u53ef\u80fd\u4e0d\u90a3\u4e48\u660e\u663e\uff08\u7136\u800c\uff0c\u5373\u4f7f\u662f\u5c0f\u9879\u76ee\uff0cNinja\u7684\u6781\u5176\u7b80\u6d01\u7684\u8bed\u6cd5\u548c\u6781\u5176\u7b80\u5355\u7684\u6784\u5efa\u89c4\u5219\uff0c\u4e5f\u4f7f\u4f60\u7684\u9879\u76ee\u80fd\u591f\u66f4\u52a0\u5feb\u901f\u7684\u6784\u5efa\uff09\u3002\u6362\u4e00\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5bf9\u4f60\u7684\u9879\u76ee\u7f16\u8f91-\u7f16\u8bd1\u7684\u5faa\u73af\u65f6\u95f4\u611f\u5230\u6ee1\u610f\uff0c\u90a3\u4e48Ninja\u53ef\u80fd\u5bf9\u4f60\u4e0d\u4f1a\u6709\u592a\u591a\u7684\u5e2e\u52a9\u3002 \u8fd8\u6709\u8bb8\u591a\u5176\u5b83\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u6bd4Ninja\u4f7f\u7528\u66f4\u52a0\u53cb\u597d\uff0c\u529f\u80fd\u4e5f\u66f4\u52a0\u5f3a\u5927\u3002\u4f5c\u8005\u89c9\u5f97Ninja\u7684\u8bbe\u8ba1\u53d7\u5230\u4e86tup\u6784\u5efa\u7cfb\u7edf\u8bbe\u8ba1\u7684\u5f71\u54cd\uff0c\u5e76\u8ba4\u4e3a\u91cd\u505a\u7684\u8bbe\u8ba1\u975e\u5e38\u806a\u660e\u3002 Ninja\u7684\u597d\u5904\u662f\u53ef\u4ee5\u5c06\u5b83\u4e0e\u667a\u80fd\u7684\u5143\u6784\u5efa\u7cfb\u7edf\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002 gyp\u7528\u4e8e\u751f\u6210Google \u548c\u76f8\u5173\u9879\u76ee\uff08v8\uff0cnode.js\uff09\u7684\u5143\u6784\u5efa\u6587\u4ef6\u5efa\u7acb\u7cfb\u7edf\uff0c\u5df2\u88abGN\u53d6\u4ee3\u3002 gyp\u53ef\u4ee5\u4e3a\u652f\u6301\u7684\u6240\u6709\u5e73\u53f0\u751f\u6210Ninja\u6587\u4ef6\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Chromium Ninja\u6587\u6863\u3002 CMake\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u5143\u6784\u5efa\u7cfb\u7edf\uff0c\u5728Linux\u4e0aCMake 2.8.8\u7248\u672c\u53ef\u4ee5\u751f\u6210Ninja\u6587\u4ef6\u3002 \u8f83\u65b0\u7248\u672c\u7684CMake\u652f\u6301\u5728Windows\u548cMac OS X\u4e0a\u751f\u6210Ninja\u6587\u4ef6\u3002 \u5176\u4ed6:Ninja\u5e94\u8be5\u5b8c\u5584\u5176\u4ed6\u5143\u6784\u5efa\u8f6f\u4ef6\u7684\u652f\u6301\uff0c\u4f8b\u5982premake\u3002 \u5982\u679c\u4f60\u5728\u505a\u8fd9\u9879\u5de5\u4f5c\uff0c\u8bf7\u8ba9\u6211\u4eec\u77e5\u9053\uff01","title":"\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u4f7f\u7528ninja"},{"location":"android/flutter/NinjaSystem/#ninja_4","text":"\u8fd0\u884cninja\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u67e5\u627e\u540d\u4e3abuild.ninja\u7684\u6587\u4ef6 \u5e76\u6784\u5efa\u6240\u6709\u8fc7\u671f\u76ee\u6807\u3002 \u60a8\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u53c2\u6570\u4e2d\u6307\u5b9a\u8981\u6784\u5efa\u7684\u76ee\u6807\uff08\u6587\u4ef6\uff09\u3002 \u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u8bed\u6cd5,\u76ee\u6807^\u6307\u5b9a\u7684\u76ee\u6807\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u8f93\u51fa\uff08\u5982\u679c\u5b58\u5728\uff09\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u60a8\u6307\u5b9a\u76ee\u6807 foo.c ^, \u90a3\u4e48foo.o\u5c06\u9996\u5148\u88ab\u6784\u5efa\uff08\u5047\u8bbe\u4f60\u7684\u6784\u5efa\u6587\u4ef6\u4e2d\u5b58\u5728\u8fd9\u4e9b\u76ee\u6807\uff09\u3002","title":"\u8fd0\u884cNinja"},{"location":"android/flutter/NinjaSystem/#ninja-h","text":"\u8bb8\u591aNinja\u7684flags\u4e0eMake\u662f\u5339\u914d\u7684; \u4f8b\u5982ninja -C build -j 20\u6539\u6210\u6784\u5efa\u76ee\u5f55\u5e76\u5e76\u884c\u8fd0\u884c20\u4e2a\u6784\u5efa\u547d\u4ee4\u3002 \uff08\u6ce8\u610f Ninja\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4ee5\u5e76\u884c\u65b9\u5f0f\u8fd0\u884c\u547d\u4ee4\uff0c\u6240\u4ee5\u901a\u5e38\u4f60\u4e0d\u9700\u8981\u4f20\u9012-j\u3002\uff09 Ninja \u9ed8\u8ba4\u57fa\u4e8e\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684 CPU \u6570\u91cf\u4ee5\u5e76\u53d1\u65b9\u5f0f\u6267\u884c\u6307\u4ee4\u3002\u56e0\u4e3a\u540c\u65f6\u8fd0\u884c\u7684\u547d\u4ee4\u4eec\u7684\u8f93\u51fa\u53ef\u80fd\u6df7\u6dc6\uff0cNinja \u4f1a\u5728\u4e00\u4e2a\u547d\u4ee4\u5b8c\u6210\u524d\u7f13\u5b58\u5176\u8f93\u51fa\u3002\u4ece\u7ed3\u679c\u770b\uff0c\u5982\u540c\u547d\u4ee4\u662f\u4e32\u884c\u7684\u3002 \u8fd9\u79cd\u5bf9\u547d\u4ee4\u8f93\u51fa\u7684\u63a7\u5236\u4f7f\u5f97 Ninja \u53ef\u4ee5\u5c0f\u5fc3\u63a7\u5236\u603b\u7684\u8f93\u51fa\u3002\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d Ninja \u663e\u793a\u4e00\u884c\u8868\u793a\u72b6\u6001\uff1b\u5982\u679c\u6784\u5efa\u987a\u5229\u5b8c\u6210\uff0cNinja \u7684\u5168\u90e8\u8f93\u51fa\u5c31\u53ea\u6709\u4e00\u884c\u3002\u8fd9\u4e0d\u4f1a\u4f7f Ninja \u8fd0\u884c\u5f97\u66f4\u5feb\uff0c\u4f46\u53ef\u4ee5\u4f7f\u4eba\u611f\u89c9 Ninja \u5f88\u5feb\uff0c\u8fd9\u51e0\u4e4e\u4e0e\u5728\u771f\u5b9e\u901f\u5ea6\u4e0a\u7684\u76ee\u6807\u4e00\u6837\u91cd\u8981\u3002","title":"ninja -h \u6253\u5370\u5e2e\u52a9\u3002"},{"location":"android/flutter/NinjaSystem/#_3","text":"Ninja\u652f\u6301\u7528\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u6765\u63a7\u5236\u5176\u884c\u4e3a\uff1a NINJA STATUS\uff0c\u5728\u8fd0\u884c\u89c4\u5219\u4e4b\u524d\u4f1a\u6253\u5370\u8fdb\u5ea6\u72b6\u6001\u3002 \u4e0b\u9762\u662f\u51e0\u4e2a\u53ef\u7528\u7684\u5360\u4f4d\u7b26\uff1a %s:: The number of started edges. %t:: The total number of edges that must be run to complete the build. %p:: The percentage of started edges. %r:: The number of currently running edges. %u:: The number of remaining edges to start. %f:: The number of finished edges. %o:: Overall rate of finished edges per second %c:: Current rate of finished edges per second ( average over builds specified by -j or its default ) %e:: Elapsed time in seconds. ( Available since Ninja 1 .2. ) %%:: A plain % character. \u9ed8\u8ba4\u8fdb\u5ea6\u72b6\u6001\u4e3a \"[%f/%t] \" ( \u6ce8\u610f\u7ed3\u5c3e\u7a7a\u683c\u4ee5\u4e0e\u6784\u5efa\u89c4\u5219\u5206\u5f00). \u53e6\u4e00\u4e2a\u53ef\u80fd\u7684\u8fdb\u5ea6\u72b6\u6001\u7684\u4f8b\u5b50\u5982\u4e0b\uff1a \"[%u/%r/%f] \".","title":"\u73af\u5883\u53d8\u91cf"},{"location":"android/flutter/NinjaSystem/#_4","text":"\u5728Ninja\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u547d\u4ee4\u884c\u91cc\u4f7f\u7528-t\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e9b\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177\uff0c\u76ee\u524d\u6709\u4ee5\u4e0b\u4e00\u4e9b\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528\uff1a query:: dump\u6307\u5b9atarget\u7684\u8f93\u5165\u548c\u8f93\u51fa. browse:: \u5728Web\u6d4f\u89c8\u5668\u4e2d\u6d4f\u89c8\u4f9d\u8d56\u5173\u7cfb\u56fe\u3002 \u5355\u51fb\u6587\u4ef6\u5c06\u7126\u70b9\u5207\u5230\u8be5\u6587\u4ef6\u4e0a\uff0c\u4f1a\u663e\u793a\u8f93\u5165\u548c\u8f93\u51fa\u3002 \u8fd9\u4e2a \u529f\u80fd\u9700\u8981Python\u5b89\u88c5\u3002 \u9ed8\u8ba4\u4f7f\u7528\u7aef\u53e38000\u5e76\u6253\u5f00Web\u6d4f\u89c8\u5668\u3002 \u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u4fee\u6539\uff1a ninja -t browse --port=8000 --no-browser mytarget graph::\u4ee5\u81ea\u52a8\u56fe\u5f62\u5e03\u5c40\u5de5\u5177graphviz\u7684\u8bed\u6cd5\u8f93\u51fa\u4e00\u4e2a\u6587\u4ef6\u3002 \u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a ninja -t graph mytarget | dot -Tpng -ograph.png \u5728Ninja\u6e90\u4ee3\u7801\u6811\u4e2d\uff0c\u8fd0\u884c\u201cninja graph.png\u201d\u547d\u4ee4\u5c06\u4e3aNinja\u672c\u8eab\u751f\u6210\u4e00\u5f20\u56fe\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u76ee\u6807\u5219\u5c06\u4e3a all\u76ee\u6807\u751f\u6210\u3002","title":"\u6269\u5c55\u5de5\u5177"},{"location":"android/flutter/NinjaSystem/#ninja_5","text":"","title":"\u7f16\u5199\u4f60\u81ea\u5df1\u7684Ninja\u6587\u4ef6"},{"location":"android/flutter/NinjaSystem/#_5","text":"Ninja\u548cMake\u975e\u5e38\u76f8\u4f3c\u3002\u4ed6\u6267\u884c\u4e00\u4e2a\u6587\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u56fe\uff0c\u901a\u8fc7\u68c0\u6d4b\u6587\u4ef6\u4fee\u6539\u65f6\u95f4,\u8fd0\u884c\u5fc5\u8981\u7684\u547d\u4ee4\u6765\u66f4\u65b0\u4f60\u7684\u6784\u5efa\u76ee\u6807\u3002 \u4e00\u4e2a\u6784\u5efa\u6587\u4ef6\uff08\u9ed8\u8ba4\u6587\u4ef6\u540d\u4e3a\uff1abuild.ninja\uff09\u63d0\u4f9b\u4e00\u4e2arule\uff08\u89c4\u5219\uff09\u8868\u2014\u2014\u957f\u547d\u4ee4\u7684\u7b80\u77ed\u540d\u79f0\uff0c\u548c\u8fd0\u884c\u7f16\u8bd1\u5668\u7684\u65b9\u5f0f\u3002\u540c\u65f6\uff0c\u9644\u5e26\u63d0\u4f9bbuild\uff08\u6784\u5efa\uff09\u8bed\u53e5\u5217\u8868\uff0c\u8868\u660e\u901a\u8fc7rule\u5982\u4f55\u6784\u5efa\u6587\u4ef6\u2014\u2014\u54ea\u6761\u89c4\u5219\u5e94\u7528\u4e8e\u54ea\u4e2a\u8f93\u5165\u4ea7\u751f\u54ea\u4e00\u4e2a\u8f93\u51fa\u3002 \u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0cbuild\u8bed\u53e5\u63cf\u8ff0\u9879\u76ee\u7684\u4f9d\u8d56\u56fe\uff1b\u800crule\u8bed\u53e5\u63cf\u8ff0\u5f53\u7ed9\u5b9a\u4e00\u4e2a\u56fe\u7684\u4e00\u6761\u8fb9\u65f6\uff0c\u5982\u4f55\u751f\u6210\u6587\u4ef6\u3002","title":"\u6982\u8ff0"},{"location":"android/flutter/NinjaSystem/#_6","text":"\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u9a8c\u8bc1\u7edd\u5927\u90e8\u5206\u8bed\u6cd5\u7684.ninja\u6587\u4ef6\uff0c\u5c06\u4f5c\u4e3a\u540e\u7eed\u63cf\u8ff0\u76f8\u5173\u7684\u793a\u4f8b\u3002\u5177\u4f53\u5185\u5bb9\uff0c\u5982\u4e0b\uff1a cflags = -Wall rule cc command = gcc $cflags -c $in -o $out build foo.o: cc foo.c","title":"\u8bed\u6cd5\u4f8b\u5b50"},{"location":"android/flutter/NinjaSystem/#_7","text":"ninja\u652f\u6301\u4e3a\u5b57\u7b26\u4e32\u58f0\u660e\u7b80\u77ed\u53ef\u8bfb\u7684\u540d\u5b57\u3002\u4e00\u4e2a\u58f0\u660e\u7684\u8bed\u6cd5\uff0c\u5982\u4e0b\uff1a cflags = -g \u53ef\u4ee5\u5728=\u53f3\u8fb9\u4f7f\u7528\uff0c\u5e76\u901a\u8fc7$\u8fdb\u884c\u5f15\u7528\uff08\u7c7b\u4f3cshell\u548cperl\u7684\u8bed\u6cd5\uff09\u3002\u5177\u4f53\u5f62\u5f0f\uff0c\u5982\u4e0b\uff1a rule cc command = gcc $cflags -c $in -o $out \u53d8\u91cf\u8fd8\u53ef\u4ee5\u7528 {in}( {in}( \u548c\u6210\u5bf9\u7684\u5927\u62ec\u53f7)\u6765\u5f15\u7528\u3002 \u5f53\u7ed9\u5b9a\u53d8\u91cf\u7684\u503c\u4e0d\u80fd\u88ab\u4fee\u6539\uff0c\u53ea\u80fd\u8986\u76d6\uff08shadowed\uff09\u65f6,\u53d8\u91cf\u66f4\u6070\u5f53\u7684\u53eb\u6cd5\u662f\u7ed1\u5b9a\uff08\u201dbindings\u201d\uff09\u3002","title":"\u53d8\u91cf"},{"location":"android/flutter/NinjaSystem/#_8","text":"\u89c4\u5219\u4e3a\u547d\u4ee4\u884c\u58f0\u660e\u4e00\u4e2a\u7b80\u77ed\u7684\u540d\u79f0\u3002\u4ed6\u4eec\u7531\u5173\u952e\u5b57rule\u548c\u4e00\u4e2a\u89c4\u5219\u540d\u79f0\u6253\u5934\u7684\u884c\u5f00\u59cb\uff0c\u7136\u540e\u7d27\u8ddf\u7740\u4e00\u7ec4\u5e26\u7f29\u8fdb\u683c\u5f0f\u7684 variable = value\u884c\u7ec4\u6210\u3002 \u4ee5\u4e0a\u793a\u4f8b\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3acc\u7684rule\uff0c\u8fde\u540c\u4e00\u4e2a\u5f85\u8fd0\u884c\u7684\u547d\u4ee4\u3002\u5728rule\uff08\u89c4\u5219\uff09\u4e0a\u4e0b\u6587\u4e2d\uff0ccommand\u53d8\u91cf\u7528\u4e8e\u5b9a\u4e49\u5f85\u6267\u884c\u7684\u547d\u4ee4\uff0c in\u5c55\u5f00\uff08expands\uff09\u4e3a\u8f93\u5165\u6587\u4ef6\u5217\u8868\uff08foo.c\uff09,\u800c in\u5c55\u5f00\uff08expands\uff09\u4e3a\u8f93\u5165\u6587\u4ef6\u5217\u8868\uff08foo.c\uff09,\u800c out\u4e3a\u547d\u4ee4\u7684\u8f93\u51fa\u6587\u4ef6\u5217\u8868\uff08foo.o\uff09\u3002 \u53c2\u8003\u624b\u518c\u4e2d\u7f57\u5217\u4e86\u6240\u6709\u7279\u6b8a\u7684\u53d8\u91cf\u3002","title":"\u89c4\u5219"},{"location":"android/flutter/NinjaSystem/#build","text":"build\u8bed\u53e5\u58f0\u660e\u8f93\u5165\u548c\u8f93\u51fa\u6587\u4ef6\u4e4b\u95f4\u7684\u4e00\u4e2a\u5173\u7cfb\u3002\u6784\u5efa\u8bed\u53e5\u7531\u5173\u952e\u5b57build\u5f00\u5934\uff0c\u683c\u5f0f\u4e3a build outputs: rulename inputs 1 \u8fd9\u6837\u7684\u4e00\u4e2a\u58f0\u660e\uff0c\u6240\u6709\u7684\u8f93\u51fa\u6587\u4ef6\u6765\u6e90\u4e8e\u8f93\u5165\u6587\u4ef6\u3002\u5f53\u7f3a\u8f93\u51fa\u6587\u4ef6\u6216\u8f93\u5165\u6587\u4ef6\u53d8\u66f4\u65f6\uff0cNinja\u5c06\u4f1a\u8fd0\u884c\u6b64\u89c4\u5219\u6765\u91cd\u65b0\u751f\u6210\u8f93\u51fa\u3002 \u4ee5\u4e0a\u7684\u7b80\u5355\u793a\u4f8b\uff0c\u63cf\u8ff0\u4e86\u4f7f\u7528cc\u89c4\u5219\u5982\u4f55\u6784\u5efafoo.o\u6587\u4ef6\u3002 \u5728build block\u8303\u56f4\u5185\uff08\u5305\u62ec\u76f8\u5173\u89c4\u5219\u7684\u6267\u884c\uff09\uff0c\u53d8\u91cf in\u8868\u793a\u8f93\u5165\u5217\u8868\uff0c in\u8868\u793a\u8f93\u5165\u5217\u8868\uff0c out\u8868\u793a\u8f93\u51fa\u5217\u8868\u3002 \u4e00\u4e2a\u6784\u5efa\u8bed\u53e5\uff0c\u53ef\u4ee5\u548crule\u4e00\u6837\uff0c\u7d27\u8ddf\u4e00\u7ec4\u5e26\u7f29\u8fdb\u683c\u5f0f\u7684key = value\u5bf9\u3002\u5f53\u5728\u547d\u4ee4\u4e2d\u53d8\u91cf\u6267\u884c\u65f6\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u8986\u76d6\uff08shadow\uff09\u4efb\u4f55\u53d8\u91cf\u3002\u6bd4\u5982\uff1a cflags = -Wall -Werror rule cc command = gcc $cflags -c $in -o $out # \u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0cbuild\u7684\u8f93\u51fa\u5c06\u662f$cflags build foo.o: cc foo.c # \u4f46\u662f\uff0c\u4f60\u53ef\u4ee5\u5728\u7279\u6b8a\u7684build\u4e2d\u8986\u76d6cflags\u8fd9\u6837\u7684\u53d8\u91cf build special.o: cc special.c cflags = -Wall # cflags\u53d8\u91cf\u4ec5\u4ec5\u8986\u76d6\u4e86special.o\u7684\u8303\u56f4 # \u4ee5\u4e0b\u7684\u5b50\u5e8f\u5217build\u884c\u5f97\u5230\u7684\u662f\u5916\u90e8\u7684(\u539f\u59cb\u7684)cflags build bar.o: cc bar.c \u5982\u679c\u4f60\u8981\u4ecebuild\u8bed\u53e5\u4f20\u9012\u66f4\u591a\u7684\u4fe1\u606f\u5230rule\u89c4\u5219\uff08\u4f8b\u5982\uff0c\u5982\u679c\u89c4\u5219\u9700\u8981\u77e5\u9053\u201d\u7b2c\u4e00\u8f93\u5165\u6587\u4ef6\u7684\u6269\u5c55\u540d\u201d\uff09,\u90a3\u4e48\u8bf7\u901a\u8fc7\u6269\u5c55\u53d8\u91cf\u4f20\u9012\uff0c\u5c31\u50cfcflags\u4e00\u6837\u3002 \u5982\u679c\u9876\u7ea7Ninja\u6587\u4ef6\u4f7f\u7528build\u6307\u5b9a\u4e86\u4efb\u4f55\u8f93\u51fa\uff0c\u5e76\u4e14\u5b83\u53c8\u8fc7\u671f\u4e86\uff0c\u90a3\u4e48\u518d\u4e3a\u6784\u5efa\u7528\u6237\u76ee\u6807\u4e4b\u524d\u4f1a\u5148\u6784\u5efa\u9876\u7ea7\u6587\u4ef6\u91cc\u7684\u76ee\u6807\u3002 \u6839\u636e\u4ee3\u7801\u751f\u6210Ninja\u6587\u4ef6 Ninja\u53d1\u884c\u5305\u4e2d\u7684misc/ninja_syntax.py\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684python\u6a21\u5757\uff0c\u7528\u4e8e\u751f\u6210Ninja\u6587\u4ef6\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528python\uff0c\u6267\u884c\u5982 ninja.rule(name='foo', command='bar',depfile='$out.d') \u7684\u8c03\u7528\uff0c\u751f\u6210\u5408\u9002\u7684\u8bed\u6cd5\u3002\u5982\u679c\u8fd9\u6837\u8fd8\u4e0d\u9519\uff0c\u53ef\u4ee5\u5c06\u5176\u6574\u5408\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u3002","title":"Build \u8bed\u53e5"},{"location":"android/flutter/NinjaSystem/#_9","text":"phony \u89c4\u5219 \u53ef\u4ee5\u4f7f\u7528phony\u521b\u5efa\u5176\u5b83target\uff08\u7f16\u8bd1\u6784\u5efa\u76ee\u6807\uff09\u7684\u522b\u540d\u3002\u6bd4\u5982\uff1a build foo: phony some/file/in/a/faraway/subdir/foo \u8fd9\u6837\u4f7f\u5f97ninja foo\u6784\u5efa\u66f4\u957f\u7684\u8def\u5f84\u3002\u4ece\u8bed\u4e49\u4e0a\u8bb2\uff0cphony\u89c4\u5219\u7b49\u540c\u4e8e\u4e00\u4e2a\u6ca1\u6709\u505a\u4efb\u4f55\u64cd\u4f5c\u7684\u666e\u901a\u89c4\u5219\uff0c\u4f46\u662fphony\u89c4\u5219\u901a\u8fc7\u7279\u6b8a\u7684\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u6837\u5f53\u5176\u8fd0\u884c\u65f6\u4e0d\u4f1a\u88ab\u6253\u5370\uff0c\u8bb0\u65e5\u5fd7\uff0c\u4e5f\u4e0d\u4f5c\u4e3a\u6784\u5efa\u8fc7\u7a0b\u4e2d\u6253\u5370\u51fa\u6765\u7684\u547d\u4ee4\u8ba1\u6570\u3002 \u8fd8\u53ef\u4ee5\u7528phony\u4e3a\u6784\u5efa\u65f6\u53ef\u80fd\u8fd8\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u521b\u5efadummy\u76ee\u6807\u3002 \u9ed8\u8ba4\u76ee\u6807 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u5728\u547d\u4ee4\u884c\u4e2d\u6307\u5b9atarget\uff0c\u90a3\u4e48Ninja\u5c06\u6784\u5efa\u4efb\u4f55\u5730\u65b9\u6ca1\u6709\u4f5c\u4e3a\u8f93\u5165\u547d\u540d\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u3002\u53ef\u4ee5\u901a\u8fc7default\u76ee\u6807\u8bed\u53e5\u6765\u91cd\u5199\u8fd9\u4e2a\u884c\u4e3a\u3002\u4e00\u4e2adefault\u8bed\u53e5\uff0c\u8ba9Ninja\u6784\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u7684\u8f93\u51fa\u6587\u4ef6\u5b50\u96c6\uff0c\u5982\u679c\u547d\u4ee4\u884c\u4e2d\u6ca1\u6709\u6307\u5b9a\u6784\u5efa\u76ee\u6807\u3002 \u9ed8\u8ba4\u76ee\u6807\u8bed\u53e5\uff0c\u7531\u5173\u952e\u5b57default\u6253\u5934\uff0c\u5e76\u4e14\u91c7\u7528default targets\u7684\u683c\u5f0f\u3002\u4e00\u4e2adefault\u76ee\u6807\u8bed\u53e5\u5fc5\u987b\u51fa\u73b0\u5728\uff0c\u58f0\u660e\u8fd9\u4e2a\u76ee\u6807\u4f5c\u4e3a\u4e00\u4e2a\u8f93\u51fa\u6587\u4ef6\u7684\u6784\u5efa\u8bed\u53e5\u4e4b\u540e\u3002\u4ed6\u4eec\u662f\u7d2f\u79ef\u7684\uff08cumulative\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2adefault\u8bed\u53e5\u6765\u6269\u5c55\u9ed8\u8ba4\u76ee\u6807\u5217\u8868\u3002\u6bd4\u5982\uff1a default foo bar default baz This causes Ninja to build the foo, bar and baz targets by default.","title":"\u66f4\u591a\u7ec6\u8282"},{"location":"android/flutter/NinjaSystem/#ninja_6","text":"Ninja\u6784\u5efa\u65e5\u5fd7\u4fdd\u5b58\u5728\u6784\u5efa\u8fc7\u7a0b\u7684\u6839\u76ee\u5f55\u6216.ninja\u6587\u4ef6\u4e2dbuilddir\u53d8\u91cf\u5bf9\u5e94\u7684\u76ee\u5f55\u7684.ninja_log\u6587\u4ef6\u4e2d\u3002 \u4e00\u822c\u800c\u8a00\uff0c\u50cf\u4e0a\u9762\u8fd9\u6837\u7684\u5fae\u4f18\u5316\u4e0d\u5982\u6539\u53d8\u7b97\u6cd5\u6216\u5904\u7406\u65b9\u5f0f\u7684\u7ed3\u6784\u6027\u4f18\u5316\u6709\u6548\u3002Ninja \u7684\u6784\u5efa\u65e5\u5fd7\u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\u3002 Linux kernel \u6784\u5efa\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u4f1a\u8ffd\u8e2a\u7528\u4e8e\u751f\u6210\u8f93\u51fa\u7684\u547d\u4ee4\u3002\u8003\u8651\u4e00\u4e2a\u542f\u53d1\u6027\u7684\u4f8b\u5b50\uff1a\u4f60\u5c06\u8f93\u5165\u6587\u4ef6 foo.c \u7f16\u8bd1\u4e3a\u8f93\u51fa\u6587\u4ef6 foo.o\uff0c\u968f\u540e\u4fee\u6539\u4e86\u6784\u5efa\u6587\u4ef6\u5bfc\u81f4\u5e94\u8be5\u7528\u4e0d\u540c\u7684\u7f16\u8bd1\u9009\u9879\u91cd\u65b0\u7f16\u8bd1 foo.c\u3002\u4ece\u6784\u5efa\u7cfb\u7edf\u7684\u89d2\u5ea6\u770b\uff0c\u4e3a\u4e86\u611f\u77e5\u9700\u8981\u6784\u5efa\uff0c\u5fc5\u987b\u8981\u4e48\u6ce8\u610f\u5230 foo.o \u4f9d\u8d56\u4e8e\u6784\u5efa\u6587\u4ef6\uff08\u6784\u5efa\u6587\u4ef6\u4f9d\u8d56\u4e8e\u9879\u76ee\u7684\u7ec4\u7ec7\uff0c\u8fd9\u4e5f\u8bb8\u610f\u5473\u7740\u5bf9\u6784\u5efa\u6587\u4ef6\u7684\u4fee\u6539\u5c06\u5bfc\u81f4\u6574\u4e2a\u9879\u76ee\u7684\u91cd\u65b0\u6784\u5efa\uff09\uff0c\u6216\u8bb0\u5f55\u751f\u6210\u6bcf\u4e2a\u8f93\u51fa\u7684\u547d\u4ee4\uff0c\u5728\u6bcf\u6b21\u6784\u5efa\u65f6\u8fdb\u884c\u6bd4\u8f83\u3002 kernel\uff08\u4ee5\u53ca Makefiles \u548c Ninja\uff09\u91c7\u7528\u540e\u4e00\u79cd\u65b9\u6cd5\u3002\u5728\u6784\u5efa\u65f6\uff0cNinja \u5199\u4e0b\u4e00\u4efd\u6784\u5efa\u65e5\u5fd7\uff0c\u8bb0\u5f55\u751f\u6210\u6bcf\u4e2a\u8f93\u51fa\u7684\u5b8c\u6574\u547d\u4ee4\u3002[9]\u5728\u540e\u7eed\u6784\u5efa\u4e2d\uff0cNinja \u8f7d\u5165\u4e4b\u524d\u7684\u6784\u5efa\u65e5\u5fd7\uff0c\u901a\u8fc7\u6bd4\u8f83\u5f53\u524d\u547d\u4ee4\u4e0e\u6784\u5efa\u65e5\u5fd7\u4e2d\u7684\u547d\u4ee4\u6765\u53d1\u73b0\u53d8\u66f4\u3002\u5c31\u50cf\u52a0\u8f7d\u6784\u5efa\u6587\u4ef6\u6216\u8def\u5f84\u89c4\u8303\u5316\uff0c\u8fd9\u6210\u4e3a\u4e86\u5206\u6790\u7ed3\u679c\u4e2d\u7684\u53c8\u4e00\u5904\u70ed\u70b9\u3002 \u5728\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c0f\u4f18\u5316\u540e\uff0cNico Weber\uff0c\u4e00\u4e2a\u5bf9 Ninja \u8d21\u732e\u4e86\u5f88\u591a\u4ee3\u7801\u7684\u4eba\uff0c\u5b9e\u73b0\u4e00\u79cd\u65b0\u7684\u6784\u5efa\u65e5\u5fd7\u683c\u5f0f\u3002\u6bd4\u8d77\u901a\u5e38\u5f88\u957f\u4e14\u9700\u8981\u5927\u91cf\u65f6\u95f4\u8fdb\u884c\u89e3\u6790\u7684\u8bb0\u5f55\u547d\u4ee4\uff0cNinja \u53d6\u800c\u4ee3\u4e4b\u4ee5\u547d\u4ee4\u7684\u54c8\u5e0c\uff08hash\uff09\u3002\u5728\u540e\u7eed\u6784\u5efa\u4e2d\uff0cNinja \u6bd4\u8f83\u5c06\u8981\u6267\u884c\u7684\u660e\u4ee4\u7684\u54c8\u5e0c\u4e0e\u8bb0\u5f55\u4e2d\u7684\u54c8\u5e0c\u3002\u5982\u679c\u4e24\u8005\u4e0d\u540c\uff0c\u5219\u53ef\u4ee5\u786e\u5b9a\u8f93\u51fa\u5df2\u8fc7\u671f\u3002\u8fd9\u4e00\u65b9\u6cd5\u5f88\u6210\u529f\u3002\u4f7f\u7528\u54c8\u5e0c\u6025\u5267\u964d\u4f4e\u4e86\u6784\u5efa\u65e5\u5fd7\u7684\u5927\u5c0f\u2014\u2014\u5728 Mac OX X \u4e0a\uff0c\u4ece 200MB \u964d\u5230 2MB\u2014\u2014\u5e76\u4f7f\u52a0\u8f7d\u901f\u5ea6\u5feb\u4e86 20 \u500d\u3002","title":"Ninja \u65e5\u5fd7"},{"location":"android/flutter/NinjaSystem/#_10","text":"Available since Ninja 1.2. Ninja version labels follow the standard major.minor.patch format, where the major version is increased on backwards-incompatible syntax/behavioral changes and the minor version is increased on new behaviors. Your build.ninja may declare a \u53d8\u91cf named ninja_required_version that asserts the minimum Ninja version required to use the generated file. For example, ninja_required_version = 1.1 1 declares that the build file relies on some feature that was introduced in Ninja 1.1 (perhaps the pool syntax), and that Ninja 1.1 or greater must be used to build. Unlike other Ninja \u53d8\u91cfs, this version requirement is checked immediately when the \u53d8\u91cf is encountered in parsing, so it\u2019s best to put it at the top of the build file. Ninja always warns if the major versions of Ninja and the ninja_required_version don\u2019t match; a major version change hasn\u2019t come up yet so it\u2019s difficult to predict what behavior might be required.","title":"\u7248\u672c\u517c\u5bb9\u6027"},{"location":"android/flutter/NinjaSystem/#_11","text":"\u8fd8\u6709\u53e6\u4e00\u79cd\u5143\u6570\u636e\uff08metadata\uff09\u5fc5\u9700\u8de8\u6784\u5efa\u4fdd\u5b58\u7528\u3002\u4e3a\u4e86\u6b63\u786e\u6784\u5efa C/C++ \u4ee3\u7801\uff0c\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\u5fc5\u9700\u80fd\u611f\u77e5\u5934\u6587\u4ef6\u95f4\u7684\u4f9d\u8d56\u3002\u5047\u5b9a foo.c \u5305\u542b\u4e00\u884c #inclue \u201cbar.h\u201d \u3002\u800c bar.h \u81ea\u8eab\u53c8\u5305\u542b\u4e00\u884c #include \u201cbar.h\u201d\u3002\u6240\u6709\u7684\u4e09\u4e2a\u6587\u4ef6\u90fd\u4f1a\u5f71\u54cd\u540e\u7eed\u7f16\u8bd1\u3002\u4f8b\u5982\uff0cbaz.h \u7684\u6539\u53d8\u4e5f\u4f1a\u89e6\u53d1 foo.o \u7684\u91cd\u65b0\u6784\u5efa\u3002 \u4e00\u4e9b\u6784\u5efa\u7cfb\u7edf\u4f7f\u7528\u4e00\u4e2a\u201c\u5934\u6587\u4ef6\u626b\u63cf\u5668\u201d\u5728\u6784\u5efa\u65f6\u63d0\u53d6\u8fd9\u90e8\u5206\u4f9d\u8d56\u4fe1\u606f\u3002\u4f46\u8fd9\u4e2a\u65b9\u6cd5\u592a\u6162\uff0c\u800c\u4e14\u5f88\u96be\u7cbe\u786e\u5904\u7406\u6709 #ifdef \u6307\u4ee4\u51fa\u73b0\u7684\u60c5\u5f62\u3002\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u8981\u6c42\u6784\u5efa\u6587\u4ef6\u6b63\u786e\u5730\u62a5\u544a\u6240\u6709\u4f9d\u8d56\uff0c\u5305\u62ec\u5934\u6587\u4ef6\u7684\u4f9d\u8d56\uff0c\u4f46\u8fd9\u5bf9\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u5341\u5206\u7b28\u91cd\uff1a\u6bcf\u6b21\u4f60\u6dfb\u52a0\u6216\u5220\u9664 #include \u8bed\u53e5\u65f6\uff0c\u90fd\u9700\u8981\u4fee\u6539\u6216\u91cd\u65b0\u751f\u6210\u6784\u5efa\u6587\u4ef6\u3002 \u4e00\u4e2a\u6709\u7528\u7684\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u8fd9\u6837\u7684\u4e8b\u5b9e\uff1a\u5728\u7f16\u8bd1\u65f6\uff0cgcc \uff08\u4ee5\u53ca\u5fae\u8f6f\u7684 Visual Studio\uff09\u53ef\u4ee5\u7ed9\u51fa\u5728\u6784\u5efa\u8f93\u51fa\u65f6\u7528\u5230\u4e86\u54ea\u4e9b\u5934\u6587\u4ef6\u3002\u8fd9\u4efd\u4fe1\u606f\uff0c\u5982\u540c\u7528\u4e8e\u751f\u6210\u8f93\u51fa\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u88ab\u6784\u5efa\u7cfb\u7edf\u8bb0\u5f55\u548c\u52a0\u8f7d\u3002\u7531\u6b64\uff0c\u4f9d\u8d56\u53ef\u4ee5\u88ab\u7cbe\u786e\u8ffd\u8e2a\u3002\u5728\u7b2c\u4e00\u6b21\u7f16\u8bd1\u65f6\uff0c\u56e0\u4e3a\u8fd8\u672a\u6709\u8f93\u51fa\uff0c\u6240\u6709\u6587\u4ef6\u90fd\u4f1a\u88ab\u7f16\u8bd1\uff0c\u6545\u4e0d\u9700\u5934\u6587\u4ef6\u4f9d\u8d56\u3002\u7b2c\u4e00\u6b21\u7f16\u8bd1\u540e\uff0c\u5bf9\u4e8e\u88ab\u67d0\u4e2a\u8f93\u51fa\u7528\u5230\u7684\u4efb\u4f55\u6587\u4ef6\u5982\u679c\u53d1\u751f\u66f4\u6539\uff08\u5305\u62ec\u589e\u52a0\u6216\u5220\u9664\u989d\u5916\u7684\u4f9d\u8d56\uff09\uff0c\u5c31\u4f1a\u5bfc\u81f4\u91cd\u65b0\u6784\u5efa\u3002\u8fd9\u4fdd\u8bc1\u4e86\u4f9d\u8d56\u4fe1\u606f\u7684\u66f4\u65b0\u3002 \u5728\u7f16\u8bd1\u65f6\uff0cgcc \u4ee5 Makefile \u7684\u683c\u5f0f\u8bb0\u4e0b\u5934\u6587\u4ef6\u4f9d\u8d56\u3002Ninja \u5305\u62ec\u4e00\u4e2a\u89e3\u6790\u5668\u5904\u7406\u8fd9\u4e00Makefile \u8bed\u6cd5\uff08\u7684\u7b80\u5316\u5b50\u96c6\uff09\uff0c\u5e76\u5728\u4e0b\u4e00\u6b21\u6784\u5efa\u65f6\u8f7d\u5165\u8fd9\u4efd\u4f9d\u8d56\u4fe1\u606f\u3002\u5728 \u7684\u6700\u8fd1\u4e00\u6b21\u6784\u5efa\uff0cgcc \u4ea7\u751f\u4e86\u5171 90MB \u7684 Makefile\uff0c\u5168\u90e8\u5e26\u6709\u5fc5\u987b\u89c4\u8303\u5316\u7684\u5f15\u7528\u8def\u5f84\u3002 \u5c31\u50cf\u5176\u5b83\u89e3\u6790\u8fc7\u7a0b\uff0c\u901a\u8fc7\u4f7f\u7528 re2c \u53ca\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u590d\u5236\u53ef\u4ee5\u4f7f\u6027\u80fd\u6709\u6240\u63d0\u5347\uff0c\u4f46\u5c31\u50cf GYP \u9879\u76ee\uff0c\u8fd9\u4e00\u89e3\u6790\u5de5\u4f5c\u53ef\u4ee5\u4e0d\u5728\u5173\u952e\u65f6\u95f4\u8def\u5f84\u4e0a\u5b8c\u6210\u3002\u8fd1\u671f\uff0c\u6211\u4eec\u5728 Ninja \u4e0a\u7684\u5de5\u4f5c\uff08\u5728\u5199\u4f5c\u672c\u6587\u65f6\uff0c\u8fd9\u4e00\u5de5\u80fd\u5df2\u7ecf\u5b8c\u6210\uff0c\u4f46\u8fd8\u672a\u53d1\u5e03\uff09\u662f\u8ba9\u8fd9\u4e00\u8fc7\u7a0b\u53d1\u751f\u7684\u65e9\u4e00\u4e9b\u3002 \u4e00\u65e6 Ninja \u5f00\u59cb\u6267\u884c\u6784\u5efa\u6307\u4ee4\uff0c\u6240\u6709\u5f71\u54cd\u6027\u80fd\u7684\u5de5\u4f5c\u90fd\u5df2\u5b8c\u6210\uff0cNinja \u5728\u7b49\u5f85\u5b83\u542f\u52a8\u7684\u547d\u4ee4\u5b8c\u6210\u7684\u8fc7\u7a0b\u4e2d\u8fd1\u4e4e\u95f2\u7f6e\u3002\u5728\u5904\u7406\u5934\u6587\u4ef6\u4f9d\u8d56\u7684\u65b0\u65b9\u6cd5\u4e2d\uff0cNinja \u5229\u7528\u8fd9\u6bb5\u65f6\u95f4\u5904\u7406 gcc \u7ed9\u51fa\u7684 Makefile \uff0c\u89c4\u8303\u5316\u8def\u5f84\uff0c\u5c06\u4f9d\u8d56\u5904\u7406\u4e3a\u4e00\u79cd\u53ef\u4ee5\u5feb\u901f\u8bc6\u522b\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u3002\u5728\u4e0b\u4e00\u6b21\u6784\u5efa\u4e2d\uff0cNinja \u53ea\u9700\u8981\u52a0\u8f7d\u8fd9\u4e00\u6587\u4ef6\u3002\u6539\u8fdb\u975e\u5e38\u5267\u70c8\uff0c\u7279\u522b\u662f\u5728 Windows \u4e0a\u3002\uff08\u672c\u7ae0\u7a0d\u540e\u8ba8\u8bba\u8fd9\u4e2a\uff09 \u201c\u4f9d\u8d56\u65e5\u5fd7\u201d\u9700\u8981\u50a8\u5b58\u4e0a\u5343\u6761\u8def\u5f84\u53ca\u8def\u5f84\u95f4\u7684\u4f9d\u8d56\u3002\u8f7d\u5165\u65e5\u5fd7\u548c\u8ffd\u52a0\u65e5\u5fd7\u90fd\u5fc5\u987b\u8fc5\u901f\u3002\u8ffd\u52a0\u65e5\u5fd7\u64cd\u4f5c\u5e94\u8be5\u662f\u5b89\u5168\u7684\uff0c\u5373\u4f7f\u88ab\u6253\u65ad\uff0c\u6bd4\u5982\u6784\u5efa\u88ab\u53d6\u6d88\u3002 \u5728\u8003\u8651\u4e86\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684\u65b9\u6848\u540e\uff0c\u6211\u6700\u7ec8\u60f3\u5230\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff1a\u6587\u4ef6\u7531\u8bb0\u5f55\u7684\u5e8f\u5217\u7ec4\u6210\uff0c\u800c\u8bb0\u5f55\u8981\u4e48\u662f\u4e00\u4e2a\u8def\u5f84\uff0c\u8981\u4e48\u662f\u4e00\u4e2a\u4f9d\u8d56\u5217\u8868\u3002\u6bcf\u4e2a\u5199\u5165\u6587\u4ef6\u7684\u8def\u5f84\u90fd\u88ab\u8d4b\u4e8e\u4e86\u4e00\u4e2a\u6574\u6570\u5e8f\u5217\u53f7\u3002\u6545\u800c\u4f9d\u8d56\u5c31\u662f\u4e00\u5217\u6574\u6570\u3002\u4e3a\u4e86\u5411\u6587\u4ef6\u6dfb\u52a0\u4f9d\u8d56\uff0cNinja \u9996\u5148\u8bb0\u5f55\u4e0b\u8fd8\u6ca1\u6709\u5e8f\u5217\u53f7\u7684\u8def\u5f84\uff0c\u7136\u540e\u7528\u8fd9\u4e9b\u5e8f\u5217\u53f7\u8bb0\u5f55\u4f9d\u8d56\u3002\u5728\u540e\u7eed\u7684\u6784\u5efa\u8f7d\u5165\u8fd9\u4e00\u6587\u4ef6\u65f6\uff0cNinja \u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u5c06\u5e8f\u5217\u53f7\u6620\u5c04\u5230\u5bf9\u5e94\u7684 Node \u6307\u9488\u3002","title":"\u6587\u4ef6\u4f9d\u8d56"},{"location":"android/flutter/NinjaSystem/#cc","text":"Ninja\u76ee\u524d\u652f\u6301depfile\u548cdeps\u6a21\u5f0f\u7684C/C++\u5934\u6587\u4ef6\u4f9d\u8d56\u751f\u6210\u3002 \u5982 rule cc depfile = $out.d command = gcc -MMD -MF $out.d [other gcc flags here] -MMD\u6807\u8bc6\u544a\u8bc9gcc\u8981\u751f\u6210\u5934\u6587\u4ef6\u4f9d\u8d56\uff0c-MF\u5219\u8bf4\u660e\u8981\u5199\u5230\u54ea\u91cc\u3002 deps\u6309\u7167\u7f16\u8bd1\u5668\u7684\u540d\u8bcd\u6765\u7ba1\u7406\u3002\u5177\u4f53\u5982\u4e0b\uff1a\uff08\u9488\u5bf9\u5fae\u8f6f\u7684VC\uff1amsvc\uff09 rule cc deps = msvc command = cl /showIncludes -c $in /Fo$out","title":"C/C++ \u5934\u4f9d\u8d56"},{"location":"android/flutter/NinjaSystem/#_12","text":"\u4e3a\u4e86\u652f\u6301\u5e76\u53d1\u4f5c\u4e1a\uff0cNinja\u8fd8\u652f\u6301pool\u7684\u673a\u5236\uff08\u548c\u7528-j\u5e76\u884c\u6a21\u5f0f\u4e00\u6837\uff09\u3002\u6b64\u5904\u4e0d\u8be6\u7ec6\u63cf\u8ff0\u4e86\u3002\u5177\u4f53\u793a\u4f8b\uff0c\u5982\u4e0b\uff1a # No more than 4 links at a time. pool link_pool depth = 4 # No more than 1 heavy object at a time. pool heavy_object_pool depth = 1 rule link ... pool = link_pool rule cc ... # The link_pool is used here. Only 4 links will run concurrently. build foo.exe: link input.obj # A build statement can be exempted from its rule s pool by setting an # empty pool. This effectively puts the build statement back into the default # pool, which has infinite depth. build other.exe: link input.obj pool = # A build statement can specify a pool directly. # Only one of these builds will run at a time. build heavy_object1.obj: cc heavy_obj1.cc pool = heavy_object_pool build heavy_object2.obj: cc heavy_obj2.cc pool = heavy_object_pool","title":"\u5de5\u4f5c\u6c60"},{"location":"android/flutter/NinjaSystem/#console","text":"\u8fd9\u91cc\u6709\u4e00\u4e2a\u540d\u4e3aconsole\u6df1\u5ea6\u4e3a1\u7684\u9884\u5b9a\u4e49\u6c60\uff0c\u6c60\u4e2d\u7684\u4efb\u4f55\u4efb\u52a1\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6807\u51c6\u8f93\u5165\u3001\u8f93\u51fa\u548c\u9519\u8bef\u6d41\u5e76\u63d0\u4f9b\u7ed9Ninja\uff0c\u901a\u5e38\u662f\u8fde\u63a5\u5230\u7528\u6237\u7684\u63a7\u5236\u53f0\u3002\u8fd9\u5bf9\u4e8e\u4ea4\u4e92\u5f0f\u4efb\u52a1\u6216\u8fd0\u884c\u65f6\u95f4\u8f83\u957f\u7684\u4efb\u52a1\u6bd4\u8f83\u6709\u7528\u3002\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e0a\u66f4\u65b0\u72b6\u6001\uff08\u4f8b\u5982\u6d4b\u8bd5\u5957\u4ef6\uff09\u3002 \u5f53\u2019console\u2019\u6c60\u4e2d\u7684\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\u65f6\uff0cNinja\u7684\u6b63\u5e38\u8f93\u51fa\uff08\u5982\u8fdb\u5ea6\u72b6\u6001\u548c\u5e76\u53d1\u4efb\u52a1\u7684\u8f93\u51fa\uff09\u5c06\u88ab\u7f13\u51b2\u8d77\u6765\u76f4\u5230\u63a7\u5236\u53f0\u4efb\u52a1\u8fd0\u884c\u5b8c\u6210\u3002","title":"console \u6c60"},{"location":"android/flutter/NinjaSystem/#ninja_7","text":"\u4e00\u4e2aNinja\u6587\u4ef6\u662f\u4e00\u7cfb\u5217\u58f0\u660e\uff0c\u58f0\u660e\u53ef\u4ee5\u662f\u4e0b\u5217\u4e4b\u4e00\uff1a \u89c4\u5219\u58f0\u660e\uff0c\u4ee5rulename\u5f00\u5934,\u7136\u540e\u662f\u4e00\u4e9b\u5217\u7684\u53d8\u91cf\u7684\u5b9a\u4e49\uff1b A build edge, which looks like +build output1 output2: rulename input1 input2+. + Implicit dependencies may be tacked on the end with +| dependency1 dependency2+. + Order-only dependencies may be tacked on the end with +|| dependency1 dependency2+. (See lt;","title":"Ninja \u6587\u4ef6\u53c2\u8003"},{"location":"android/flutter/NinjaSystem/#_13","text":"Ninja\u4ec5\u652f\u6301ASCII\u5b57\u7b26\u96c6\u3002 \u6ce8\u91ca\u4ee5\u4e3a#\u5f00\u59cb\u4e00\u76f4\u5230\u884c\u672b\u3002 \u65b0\u884c\u662f\u5f88\u91cd\u8981\u7684\u3002\u50cfbuild foo bar\u7684\u8bed\u53e5\uff0c\u662f\u4e00\u5806\u7a7a\u683c\u5206\u5272\u5206\u8bcd\uff08token\uff09\uff0c\u5230\u6362\u884c\u7ed3\u675f\u3002\u4e00\u4e2a\u5206\u8bcd\u4e2d\u7684\u65b0\u884c\u548c\u7a7a\u683c\u5fc5\u987b\u8fdb\u884c\u8f6c\u8bd1\u3002\u76ee\u524d\u53ea\u6709\u4e00\u4e2a\u8f6c\u8bd1\u5b57\u7b26\uff0c$\uff0c\u5176\u5177\u6709\u4ee5\u4e0b\u884c\u4e3a\uff1a $ followed by a newline \u8f6c\u8bd1\u6362\u884c\uff0c\u8ba9\u5f53\u524d\u884c\u4e00\u76f4\u6269\u5c55\u5230\u4e0b\u4e00\u884c\u3002 $ followed by text \u8fd9\u662f\uff0c \u53d8\u91cf\u5f15\u7528\u3002 ${varname} \u8fd9\u662f\uff0c\u53e6$varname\u7684\u53e6\u4e00\u79cd\u8bed\u6cd5\u3002 $ followed by space \u8fd9\u8868\u793a\u4e00\u4e2a\u7a7a\u683c\u3002(\u4ec5\u5728path\u5217\u8868\u4e2d\uff0c\u9700\u8981\u7528\u7a7a\u683c\u5206\u5272\u6587\u4ef6\u540d) \u8fd9\u8868\u793a\u4e00\u4e2a\u5192\u53f7\u3002\uff08\u4ec5\u5728build\u884c\u4e2d\u9700\u8981\u3002\u6b64\u65f6\u5192\u53f7\u7ec8\u6b62\u8f93\u51fa\u5217\u8868\uff09 \u8fd9\u4e2a\u8868\u793a\uff0c\u5b57\u9762\u503c\u7684$\u3002 \u4e00\u4e2abuild\u6216default\u8bed\u53e5\uff0c\u6700\u5148\u88ab\u89e3\u6790\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u7a7a\u683c\u5206\u5272\u7684\u6587\u4ef6\u540d\u5217\u8868\uff0c\u7136\u540e\u6bcf\u4e00\u4e2aname\u90fd\u88ab\u5c55\u5f00\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d8\u91cf\u4e2d\u7684\u4e00\u4e2a\u7a7a\u683c\u5c06\u4f5c\u4e3a\u88ab\u5c55\u5f00\u540e\u6587\u4ef6\u540d\u4e2d\u7684\u4e00\u4e2a\u7a7a\u683c\u3002 spaced = foo bar build $spaced/baz other$ file: ... \u5728\u4e00\u4e2aname = value\u8bed\u53e5\u4e2d\uff0cvalue\u524d\u7684\u7a7a\u767d\u90fd\u4f1a\u88ab\u53bb\u6389\u3002\u51fa\u73b0\u8de8\u884c\u65f6\uff0c\u540e\u7eed\u884c\u8d77\u59cb\u7684\u7a7a\u767d\u4e5f\u4f1a\u88ab\u53bb\u6389\u3002 two_words_with_one_space = foo $ bar one_word_with_no_space = foo$ bar \u5176\u4ed6\u7684\u7a7a\u767d\uff0c\u4ec5\u4f4d\u4e8e\u884c\u5f00\u59cb\u5904\u7684\u5f88\u91cd\u8981\u3002\u5982\u679c\u4e00\u884c\u7684\u7f29\u8fdb\u6bd4\u524d\u4e00\u884c\u591a\uff0c\u90a3\u4e48\u88ab\u4eba\u4e3a\u662f\u5176\u7236\u8fb9\u754c\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u7f29\u8fdb\u6bd4\u524d\u4e00\u884c\u5c11\uff0c\u90a3\u4ed6\u5c31\u5173\u95ed\u524d\u4e00\u4e2a\u8fb9\u754c\u3002","title":"\u8bed\u6cd5"},{"location":"android/flutter/NinjaSystem/#_14","text":"Ninja\u652f\u6301\u7684\u9876\u5c42\u53d8\u91cf\u6709builddir\u548cninja_required_version\u3002\u5177\u4f53\u8bf4\u660e\uff0c\u5982\u4e0b\uff1a builddir: \u6784\u5efa\u7684\u4e00\u4e9b\u8f93\u51fa\u6587\u4ef6\u7684\u5b58\u653e\u76ee\u5f55\u3002 ninja_required_version:\u6307\u5b9a\u6ee1\u8db3\u6784\u5efa\u9700\u6c42\u7684\u6700\u5c0fNinja\u7248\u672c\u3002 Rule \u53d8\u91cf \u4e00\u4e2arule\u5757\u5305\u542b\u4e00\u4e2akey = value\u7684\u5217\u8868\u58f0\u660e\uff0c\u8fd9\u76f4\u63a5\u5f71\u54cd\u89c4\u5219\u7684\u5904\u7406\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7279\u6b8a\u7684key\uff1a command (required)\uff1a \u5f85\u6267\u884c\u7684\u547d\u4ee4\u3002\u8fd9\u4e2a\u5b57\u7b26\u4e32 $variables\u88ab\u5c55\u5f00\u4e4b\u540e\uff0c\u88ab\u76f4\u63a5\u4f20\u9012\u7ed9sh -c\uff0c\u4e0d\u7ecf\u8fc7Ninja\u7ffb\u8bd1\u3002\u6bcf\u4e00\u4e2a\u89c4\u5219\u53ea\u80fd\u5305\u542b\u4e00\u6761command\u58f0\u660e\u3002\u5982\u679c\u6709\u591a\u6761\u547d\u4ee4\uff0c\u9700\u8981\u4f7f\u7528 amp; amp;\u7b26\u53f7\u8fdb\u884c\u94fe\u63a5\u3002 depfile\uff1a \u6307\u5411\u4e00\u4e2a\u53ef\u9009\u7684Makefile\uff0c\u5176\u4e2d\u5305\u542b\u989d\u5916\u7684\u9690\u5f0f\u4f9d\u8d56\u3002\u8fd9\u4e2a\u660e\u786e\u7684\u4e3a\u4e86\u652f\u6301C/C++\u7684\u5934\u6587\u4ef6\u4f9d\u8d56\u3002 deps: \uff081.3\u7248\u672c\u5f00\u59cb\u652f\u6301\uff09\u5982\u679c\u5b58\u5728\uff0c\u5fc5\u987b\u662fgcc\u6216msvc\uff0c\u6765\u6307\u5b9a\u7279\u6b8a\u7684\u4f9d\u8d56\u3002\u4ea7\u751f\u7684\u6570\u636e\u5e93\u4fdd\u5b58\u5728builddir\u6307\u5b9a\u76ee\u5f55.ninja_deps\u6587\u4ef6\u4e2d\u3002 msvc_deps_prefix\uff1a \uff081.5\u7248\u672c\u5f00\u59cb\u652f\u6301\uff09\u5b9a\u4e49\u5fc5\u987b\u4ecemsvc\u7684/showIncludes\u8f93\u51fa\u4e2d\u53bb\u6389\u7684\u5b57\u7b26\u4e32\u3002\u4ec5\u5728deps = msvc\u800c\u4e14\u4f7f\u7528\u975e\u82f1\u8bed\u7684Visual Studio\u7248\u672c\u65f6\u4f7f\u7528\u3002 description\uff1a \u547d\u4ee4\u7684\u7b80\u77ed\u63cf\u8ff0\uff0c\u4f5c\u4e3a\u547d\u4ee4\u8fd0\u884c\u65f6\u66f4\u597d\u7684\u6253\u5370\u8f93\u51fa\u3002\u6253\u5370\u6574\u884c\u8fd8\u662f\u5bf9\u5e94\u7684\u63cf\u8ff0\uff0c\u7531-v\u6807\u8bb0\u63a7\u5236\u3002\u5982\u679c\u4e00\u4e2a\u547d\u4ee4\u6267\u884c\u5931\u8d25\uff0c\u6574\u4e2a\u547d\u4ee4\u884c\u603b\u662f\u5728\u547d\u4ee4\u8f93\u51fa\u4e4b\u524d\u6253\u5370\u3002 generator\uff1a \u5982\u679c\u5b58\u5728\uff0c\u6307\u660e\u8fd9\u6761\u89c4\u5219\u662f\u7528\u6765\u91cd\u590d\u8c03\u7528\u751f\u6210\u5668\u7a0b\u5e8f\u3002\u901a\u8fc7\u4e24\u79cd\u7279\u6b8a\u7684\u65b9\u5f0f\uff0c\u5904\u7406\u4f7f\u7528\u751f\u6210\u5668\u89c4\u5219\u6784\u5efa\u6587\u4ef6\uff1a\u9996\u5148\uff0c\u5982\u679c\u547d\u4ee4\u884c\u4fee\u6539\u4e86\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u91cd\u65b0\u6784\u5efa\uff1b\u5176\u6b21\uff0c\u9ed8\u8ba4\u4e0d\u4f1a\u88ab\u6e05\u9664\u3002 in\uff1a \u7a7a\u683c\u5206\u5272\u7684\u6587\u4ef6\u5217\u8868\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u8f93\u5165\u4f20\u9012\u7ed9\u5f15\u7528\u6b64rule\u7684\u6784\u5efa\u884c\uff0c\u5982\u679c\u51fa\u73b0\u5728\u547d\u4ee4\u4e2d\u9700\u8981\u4f7f\u7528${in}(shell-quoted)\u3002\uff08\u63d0\u4f9b$in\u4ec5\u4ec5\u4e3a\u4e86\u56fe\u4e2a\u65b9\u4fbf\uff0c\u5982\u679c\u4f60\u9700\u8981\u6587\u4ef6\u5217\u8868\u7684\u5b50\u96c6\u6216\u53d8\u79cd\uff0c\u8bf7\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u7136\u540e\u4f20\u9012\u65b0\u7684\u53d8\u91cf\u3002\uff09 in_newline\uff1a \u548c$in\u4e00\u6837\uff0c\u53ea\u662f\u5206\u5272\u7b26\u4e3a\u6362\u884c\u800c\u4e0d\u662f\u7a7a\u683c\u3002\uff08\u4ec5\u4e3a\u4e86\u548c$rspfile_content\u4e00\u8d77\u4f7f\u7528\uff0c\u89e3\u51b3MSVC - linker\u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u7f13\u51b2\u533a\u5904\u7406\u8f93\u5165\uff0c\u800c\u9020\u6210\u7684\u4e00\u4e2abug\u3002\uff09 out\uff1a \u7a7a\u683c\u5206\u5272\u7684\u6587\u4ef6\u5217\u8868\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u8f93\u51fa\u4f20\u9012\u7ed9\u5f15\u7528\u6b64rule\u7684\u6784\u5efa\u884c\uff0c\u5982\u679c\u51fa\u73b0\u5728\u547d\u4ee4\u4e2d\u9700\u8981\u4f7f\u7528${out}\uff1b restat: \u5982\u679c\u5b58\u5728\uff0c\u5f15\u53d1Ninja\u5728\u547d\u4ee4\u884c\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u91cd\u65b0\u7edf\u8ba1\u547d\u4ee4\u7684\u8f93\u51fa\u3002 rspfile, rspfile_content\uff1a \u5982\u679c\u5b58\u5728\uff08\u4e24\u4e2a\u540c\u65f6\uff09\uff0cNinja\u5c06\u4e3a\u7ed9\u5b9a\u547d\u4ee4\u63d0\u4f9b\u4e00\u4e2a\u54cd\u5e94\u6587\u4ef6\uff0c\u6bd4\u5982\uff0c\u5728\u8c03\u7528\u547d\u4ee4\u4e4b\u524d\u5c06\u9009\u5b9a\u7684\u5b57\u7b26\u4e32(rspfile_content)\u5199\u5230\u7ed9\u5b9a\u7684\u6587\u4ef6\uff08rspfile\uff09\uff0c\u547d\u4ee4\u6267\u884c\u6210\u529f\u4e4b\u540e\u9610\u8ff0\u6587\u4ef6\u3002 \u8fd9\u4e2a\u5728Windows\u7cfb\u7edf\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u6b64\u65f6\u547d\u4ee4\u884c\u7684\u6700\u5927\u957f\u5ea6\u975e\u5e38\u53d7\u9650\uff0c\u5fc5\u987b\u4f7f\u7528\u54cd\u5e94\u6587\u4ef6\u66ff\u4ee3\u3002\u5177\u4f53\u4f7f\u7528\u65b9\u5f0f\uff0c\u5982\u4e0b\uff1a rule link command = link.exe /OUT$out [usual link flags here] @$out.rsp rspfile = $out.rsp rspfile_content = $in build myapp.exe: link a.obj b.obj [possibly many other .obj files]","title":"\u9876\u5c42\u53d8\u91cf"},{"location":"android/flutter/NinjaSystem/#command","text":"\u5728Unixes\u548cWindows\u4e0a\u547d\u4ee4\u884c\u7684\u884c\u4e3a\u662f\u4e0d\u540c\u7684\u3002 \u5728Unixes\u4e0a\uff0c\u547d\u4ee4\u662f\u53c2\u6570\u6570\u7ec4\u3002 Ninja\u547d\u4ee4\u53d8\u91cf\u76f4\u63a5\u4f20\u9012\u7ed9sh -c\uff0c\u7136\u540e\u8d1f\u8d23 \u5c06\u8be5\u5b57\u7b26\u4e32\u89e3\u91ca\u4e3aargv\u6570\u7ec4\u3002 \u56e0\u6b64\u5f15\u7528\u89c4\u5219\u7531shell\u51b3\u5b9a\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u6b63\u5e38\u7684shell \u8fd0\u7b97\u7b26\uff0c\u5982\u94fe\u63a5\u591a\u4e2a\u547d\u4ee4\uff0c\u6216VAR = value cmd \u6765\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u5728Windows\u4e0a\uff0c\u547d\u4ee4\u662f\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64Ninja\u76f4\u63a5\u5c06command\u5b57\u7b26\u4e32 \u4f20\u9012\u7ed9CreateProcess\u3002 \uff08\u5728\u5e38\u89c1\u60c5\u51b5\u4e0b\u7f16\u8bd1\u5668\u7b80\u5355\u6267\u884c\u8fd9\u610f\u5473\u7740\u6709\u66f4\u5c11\u7684\u5f00\u9500\u3002\uff09\u56e0\u6b64\u5f15\u7528\u89c4\u5219\u7531\u88ab\u8c03\u7528\u7684\u7a0b\u5e8f\u786e\u5b9a\uff0c\u5728Windows\u4e0a\u901a\u5e38\u7531C\u5e93\u63d0\u4f9b\u3002 \u5982\u679c\u4f60\u9700\u8981shell\u89e3\u91ca\u547d\u4ee4\uff08\u5982\u4f7f\u7528 \u6765\u94fe\u63a5\u591a\u4e2a\u547d\u4ee4\uff09\uff0c\u4f7f\u547d\u4ee4\u6267\u884cWindows shell\u524d\u7f00\u547d\u4ee4\u4e0ecmd / c\u3002","title":"command\u53d8\u91cf\u7684\u89e3\u91ca"},{"location":"android/flutter/NinjaSystem/#_15","text":"\u6709\u4e24\u79cd\u7a0d\u5fae\u6709\u70b9\u533a\u522b\u7684\u8f93\u51fa\uff1a \u663e\u793a\u8f93\u51fa, \u5728build\u884c\u4f1a\u5217\u51fa\u6765\uff0c\u5728rule\u89c4\u5219\u4e2d\u53ef\u4ee5\u901a\u8fc7$out\u53d8\u91cf\u8bbf\u95ee\u3002 \u8fd9\u662f\u6807\u51c6\u7684\u8f93\u51fa\u4f7f\u7528\u5f62\u5f0f\uff0c\u4f8b\u5982\u4e00\u4e2a\u7f16\u8bd1\u547d\u4ee4\u7684\u76ee\u6807\u6587\u4ef6\u3002 \u9690\u5f0f\u8f93\u51fa, \u5728build\u884c\u5176\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff0c\u5728build\u884c\u7684:\u524dout1 out2\uff08\u5728Ninja1.7\u7248\u672c\u5f00\u59cb\u652f\u6301\uff09.\u8bed\u4e49\u4e0e\u663e\u5f0f\u8f93\u51fa\u76f8\u540c\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f\u9690\u5f0f\u8f93\u51fa\u4e0d\u4f1a\u51fa\u73b0\u5728$out\u53d8\u91cf\u91cc\u3002\u8fd9\u662f\u4e3a\u4e86\u8868\u793a\u5728\u547d\u4ee4\u884c\u4e2d\u6ca1\u6709\u6307\u5b9a\u8f93\u51fa\u7684\u547d\u4ee4\u3002","title":"\u6784\u5efa\u8f93\u51fa"},{"location":"android/flutter/NinjaSystem/#_16","text":"Ninja\u76ee\u524d\u652f\u63013\u79cd\u7c7b\u578b\u7684\u6784\u5efa\u4f9d\u8d56\u3002\u5206\u522b\u662f\uff1a \u7f57\u5217\u5728build\u884c\u4e2d\u7684\u663e\u5f0f\u7684\u4f9d\u8d56\u3002\u4ed6\u4eec\u53ef\u4ee5\u4f5c\u4e3a\u89c4\u5219\u4e2d\u7684 in\u53d8\u91cf\u3002\u8fd9\u662f\u6807\u51c6\u4f9d\u8d56\u683c\u5f0f\u3002 \u4ecedepfile\u5c5e\u6027\u6216\u6784\u5efa\u8bed\u53e5\u672b\u5c3e\u7684| dep1 dep2\u8bed\u6cd5\u83b7\u5f97\u7684\u9690\u5f0f\u4f9d\u8d56\u3002\u8fd9\u4e2a\u548c\u663e\u5f0f\u4f9d\u8d56\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u80fd\u5728 in\u53d8\u91cf\u3002\u8fd9\u662f\u6807\u51c6\u4f9d\u8d56\u683c\u5f0f\u3002 \u4ecedepfile\u5c5e\u6027\u6216\u6784\u5efa\u8bed\u53e5\u672b\u5c3e\u7684| dep1 dep2\u8bed\u6cd5\u83b7\u5f97\u7684\u9690\u5f0f\u4f9d\u8d56\u3002\u8fd9\u4e2a\u548c\u663e\u5f0f\u4f9d\u8d56\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u80fd\u5728 in\u4e2d\u4f7f\u7528\uff08\u4e0d\u53ef\u89c1\uff09\u3002 \u901a\u8fc7\u6784\u5efa\u884c\u672b|| dep1 dep2\u8bed\u6cd5\u8868\u793a\u7684\u6b21\u5e8f\u552f\u4e00\uff08Order-only\uff09\u4f9d\u8d56\u3002\u4ed6\u4eec\u8fc7\u671f\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u4e0d\u4f1a\u88ab\u91cd\u65b0\u6784\u5efa\uff0c\u76f4\u5230\u4ed6\u4eec\u88ab\u91cd\u5efa\uff0c\u4f46\u4ec5\u4fee\u6539\u8fd9\u79cd\u4f9d\u8d56\u4e0d\u4f1a\u5f15\u53d1\u8f93\u51fa\u91cd\u5efa\u3002 \u53d8\u91cf\u5c55\u5f00 \u53d8\u91cf\u5728\u8def\u5f84\uff08\u5728build\u6216default\u8bed\u53e5\uff09\u548cname = value\u53f3\u8fb9\u88ab\u5c55\u5f00\u3002 \u5f53name = value\u8bed\u53e5\u88ab\u6267\u884c\uff0c\u53f3\u624b\u8fb9\u7684\u88ab\u7acb\u5373\u5c55\u5f00\uff08\u6839\u636e\u4ee5\u4e0b\u7684\u89c4\u5219\uff09\uff0c\u4ece\u6b64$name\u6269\u5c55\u4e3a\u88ab\u5c55\u5f00\u7ed3\u679c\u7684\u9759\u6001\u5b57\u7b26\u4e32\u3002\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u5b58\u5728\uff0c\u4f60\u5c06\u9700\u8981\u4f7f\u7528\u53cc\u8f6c\u8bd1\uff08\"double-escape\"\uff09\u6765\u4fdd\u62a4\u4e00 \u4e2a\u503c\u88ab\u7b2c\u4e8c\u6b21\u5c55\u5f00\u3002 \u6240\u6709\u53d8\u91cf\u5728\u89e3\u6790\u8fc7\u7a0b\uff0c\u9047\u5230\u7684\u65f6\u5019\u7acb\u5373\u88ab\u5c55\u5f00\uff0c\u9664\u4e86\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4f8b\u5916\uff1arule\u5757\u4e2d\u7684\u53d8\u91cf\u4ec5\u5728\u89c4\u5219\u88ab\u4f7f\u7528\u7684\u65f6\u5019\u624d\u88ab\u5c55\u5f00\uff0c\u800c\u4e0d\u662f\u58f0\u660e\u7684\u65f6\u5019\u3002\u5728\u4ee5\u4e0b\u7684\u793a\u4f8b\u4e2d\uff0cdemo\u6253\u5370\u51fa\"this is a demo of bar\"\u800c\u4e0d\u662f\"this is a demo of $foo\"\u3002 rule demo command = echo this is a demo of $foo build out: demo foo = bar","title":"\u6784\u5efa\u4f9d\u8d56"},{"location":"android/flutter/NinjaSystem/#_17","text":"\u9876\u5c42\uff08Top-level\uff09\u53d8\u91cf\u58f0\u660e\u7684\u8fb9\u754c\uff0c\u662f\u76f8\u5173\u7684\u6587\u4ef6\u3002 subninja\u5173\u952e\u81ea\uff0c\u7528\u4e8e\u5305\u542b\u53e6\u4e00\u4e2a.ninja\u6587\u4ef6\uff0c\u5176\u8868\u793a\u65b0\u7684\u8fb9\u754c\u3002\u88ab\u5305\u542b\u7684subninja\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528\u7236\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\uff0c\u5728\u6587\u4ef6\u8fb9\u754c\u4e2d\u8986\u76d6\u4ed6\u4eec\u7684\u503c\uff0c\u4f46\u662f\u8fd9\u4e0d\u5f71\u54cd\u7236\u6587\u4ef6\u4e2d\u53d8\u91cf\u7684\u503c\u3002 \u540c\u65f6\uff0c\u53ef\u4ee5\u7528#include\u8bed\u53e5\u5728\u5f53\u524d\u8fb9\u754c\u5185\uff0c\u5f15\u5165\u53e6\u4e00\u4e2a.ninja\u6587\u4ef6\u3002\u8fd9\u4e2a\u6709\u70b9\u50cfC\u4e2d\u7684#include\u8bed\u53e5\u3002 \u6784\u5efa\u5757\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\u7684\u8fb9\u754c\uff0c\u5c31\u662f\u5176\u6240\u5c5e\u7684\u5757\u3002\u4e00\u4e2a\u6784\u5efa\u5757\u4e2d\u5c55\u5f00\u7684\u53d8\u91cf\u7684\u6240\u6709\u67e5\u8be2\u6b21\u5e8f\u4e3a\uff1a \u7279\u6b8a\u5185\u5efa\u53d8\u91cf( in, in, out)\uff1b build/rule\u5757\u4e2d\u6784\u5efa\u5c42\u7684\u53d8\u91cf\uff1b \u6784\u5efa\u884c\u6240\u5728\u6587\u4ef6\u4e2d\u7684\u6587\u4ef6\u5c42\u53d8\u91cf\uff08File-level\uff09\uff1b \u4f7f\u7528subninja\u5173\u952e\u5b57\u5f15\u5165\u90a3\u4e2a\u6587\u4ef6\u7684\uff08\u7236\uff09\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3002","title":"\u8bc4\u4f30\u548c\u8fb9\u754c"},{"location":"android/flutter/NinjaSystem/#_18","text":"\u5728\u4e0a\u4e00\u7bc7 GN \u6784\u5efa\u7cfb\u7edf\u4e2d\u4e3b\u8981\u4ecb\u7ecd\u4e86 GN \u662f\u4e00\u4e2a\u6784\u5efa\u7f16\u8bd1\u6587\u4ef6\u76f8\u5173\u4f9d\u8d56\u548c\u914d\u7f6e\u53c2\u6570\u7684\u5de5\u5177\uff0c\u4e3b\u8981\u662f\u9759\u6001\u7684\u751f\u4ea7 Ninja \u9700\u8981\u7684\u6784\u5efa\u6587\u4ef6 Ninja \u4e3b\u8981\u662f\u5206\u6790\u6587\u4ef6\u7684\u5185\u90e8\u5185\u5bb9\uff0c\u548c\u5206\u6790\u6587\u4ef6\u5185\u5bb9\u7684\u5f02\u5e38\u60c5\u51b5\u548c\u4f9d\u8d56\uff0c\u66f4\u52a0\u5173\u6ce8\u7cfb\u7edf\u548c\u7f16\u8bd1\u73af\u5883\u7684\u914d\u7f6e\u548c\u51fa\u6765 GN :\u4e00\u4e2a\u9759\u6001\u6587\u4ef6\u4f9d\u8d56\u5173\u7cfb\u548c \u7cfb\u7edf , CPU \uff0c \u5de5\u5177\u94fe \u76f8\u5173\u7684\u4f9d\u8d56\u5173\u7cfb( \u9759\u6001\u5173\u7cfb ) Ninja :\u5728GN\u751f\u6210\u7684\u6587\u4ef6\u4f5c\u4e3a\u57fa\u7840\uff0c\u51fa\u6765\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u6587\u4ef6\u7684\u53d8\u52a8\uff0c\u6e90\u4ee3\u7801\u8fdb\u884c\u68c0\u67e5\uff0c\u4f18\u5316\uff0c\u6700\u7ec8\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6 note: \u00b7","title":"\u603b\u7ed3"},{"location":"android/flutter/SmartPtr/","text":"C++\u667a\u80fd\u6307\u9488 C++\u667a\u80fd\u6307\u9488 \u4ecb\u7ecdc++\u91cc\u9762\u7684\u56db\u4e2a\u667a\u80fd\u6307\u9488: auto_ptr , shared_ptr , weak_ptr , unique_ptr \u5176\u4e2d\u540e\u4e09\u4e2a\u662fc++11\u652f\u6301\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5df2\u7ecf\u88abc++11\u5f03\u7528\u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff1a\u6211\u4eec\u77e5\u9053c++\u7684\u5185\u5b58\u7ba1\u7406\u662f\u8ba9\u5f88\u591a\u4eba\u5934\u75bc\u7684\u4e8b\uff0c\u5f53\u6211\u4eec\u5199\u4e00\u4e2anew\u8bed\u53e5\u65f6\uff0c\u4e00\u822c\u5c31\u4f1a\u7acb\u5373\u628adelete\u8bed\u53e5\u76f4\u63a5\u4e5f\u5199\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u907f\u514d\u7a0b\u5e8f\u8fd8\u672a\u6267\u884c\u5230delete\u65f6\u5c31\u8df3\u8f6c\u4e86\u6216\u8005\u5728\u51fd\u6570\u4e2d\u6ca1\u6709\u6267\u884c\u5230\u6700\u540e\u7684delete\u8bed\u53e5\u5c31\u8fd4\u56de\u4e86\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5728\u6bcf\u4e00\u4e2a\u53ef\u80fd\u8df3\u8f6c\u6216\u8005\u8fd4\u56de\u7684\u8bed\u53e5\u524d\u91ca\u653e\u8d44\u6e90\uff0c\u5c31\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002\u4f7f\u7528\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7684\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u667a\u80fd\u6307\u9488\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u5f53\u8d85\u51fa\u4e86\u7c7b\u7684\u4f5c\u7528\u57df\u662f\uff0c\u7c7b\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002\u4e0b\u9762\u6211\u4eec\u9010\u4e2a\u4ecb\u7ecd\u3002 unique_ptr \u662f\u7528\u4e8e\u53d6\u4ee3c++98\u7684auto_ptr\u7684\u4ea7\u7269,\u5728c++98\u7684\u65f6\u5019\u8fd8\u6ca1\u6709\u79fb\u52a8\u8bed\u4e49(move semantics)\u7684\u652f\u6301,\u56e0\u6b64\u5bf9\u4e8eauto_ptr\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u7684\u5b9e\u73b0\u6ca1\u6709\u6838\u5fc3\u5143\u7d20\u7684\u652f\u6301,\u4f46\u662f\u8fd8\u662f\u5b9e\u73b0\u4e86auto_ptr\u7684\u79fb\u52a8\u8bed\u4e49,\u8fd9\u6837\u5e26\u6765\u7684\u4e00\u4e9b\u95ee\u9898\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u590d\u5236\u64cd\u4f5c\u91cd\u8f7d\u51fd\u6570\u4e0d\u591f\u5b8c\u7f8e,\u5177\u4f53\u4f53\u73b0\u5c31\u662f\u628aauto_ptr\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570,\u4f20\u8fdb\u53bb\u7684\u65f6\u5019\u63a7\u5236\u6743\u8f6c\u79fb,\u8f6c\u79fb\u5230\u51fd\u6570\u53c2\u6570,\u5f53\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u4e00\u4e2a\u63a7\u5236\u6743\u79fb\u4ea4\u7684\u8fc7\u7a0b,\u6240\u4ee5\u8fc7\u4e86\u51fd\u6570\u8c03\u7528\u5219\u539f\u5148\u7684auto_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u5728c++11\u5f53\u4e2d\u6709\u4e86\u79fb\u52a8\u8bed\u4e49,\u4f7f\u7528move()\u628aunique_ptr\u4f20\u5165\u51fd\u6570,\u8fd9\u6837\u4f60\u5c31\u77e5\u9053\u539f\u5148\u7684unique_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u79fb\u52a8\u8bed\u4e49\u672c\u8eab\u5c31\u8bf4\u660e\u4e86\u8fd9\u6837\u7684\u95ee\u9898,\u6bd4\u8f83\u5751\u7239\u7684\u662f\u6807\u51c6\u63cf\u8ff0\u662f\u8bf4\u5bf9\u4e8emove\u4e4b\u540e\u4f7f\u7528\u539f\u6765\u7684\u5185\u5bb9\u662f\u672a\u5b9a\u4e49\u884c\u4e3a,\u5e76\u975e\u629b\u51fa\u5f02\u5e38,\u6240\u4ee5\u8fd8\u662f\u8981\u9760\u4eba\u8089\u9075\u5b88\u6e38\u620f\u89c4\u5219.\u518d\u4e00\u4e2a,auto_ptr\u4e0d\u652f\u6301\u4f20\u5165deleter,\u6240\u4ee5\u53ea\u80fd\u652f\u6301\u5355\u5bf9\u8c61(delete object),\u800cunique_ptr\u5bf9\u6570\u7ec4\u7c7b\u578b\u6709\u504f\u7279\u5316\u91cd\u8f7d,\u5e76\u4e14\u8fd8\u505a\u4e86\u76f8\u5e94\u7684\u4f18\u5316,\u6bd4\u5982\u7528[]\u8bbf\u95ee\u76f8\u5e94\u5143\u7d20\u7b49. unique_ptr \u662f\u4e00\u4e2a\u72ec\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u6240\u6709\u6743\uff0c\u5305\u62ec\uff1a \u62e5\u6709\u5b83\u6307\u5411\u7684\u5bf9\u8c61 \u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u6784\u9020\uff0c\u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u8d4b\u503c\u64cd\u4f5c\u3002\u5373\u65e0\u6cd5\u4f7f\u4e24\u4e2aunique_ptr\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u4f46\u662f\u53ef\u4ee5\u8fdb\u884c\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u64cd\u4f5c \u4fdd\u5b58\u6307\u5411\u67d0\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5f53\u5b83\u672c\u8eab\u88ab\u5220\u9664\u91ca\u653e\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u7ed9\u5b9a\u7684\u5220\u9664\u5668\u91ca\u653e\u5b83\u6307\u5411\u7684\u5bf9\u8c61 unique_ptr \u53ef\u4ee5\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a \u4e3a\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168 \u8bb2\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u6240\u6709\u6743\u4f20\u9012\u7ed9\u67d0\u51fd\u6570 \u4ece\u67d0\u4e2a\u51fd\u6570\u8fd4\u56de\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7684\u6240\u6709\u6743 \u5728\u5bb9\u5668\u4e2d\u4fdd\u5b58\u6307\u9488 auto_ptr \u5e94\u8be5\u5177\u6709\u7684\u529f\u80fd share_ptr \u4ece\u540d\u5b57share\u5c31\u53ef\u4ee5\u770b\u51fa\u4e86\u8d44\u6e90\u53ef\u4ee5\u88ab\u591a\u4e2a\u6307\u9488\u5171\u4eab\uff0c\u5b83\u4f7f\u7528\u8ba1\u6570\u673a\u5236\u6765\u8868\u660e\u8d44\u6e90\u88ab\u51e0\u4e2a\u6307\u9488\u5171\u4eab\u3002\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u51fd\u6570use_count()\u6765\u67e5\u770b\u8d44\u6e90\u7684\u6240\u6709\u8005\u4e2a\u6570\u3002\u51fa\u4e86\u53ef\u4ee5\u901a\u8fc7new\u6765\u6784\u9020\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165auto_ptr, unique_ptr,weak_ptr\u6765\u6784\u9020\u3002\u5f53\u6211\u4eec\u8c03\u7528release()\u65f6\uff0c\u5f53\u524d\u6307\u9488\u4f1a\u91ca\u653e\u8d44\u6e90\u6240\u6709\u6743\uff0c\u8ba1\u6570\u51cf\u4e00\u3002\u5f53\u8ba1\u6570\u7b49\u4e8e0\u65f6\uff0c\u8d44\u6e90\u4f1a\u88ab\u91ca\u653e. weak_ptr weak_ptr\u662f\u7528\u6765\u89e3\u51b3shared_ptr\u76f8\u4e92\u5f15\u7528\u65f6\u7684\u6b7b\u9501\u95ee\u9898,\u5982\u679c\u8bf4\u4e24\u4e2ashared_ptr\u76f8\u4e92\u5f15\u7528,\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u6c38\u8fdc\u4e0d\u53ef\u80fd\u4e0b\u964d\u4e3a0,\u8d44\u6e90\u6c38\u8fdc\u4e0d\u4f1a\u91ca\u653e\u3002\u5b83\u662f\u5bf9\u5bf9\u8c61\u7684\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u4e0d\u4f1a\u589e\u52a0\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u548cshared_ptr\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316\uff0cshared_ptr\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u7ed9\u5b83\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528lock\u51fd\u6570\u6765\u83b7\u5f97shared_ptr\u3002 usr/include/c++/v1/memory auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); \u4f7f\u7528\u6a21\u677f\b\u65b9\u6cd5\b\u6765\u521b\u5efa\u4e00\u4e2a\bunique_ptr\b\b template class _Tp inline _LIBCPP_INLINE_VISIBILITY typename __unique_if _Tp :: __unique_array_unknown_bound make_unique ( size_t __n ) { typedef typename remove_extent _Tp :: type _Up ; return unique_ptr _Tp ( new _Up [ __n ]()); } \u53c2\u8003\u8d44\u6599 \u667a\u80fd\u6307\u9488 C++\u6307\u9488\u8f6c\u6362","title":"C++\u667a\u80fd\u6307\u9488"},{"location":"android/flutter/SmartPtr/#c","text":"","title":"C++\u667a\u80fd\u6307\u9488"},{"location":"android/flutter/SmartPtr/#c_1","text":"\u4ecb\u7ecdc++\u91cc\u9762\u7684\u56db\u4e2a\u667a\u80fd\u6307\u9488: auto_ptr , shared_ptr , weak_ptr , unique_ptr \u5176\u4e2d\u540e\u4e09\u4e2a\u662fc++11\u652f\u6301\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5df2\u7ecf\u88abc++11\u5f03\u7528\u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff1a\u6211\u4eec\u77e5\u9053c++\u7684\u5185\u5b58\u7ba1\u7406\u662f\u8ba9\u5f88\u591a\u4eba\u5934\u75bc\u7684\u4e8b\uff0c\u5f53\u6211\u4eec\u5199\u4e00\u4e2anew\u8bed\u53e5\u65f6\uff0c\u4e00\u822c\u5c31\u4f1a\u7acb\u5373\u628adelete\u8bed\u53e5\u76f4\u63a5\u4e5f\u5199\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u907f\u514d\u7a0b\u5e8f\u8fd8\u672a\u6267\u884c\u5230delete\u65f6\u5c31\u8df3\u8f6c\u4e86\u6216\u8005\u5728\u51fd\u6570\u4e2d\u6ca1\u6709\u6267\u884c\u5230\u6700\u540e\u7684delete\u8bed\u53e5\u5c31\u8fd4\u56de\u4e86\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5728\u6bcf\u4e00\u4e2a\u53ef\u80fd\u8df3\u8f6c\u6216\u8005\u8fd4\u56de\u7684\u8bed\u53e5\u524d\u91ca\u653e\u8d44\u6e90\uff0c\u5c31\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002\u4f7f\u7528\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7684\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u667a\u80fd\u6307\u9488\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u5f53\u8d85\u51fa\u4e86\u7c7b\u7684\u4f5c\u7528\u57df\u662f\uff0c\u7c7b\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002\u4e0b\u9762\u6211\u4eec\u9010\u4e2a\u4ecb\u7ecd\u3002","title":"C++\u667a\u80fd\u6307\u9488"},{"location":"android/flutter/SmartPtr/#unique_ptr","text":"\u662f\u7528\u4e8e\u53d6\u4ee3c++98\u7684auto_ptr\u7684\u4ea7\u7269,\u5728c++98\u7684\u65f6\u5019\u8fd8\u6ca1\u6709\u79fb\u52a8\u8bed\u4e49(move semantics)\u7684\u652f\u6301,\u56e0\u6b64\u5bf9\u4e8eauto_ptr\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u7684\u5b9e\u73b0\u6ca1\u6709\u6838\u5fc3\u5143\u7d20\u7684\u652f\u6301,\u4f46\u662f\u8fd8\u662f\u5b9e\u73b0\u4e86auto_ptr\u7684\u79fb\u52a8\u8bed\u4e49,\u8fd9\u6837\u5e26\u6765\u7684\u4e00\u4e9b\u95ee\u9898\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u590d\u5236\u64cd\u4f5c\u91cd\u8f7d\u51fd\u6570\u4e0d\u591f\u5b8c\u7f8e,\u5177\u4f53\u4f53\u73b0\u5c31\u662f\u628aauto_ptr\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570,\u4f20\u8fdb\u53bb\u7684\u65f6\u5019\u63a7\u5236\u6743\u8f6c\u79fb,\u8f6c\u79fb\u5230\u51fd\u6570\u53c2\u6570,\u5f53\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u4e00\u4e2a\u63a7\u5236\u6743\u79fb\u4ea4\u7684\u8fc7\u7a0b,\u6240\u4ee5\u8fc7\u4e86\u51fd\u6570\u8c03\u7528\u5219\u539f\u5148\u7684auto_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u5728c++11\u5f53\u4e2d\u6709\u4e86\u79fb\u52a8\u8bed\u4e49,\u4f7f\u7528move()\u628aunique_ptr\u4f20\u5165\u51fd\u6570,\u8fd9\u6837\u4f60\u5c31\u77e5\u9053\u539f\u5148\u7684unique_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u79fb\u52a8\u8bed\u4e49\u672c\u8eab\u5c31\u8bf4\u660e\u4e86\u8fd9\u6837\u7684\u95ee\u9898,\u6bd4\u8f83\u5751\u7239\u7684\u662f\u6807\u51c6\u63cf\u8ff0\u662f\u8bf4\u5bf9\u4e8emove\u4e4b\u540e\u4f7f\u7528\u539f\u6765\u7684\u5185\u5bb9\u662f\u672a\u5b9a\u4e49\u884c\u4e3a,\u5e76\u975e\u629b\u51fa\u5f02\u5e38,\u6240\u4ee5\u8fd8\u662f\u8981\u9760\u4eba\u8089\u9075\u5b88\u6e38\u620f\u89c4\u5219.\u518d\u4e00\u4e2a,auto_ptr\u4e0d\u652f\u6301\u4f20\u5165deleter,\u6240\u4ee5\u53ea\u80fd\u652f\u6301\u5355\u5bf9\u8c61(delete object),\u800cunique_ptr\u5bf9\u6570\u7ec4\u7c7b\u578b\u6709\u504f\u7279\u5316\u91cd\u8f7d,\u5e76\u4e14\u8fd8\u505a\u4e86\u76f8\u5e94\u7684\u4f18\u5316,\u6bd4\u5982\u7528[]\u8bbf\u95ee\u76f8\u5e94\u5143\u7d20\u7b49. unique_ptr \u662f\u4e00\u4e2a\u72ec\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u6240\u6709\u6743\uff0c\u5305\u62ec\uff1a \u62e5\u6709\u5b83\u6307\u5411\u7684\u5bf9\u8c61 \u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u6784\u9020\uff0c\u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u8d4b\u503c\u64cd\u4f5c\u3002\u5373\u65e0\u6cd5\u4f7f\u4e24\u4e2aunique_ptr\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u4f46\u662f\u53ef\u4ee5\u8fdb\u884c\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u64cd\u4f5c \u4fdd\u5b58\u6307\u5411\u67d0\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5f53\u5b83\u672c\u8eab\u88ab\u5220\u9664\u91ca\u653e\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u7ed9\u5b9a\u7684\u5220\u9664\u5668\u91ca\u653e\u5b83\u6307\u5411\u7684\u5bf9\u8c61 unique_ptr \u53ef\u4ee5\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a \u4e3a\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168 \u8bb2\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u6240\u6709\u6743\u4f20\u9012\u7ed9\u67d0\u51fd\u6570 \u4ece\u67d0\u4e2a\u51fd\u6570\u8fd4\u56de\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7684\u6240\u6709\u6743 \u5728\u5bb9\u5668\u4e2d\u4fdd\u5b58\u6307\u9488 auto_ptr \u5e94\u8be5\u5177\u6709\u7684\u529f\u80fd","title":"unique_ptr"},{"location":"android/flutter/SmartPtr/#share_ptr","text":"\u4ece\u540d\u5b57share\u5c31\u53ef\u4ee5\u770b\u51fa\u4e86\u8d44\u6e90\u53ef\u4ee5\u88ab\u591a\u4e2a\u6307\u9488\u5171\u4eab\uff0c\u5b83\u4f7f\u7528\u8ba1\u6570\u673a\u5236\u6765\u8868\u660e\u8d44\u6e90\u88ab\u51e0\u4e2a\u6307\u9488\u5171\u4eab\u3002\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u51fd\u6570use_count()\u6765\u67e5\u770b\u8d44\u6e90\u7684\u6240\u6709\u8005\u4e2a\u6570\u3002\u51fa\u4e86\u53ef\u4ee5\u901a\u8fc7new\u6765\u6784\u9020\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165auto_ptr, unique_ptr,weak_ptr\u6765\u6784\u9020\u3002\u5f53\u6211\u4eec\u8c03\u7528release()\u65f6\uff0c\u5f53\u524d\u6307\u9488\u4f1a\u91ca\u653e\u8d44\u6e90\u6240\u6709\u6743\uff0c\u8ba1\u6570\u51cf\u4e00\u3002\u5f53\u8ba1\u6570\u7b49\u4e8e0\u65f6\uff0c\u8d44\u6e90\u4f1a\u88ab\u91ca\u653e.","title":"share_ptr"},{"location":"android/flutter/SmartPtr/#weak_ptr","text":"weak_ptr\u662f\u7528\u6765\u89e3\u51b3shared_ptr\u76f8\u4e92\u5f15\u7528\u65f6\u7684\u6b7b\u9501\u95ee\u9898,\u5982\u679c\u8bf4\u4e24\u4e2ashared_ptr\u76f8\u4e92\u5f15\u7528,\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u6c38\u8fdc\u4e0d\u53ef\u80fd\u4e0b\u964d\u4e3a0,\u8d44\u6e90\u6c38\u8fdc\u4e0d\u4f1a\u91ca\u653e\u3002\u5b83\u662f\u5bf9\u5bf9\u8c61\u7684\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u4e0d\u4f1a\u589e\u52a0\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u548cshared_ptr\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316\uff0cshared_ptr\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u7ed9\u5b83\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528lock\u51fd\u6570\u6765\u83b7\u5f97shared_ptr\u3002 usr/include/c++/v1/memory auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); \u4f7f\u7528\u6a21\u677f\b\u65b9\u6cd5\b\u6765\u521b\u5efa\u4e00\u4e2a\bunique_ptr\b\b template class _Tp inline _LIBCPP_INLINE_VISIBILITY typename __unique_if _Tp :: __unique_array_unknown_bound make_unique ( size_t __n ) { typedef typename remove_extent _Tp :: type _Up ; return unique_ptr _Tp ( new _Up [ __n ]()); }","title":"weak_ptr"},{"location":"android/flutter/SmartPtr/#_1","text":"\u667a\u80fd\u6307\u9488 C++\u6307\u9488\u8f6c\u6362","title":"\u53c2\u8003\u8d44\u6599"},{"location":"android/flutter/apkfile/","text":"Flutter\u751f\u6210\u7684\u7f16\u8bd1\u6587\u4ef6 Flutter\u672c\u8d28\u4e0a\u662f\u4ec0\u4e48\uff1f Flutter\u8fd0\u884c\u5728\u4ec0\u4e48\u4e0a\u9762\uff1f Flutter\u9700\u4e0d\u9700\u8981\u548cNative\u6709\u6240\u4ea4\u4e92\uff1f a Flutter\u7684\u96be\u70b9\u662f\u4ec0\u4e48\uff0c\u662f\u754c\u9762\u5f00\u53d1\u5417\uff1f Flutter\u7684\u7ade\u4e89\u5bf9\u624b\u662f\u8c01\uff0c\u5b83\u4eec\u5360\u636e\u7edd\u5bf9\u4f18\u52bf\u4e86\u5417\uff1f Flutter\u662f\u5426\u4f1a\u6210\u4e3a\u4f60\u7684\u6838\u5fc3\u7ade\u4e89\u529b\uff1f \u7406\u89e3 Flutter \u7f16\u8bd1\u4ea7\u7269\u4e4b\u524d\u9700\u8981\u7406\u89e3 Flutter \u7684\u7f16\u8bd1\u6a21\u5f0f \u3002 \u4efb\u4f55\u8bed\u8a00\u5728\u8fd0\u884c\u4e4b\u524d\u90fd\u9700\u8981\u7f16\u8bd1\uff0c\u5e38\u89c1\u7684\u7f16\u8bd1\u6a21\u5f0f\u5982 JIT \u548c AOT \u3002JIT \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u5373\u65f6\u7f16\u8bd1\uff0c\u4f18\u52bf\u662f\u53ef\u4ee5\u52a8\u6001\u4e0b\u53d1\u548c\u6267\u884c\u4ee3\u7801\uff0c\u52a3\u52bf\u4e5f\u662f\u5bf9\u5e94\u7684\u4f1a\u5f71\u54cd\u8bbe\u5907\u8fd0\u884c\u901f\u5ea6\u3002AOT \u5373\u63d0\u524d\u7f16\u8bd1\u751f\u6210\u7c7b C \u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u4f18\u52bf\u662f\u53ef\u4ee5\u8f83\u5feb\u901f\u5ea6\u751f\u6210\u548c\u6267\u884c\u5e73\u53f0\u4ee3\u7801\uff0c\u52a3\u52bf\u5c31\u662f\u9700\u8981\u63d0\u524d\u77e5\u9053\u5bf9\u5e94\u5e73\u53f0\u7684\u67b6\u6784\uff0c\u751a\u81f3\u8981\u4e3a\u4e0d\u540c\u5e73\u53f0\u67b6\u6784\u751f\u6210\u4e0d\u540c\u7684\u4ee3\u7801\u3002 JIT \u7f16\u8bd1\u540e\u4ea7\u7269 Flutter \u5728\u4ee3\u7801\u7f16\u5199\u9636\u6bb5(Debug)\u662f\u91c7\u7528 JIT \u65b9\u5f0f\u7f16\u8bd1\u4ee3\u7801\uff0c\u6240\u6709\u76f8\u5173\u7684 Dart \u4ee3\u7801\u7f16\u8bd1\u4e4b\u540e\u6253\u5305\u5728 APK \u4e0b\u7684 assets \u76ee\u5f55\u4e0b\uff0c\u662f\u7531\u5bf9\u5e94\u7684 libs \u76ee\u5f55\u4e0b\u7684 .so \u5e93\u4e2d\u865a\u62df\u673a\u6267\u884c\u3002 libs \u76ee\u5f55\u4e0b\u5bf9\u5e94\u7684\u4e0d\u540c\u67b6\u6784\u5e73\u53f0\u7684 Flutter \u6267\u884c\u865a\u62df\u673a\uff1b \u53e6\u5916 assets \u76ee\u5f55\u4e0b kernel_blob.bin \u662f Flutter \u5f15\u64ce\u7684\u5e95\u5c42\u63a5\u53e3\u548c Dart \u8bed\u8a00\u57fa\u672c\u529f\u80fd\u90e8\u5206\u4ee3\u7801\uff1b platform.dill \u5219\u662f\u5b9e\u73b0\u4e86 Flutter \u9875\u9762\u903b\u8f91\u7684\u4ee3\u7801\uff0c\u4e5f\u5305\u62ec Flutter Framework \u548c\u5176\u4ed6\u7531 pub \u4f9d\u8d56\u7684\u5e93\u4ee3\u7801\uff0c\u548c Dart VM \u76f8\u5173\u7684 kernel \u4ee3\u7801\uff0c\u4ec5\u548c Dart \u7248\u672c\u4ee5\u53ca engine \u7f16\u8bd1\u7248\u672c\u6709\u5173\u3002\u56fa\u5b9a\u3002 AOT \u7f16\u8bd1\u540e\u4ea7\u7269 Flutter \u5728 Release \u6a21\u5f0f\u4e0b\u5173\u95ed\u4e86\u6240\u6709\u8c03\u8bd5\u4fe1\u606f\u548c\u65ad\u8a00\uff0c\u5305\u7684\u5927\u5c0f\u90fd\u505a\u4e86\u4f18\u5316\u3002 FLutter \u5728 Release \u6a21\u5f0f\u4e0b\u91c7\u7528 AOT \u6a21\u5f0f\uff0csolate_snapshot_data\u3001vm_snapshot_data\u3001isolate_snapshot_instr\u3001vm_snapshot_instr\u3002\u5bf9\u6bd4 JIT \u6a21\u5f0f\u4e0b\uff0c\u4e0d\u8ba4\u8bc6\u7684\u4ea7\u7269\u6709\uff1aisolate_snapshot_instr \u548c vm_snapshot_instr\uff0c\u5176\u5b9e\u5b83\u4fe9\u4ee3\u8868\u7740 VM \u548c isolate \u542f\u52a8\u540e\u6240\u627f\u8f7d\u7684\u6307\u4ee4\u7b49\u6570\u636e\u3002\u5728\u8f7d\u5165\u540e\uff0c\u76f4\u63a5\u5c06\u8be5\u5757\u5185\u5b58\u6267\u884c\u5373\u53ef\uff1b snapshot \u6587\u4ef6\u7531 Flutter SDK \u4e2d\u7684 flutter/bin/cache/artifacts/engine/android-arm-release/darwin-x64/gen_snapshot \u547d\u4ee4\u751f\u6210\uff0cvmsnapshot* \u662f Dart \u865a\u62df\u673a\u8fd0\u884c\u6240\u9700\u8981\u7684\u6570\u636e\u548c\u4ee3\u7801\u6307\u4ee4\uff0cisolatesnapshot* \u5219\u662f\u6bcf\u4e2a isolate \u8fd0\u884c\u6240\u9700\u8981\u7684\u6570\u636e\u548c\u4ee3\u7801\u6307\u4ee4\u3002 \u7406\u89e3 Flutter \u7f16\u8bd1\u4ea7\u7269\u7684\u6027\u8d28\uff0c\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u52a0\u65b9\u4fbf\u7684\u96c6\u6210 Flutter/Dart \u8fd0\u884c\u65f6\u6216\u8005 Debug \u65f6\u6240\u9700\u8981\u7684\u4f9d\u8d56\u5230\u73b0\u6709 Android / iOS \u5de5\u7a0b\u4e2d\uff0c\u4ece\u800c\u66f4\u52a0\u65b9\u4fbf\u7684\u6a21\u5757\u5316\u5f00\u53d1\u3002 Android \u4ee3\u7801\u52a0\u8f7dFlutter\u6587\u4ef6 \bFlutter\u5728\u5f00\u53d1\u5b8c\u6210\u4e4b\u540e\u4f1a\b\u6253\u5305\u5230apk\u4e2d\uff0c\u6700\u7ec8\u548capk\u4e00\u8d77\u53d1\u5e03\uff0c\u4e0b\u8f7d\u5b89\u88c5\u4e4b\u540eApp\u542f\u52a8\u7684\u65f6\u5019\u662f\u5982\u4f55\u542f\u52a8flutter\u7684\u4ee3\u7801\uff1f\uff1f Apk\u6253\u5305\u4e4b\u540e\u751f\u6210\u76f8\u5173\u7684\u6587\u4ef6 \bAPK \u4e2dFlutter\b\u4e2d\u6253\u5305\uff0c\u76f8\u5173\u6587\u4ef6\b\u4f4d\u7f6e: Apk\u5b89\u88c5\u5230\b\u624b\u673a\u4e0a\u4e4b\u540e\u751f\u6210\u7684\u6587\u4ef6 \bApk\u5b89\u88c5\u5230\u624b\u673a\u4e0a\u4e4b\u540e\uff0c\u62f7\u8d1d\u76f8\u5173\u7684\u6587\u4ef6\u5230\u76ee\u5f55\u4e2d: \b\b\u62f7\u8d1dFlutter\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u542f\u52a8flutter\uff1a flutter.jar Android Apk \u8fd0\u884c\u65f6\u52a0\u8f7dFlutter\u4ee3\u7801 Flutter\u8c03\u7528Android\u539f\u751f\u63a5\u53e3","title":"Apk&ipd\u5305\u5206\u6790"},{"location":"android/flutter/apkfile/#flutter","text":"Flutter\u672c\u8d28\u4e0a\u662f\u4ec0\u4e48\uff1f Flutter\u8fd0\u884c\u5728\u4ec0\u4e48\u4e0a\u9762\uff1f Flutter\u9700\u4e0d\u9700\u8981\u548cNative\u6709\u6240\u4ea4\u4e92\uff1f a Flutter\u7684\u96be\u70b9\u662f\u4ec0\u4e48\uff0c\u662f\u754c\u9762\u5f00\u53d1\u5417\uff1f Flutter\u7684\u7ade\u4e89\u5bf9\u624b\u662f\u8c01\uff0c\u5b83\u4eec\u5360\u636e\u7edd\u5bf9\u4f18\u52bf\u4e86\u5417\uff1f Flutter\u662f\u5426\u4f1a\u6210\u4e3a\u4f60\u7684\u6838\u5fc3\u7ade\u4e89\u529b\uff1f \u7406\u89e3 Flutter \u7f16\u8bd1\u4ea7\u7269\u4e4b\u524d\u9700\u8981\u7406\u89e3 Flutter \u7684\u7f16\u8bd1\u6a21\u5f0f \u3002 \u4efb\u4f55\u8bed\u8a00\u5728\u8fd0\u884c\u4e4b\u524d\u90fd\u9700\u8981\u7f16\u8bd1\uff0c\u5e38\u89c1\u7684\u7f16\u8bd1\u6a21\u5f0f\u5982 JIT \u548c AOT \u3002JIT \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u5373\u65f6\u7f16\u8bd1\uff0c\u4f18\u52bf\u662f\u53ef\u4ee5\u52a8\u6001\u4e0b\u53d1\u548c\u6267\u884c\u4ee3\u7801\uff0c\u52a3\u52bf\u4e5f\u662f\u5bf9\u5e94\u7684\u4f1a\u5f71\u54cd\u8bbe\u5907\u8fd0\u884c\u901f\u5ea6\u3002AOT \u5373\u63d0\u524d\u7f16\u8bd1\u751f\u6210\u7c7b C \u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u4f18\u52bf\u662f\u53ef\u4ee5\u8f83\u5feb\u901f\u5ea6\u751f\u6210\u548c\u6267\u884c\u5e73\u53f0\u4ee3\u7801\uff0c\u52a3\u52bf\u5c31\u662f\u9700\u8981\u63d0\u524d\u77e5\u9053\u5bf9\u5e94\u5e73\u53f0\u7684\u67b6\u6784\uff0c\u751a\u81f3\u8981\u4e3a\u4e0d\u540c\u5e73\u53f0\u67b6\u6784\u751f\u6210\u4e0d\u540c\u7684\u4ee3\u7801\u3002 JIT \u7f16\u8bd1\u540e\u4ea7\u7269 Flutter \u5728\u4ee3\u7801\u7f16\u5199\u9636\u6bb5(Debug)\u662f\u91c7\u7528 JIT \u65b9\u5f0f\u7f16\u8bd1\u4ee3\u7801\uff0c\u6240\u6709\u76f8\u5173\u7684 Dart \u4ee3\u7801\u7f16\u8bd1\u4e4b\u540e\u6253\u5305\u5728 APK \u4e0b\u7684 assets \u76ee\u5f55\u4e0b\uff0c\u662f\u7531\u5bf9\u5e94\u7684 libs \u76ee\u5f55\u4e0b\u7684 .so \u5e93\u4e2d\u865a\u62df\u673a\u6267\u884c\u3002 libs \u76ee\u5f55\u4e0b\u5bf9\u5e94\u7684\u4e0d\u540c\u67b6\u6784\u5e73\u53f0\u7684 Flutter \u6267\u884c\u865a\u62df\u673a\uff1b \u53e6\u5916 assets \u76ee\u5f55\u4e0b kernel_blob.bin \u662f Flutter \u5f15\u64ce\u7684\u5e95\u5c42\u63a5\u53e3\u548c Dart \u8bed\u8a00\u57fa\u672c\u529f\u80fd\u90e8\u5206\u4ee3\u7801\uff1b platform.dill \u5219\u662f\u5b9e\u73b0\u4e86 Flutter \u9875\u9762\u903b\u8f91\u7684\u4ee3\u7801\uff0c\u4e5f\u5305\u62ec Flutter Framework \u548c\u5176\u4ed6\u7531 pub \u4f9d\u8d56\u7684\u5e93\u4ee3\u7801\uff0c\u548c Dart VM \u76f8\u5173\u7684 kernel \u4ee3\u7801\uff0c\u4ec5\u548c Dart \u7248\u672c\u4ee5\u53ca engine \u7f16\u8bd1\u7248\u672c\u6709\u5173\u3002\u56fa\u5b9a\u3002 AOT \u7f16\u8bd1\u540e\u4ea7\u7269 Flutter \u5728 Release \u6a21\u5f0f\u4e0b\u5173\u95ed\u4e86\u6240\u6709\u8c03\u8bd5\u4fe1\u606f\u548c\u65ad\u8a00\uff0c\u5305\u7684\u5927\u5c0f\u90fd\u505a\u4e86\u4f18\u5316\u3002 FLutter \u5728 Release \u6a21\u5f0f\u4e0b\u91c7\u7528 AOT \u6a21\u5f0f\uff0csolate_snapshot_data\u3001vm_snapshot_data\u3001isolate_snapshot_instr\u3001vm_snapshot_instr\u3002\u5bf9\u6bd4 JIT \u6a21\u5f0f\u4e0b\uff0c\u4e0d\u8ba4\u8bc6\u7684\u4ea7\u7269\u6709\uff1aisolate_snapshot_instr \u548c vm_snapshot_instr\uff0c\u5176\u5b9e\u5b83\u4fe9\u4ee3\u8868\u7740 VM \u548c isolate \u542f\u52a8\u540e\u6240\u627f\u8f7d\u7684\u6307\u4ee4\u7b49\u6570\u636e\u3002\u5728\u8f7d\u5165\u540e\uff0c\u76f4\u63a5\u5c06\u8be5\u5757\u5185\u5b58\u6267\u884c\u5373\u53ef\uff1b snapshot \u6587\u4ef6\u7531 Flutter SDK \u4e2d\u7684 flutter/bin/cache/artifacts/engine/android-arm-release/darwin-x64/gen_snapshot \u547d\u4ee4\u751f\u6210\uff0cvmsnapshot* \u662f Dart \u865a\u62df\u673a\u8fd0\u884c\u6240\u9700\u8981\u7684\u6570\u636e\u548c\u4ee3\u7801\u6307\u4ee4\uff0cisolatesnapshot* \u5219\u662f\u6bcf\u4e2a isolate \u8fd0\u884c\u6240\u9700\u8981\u7684\u6570\u636e\u548c\u4ee3\u7801\u6307\u4ee4\u3002 \u7406\u89e3 Flutter \u7f16\u8bd1\u4ea7\u7269\u7684\u6027\u8d28\uff0c\u6709\u52a9\u4e8e\u6211\u4eec\u66f4\u52a0\u65b9\u4fbf\u7684\u96c6\u6210 Flutter/Dart \u8fd0\u884c\u65f6\u6216\u8005 Debug \u65f6\u6240\u9700\u8981\u7684\u4f9d\u8d56\u5230\u73b0\u6709 Android / iOS \u5de5\u7a0b\u4e2d\uff0c\u4ece\u800c\u66f4\u52a0\u65b9\u4fbf\u7684\u6a21\u5757\u5316\u5f00\u53d1\u3002","title":"Flutter\u751f\u6210\u7684\u7f16\u8bd1\u6587\u4ef6"},{"location":"android/flutter/apkfile/#android-flutter","text":"\bFlutter\u5728\u5f00\u53d1\u5b8c\u6210\u4e4b\u540e\u4f1a\b\u6253\u5305\u5230apk\u4e2d\uff0c\u6700\u7ec8\u548capk\u4e00\u8d77\u53d1\u5e03\uff0c\u4e0b\u8f7d\u5b89\u88c5\u4e4b\u540eApp\u542f\u52a8\u7684\u65f6\u5019\u662f\u5982\u4f55\u542f\u52a8flutter\u7684\u4ee3\u7801\uff1f\uff1f","title":"Android \u4ee3\u7801\u52a0\u8f7dFlutter\u6587\u4ef6"},{"location":"android/flutter/apkfile/#apk","text":"\bAPK \u4e2dFlutter\b\u4e2d\u6253\u5305\uff0c\u76f8\u5173\u6587\u4ef6\b\u4f4d\u7f6e:","title":"Apk\u6253\u5305\u4e4b\u540e\u751f\u6210\u76f8\u5173\u7684\u6587\u4ef6"},{"location":"android/flutter/apkfile/#apk_1","text":"\bApk\u5b89\u88c5\u5230\u624b\u673a\u4e0a\u4e4b\u540e\uff0c\u62f7\u8d1d\u76f8\u5173\u7684\u6587\u4ef6\u5230\u76ee\u5f55\u4e2d:","title":"Apk\u5b89\u88c5\u5230\b\u624b\u673a\u4e0a\u4e4b\u540e\u751f\u6210\u7684\u6587\u4ef6"},{"location":"android/flutter/apkfile/#flutterflutterflutterjar","text":"","title":"\b\b\u62f7\u8d1dFlutter\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u542f\u52a8flutter\uff1aflutter.jar"},{"location":"android/flutter/apkfile/#android-apk-flutter","text":"","title":"Android Apk \u8fd0\u884c\u65f6\u52a0\u8f7dFlutter\u4ee3\u7801"},{"location":"android/flutter/apkfile/#flutterandroid","text":"","title":"Flutter\u8c03\u7528Android\u539f\u751f\u63a5\u53e3"},{"location":"android/flutter/downEngine/","text":"\u4e0b\u8f7dFlutter engine \u6982\u8ff0 FlutterEngine\u662f\u6258\u7ba1\u5728Github\u4e0a\u7684\u5f00\u6e90\u5e93\uff0c\u53ef\u4ee5\u81ea\u7531\u4e0b\u8f7d: Flutter Engine\u662fGoogle\u5f00\u53d1\u7684\u6e90\u4ee3\u7801\u5de5\u7a0b\uff0c\u6258\u7ba1\u5728 Github \u4e0a\u6e90\u4ee3\u7801\u5de5\u7a0b\uff0cflutter \u5f15\u64ce\u4f7f\u7528depot_tools\u8fdb\u884c\u7ba1\u7406,\u5177\u4f53\u7684\u73af\u5883\u914d\u7f6e\u65b9\u6cd5\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u672c\u6587\u4e2d\u4e0d\u8fdb\u884c\u91cd\u590d\u7684\u8bf4\u660e\uff0c\u4e3b\u8981\u68b3\u7406\u4e0b\u8f7d\u7684\u6d41\u7a0b\uff0c\u907f\u514d\u5728\u4e0b\u8f7d\u6e90\u4ee3\u7801\u65f6\u51fa\u73b0\u9519\u8bef\u6709\u89e3\u51b3\u601d\u8def\u3002 depot_tools \u662fGoogle\u4e13\u95e8\u4e3a\u5f00\u53d1\u5927\u9879\u76ee\u5f00\u53d1\u7684 .git \u4ee3\u7801\u4ed3\u5e93\u7ba1\u7406\u7684 python \u811a\u672c\uff0c\u7edf\u4e00\u7ba1\u7406\u6574\u4e2a\u6e90\u7801\u4ed3\u5e93\u7684\u6240\u6709\u4f9d\u8d56 \u5f00\u59cb\u4e0b\u8f7d\u7f16\u8bd1\u6e90\u7801\u6211\u4eec\u9700\u8981\u638c\u63e1\u7684\u4e00\u4e9b\u5185\u5bb9\u6846\u67b6,\u5148\u641e\u6e05\u695a\u6574\u4e2a\u7f16\u8bd1\u9700\u8981\u7684\u539f\u6750\u6599\uff0c\u9488\u5bf9\u6027\u7684\u4e00\u4e2a\u4e00\u4e2a\u7a81\u7834 1.\u914d\u7f6eGit\u4ed3\u5e93\uff0cclone FlutterEngine\u7684\u6e90\u4ee3\u7801\u5230\u81ea\u5df1\u7684github\u8d26\u53f7\u4e0b 2.\u4e0b\u8f7d depot_tools \u6e90\u4ee3\u7801\u4f9d\u8d56\u5de5\u5177\uff0c\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u81ea\u5df1 Github \u4ee3\u7801\u4ed3\u5e93\u7684\u5730\u5740\uff0c\u67e5\u627e\u4f9d\u8d56\u6587\u4ef6 DEPS 3.gclient\u751f\u6210\u6574\u4e2a\u6e90\u4ee3\u7801\u7684\u4f9d\u8d56\u6587\u4ef6 gclient 1.flutterEngine \u6839\u76ee\u5f55\u4e0b\u7684`DEPS`\u6587\u4ef6 2.`engine/src/flutter/DEPS`\u76ee\u5f55\u4e0b\u7684\u4f9d\u8d56\u6587\u4ef6 3.`engine/src/third_party/dart/DEPS`\u76ee\u5f55\u4e0b\u7684\u4f9d\u8d56\u6587\u4ef6,[\u6dfb\u52a0Dart\u4f9d\u8d56\u5230\u6e90\u7801\u4ed3\u5e93](https://github.com/dart-lang/sdk/wiki/Adding-and-Updating-Dependencies) \u6838\u5fc3\u5185\u5bb9 1.\u5982\u4f55\u914d\u7f6egclient 2.gclient\u7684\u6267\u884c\u8fc7\u7a0b 3. DEPS \u76f8\u5173\u7684\u4f9d\u8d56\u6587\u4ef6\u8c03\u7528\u8fc7\u7a0b 4.\u5982\u679c\u63d0\u4ea4\u672c\u5730\u4fee\u6539 \u67e5\u770b\u5b98\u65b9\u6587\u6863\u8fdb\u884c\u73af\u5883\u914d\u7f6e 1.C++\u7f16\u8bd1\u5de5\u5177 2.git\u4ee3\u7801\u7ba1\u7406\u5de5\u5177 3.\u4ee3\u7801\u4e0b\u8f7d\u5de5\u5177 \u8be6\u7ec6\u7684\u8fc7\u7a0b\u53c2\u8003\u5b98\u65b9\u7684\u914d\u7f6e\u6587\u6863 1.\u76f8\u5173\u7684\u73af\u5883\u914d\u7f6e\u5de5\u5177\u53ef\u4ee5\u5728\u5b98\u65b9\u94fe\u63a5\u6587\u6863\u4e2d\u627e\u5230 \u73af\u5883\u8bbe\u7f6e 2.\u9879\u76ee\u4ed3\u5e93\u7ba1\u7406\u5de5\u5177 depot_tools\u4e0b\u8f7d\u914d\u7f6e\u73af\u5883 gclient sync \u7684\u6267\u884c\u8fc7\u7a0b 1.\u7ec8\u7aef\u547d\u4ee4\u914d\u7f6e gclient.py \u6587\u4ef6\u7684\u73af\u5883\u53d8\u91cf gclient sync 2.\u8bfb\u53d6engine\u76ee\u5f55\u4e0b\u521b\u5efa\u7684 .gclient \u6587\u4ef6 2.\u4e0b\u8f7d git@github.com: your_name_here /engine.git \u4ee3\u7801\u4ed3\u5e93 2.\u67e5\u627e src/flutter \u4e0b\u7684 deps \u6587\u4ef6\u8fdb\u884c\u4f9d\u8d56\u6587\u4ef6\u4e0b\u8f7d\uff0c\u5e76\u884c\u6267\u884c\u76f8\u5173\u7684Python\u6587\u4ef6 3.\u6267\u884c src/tools \u4e0b\u7684\u6240\u6709 py \u6587\u4ef6\uff0c\u5f00\u59cb\u67e5\u627e src/third_party/dart/DEPS \u6587\u4ef6\uff0c\u5e76\u6267\u884c\u76f8\u5173\u7684\u6e90\u7801\u64cd\u4f5c \u4e0a\u9762\u4e09\u6b65\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u6240\u6709\u7684\u6e90\u4ee3\u7801\u5df2\u7ecf\u4e0b\u8f7d\u5b8c\u6210\uff0c\u53ef\u8fdb\u884c\u7f16\u8bd1\u64cd\u4f5c gclient sync \u5982\u4f55\u6267\u884c flutter\u662f\u901a\u8fc7 depot_tools \u5de5\u5177\u8fdb\u884c\u7ba1\u7406\uff0c\u5728\u5b98\u65b9\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u914d\u7f6e\u4e86\u76f8\u5173\u7684\u73af\u5883 touch .gclient \u586b\u5199\u4e0b\u5217\u7684\u5730\u5740 solutions = [ { managed : False, name : src/flutter , url : git@github.com: lt;your_name_here gt;/engine.git , custom_deps : {}, deps_file : DEPS , safesync_url : , }, ] gclient sync \u9996\u5148\u4e0b\u8f7d git@github.com: your_name_here /engine.git \u4ee3\u7801\u4ed3\u5e93\uff0c\u7136\u540e\u67e5\u627e\uff0c\u4f7f\u7528 src/flutter\u4e2d\u7684DEPS \u6587\u4ef6\u8fdb\u884c\u4f9d\u8d56\u4e0b\u8f7d\uff0c\u5305\u62ec\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e0b\u8f7d\u5173\u8054\u7684 git \u4ee3\u7801\u4ed3\u5e93\u4e4b\u540e\uff0c\u5b89\u88c5 DESP\u4e2d\u7684 hook\u6587\u4ef6\u7684\u914d\u7f6e\u6267\u884c\u76f8\u5e94\u7684 python \u811a\u672c\u6587\u4ef6,\u5728 src/Flutter/DEPS \u6587\u4ef6\u6267\u884c\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\u811a\u672c\u662f\u6267\u884c src/tools \u76ee\u5f55\u4e0b\u7684\u6240\u6709 Python \u6587\u4ef6\uff0c\u63a5\u7740\u67e5\u627e src/third_party/dart/DEPS \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6267\u884c\u76f8\u5173\u7684\u4f9d\u8d56\u4e0b\u8f7d,\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u4e0a\u6587\u4e2d\u63d0\u5230\u7684\u4e09\u4e2a DEPS \u6587\u4ef6\uff0c\u5c31\u80fd\u591f\u8ddf\u4e2d\u5230\u6574\u4e2a\u9879\u76ee\u4e0b\u8f7d\u7684\u8def\u7a0b\uff0c\u5728\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0\u4e00\u4e0b\u7248\u672c\u4e0d\u6b63\u5e38\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u5728 DEPS \u6587\u4ef6\u4e2d\u4fee\u6539\u76f8\u5e94\u7684\u7248\u672c\u53f7\u5728\u8fdb\u884c\u4e0b\u8f7d \u4e0b\u5217\u4ee3\u7801\u662f\u66f4\u65b0Dart\u76f8\u5173\u7684\u6587\u4ef6\u8c03\u7528\u7684\uff0c\u540c\u65f6\u4f1a\u6267\u884c src/third_party/dart/DEPS { # Ensure that we don t accidentally reference any .pyc files whose # corresponding .py files have already been deleted. name : remove_stale_pyc_files , pattern : src/tools/.*\\\\.py , action : [ python , src/tools/remove_stale_pyc_files.py , src/tools , ], }, gclient sync \u4f9d\u8d56\u6587\u4ef6 \u5168\u5c40\u516c\u5171\u7684\u4f9d\u8d56: Flutter \u6839\u76ee\u5f55\u4e0b\u7684DEPS \u4e0d\u540c\u5e73\u53f0\u4e0b\u7684Dart \u76f8\u5173\u7684\u4f9d\u8d56: Dart\u4f9d\u8d56 \u66f4\u65b0Dart\u4f9d\u8d56 DEPS \u5305\u542b \u5728\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u4e0b\u8f7dGit\u4ee3\u7801\u4ed3\u5e93\uff0c\u6709\u4e00\u4e9b\u9700\u8981\u903b\u8f91\u5904\u7406\u7684\u6587\u4ef6\u901a\u8fc7\u6267\u884cPython\u811a\u672c\u6765\u5b8c\u6210\uff0c\u4e0b\u9762\u51e0\u4e2a\u6838\u5fc3\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u63d0\u53d6\u51fa\u51fa\u6765\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ddf\u8e2a\u4e00\u4e0b\uff0c\u4f9d\u8d56\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u66f4\u80fd\u591f\u7406\u89e3\uff0c\u6574\u4e2a\u6e90\u7801\u76ee\u5f55\u4e0b\u8f7d\u4e86\u90a3\u4e9b\u6587\u4ef6\uff0c\u6709\u4e00\u4e2a\u6846\u67b6\u6027\u7684\u8ba4\u8bc6 vars\uff1a\u6307\u5b9a\u9700\u8981\u4e0b\u8f7d\u7684git\u4ed3\u5e93 deps:\u4f9d\u8d56\u7684\u4ee3\u7801\u5e93 hooks:\u4e0b\u8f7d\u5b8c\u6210\u540e\u6267\u884c\u76f8\u5173\u811a\u672c( \u91cd\u70b9\u8ddf\u8e2a\u7684\u8fc7\u7a0b ) 1.src/build/landmines.py 2.src/build/vs_toolchain.py 3.src/tools/dart/update.py 4.../../../third_party/dart/tools/sdks/dart-sdk/bin/pub 5.src/tools/android/android_sdk_downloader/lib/main.dart 6.src/flutter/tools/android_support/download_android_support.py 7.src/tools/buildtools/update.py 8.flutter/tools/generate_package_files.py 9.src/tools/.*\\.py 10.download_from_google_storage \u6e90\u4ee3\u7801\u7684\u8fdb\u5ea6\u4fdd\u5b58 .gclient_entries gclient sync\u5728\u4e0b\u8f7d\u6e90\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5305\u4e0b\u8f7d\u7684\u6587\u4ef6\u4fdd\u5b58\u5728\u6267\u884c.gclient\u6587\u4ef6\u5939\u4e0b \u279c engine la total 32 -rw-r--r-- 1 cangck staff 196B 11 15 22:29 .gclient -rw-r--r-- 1 cangck staff 9.5K 11 17 22:05 .gclient_entries drwxr-xr-x 5 cangck staff 160B 11 20 00:10 .vscode drwxr-xr-x 21 cangck staff 672B 11 20 00:59 src \u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u6bcf\u4e00\u9879\u662f\u4e00\u4e2a\u6e90\u7801\u4ed3\u5e93\u5730\u5740@\u7248\u672c\u53f7\u6216\u8005\u662fgit commitid src : https://github.com/flutter/buildroot.git@7f64ff4928e7106cd8d81c6397fba4b7c1cdbb96 , src/buildtools : https://fuchsia.googlesource.com/buildtools@bac220c15490dcf7b7d8136f75100bbc77e8d217 , src/ios_tools : https://chromium.googlesource.com/chromium/src/ios.git@69b7c1b160e7107a6a98d948363772dc9caea46f , src/third_party/benchmark : https://fuchsia.googlesource.com/third_party/benchmark@21f1eb3fe269ea43eba862bf6b699cde46587ade , src/third_party/boringssl : https://github.com/dart-lang/boringssl_gen.git@bbf52f18f425e29b1185f2f6753bec02ed8c5880 , src/third_party/boringssl/src : https://boringssl.googlesource.com/boringssl.git@702e2b6d3831486535e958f262a05c75a5cb312e , src/third_party/colorama/src : https://chromium.googlesource.com/external/colorama.git@799604a1041e9b3bc5d2789ecbd7e8db2e18e6b8 , \u4e0b\u8f7d\u6e90\u4ee3\u7801\u9519\u8bef\u5904\u7406 Running hooks: 50 % ( 5 /10 ) download_android_tools ________ running src/third_party/dart/tools/sdks/dart-sdk/bin/dart --enable-asserts src/tools/android/android_sdk_downloader/lib/main.dart -y --out=src/third_party/android_tools --platform=28 --platform-revision=6 --build-tools-version=28.0.3 --platform-tools-version=28.0.1 --tools-version=26.1.1 --ndk-version=19.1.5304403 in /Users/cangck/engine src/tools/android/android_sdk_downloader/lib/main.dart:1: Warning: Interpreting this as package URI, package:android_sdk_downloader/main.dart . Downloading Android SDK and NDK artifacts... SDK Platform 28 : 100 % SDK Build-Tools 28 .0.3: 100 % SDK Tools: 100 % Downloads complete. Unhandled exception: Bad state: Could not find package matching arguments: Instance of OptionsRevision , OSType.mac, null #0 downloadArchive (package:android_sdk_downloader/src/http.dart:94:5) asynchronous suspension #1 main (package:android_sdk_downloader/main.dart:159:15) #2 _RootZone.runUnary (dart:async/zone.dart:1379:54) #3 _FutureListener.handleValue (dart:async/future_impl.dart:129:18) #4 Future._propagateToListeners.handleValueCallback (dart:async/future_impl.dart:642:45) #5 Future._propagateToListeners (dart:async/future_impl.dart:671:32) #6 Future._complete (dart:async/future_impl.dart:476:7) #7 _SyncCompleter.complete (dart:async/future_impl.dart:51:12) #8 _AsyncAwaitCompleter.complete. anonymous closure (dart:async/runtime/libasync_patch.dart:33:20) #9 _microtaskLoop (dart:async/schedule_microtask.dart:41:21) #10 _startMicrotaskLoop (dart:async/schedule_microtask.dart:50:5) #11 _runPendingImmediateCallback (dart:isolate/runtime/libisolate_patch.dart:115:13) #12 _RawReceivePortImpl._handleMessage (dart:isolate/runtime/libisolate_patch.dart:172:5) Error: Command src/third_party/dart/tools/sdks/dart-sdk/bin/dart --enable-asserts src/tools/android/android_sdk_downloader/lib/main.dart -y --out=src/third_party/android_tools --platform=28 --platform-revision=6 --build-tools-version=28.0.3 --platform-tools-version=28.0.1 --tools-version=26.1.1 --ndk-version=19.1.5304403 returned non-zero exit status 255 in /Users/cangck/engine Hook src/third_party/dart/tools/sdks/dart-sdk/bin/dart --enable-asserts src/tools/android/android_sdk_downloader/lib/main.dart -y --out=src/third_party/android_tools --platform=28 --platform-revision=6 --build-tools-version=28.0.3 --platform-tools-version=28.0.1 --tools-version=26.1.1 --ndk-version=19.1.5304403 took 108 .58 secs \u4e0a\u9762\u7684\u9519\u8bef\u65f6\u5728\u503c\u5f97 src/flutter/DEPS \u4e2d\u7684\u6587\u4ef6\u65f6\uff0cAndroid\u7684\u5f00\u53d1\u7248\u672c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ca1\u6709\u627e\u5230 \u89e3\u51b3\u65b9\u6848\u4fee\u6539 src/flutter/DEPS \u4e2d\u7684\u7248\u672c\u7248\u672c\uff0c\u5982\u4f55\u6267\u884c gclient sync \u4e00\u5207\u4e0b\u8f7d\u6b63\u5e38 \u67e5\u770b\u6e90\u7801\u76ee\u5f55\u4e0b\u7684\u76f8\u5173\u6587\u4ef6\uff0c\u53ef\u4ee5\u627e\u5230\u4fdd\u5b58\u7684\u5730\u65b9 src/tools/android/android_sdk_downloader/lib/main.dart { name : download_android_tools , pattern : . , condition : host_os == mac or host_os == linux , action : [ src/third_party/dart/tools/sdks/dart-sdk/bin/dart , # this hook _must_ be run _after_ the dart hook. --enable-asserts , src/tools/android/android_sdk_downloader/lib/main.dart , -y , # Accept licenses --out=src/third_party/android_tools , --platform=28 , --platform-revision=6 , --build-tools-version=28.0.3 , --platform-tools-version=29.0.5 , --tools-version=25.2.5 , --ndk-version=21.0.5935234 ] , } , \u603b\u7ed3 \u5728\u5f00\u59cb\u7f16\u8bd1\u5f15\u64ce\u4e4b\u524d\uff0c\u5f53\u7136\u662f\u8981\u5148\u628a\u76f8\u5173\u7684\u73af\u5883\u5b89\u88c5\u597d\uff0c\u4e86\u89e3\u6574\u4e2a\u6e90\u4ee3\u7801\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u548c\u5927\u6982\u7684\u903b\u8f91\uff0c\u5b66\u4e60\u662f\u4e00\u4e2a\u5faa\u5e8f\u6e10\u8fdb\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u6574\u4e2a\u6e90\u4ee3\u7801\u4e0b\u8f7d\u76f8\u5173\u7684\u903b\u8f91\u548c\u8fd9\u4e9b\u8fc7\u7a0b\uff0c\u628a\u63e1\u4f4f\u6838\u5fc3\u6982\u5ff5\u548c\u6b65\u9aa4\uff0c\u5728\u6574\u4e2a\u6e90\u7801\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\uff0c\u53ef\u4ee5\u6b63\u5bf9\u6027\u7684\u53bb\u89e3\u51b3\u51fa\u73b0\u7684\u95ee\u9898 \u505a\u6280\u672f\u7684\u6838\u5fc3\u601d\u60f3\u4e0d\u662f\u4f60\u638c\u63e1\u4e86\u591a\u5c11\u77e5\u8bc6\uff0c\u800c\u662f\u6709\u591a\u5c11\u4ea7\u51fa\uff0c\u5728\u7814\u53d1\u7684\u8fc7\u7a0b\u4e2d\u7531\u4e8e\u73af\u5883\u7684\u53d8\u5316\u6216\u8005\u662f\u9700\u6c42\u7684\u53d8\u5316\uff0c\u5bfc\u81f4bug\u7684\u89e3\u51b3\u65f6\u95f4\u8fdc\u8fdc\u5927\u4e8e\u5f00\u53d1\u6838\u5fc3\u4ee3\u7801\u7684\u65f6\u95f4\uff0c\u5728\u51fa\u73b0\u95ee\u9898\u662f\u5f80\u5f80\u4e0d\u662f\u5bf9\u5b9a\u4f4d\u7684\u95ee\u9898\u4e0d\u80fd\u89e3\u51b3\uff0c\u800c\u662f\u627e\u4e0d\u5230\u5b9a\u4f4d\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u65e0\u4ece\u4e0b\u624b\uff0c\u672c\u7cfb\u5217\u5206\u4eab\u4e3b\u8981\u662f\u4ee5\u6846\u67b6\u548c\u601d\u8def\u4e3a\u4e3b\uff0c\u4f1a\u5b9a\u4f4d\u6574\u4e2a\u6e90\u7801\u6838\u5fc3\u529f\u80fd\u548c\u5173\u952e\u6b65\u9aa4\uff0c\u4e0d\u4f1a\u5bf9\u7ec6\u8282\u5206\u6790\u7684\u66f4\u591a\uff0clinux\u4e4b\u7236\u7684\u540d\u8a00\uff0c\u5f00\u53d1\u4ee3\u7801\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f Review Fuck Source Code","title":"Engine\u6e90\u4ee3\u7801\u4e0b\u8f7d"},{"location":"android/flutter/downEngine/#flutter-engine","text":"","title":"\u4e0b\u8f7dFlutter engine"},{"location":"android/flutter/downEngine/#_1","text":"FlutterEngine\u662f\u6258\u7ba1\u5728Github\u4e0a\u7684\u5f00\u6e90\u5e93\uff0c\u53ef\u4ee5\u81ea\u7531\u4e0b\u8f7d: Flutter Engine\u662fGoogle\u5f00\u53d1\u7684\u6e90\u4ee3\u7801\u5de5\u7a0b\uff0c\u6258\u7ba1\u5728 Github \u4e0a\u6e90\u4ee3\u7801\u5de5\u7a0b\uff0cflutter \u5f15\u64ce\u4f7f\u7528depot_tools\u8fdb\u884c\u7ba1\u7406,\u5177\u4f53\u7684\u73af\u5883\u914d\u7f6e\u65b9\u6cd5\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u672c\u6587\u4e2d\u4e0d\u8fdb\u884c\u91cd\u590d\u7684\u8bf4\u660e\uff0c\u4e3b\u8981\u68b3\u7406\u4e0b\u8f7d\u7684\u6d41\u7a0b\uff0c\u907f\u514d\u5728\u4e0b\u8f7d\u6e90\u4ee3\u7801\u65f6\u51fa\u73b0\u9519\u8bef\u6709\u89e3\u51b3\u601d\u8def\u3002 depot_tools \u662fGoogle\u4e13\u95e8\u4e3a\u5f00\u53d1\u5927\u9879\u76ee\u5f00\u53d1\u7684 .git \u4ee3\u7801\u4ed3\u5e93\u7ba1\u7406\u7684 python \u811a\u672c\uff0c\u7edf\u4e00\u7ba1\u7406\u6574\u4e2a\u6e90\u7801\u4ed3\u5e93\u7684\u6240\u6709\u4f9d\u8d56 \u5f00\u59cb\u4e0b\u8f7d\u7f16\u8bd1\u6e90\u7801\u6211\u4eec\u9700\u8981\u638c\u63e1\u7684\u4e00\u4e9b\u5185\u5bb9\u6846\u67b6,\u5148\u641e\u6e05\u695a\u6574\u4e2a\u7f16\u8bd1\u9700\u8981\u7684\u539f\u6750\u6599\uff0c\u9488\u5bf9\u6027\u7684\u4e00\u4e2a\u4e00\u4e2a\u7a81\u7834 1.\u914d\u7f6eGit\u4ed3\u5e93\uff0cclone FlutterEngine\u7684\u6e90\u4ee3\u7801\u5230\u81ea\u5df1\u7684github\u8d26\u53f7\u4e0b 2.\u4e0b\u8f7d depot_tools \u6e90\u4ee3\u7801\u4f9d\u8d56\u5de5\u5177\uff0c\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u81ea\u5df1 Github \u4ee3\u7801\u4ed3\u5e93\u7684\u5730\u5740\uff0c\u67e5\u627e\u4f9d\u8d56\u6587\u4ef6 DEPS 3.gclient\u751f\u6210\u6574\u4e2a\u6e90\u4ee3\u7801\u7684\u4f9d\u8d56\u6587\u4ef6 gclient 1.flutterEngine \u6839\u76ee\u5f55\u4e0b\u7684`DEPS`\u6587\u4ef6 2.`engine/src/flutter/DEPS`\u76ee\u5f55\u4e0b\u7684\u4f9d\u8d56\u6587\u4ef6 3.`engine/src/third_party/dart/DEPS`\u76ee\u5f55\u4e0b\u7684\u4f9d\u8d56\u6587\u4ef6,[\u6dfb\u52a0Dart\u4f9d\u8d56\u5230\u6e90\u7801\u4ed3\u5e93](https://github.com/dart-lang/sdk/wiki/Adding-and-Updating-Dependencies)","title":"\u6982\u8ff0"},{"location":"android/flutter/downEngine/#_2","text":"1.\u5982\u4f55\u914d\u7f6egclient 2.gclient\u7684\u6267\u884c\u8fc7\u7a0b 3. DEPS \u76f8\u5173\u7684\u4f9d\u8d56\u6587\u4ef6\u8c03\u7528\u8fc7\u7a0b 4.\u5982\u679c\u63d0\u4ea4\u672c\u5730\u4fee\u6539","title":"\u6838\u5fc3\u5185\u5bb9"},{"location":"android/flutter/downEngine/#_3","text":"1.C++\u7f16\u8bd1\u5de5\u5177 2.git\u4ee3\u7801\u7ba1\u7406\u5de5\u5177 3.\u4ee3\u7801\u4e0b\u8f7d\u5de5\u5177 \u8be6\u7ec6\u7684\u8fc7\u7a0b\u53c2\u8003\u5b98\u65b9\u7684\u914d\u7f6e\u6587\u6863 1.\u76f8\u5173\u7684\u73af\u5883\u914d\u7f6e\u5de5\u5177\u53ef\u4ee5\u5728\u5b98\u65b9\u94fe\u63a5\u6587\u6863\u4e2d\u627e\u5230 \u73af\u5883\u8bbe\u7f6e 2.\u9879\u76ee\u4ed3\u5e93\u7ba1\u7406\u5de5\u5177 depot_tools\u4e0b\u8f7d\u914d\u7f6e\u73af\u5883","title":"\u67e5\u770b\u5b98\u65b9\u6587\u6863\u8fdb\u884c\u73af\u5883\u914d\u7f6e"},{"location":"android/flutter/downEngine/#gclient-sync","text":"1.\u7ec8\u7aef\u547d\u4ee4\u914d\u7f6e gclient.py \u6587\u4ef6\u7684\u73af\u5883\u53d8\u91cf gclient sync 2.\u8bfb\u53d6engine\u76ee\u5f55\u4e0b\u521b\u5efa\u7684 .gclient \u6587\u4ef6 2.\u4e0b\u8f7d git@github.com: your_name_here /engine.git \u4ee3\u7801\u4ed3\u5e93 2.\u67e5\u627e src/flutter \u4e0b\u7684 deps \u6587\u4ef6\u8fdb\u884c\u4f9d\u8d56\u6587\u4ef6\u4e0b\u8f7d\uff0c\u5e76\u884c\u6267\u884c\u76f8\u5173\u7684Python\u6587\u4ef6 3.\u6267\u884c src/tools \u4e0b\u7684\u6240\u6709 py \u6587\u4ef6\uff0c\u5f00\u59cb\u67e5\u627e src/third_party/dart/DEPS \u6587\u4ef6\uff0c\u5e76\u6267\u884c\u76f8\u5173\u7684\u6e90\u7801\u64cd\u4f5c \u4e0a\u9762\u4e09\u6b65\u6267\u884c\u5b8c\u6210\u4e4b\u540e\uff0c\u6240\u6709\u7684\u6e90\u4ee3\u7801\u5df2\u7ecf\u4e0b\u8f7d\u5b8c\u6210\uff0c\u53ef\u8fdb\u884c\u7f16\u8bd1\u64cd\u4f5c","title":"gclient sync \u7684\u6267\u884c\u8fc7\u7a0b"},{"location":"android/flutter/downEngine/#gclient-sync_1","text":"flutter\u662f\u901a\u8fc7 depot_tools \u5de5\u5177\u8fdb\u884c\u7ba1\u7406\uff0c\u5728\u5b98\u65b9\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u914d\u7f6e\u4e86\u76f8\u5173\u7684\u73af\u5883 touch .gclient \u586b\u5199\u4e0b\u5217\u7684\u5730\u5740 solutions = [ { managed : False, name : src/flutter , url : git@github.com: lt;your_name_here gt;/engine.git , custom_deps : {}, deps_file : DEPS , safesync_url : , }, ] gclient sync \u9996\u5148\u4e0b\u8f7d git@github.com: your_name_here /engine.git \u4ee3\u7801\u4ed3\u5e93\uff0c\u7136\u540e\u67e5\u627e\uff0c\u4f7f\u7528 src/flutter\u4e2d\u7684DEPS \u6587\u4ef6\u8fdb\u884c\u4f9d\u8d56\u4e0b\u8f7d\uff0c\u5305\u62ec\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e0b\u8f7d\u5173\u8054\u7684 git \u4ee3\u7801\u4ed3\u5e93\u4e4b\u540e\uff0c\u5b89\u88c5 DESP\u4e2d\u7684 hook\u6587\u4ef6\u7684\u914d\u7f6e\u6267\u884c\u76f8\u5e94\u7684 python \u811a\u672c\u6587\u4ef6,\u5728 src/Flutter/DEPS \u6587\u4ef6\u6267\u884c\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\u811a\u672c\u662f\u6267\u884c src/tools \u76ee\u5f55\u4e0b\u7684\u6240\u6709 Python \u6587\u4ef6\uff0c\u63a5\u7740\u67e5\u627e src/third_party/dart/DEPS \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6267\u884c\u76f8\u5173\u7684\u4f9d\u8d56\u4e0b\u8f7d,\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u4e0a\u6587\u4e2d\u63d0\u5230\u7684\u4e09\u4e2a DEPS \u6587\u4ef6\uff0c\u5c31\u80fd\u591f\u8ddf\u4e2d\u5230\u6574\u4e2a\u9879\u76ee\u4e0b\u8f7d\u7684\u8def\u7a0b\uff0c\u5728\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0\u4e00\u4e0b\u7248\u672c\u4e0d\u6b63\u5e38\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u5728 DEPS \u6587\u4ef6\u4e2d\u4fee\u6539\u76f8\u5e94\u7684\u7248\u672c\u53f7\u5728\u8fdb\u884c\u4e0b\u8f7d \u4e0b\u5217\u4ee3\u7801\u662f\u66f4\u65b0Dart\u76f8\u5173\u7684\u6587\u4ef6\u8c03\u7528\u7684\uff0c\u540c\u65f6\u4f1a\u6267\u884c src/third_party/dart/DEPS { # Ensure that we don t accidentally reference any .pyc files whose # corresponding .py files have already been deleted. name : remove_stale_pyc_files , pattern : src/tools/.*\\\\.py , action : [ python , src/tools/remove_stale_pyc_files.py , src/tools , ], },","title":"gclient sync \u5982\u4f55\u6267\u884c"},{"location":"android/flutter/downEngine/#gclient-sync_2","text":"\u5168\u5c40\u516c\u5171\u7684\u4f9d\u8d56: Flutter \u6839\u76ee\u5f55\u4e0b\u7684DEPS \u4e0d\u540c\u5e73\u53f0\u4e0b\u7684Dart \u76f8\u5173\u7684\u4f9d\u8d56: Dart\u4f9d\u8d56 \u66f4\u65b0Dart\u4f9d\u8d56","title":"gclient sync \u4f9d\u8d56\u6587\u4ef6"},{"location":"android/flutter/downEngine/#deps","text":"\u5728\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u4e0b\u8f7dGit\u4ee3\u7801\u4ed3\u5e93\uff0c\u6709\u4e00\u4e9b\u9700\u8981\u903b\u8f91\u5904\u7406\u7684\u6587\u4ef6\u901a\u8fc7\u6267\u884cPython\u811a\u672c\u6765\u5b8c\u6210\uff0c\u4e0b\u9762\u51e0\u4e2a\u6838\u5fc3\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u63d0\u53d6\u51fa\u51fa\u6765\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ddf\u8e2a\u4e00\u4e0b\uff0c\u4f9d\u8d56\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u66f4\u80fd\u591f\u7406\u89e3\uff0c\u6574\u4e2a\u6e90\u7801\u76ee\u5f55\u4e0b\u8f7d\u4e86\u90a3\u4e9b\u6587\u4ef6\uff0c\u6709\u4e00\u4e2a\u6846\u67b6\u6027\u7684\u8ba4\u8bc6 vars\uff1a\u6307\u5b9a\u9700\u8981\u4e0b\u8f7d\u7684git\u4ed3\u5e93 deps:\u4f9d\u8d56\u7684\u4ee3\u7801\u5e93 hooks:\u4e0b\u8f7d\u5b8c\u6210\u540e\u6267\u884c\u76f8\u5173\u811a\u672c( \u91cd\u70b9\u8ddf\u8e2a\u7684\u8fc7\u7a0b ) 1.src/build/landmines.py 2.src/build/vs_toolchain.py 3.src/tools/dart/update.py 4.../../../third_party/dart/tools/sdks/dart-sdk/bin/pub 5.src/tools/android/android_sdk_downloader/lib/main.dart 6.src/flutter/tools/android_support/download_android_support.py 7.src/tools/buildtools/update.py 8.flutter/tools/generate_package_files.py 9.src/tools/.*\\.py 10.download_from_google_storage","title":"DEPS \u5305\u542b"},{"location":"android/flutter/downEngine/#gclient_entries","text":"gclient sync\u5728\u4e0b\u8f7d\u6e90\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5305\u4e0b\u8f7d\u7684\u6587\u4ef6\u4fdd\u5b58\u5728\u6267\u884c.gclient\u6587\u4ef6\u5939\u4e0b \u279c engine la total 32 -rw-r--r-- 1 cangck staff 196B 11 15 22:29 .gclient -rw-r--r-- 1 cangck staff 9.5K 11 17 22:05 .gclient_entries drwxr-xr-x 5 cangck staff 160B 11 20 00:10 .vscode drwxr-xr-x 21 cangck staff 672B 11 20 00:59 src \u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u6bcf\u4e00\u9879\u662f\u4e00\u4e2a\u6e90\u7801\u4ed3\u5e93\u5730\u5740@\u7248\u672c\u53f7\u6216\u8005\u662fgit commitid src : https://github.com/flutter/buildroot.git@7f64ff4928e7106cd8d81c6397fba4b7c1cdbb96 , src/buildtools : https://fuchsia.googlesource.com/buildtools@bac220c15490dcf7b7d8136f75100bbc77e8d217 , src/ios_tools : https://chromium.googlesource.com/chromium/src/ios.git@69b7c1b160e7107a6a98d948363772dc9caea46f , src/third_party/benchmark : https://fuchsia.googlesource.com/third_party/benchmark@21f1eb3fe269ea43eba862bf6b699cde46587ade , src/third_party/boringssl : https://github.com/dart-lang/boringssl_gen.git@bbf52f18f425e29b1185f2f6753bec02ed8c5880 , src/third_party/boringssl/src : https://boringssl.googlesource.com/boringssl.git@702e2b6d3831486535e958f262a05c75a5cb312e , src/third_party/colorama/src : https://chromium.googlesource.com/external/colorama.git@799604a1041e9b3bc5d2789ecbd7e8db2e18e6b8 ,","title":"\u6e90\u4ee3\u7801\u7684\u8fdb\u5ea6\u4fdd\u5b58.gclient_entries"},{"location":"android/flutter/downEngine/#_4","text":"Running hooks: 50 % ( 5 /10 ) download_android_tools ________ running src/third_party/dart/tools/sdks/dart-sdk/bin/dart --enable-asserts src/tools/android/android_sdk_downloader/lib/main.dart -y --out=src/third_party/android_tools --platform=28 --platform-revision=6 --build-tools-version=28.0.3 --platform-tools-version=28.0.1 --tools-version=26.1.1 --ndk-version=19.1.5304403 in /Users/cangck/engine src/tools/android/android_sdk_downloader/lib/main.dart:1: Warning: Interpreting this as package URI, package:android_sdk_downloader/main.dart . Downloading Android SDK and NDK artifacts... SDK Platform 28 : 100 % SDK Build-Tools 28 .0.3: 100 % SDK Tools: 100 % Downloads complete. Unhandled exception: Bad state: Could not find package matching arguments: Instance of OptionsRevision , OSType.mac, null #0 downloadArchive (package:android_sdk_downloader/src/http.dart:94:5) asynchronous suspension #1 main (package:android_sdk_downloader/main.dart:159:15) #2 _RootZone.runUnary (dart:async/zone.dart:1379:54) #3 _FutureListener.handleValue (dart:async/future_impl.dart:129:18) #4 Future._propagateToListeners.handleValueCallback (dart:async/future_impl.dart:642:45) #5 Future._propagateToListeners (dart:async/future_impl.dart:671:32) #6 Future._complete (dart:async/future_impl.dart:476:7) #7 _SyncCompleter.complete (dart:async/future_impl.dart:51:12) #8 _AsyncAwaitCompleter.complete. anonymous closure (dart:async/runtime/libasync_patch.dart:33:20) #9 _microtaskLoop (dart:async/schedule_microtask.dart:41:21) #10 _startMicrotaskLoop (dart:async/schedule_microtask.dart:50:5) #11 _runPendingImmediateCallback (dart:isolate/runtime/libisolate_patch.dart:115:13) #12 _RawReceivePortImpl._handleMessage (dart:isolate/runtime/libisolate_patch.dart:172:5) Error: Command src/third_party/dart/tools/sdks/dart-sdk/bin/dart --enable-asserts src/tools/android/android_sdk_downloader/lib/main.dart -y --out=src/third_party/android_tools --platform=28 --platform-revision=6 --build-tools-version=28.0.3 --platform-tools-version=28.0.1 --tools-version=26.1.1 --ndk-version=19.1.5304403 returned non-zero exit status 255 in /Users/cangck/engine Hook src/third_party/dart/tools/sdks/dart-sdk/bin/dart --enable-asserts src/tools/android/android_sdk_downloader/lib/main.dart -y --out=src/third_party/android_tools --platform=28 --platform-revision=6 --build-tools-version=28.0.3 --platform-tools-version=28.0.1 --tools-version=26.1.1 --ndk-version=19.1.5304403 took 108 .58 secs \u4e0a\u9762\u7684\u9519\u8bef\u65f6\u5728\u503c\u5f97 src/flutter/DEPS \u4e2d\u7684\u6587\u4ef6\u65f6\uff0cAndroid\u7684\u5f00\u53d1\u7248\u672c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ca1\u6709\u627e\u5230","title":"\u4e0b\u8f7d\u6e90\u4ee3\u7801\u9519\u8bef\u5904\u7406"},{"location":"android/flutter/downEngine/#srcflutterdepsgclient-sync","text":"\u67e5\u770b\u6e90\u7801\u76ee\u5f55\u4e0b\u7684\u76f8\u5173\u6587\u4ef6\uff0c\u53ef\u4ee5\u627e\u5230\u4fdd\u5b58\u7684\u5730\u65b9 src/tools/android/android_sdk_downloader/lib/main.dart { name : download_android_tools , pattern : . , condition : host_os == mac or host_os == linux , action : [ src/third_party/dart/tools/sdks/dart-sdk/bin/dart , # this hook _must_ be run _after_ the dart hook. --enable-asserts , src/tools/android/android_sdk_downloader/lib/main.dart , -y , # Accept licenses --out=src/third_party/android_tools , --platform=28 , --platform-revision=6 , --build-tools-version=28.0.3 , --platform-tools-version=29.0.5 , --tools-version=25.2.5 , --ndk-version=21.0.5935234 ] , } ,","title":"\u89e3\u51b3\u65b9\u6848\u4fee\u6539src/flutter/DEPS\u4e2d\u7684\u7248\u672c\u7248\u672c\uff0c\u5982\u4f55\u6267\u884cgclient sync\u4e00\u5207\u4e0b\u8f7d\u6b63\u5e38"},{"location":"android/flutter/downEngine/#_5","text":"\u5728\u5f00\u59cb\u7f16\u8bd1\u5f15\u64ce\u4e4b\u524d\uff0c\u5f53\u7136\u662f\u8981\u5148\u628a\u76f8\u5173\u7684\u73af\u5883\u5b89\u88c5\u597d\uff0c\u4e86\u89e3\u6574\u4e2a\u6e90\u4ee3\u7801\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u548c\u5927\u6982\u7684\u903b\u8f91\uff0c\u5b66\u4e60\u662f\u4e00\u4e2a\u5faa\u5e8f\u6e10\u8fdb\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5148\u4e86\u89e3\u6574\u4e2a\u6e90\u4ee3\u7801\u4e0b\u8f7d\u76f8\u5173\u7684\u903b\u8f91\u548c\u8fd9\u4e9b\u8fc7\u7a0b\uff0c\u628a\u63e1\u4f4f\u6838\u5fc3\u6982\u5ff5\u548c\u6b65\u9aa4\uff0c\u5728\u6574\u4e2a\u6e90\u7801\u4e0b\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\uff0c\u53ef\u4ee5\u6b63\u5bf9\u6027\u7684\u53bb\u89e3\u51b3\u51fa\u73b0\u7684\u95ee\u9898 \u505a\u6280\u672f\u7684\u6838\u5fc3\u601d\u60f3\u4e0d\u662f\u4f60\u638c\u63e1\u4e86\u591a\u5c11\u77e5\u8bc6\uff0c\u800c\u662f\u6709\u591a\u5c11\u4ea7\u51fa\uff0c\u5728\u7814\u53d1\u7684\u8fc7\u7a0b\u4e2d\u7531\u4e8e\u73af\u5883\u7684\u53d8\u5316\u6216\u8005\u662f\u9700\u6c42\u7684\u53d8\u5316\uff0c\u5bfc\u81f4bug\u7684\u89e3\u51b3\u65f6\u95f4\u8fdc\u8fdc\u5927\u4e8e\u5f00\u53d1\u6838\u5fc3\u4ee3\u7801\u7684\u65f6\u95f4\uff0c\u5728\u51fa\u73b0\u95ee\u9898\u662f\u5f80\u5f80\u4e0d\u662f\u5bf9\u5b9a\u4f4d\u7684\u95ee\u9898\u4e0d\u80fd\u89e3\u51b3\uff0c\u800c\u662f\u627e\u4e0d\u5230\u5b9a\u4f4d\u95ee\u9898\u7684\u65b9\u6cd5\uff0c\u65e0\u4ece\u4e0b\u624b\uff0c\u672c\u7cfb\u5217\u5206\u4eab\u4e3b\u8981\u662f\u4ee5\u6846\u67b6\u548c\u601d\u8def\u4e3a\u4e3b\uff0c\u4f1a\u5b9a\u4f4d\u6574\u4e2a\u6e90\u7801\u6838\u5fc3\u529f\u80fd\u548c\u5173\u952e\u6b65\u9aa4\uff0c\u4e0d\u4f1a\u5bf9\u7ec6\u8282\u5206\u6790\u7684\u66f4\u591a\uff0clinux\u4e4b\u7236\u7684\u540d\u8a00\uff0c\u5f00\u53d1\u4ee3\u7801\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f Review Fuck Source Code","title":"\u603b\u7ed3"},{"location":"android/flutter/flutter/","text":"Flutter for Android\uff1a Flutter\u662f\u8c37\u6b4c\u7684\u79fb\u52a8 UI\u6846\u67b6 \uff0c\u53ef\u4ee5\u5feb\u901f\u5728iOS\u548cAndroid\u4e0a\u6784\u5efa\u9ad8\u8d28\u91cf\u7684\u539f\u751f\u7528\u6237\u754c\u9762\u3002 Flutter\u53ef\u4ee5\u4e0e\u73b0\u6709\u7684\u4ee3\u7801\u4e00\u8d77\u5de5\u4f5c \u3002\u5728\u5168\u4e16\u754c\uff0cFlutter\u6b63\u5728\u88ab\u8d8a\u6765\u8d8a\u591a\u7684\u5f00\u53d1\u8005\u548c\u7ec4\u7ec7\u4f7f\u7528\uff0c\u5e76\u4e14Flutter\u662f\u5b8c\u5168\u514d\u8d39\u3001\u5f00\u6e90\u7684\u3002 \u7f8e\u56e2Flutter\u57fa\u7840\u67b6\u6784 Flutter \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528Flutter? Flutter\u6709\u4ec0\u4e48\u4f18\u52bf\uff1f\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\uff1a \u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u540c\u4e00\u4efd\u4ee3\u7801\u5f00\u53d1iOS\u548cAndroid \u7528\u66f4\u5c11\u7684\u4ee3\u7801\u505a\u66f4\u591a\u7684\u4e8b\u60c5 \u8f7b\u677e\u8fed\u4ee3 \u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u66f4\u6539\u4ee3\u7801\u5e76\u91cd\u65b0\u52a0\u8f7d\uff08\u901a\u8fc7\u70ed\u91cd\u8f7d\uff09 \u4fee\u590d\u5d29\u6e83\u5e76\u7ee7\u7eed\u4ece\u5e94\u7528\u7a0b\u5e8f\u505c\u6b62\u7684\u5730\u65b9\u8fdb\u884c\u8c03\u8bd5 \u521b\u5efa\u7f8e\u89c2\uff0c\u9ad8\u5ea6\u5b9a\u5236\u7684\u7528\u6237\u4f53\u9a8c \u53d7\u76ca\u4e8e\u4f7f\u7528Flutter\u6846\u67b6\u63d0\u4f9b\u7684\u4e30\u5bcc\u7684Material Design\u548cCupertino\uff08iOS\u98ce\u683c\uff09\u7684widget \u5b9e\u73b0\u5b9a\u5236\u3001\u7f8e\u89c2\u3001\u54c1\u724c\u9a71\u52a8\u7684\u8bbe\u8ba1\uff0c\u800c\u4e0d\u53d7\u539f\u751f\u63a7\u4ef6\u7684\u9650\u5236 Feature \u5feb\u901f\u5f00\u53d1 \u6beb\u79d2\u7ea7\u7684\u70ed\u91cd\u8f7d \uff0c\u4fee\u6539\u540e\uff0c\u60a8\u7684\u5e94\u7528\u754c\u9762\u4f1a\u7acb\u5373\u66f4\u65b0\u3002\u4f7f\u7528\u4e30\u5bcc\u7684\u3001\u5b8c\u5168\u53ef\u5b9a\u5236\u7684widget\u5728\u51e0\u5206\u949f\u5185\u6784\u5efa\u539f\u751f\u754c\u9762\u3002 Flutter\u7684\u70ed\u91cd\u8f7d\u53ef\u5e2e\u52a9\u60a8\u5feb\u901f\u5730\u8fdb\u884c\u6d4b\u8bd5\u3001\u6784\u5efaUI\u3001\u6dfb\u52a0\u529f\u80fd\u5e76\u66f4\u5feb\u5730\u4fee\u590d\u9519\u8bef\u3002\u5728iOS\u548cAndroid\u6a21\u62df\u5668\u6216\u771f\u673a\u4e0a\u53ef\u4ee5\u5728\u4e9a\u79d2\u5185\u91cd\u8f7d\uff0c\u5e76\u4e14 Flutter\u4e0d\u4f1a\u4e22\u5931\u72b6\u6001 \u3002 \u5bcc\u6709\u8868\u73b0\u529b\u548c\u7075\u6d3b\u7684UI [ widget \u76ee\u5f55 ][34],[\u54cd\u5e94\u5f0f\u6846\u67b6][35] \u5feb\u901f\u53d1\u5e03\u805a\u7126\u4e8e\u539f\u751f\u4f53\u9a8c\u7684\u529f\u80fd\u3002\u5206\u5c42\u7684\u67b6\u6784\u5141\u8bb8\u60a8\u5b8c\u5168\u81ea\u5b9a\u4e49\uff0c\u4ece\u800c\u5b9e\u73b0\u96be\u4ee5\u7f6e\u4fe1\u7684\u5feb\u901f\u6e32\u67d3\u548c\u5bcc\u6709\u8868\u73b0\u529b\u3001\u7075\u6d3b\u7684\u8bbe\u8ba1\u3002 \u4f7f\u7528Flutter\u5185\u7f6e\u7f8e\u4e3d\u7684 Material Design \u548c Cupertino\uff08iOS\u98ce\u683c\uff09widget \u3001 \u4e30\u5bcc\u7684motion API \u3001\u5e73\u6ed1\u800c\u81ea\u7136\u7684\u6ed1\u52a8\u6548\u679c\u548c\u5e73\u53f0\u611f\u77e5\uff0c\u4e3a\u60a8\u7684\u7528\u6237\u5e26\u6765\u5168\u65b0\u4f53\u9a8c\u3002 Flutter\u62e5\u6709\u4e30\u5bcc\u7684\u5de5\u5177\u548c\u5e93\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u8f7b\u677e\u5730\u540c\u65f6\u5728iOS\u548cAndroid\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u60a8\u7684\u60f3\u6cd5\u548c\u521b\u610f\u3002 \u5982\u679c\u60a8\u6ca1\u6709\u4efb\u4f55\u79fb\u52a8\u7aef\u5f00\u53d1\u4f53\u9a8c\uff0cFlutter\u662f\u4e00\u79cd\u8f7b\u677e\u5feb\u6377\u7684\u65b9\u5f0f\u6765\u6784\u5efa\u6f02\u4eae\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002 \u5982\u679c\u60a8\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684iOS\u6216Android\u5f00\u53d1\u4eba\u5458\uff0c\u5219\u53ef\u4ee5\u4f7f**\u7528Flutter\u4f5c\u4e3a\u89c6\u56fe(View)\u5c42**\uff0c \u5e76\u53ef\u4ee5\u4f7f\u7528\u5df2\u7ecf\u7528 Java / ObjC / Swift \u5b8c\u6210\u7684\u90e8\u5206\uff08 Flutter\u652f\u6301\u6df7\u5408\u5f00\u53d1 \uff09\u3002 \u539f\u751f\u6027\u80fd Flutter\u5305\u542b\u4e86\u8bb8\u591a\u6838\u5fc3\u7684widget\uff0c\u5982\u6eda\u52a8\u3001\u5bfc\u822a\u3001\u56fe\u6807\u548c\u5b57\u4f53\u7b49\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5728iOS\u548cAndroid\u4e0a\u8fbe\u5230\u539f\u751f\u5e94\u7528\u4e00\u6837\u7684\u6027\u80fd\u3002 \u4f7f\u7528Flutter\u7684\u73b0\u4ee3\u3001\u54cd\u5e94\u5f0f\u6846\u67b6\uff0c\u548c\u4e00\u7cfb\u5217\u57fa\u7840widget\uff0c\u8f7b\u677e\u6784\u5efa\u60a8\u7684\u7528\u6237\u754c\u9762\u3002\u4f7f\u7528\u529f\u80fd\u5f3a\u5927\u4e14\u7075\u6d3b\u7684API\uff08 \u9488\u5bf92D\u3001\u52a8\u753b\u3001\u624b\u52bf\u3001\u6548\u679c\u7b49 \uff09\u89e3\u51b3\u8270\u96be\u7684UI\u6311\u6218\u3002 \u901a\u8fc7\u5e73\u53f0\u76f8\u5173\u7684API\u3001\u7b2c\u4e09\u65b9SDK\u548c\u539f\u751f\u4ee3\u7801\u8ba9\u60a8\u7684\u5e94\u7528\u53d8\u5f97\u5f3a\u5927\u6613\u7528\u3002 Flutter\u5141\u8bb8\u60a8\u590d\u7528\u73b0\u6709\u7684 Java\u3001Swift\u6216ObjC \u4ee3\u7801\uff0c \u8bbf\u95eeiOS\u548cAndroid\u4e0a\u7684\u539f\u751f\u7cfb\u7edf\u529f\u80fd\u548c\u7cfb\u7edfSDK \u3002[interop example\uff08\u4e92\u64cd\u4f5c\u793a\u4f8b\uff09][33],[\u5e73\u53f0\u4e92\u901aAPI][36]","title":"Flutter"},{"location":"android/flutter/flutter/#flutter-for-android","text":"Flutter\u662f\u8c37\u6b4c\u7684\u79fb\u52a8 UI\u6846\u67b6 \uff0c\u53ef\u4ee5\u5feb\u901f\u5728iOS\u548cAndroid\u4e0a\u6784\u5efa\u9ad8\u8d28\u91cf\u7684\u539f\u751f\u7528\u6237\u754c\u9762\u3002 Flutter\u53ef\u4ee5\u4e0e\u73b0\u6709\u7684\u4ee3\u7801\u4e00\u8d77\u5de5\u4f5c \u3002\u5728\u5168\u4e16\u754c\uff0cFlutter\u6b63\u5728\u88ab\u8d8a\u6765\u8d8a\u591a\u7684\u5f00\u53d1\u8005\u548c\u7ec4\u7ec7\u4f7f\u7528\uff0c\u5e76\u4e14Flutter\u662f\u5b8c\u5168\u514d\u8d39\u3001\u5f00\u6e90\u7684\u3002","title":"Flutter for Android\uff1a"},{"location":"android/flutter/flutter/#flutter","text":"Flutter","title":"\u7f8e\u56e2Flutter\u57fa\u7840\u67b6\u6784"},{"location":"android/flutter/flutter/#flutter_1","text":"Flutter\u6709\u4ec0\u4e48\u4f18\u52bf\uff1f\u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\uff1a \u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u540c\u4e00\u4efd\u4ee3\u7801\u5f00\u53d1iOS\u548cAndroid \u7528\u66f4\u5c11\u7684\u4ee3\u7801\u505a\u66f4\u591a\u7684\u4e8b\u60c5 \u8f7b\u677e\u8fed\u4ee3 \u5728\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u65f6\u66f4\u6539\u4ee3\u7801\u5e76\u91cd\u65b0\u52a0\u8f7d\uff08\u901a\u8fc7\u70ed\u91cd\u8f7d\uff09 \u4fee\u590d\u5d29\u6e83\u5e76\u7ee7\u7eed\u4ece\u5e94\u7528\u7a0b\u5e8f\u505c\u6b62\u7684\u5730\u65b9\u8fdb\u884c\u8c03\u8bd5 \u521b\u5efa\u7f8e\u89c2\uff0c\u9ad8\u5ea6\u5b9a\u5236\u7684\u7528\u6237\u4f53\u9a8c \u53d7\u76ca\u4e8e\u4f7f\u7528Flutter\u6846\u67b6\u63d0\u4f9b\u7684\u4e30\u5bcc\u7684Material Design\u548cCupertino\uff08iOS\u98ce\u683c\uff09\u7684widget \u5b9e\u73b0\u5b9a\u5236\u3001\u7f8e\u89c2\u3001\u54c1\u724c\u9a71\u52a8\u7684\u8bbe\u8ba1\uff0c\u800c\u4e0d\u53d7\u539f\u751f\u63a7\u4ef6\u7684\u9650\u5236","title":"\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528Flutter?"},{"location":"android/flutter/flutter/#feature","text":"\u5feb\u901f\u5f00\u53d1 \u6beb\u79d2\u7ea7\u7684\u70ed\u91cd\u8f7d \uff0c\u4fee\u6539\u540e\uff0c\u60a8\u7684\u5e94\u7528\u754c\u9762\u4f1a\u7acb\u5373\u66f4\u65b0\u3002\u4f7f\u7528\u4e30\u5bcc\u7684\u3001\u5b8c\u5168\u53ef\u5b9a\u5236\u7684widget\u5728\u51e0\u5206\u949f\u5185\u6784\u5efa\u539f\u751f\u754c\u9762\u3002 Flutter\u7684\u70ed\u91cd\u8f7d\u53ef\u5e2e\u52a9\u60a8\u5feb\u901f\u5730\u8fdb\u884c\u6d4b\u8bd5\u3001\u6784\u5efaUI\u3001\u6dfb\u52a0\u529f\u80fd\u5e76\u66f4\u5feb\u5730\u4fee\u590d\u9519\u8bef\u3002\u5728iOS\u548cAndroid\u6a21\u62df\u5668\u6216\u771f\u673a\u4e0a\u53ef\u4ee5\u5728\u4e9a\u79d2\u5185\u91cd\u8f7d\uff0c\u5e76\u4e14 Flutter\u4e0d\u4f1a\u4e22\u5931\u72b6\u6001 \u3002 \u5bcc\u6709\u8868\u73b0\u529b\u548c\u7075\u6d3b\u7684UI [ widget \u76ee\u5f55 ][34],[\u54cd\u5e94\u5f0f\u6846\u67b6][35] \u5feb\u901f\u53d1\u5e03\u805a\u7126\u4e8e\u539f\u751f\u4f53\u9a8c\u7684\u529f\u80fd\u3002\u5206\u5c42\u7684\u67b6\u6784\u5141\u8bb8\u60a8\u5b8c\u5168\u81ea\u5b9a\u4e49\uff0c\u4ece\u800c\u5b9e\u73b0\u96be\u4ee5\u7f6e\u4fe1\u7684\u5feb\u901f\u6e32\u67d3\u548c\u5bcc\u6709\u8868\u73b0\u529b\u3001\u7075\u6d3b\u7684\u8bbe\u8ba1\u3002 \u4f7f\u7528Flutter\u5185\u7f6e\u7f8e\u4e3d\u7684 Material Design \u548c Cupertino\uff08iOS\u98ce\u683c\uff09widget \u3001 \u4e30\u5bcc\u7684motion API \u3001\u5e73\u6ed1\u800c\u81ea\u7136\u7684\u6ed1\u52a8\u6548\u679c\u548c\u5e73\u53f0\u611f\u77e5\uff0c\u4e3a\u60a8\u7684\u7528\u6237\u5e26\u6765\u5168\u65b0\u4f53\u9a8c\u3002 Flutter\u62e5\u6709\u4e30\u5bcc\u7684\u5de5\u5177\u548c\u5e93\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u8f7b\u677e\u5730\u540c\u65f6\u5728iOS\u548cAndroid\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u60a8\u7684\u60f3\u6cd5\u548c\u521b\u610f\u3002 \u5982\u679c\u60a8\u6ca1\u6709\u4efb\u4f55\u79fb\u52a8\u7aef\u5f00\u53d1\u4f53\u9a8c\uff0cFlutter\u662f\u4e00\u79cd\u8f7b\u677e\u5feb\u6377\u7684\u65b9\u5f0f\u6765\u6784\u5efa\u6f02\u4eae\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u3002 \u5982\u679c\u60a8\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684iOS\u6216Android\u5f00\u53d1\u4eba\u5458\uff0c\u5219\u53ef\u4ee5\u4f7f**\u7528Flutter\u4f5c\u4e3a\u89c6\u56fe(View)\u5c42**\uff0c \u5e76\u53ef\u4ee5\u4f7f\u7528\u5df2\u7ecf\u7528 Java / ObjC / Swift \u5b8c\u6210\u7684\u90e8\u5206\uff08 Flutter\u652f\u6301\u6df7\u5408\u5f00\u53d1 \uff09\u3002 \u539f\u751f\u6027\u80fd Flutter\u5305\u542b\u4e86\u8bb8\u591a\u6838\u5fc3\u7684widget\uff0c\u5982\u6eda\u52a8\u3001\u5bfc\u822a\u3001\u56fe\u6807\u548c\u5b57\u4f53\u7b49\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5728iOS\u548cAndroid\u4e0a\u8fbe\u5230\u539f\u751f\u5e94\u7528\u4e00\u6837\u7684\u6027\u80fd\u3002 \u4f7f\u7528Flutter\u7684\u73b0\u4ee3\u3001\u54cd\u5e94\u5f0f\u6846\u67b6\uff0c\u548c\u4e00\u7cfb\u5217\u57fa\u7840widget\uff0c\u8f7b\u677e\u6784\u5efa\u60a8\u7684\u7528\u6237\u754c\u9762\u3002\u4f7f\u7528\u529f\u80fd\u5f3a\u5927\u4e14\u7075\u6d3b\u7684API\uff08 \u9488\u5bf92D\u3001\u52a8\u753b\u3001\u624b\u52bf\u3001\u6548\u679c\u7b49 \uff09\u89e3\u51b3\u8270\u96be\u7684UI\u6311\u6218\u3002 \u901a\u8fc7\u5e73\u53f0\u76f8\u5173\u7684API\u3001\u7b2c\u4e09\u65b9SDK\u548c\u539f\u751f\u4ee3\u7801\u8ba9\u60a8\u7684\u5e94\u7528\u53d8\u5f97\u5f3a\u5927\u6613\u7528\u3002 Flutter\u5141\u8bb8\u60a8\u590d\u7528\u73b0\u6709\u7684 Java\u3001Swift\u6216ObjC \u4ee3\u7801\uff0c \u8bbf\u95eeiOS\u548cAndroid\u4e0a\u7684\u539f\u751f\u7cfb\u7edf\u529f\u80fd\u548c\u7cfb\u7edfSDK \u3002[interop example\uff08\u4e92\u64cd\u4f5c\u793a\u4f8b\uff09][33],[\u5e73\u53f0\u4e92\u901aAPI][36]","title":"Feature"},{"location":"android/flutter/flutterAndroidInit/","text":"Android\u542f\u52a8\u52a0\u8f7dFlutter\u6d41\u7a0b Android\u521d\u59cb\u5316 Flutter Engine\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u4f1a\u751f\u6210\u4e00\u4e2a FlutterJar \u5305,\u63d0\u4f9b\u7ed9Android\u548cFlutter\u4ee3\u7801\u4ea4\u4e92\u7684\u8fc7\u7a0b Flutter\b\u4ee3\u7801\u5728Android\u7aef\b\u4ee3\u7801\u542f\u52a8\u65f6\uff0c\u662f\u5982\u4f55\u52a0\u8f7d\u76f8\u5173\u7684Dart\u4ee3\u7801\uff0c\u8fdb\u884c\u6267\u884c\uff0c\b\u6700\u7ec8\b\u5728\u624b\u673a\u7aef\u662f\u5982\u4f55\u663e\u793a\u51fa\u6765\b\u7684 Android\u521d\u59cb\u5316\u8fc7\u7a0b 1.Android Application\u542f\u52a8 2.Flutter\bMain\u7c7b\u521d\u59cb\u5316Flutter\u76f8\u5173\u7684\u6587\u4ef6\uff0c\u8bf7\u67e5\u770bflutter\u7684Apk\u5305\u4e2d\u7684\u6587\u4ef6\u7ed3\u6784 3.\u62bd\u53d6\bApk\b\u5305\u4e2d\u7684Flutter\u76f8\u5173\u7684\u8d44\u6e90 4.\bSystem.loadLibrary(\u201c\bflutter\u201d)\b\u52a0\u8f7d libflutter.so \u5f15\u64ce\u6587\u4ef6 5.\bJNI\b\u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528JNI_OnLoad\u65b9\u6cd5,\u5173\u8054Flutter java\u5e73\u53f0\u4ee3\u7801\u5230JNI\u4e2d 6.\u5728FlutterMain.cc\u4e2d\u8c03\u7528 Init() \u521d\u59cb\u5316\u5728java\u7aef\u62bd\u53d6\u7684flutter\u4ee3\u7801\uff0c\u628a\u76f8\u5173\u7684\u6587\u4ef6\u8def\u5f84\u4f20\u9012\u5230JNI\u4e2d\uff0c\u8fdb\u884c\u521d\u59cb\u5316\uff0cJNI\u5c42\u53ef\u4ee5\u8bfb\u53d6\u7684\u6587\u4ef6\u8def\u5f84 Application\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\uff1a STEP 1.\bApplication\u4e2d\u8c03\u7528FlutterMain.startInitialization(this); 2.\b\u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\u914d\u7f6e\uff0c\u65b9\u4fbf\u8bfb\u53d6\b\u4e0d\u540c\u4f4d\u7f6e\u7684flutter\u6587\u4ef6 3.\b\u62bd\u53d6Aot\u4f18\u5316\u8fc7\u7684\u4ee3\u7801 4.\b\b\b\b\u52a0\u8f7d\b\u8d44\u6e90\u6587\u4ef6\u5230\u8d44\u6e90\u67e5\u627e\u8def\u5f84\u4e2d 5.\u52a0\u8f7dso\u5e93:System.loadLibrary(\"flutter\"); 6.FlutterActivity\b\b:\u5bf9\bView\u3001\u4e8b\u4ef6\b\u4e00\u7cfb\u5217\u52a8\u4f5c\u7684\u521d\u59cb\u5316 \bandroid\u5e94\u7528\u542f\u52a8Application\u521d\u59cb\u5316Dart\u76f8\u5173\u7684\u4ee3\u7801 \u521d\u59cb\u5316Flutter\u6587\u4ef6 Application\u542f\u52a8Flutter.jar\u8fdb\u884c\u521d\u59cb\u5316 public class FlutterApplication extends Application { private Activity mCurrentActivity = null ; public FlutterApplication () { } @CallSuper public void onCreate () { super . onCreate (); FlutterMain . startInitialization ( this ); } public Activity getCurrentActivity () { return this . mCurrentActivity ; } public void setCurrentActivity ( Activity mCurrentActivity ) { this . mCurrentActivity = mCurrentActivity ; } } \u62bd\u53d6Flutter\u76f8\u5173\u4ee3\u7801\uff0c\u52a0\u8f7dFlutter.so\u5e93 flutter\u5728apk\u4e2d\u7684\u6587\u4ef6\u9700\u8981\u52a0\u8f7d\u624d\u80fd\u591f\u8fd0\u884cdart\u4ee3\u7801 1.\u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6 2.\u62bd\u8c61\u76f8\u5173\u7684\u4ee3\u7801Apk\u5305Asset\u76ee\u5f55\u4e2d\u7684\u6570\u636e\u62bd\u53d6\u5230apk\u5305\u4e0b\u7684\u76ee\u5f55\u4e2d 3.System.loadLibrary(\"flutter\");\u521d\u59cb\u5316so\u5e93 public void startInitialization ( @NonNull Context applicationContext , @NonNull FlutterLoader . Settings settings ) { if ( this . settings == null ) { if ( Looper . myLooper () != Looper . getMainLooper ()) { throw new IllegalStateException ( startInitialization must be called on the main thread ); } else { this . settings = settings ; long initStartTimestampMillis = SystemClock . uptimeMillis (); this . initConfig ( applicationContext ); this . initResources ( applicationContext ); System . loadLibrary ( flutter ); VsyncWaiter . getInstance (( WindowManager ) applicationContext . getSystemService ( window )). init (); long initTimeMillis = SystemClock . uptimeMillis () - initStartTimestampMillis ; FlutterJNI . nativeRecordStartTimestamp ( initTimeMillis ); } } } \u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6\uff0c\u5728apk\u5305\u5b89\u88c5\u5230\u624b\u673a\u4e4b\u540e\uff0c\u5728apk\u7684\u76ee\u5f55\u4e0b\u53ef\u4ee5\u627e,\u521d\u59cb\u5316\u67e5\u627e\u7684\u8def\u5f84 private void initConfig ( @NonNull Context applicationContext ) { Bundle metadata = this . getApplicationInfo ( applicationContext ). metaData ; if ( metadata != null ) { this . aotSharedLibraryName = metadata . getString ( PUBLIC_AOT_SHARED_LIBRARY_NAME , libapp.so ); this . flutterAssetsDir = metadata . getString ( PUBLIC_FLUTTER_ASSETS_DIR_KEY , flutter_assets ); this . vmSnapshotData = metadata . getString ( PUBLIC_VM_SNAPSHOT_DATA_KEY , vm_snapshot_data ); this . isolateSnapshotData = metadata . getString ( PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY , isolate_snapshot_data ); } } apk\u662f\u4e00\u4e2a\u6587\u4ef6\u538b\u7f29\u5305\uff0cflutter\u4ee3\u7801\u53d1\u5728apk\u5305\u4e2d\u7684Assert\u4e2d\uff0c\u9700\u8981\u51fa\u53bb\u51fa\u6765\u53d1\u5728apk\u7684\u5b89\u88c5\u76ee\u5f55\u4e2d\uff0c\u901a\u8fc7 ExtractTask \u7c7b\u89e3\u6790\u62bd\u53d6\uff0c AssetManager \u7ba1\u7406\u5668\u53ef\u4ee5\u62bd\u53d6\u51fa\u76f8\u5173\u7684Flutter\u4ee3\u7801\uff0c\u4f1a\u6839\u636e\u76ee\u5f55\u4e0b\u7684\u65f6\u95f4\u6233\u6587\u4ef6\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5df2\u7ecf\u88ab\u62bd\u53d6\u8fc7 res_timestamp private void initResources ( @NonNull Context applicationContext ) { ( new ResourceCleaner ( applicationContext )). start (); String dataDirPath = PathUtils . getDataDirectory ( applicationContext ); String packageName = applicationContext . getPackageName (); PackageManager packageManager = applicationContext . getPackageManager (); AssetManager assetManager = applicationContext . getResources (). getAssets (); this . resourceExtractor = new ResourceExtractor ( dataDirPath , packageName , packageManager , assetManager ); this . resourceExtractor . addResource ( this . fullAssetPathFrom ( this . vmSnapshotData )). addResource ( this . fullAssetPathFrom ( this . isolateSnapshotData )). addResource ( this . fullAssetPathFrom ( kernel_blob.bin )); this . resourceExtractor . start (); } \u5230\u76ee\u524d\u4e3a\u6b62\u53ea\u662fandroid\u5728\u542f\u52a8\u65f6\u8fdb\u884c\u9759\u6001\u7684\u52a0\u8f7d\u6570\u636e\uff0c \u521d\u59cb\u5316UI\u754c\u9762\u3001Plug\uff0c\u4e8b\u4ef6\u76d1\u542c\u56de\u8c03\u65b9\u6cd5 1.\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u521d\u59cb\u5316Flutter\u6587\u4ef6\u7684\u5b89\u88c5\u8def\u5f84 2. FlutterLoader \u4e3b\u8981\u8d1f\u8d23\u62bd\u53d6Flutter\u7684\u76f8\u5173\u6587\u4ef6\u5230\u4eceapk\u5305\u4e2d\u7684asset\u6587\u4ef6\u5939\u4e0b\u62bd\u53d6\u5230\u5b89\u88c5\u76ee\u5f55\u6587\u4ef6\u4e0b FlutterEngine\u662f\u4e00\u4e2aso\u5e93\uff0c\u53ea\u6709\u52a0\u8f7d\u5230Java\u7684\u6267\u884c\u8def\u5f84\u4e2d\u624d\u80fd\u521d\u59cb\u5316Dart\u865a\u62df\u673a\uff0c\u63d0\u4f9bDart\u8fd0\u884c\u7684\u73af\u5883\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u6587\u7ae0\u4e2d\u5c06\u4e00\u4e9b\u5206\u6790FlutterEngine\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5728Android\u4e2dApplication\u542f\u52a8\u5b8c\u6210\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u8fdb\u7a0b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u542fActivity\uff0c\u5728\u6e05\u5355\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u542f\u52a8Activity\u7c7b\u7ee7\u627f\u4e86 FlutterActivity 1.\u521d\u59cb\u5316Androidwindow\u5c5e\u6027\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c4f\u72b6\u6001\u4e2aFlutter\u6765\u4f7f\u7528 2.\u7b49\u5f85Flutter\u5f15\u64ce\u521d\u59cb\u5316\u5b8c\u6210 3.createFlutterView \u63d0\u4f9b\u7ed9\u5f00\u53d1\u8005\u81ea\u5df1\u5b9a\u4e49Flutter SurfaceView\u7684\u673a\u5236 4.\u5982\u679c createFlutterView \u7528\u6237\u6ca1\u6709\u5b9a\u5236\uff0c\u90a3\u4e48\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684SurfaceView 5. FlutterView \u63d0\u4f9b\u4e86\u9762\u5411\u7528\u6237\u64cd\u4f5c\u7684\u7c7b\uff0c FlutterNativeView \u63d0\u4f9b\u4e86Android\u4ee3\u7801\u548cFlutter\u7684\u4e92\u64cd\u4f5c\u673a\u5236 6.\u8c03\u7528 setContentView \u6dfb\u52a0SurfaceView 7.\u6dfb\u52a0\u7b2c\u4e00\u5e27\u5230\u7cfb\u7edf\uff0c\u53ef\u4ee5\u907f\u514dFlutter\u521d\u59cb\u5316\u7684\u65f6\u5019\u51fa\u73b0\u767d\u5c4f\u73b0\u8c61 \u7ecf\u8fc7\u4e0a\u9762\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u6210UI\u754c\u9762\uff0c\u4f46\u662f\u8fd8\u6709Flutter.so\u6587\u4ef6\u7684\u52a0\u8f7d\u5de5\u4f5c\u8fd8\u6ca1\u6709\u5b8c\u6210 public void onCreate ( Bundle savedInstanceState ) { if ( VERSION . SDK_INT = 21 ) { Window window = this . activity . getWindow (); window . addFlags (- 2147483648 ); window . setStatusBarColor ( 1073741824 ); window . getDecorView (). setSystemUiVisibility ( 1280 ); } String [] args = getArgsFromIntent ( this . activity . getIntent ()); \u52a0\u8f7dflutter . so\u5e93 \uff0c \u901a\u8fc7FlutterJNI . nativeInit\u65b9\u6cd5 FlutterMain . ensureInitializationComplete ( this . activity . getApplicationContext (), args ); this . flutterView = this . viewFactory . createFlutterView ( this . activity ); if ( this . flutterView == null ) { FlutterNativeView nativeView = this . viewFactory . createFlutterNativeView (); this . flutterView = new FlutterView ( this . activity , ( AttributeSet ) null , nativeView ); this . flutterView . setLayoutParams ( matchParent ); this . activity . setContentView ( this . flutterView ); this . launchView = this . createLaunchView (); if ( this . launchView != null ) { this . addLaunchView (); } } if (! this . loadIntent ( this . activity . getIntent ())) { String appBundlePath = FlutterMain . findAppBundlePath (); if ( appBundlePath != null ) { this . runBundle ( appBundlePath ); } } } FlutterView\u521d\u59cb\u5316\u65f6\u9700\u8981\u52a0\u8f7dFlutter\u76f8\u5173\u7684\u8d44\u6e90 1.\u521d\u59cb\u5316 FlutterNativeView \u76d1\u542c Flutter.so \u5e93\u7684\u4e8b\u4ef6\u76d1\u542c\uff0c\u52a0\u8f7d\uff0c\u5378\u8f7dso\u5e93\u7684\u4e8b\u4ef6 FlutterPluginRegistry :\u6ce8\u518c\u7cfb\u7edf\u5c42\u7ea7\u7684\u63d2\u4ef6\u7ba1\u7406\u5bf9\u8c61 DartExecutor :\u771f\u6b63\u7684\u7ba1\u7406FlutterAndroid\u4fa7\u7684\u63d2\u4ef6\u7ed1\u5b9a\u53ca\u89e3\u7ed1\u5b9a,\u4e8b\u4ef6\u7ea7\u522b\u7684\u7684\u5904\u7406 FlutterJNI :\u76d1\u542cFlutter\u4fa7\u56de\u8c03Android\u7aef\u7684\u4ee3\u7801\u903b\u8f91\uff0cso\u5e93\u5c42\u7ea7\u7684\u4e8b\u4ef6\u5904\u7406 FlutterUiDisplayListener :Flutter\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u4f1a\u56de\u5230\u5230Android\u7aef\u7684UI\u6539\u53d8\u76d1\u542c 2. public FlutterView ( Context context , AttributeSet attrs , FlutterNativeView nativeView ) { super ( context , attrs ); this . nextTextureId = new AtomicLong ( 0 L ); this . mIsSoftwareRenderingEnabled = false ; this . didRenderFirstFrame = false ; this . onAccessibilityChangeListener = new OnAccessibilityChangeListener () { public void onAccessibilityChanged ( boolean isAccessibilityEnabled , boolean isTouchExplorationEnabled ) { FlutterView . this . resetWillNotDraw ( isAccessibilityEnabled , isTouchExplorationEnabled ); } }; Activity activity = getActivity ( this . getContext ()); if ( activity == null ) { throw new IllegalArgumentException ( Bad context ); } else { if ( nativeView == null ) { this . mNativeView = new FlutterNativeView ( activity . getApplicationContext ()); } else { this . mNativeView = nativeView ; } this . dartExecutor = this . mNativeView . getDartExecutor (); this . flutterRenderer = new FlutterRenderer ( this . mNativeView . getFlutterJNI ()); this . mIsSoftwareRenderingEnabled = this . mNativeView . getFlutterJNI (). nativeGetIsSoftwareRenderingEnabled (); this . mMetrics = new FlutterView . ViewportMetrics (); this . mMetrics . devicePixelRatio = context . getResources (). getDisplayMetrics (). density ; this . setFocusable ( true ); this . setFocusableInTouchMode ( true ); this . mNativeView . attachViewAndActivity ( this , activity ); this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } }; this . getHolder (). addCallback ( this . mSurfaceCallback ); this . mActivityLifecycleListeners = new ArrayList (); this . mFirstFrameListeners = new ArrayList (); \u6ce8\u518c\u7cfb\u7edf\u7ea7\u522b\u7684\u63d2\u4ef6\u76d1\u542c this . navigationChannel = new NavigationChannel ( this . dartExecutor ); this . keyEventChannel = new KeyEventChannel ( this . dartExecutor ); this . lifecycleChannel = new LifecycleChannel ( this . dartExecutor ); this . localizationChannel = new LocalizationChannel ( this . dartExecutor ); this . platformChannel = new PlatformChannel ( this . dartExecutor ); this . systemChannel = new SystemChannel ( this . dartExecutor ); this . settingsChannel = new SettingsChannel ( this . dartExecutor ); final PlatformPlugin platformPlugin = new PlatformPlugin ( activity , this . platformChannel ); this . addActivityLifecycleListener ( new ActivityLifecycleListener () { public void onPostResume () { platformPlugin . updateSystemUiOverlays (); } }); this . mImm = ( InputMethodManager ) this . getContext (). getSystemService ( input_method ); PlatformViewsController platformViewsController = this . mNativeView . getPluginRegistry (). getPlatformViewsController (); this . mTextInputPlugin = new TextInputPlugin ( this , this . dartExecutor , platformViewsController ); this . androidKeyProcessor = new AndroidKeyProcessor ( this . keyEventChannel , this . mTextInputPlugin ); this . androidTouchProcessor = new AndroidTouchProcessor ( this . flutterRenderer ); this . mNativeView . getPluginRegistry (). getPlatformViewsController (). attachTextInputPlugin ( this . mTextInputPlugin ); this . sendLocalesToDart ( this . getResources (). getConfiguration ()); this . sendUserPlatformSettingsToDart (); } } SurfaceView\u4e8b\u4ef6\u548cFlutterEngine\u4e8b\u4ef6 \u5728Android\u7aef\u8fdb\u884cSurfaceView\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0cSurfaceView\u7684\u56de\u5230\u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 FlutterJNI \u7c7b\u4e2d\u7684\u672c\u5730\u65b9\u6cd5\u548cJNI\u5c42\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u7ed1\u5b9a\uff0cFlutterEngine\u5728\u8fdb\u884cFlutter\u7684\u6e32\u67d3\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f20\u9012\u76f8\u5173\u7684Surface\u7ed9Android\u5e73\u53f0\u8fdb\u884c\u6e32\u67d3\u663e\u793a this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } }; \b\b\bFlutterMain \b\u8c03\u7528Flutter for android \u5e93\u521d\u59cb\u5316Flutter\u76f8\u5173\u7684\u6587\u4ef6 1. FlutterMain.startInitialization(this); 2. System.loadLibrary('flutter') \u52a0\u8f7dso \u5728\b\bengine\u4e2d\u8c03\u7528engine/src/flutter/shell/platform/android/library_loader.cc\uff0c\b\bJNI\u4e2d\u7684\u4ee3\u7801\u521d\u59cb\u5316: \u4e3b\u8981\u5b8c\u6210\b\u4e09\u4ef6\u4e8b 1.\u521d\u59cb\u5316\b\b\bFlutterMain\u4f5c\u4e3aJNI\u5c42\u56de\u8c03\u7684\u7c7b 2.\u521d\u59cb\u5316\b\u5e73\u53f0\b\u4e8b\u4ef6\u7684\u5904\u7406\u7c7b 3.\u521d\u59cb\u5316UI\u7ed8\u5236Sync\u4fe1\u53f7\u7684\u4f20\u9012 System.loadLibrary \u8c03\u7528\u8fc7\u7a0b \u5728Flutter.jar\u521d\u59cb\u5316\u65f6\uff0c\u8c03\u7528System.loadLibrary \u67e5\u627e\u89e3\u538b\u51fa\u6765\u7684Flutter.so\u6587\u4ef6\uff0c\u8c03\u7528dlopen\u6253\u5f00\u6253\u5f00so\u5e93\uff0c\u52a0\u8f7dC++\u76f8\u5173\u7684\u8d44\u6e90\uff0c\u52a0\u8f7d\u5b8c\u6210\u540e\u8c03\u7528JNI_OnLoad,\u5177\u4f53\u8c03\u7528\u8fc7\u7a0b\u53c2\u8003\u4e0b\u56fe\uff0c\u5f53\u8c03\u7528 JNI_OnLoad \u5b8c\u6210\u540eso\u5e93\u4ee5\u53ca\u63d0\u4f9b\u4e86\u53ef\u4ee5\u8fd0\u884c\u7684\u51fd\u6570\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u521d\u59cb\u5316Flutter\u76f8\u5173\u7684\u4ee3\u7801\u548c\u4e1a\u52a1\u903b\u8f91 JNI_OnLoad JNI\u4e2d\u5bf9\u5e94\u76f8\u5173\u7684\u7c7b\u8fdb\u884c\u521d\u59cb\u5316 \u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u65f6\uff0c\u8c03\u7528\u5f53\u524d\u7684\u65b9\u6cd5\uff0c\u5b8c\u6210\u4e00\u4e0b\u4e09\u4ef6\u4e8b: \u6ce8\u518cJava\u5c42\u4ee3\u7801\u5230JNI\u5c42\uff0c\u65b9\u4fbf\u540e\u7eed\u7684\u56de\u8c03Java\u5c42\u4ee3\u7801 engine/src/flutter/shell/platform/android/flutter_main.cc /src/flutter/shell/platform/android/io/flutter/view/FlutterView.java \u521d\u59cb\u5316\u76f8\u5173\u7684\u5e73\u53f0View\u7684\u4e8b\u4ef6\u5904\u7406\u903b\u8f91 JNIEXPORT jint JNI_OnLoad ( JavaVM * vm , void * reserved ) { // Initialize the Java VM. fml :: jni :: InitJavaVM ( vm ); JNIEnv * env = fml :: jni :: AttachCurrentThread (); bool result = false ; // Register FlutterMain. result = shell :: FlutterMain :: Register ( env ); FML_CHECK ( result ); // Register PlatformView // \u5904\u7406\u5e73\u53f0\u7684UI/\u4e8b\u4ef6\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\uff0c\u540e\u53f0\u6267\u884c result = shell :: PlatformViewAndroid :: Register ( env ); FML_CHECK ( result ); // Register VSyncWaiter. // \u771f\u6b63\u5904\u7406\u76f8\u5173\u7684UI\u7ed8\u5236\u4e8b\u4ef6 result = shell :: VsyncWaiterAndroid :: Register ( env ); FML_CHECK ( result ); return JNI_VERSION_1_4 ; } FlutterMain::Register(env) \u5728library_loader\u5e93\u4e2d\u8fdb\u884c\u7ec4\u6210,\u7f16\u8bd1engine\u56de\u8c03java\u6210\u4ee3\u7801 bool FlutterMain::Register(JNIEnv* env) { static const JNINativeMethod methods[] = { { .name = nativeInit , .signature = (Landroid/content/Context;[Ljava/lang/String;Ljava/ lang/String;Ljava/lang/String;Ljava/lang/String;)V , .fnPtr = reinterpret_cast lt;void* gt;( amp;Init), }, { .name = nativeRecordStartTimestamp , .signature = (J)V , .fnPtr = reinterpret_cast lt;void* gt;( amp;RecordStartTimestamp), }, }; jclass clazz = env- gt;FindClass( io/flutter/view/FlutterMain ); if (clazz == nullptr) { return false; } return env- gt;RegisterNatives(clazz, methods, arraysize(methods)) == 0; } Shell result = shell::PlatformViewAndroid::Register(env);\b\u5bf9\u5e94\b\bjava\u5c42\u4e8b\u4ef6\u7684\u5904\u7406 /engine/src/flutter/shell/platform/android/platform_view_android.h class PlatformViewAndroid final : public PlatformView { !-- \u6ca1\u6709\u5bf9\b Register \u8fdb\u884c\u521d\u59cb\u5316 -- public : static bool Register ( JNIEnv * env ); VsyncWaiterAndroid VsyncWaiterAndroid::Register(env);\u5904\u7406\u76f8\u5173\u7684frame rate\u95ee\u9898\uff0c\u540c\u6b65\u5e73\u53f0\u5c42\u7684\u4e8b\u4ef6\u548cdart UI\u7684\u4e8b\u4ef6\u66f4\u65b0,JNI\u56de\u8c03Java\u5c42\u7684\u4ee3\u7801 io/flutter/view/VsyncWaiter ,Android\u5e73\u53f0\u5c42\u5bf9\u5e27\u7387\u7684\u63a7\u5236\u4f7f\u7528\u7684\u7c7b\uff1a android.view.Choreographer // \u5bf9\u5e94flutter for android \u5e93\u4e2d\u7684\uff1aio.flutter.view.VsyncWaiter // bool VsyncWaiterAndroid :: Register ( JNIEnv * env ) { static const JNINativeMethod methods [] = {{ . name = nativeOnVsync , . signature = (JJJ)V , . fnPtr = reinterpret_cast void * ( OnNativeVsync ), }}; jclass clazz = env - FindClass ( io/flutter/view/VsyncWaiter ); if ( clazz == nullptr ) { return false ; } g_vsync_waiter_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , clazz ); FML_CHECK ( ! g_vsync_waiter_class - is_null ()); g_async_wait_for_vsync_method_ = env - GetStaticMethodID ( g_vsync_waiter_class - obj (), asyncWaitForVsync , (J)V ); FML_CHECK ( g_async_wait_for_vsync_method_ != nullptr ); return env - RegisterNatives ( clazz , methods , arraysize ( methods )) == 0 ; } flutter_main::nativeInit apk\u4e2d\u6587\u4ef6\u62bd\u53d6\b\u5b8c\u6210\u4e4b\u540e\u5904\u7406\b\u521d\u59cb\u5316JNI\u4e2d\u7684\u4ee3\u7801\uff0c\u52a0\u8f7d\bflutter\b\u76f8\u5173\u7684\u6587\u4ef6\u4ee3\u7801\uff0cio/flutter/view/FlutterMain.class \b, nativeInit(applicationContext, (String[])shellArgs.toArray(new String[0]), appBundlePath, appStoragePath, engineCachesPath); ,\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u5341\u91cc\u6cb3 nativeInit() \u5728Java\u5c42\u53ef\u4ee5\u4f7f\u7528\u76f8\u5173\u7684\u547d\u4ee4\u4f20\u9012\u76f8\u5173\u7684\u53c2\u6570 Java\u5c42\u4e2dapk\u6587\u4ef6\u62bd\u53d6\u5b8c\u6210\u540e\u521d\u59cb\u5316\u53c2\u6570\u4fe1\u606f\uff0c \u4e3b\u8981\u662f\u4f20\u9012\u76f8\u5173\u7684\u521d\u59cb\u5316\u53c2\u6570\u5230JNI\u5c42\uff0c\u65b9\u4fbf\u52a0\u8f7d\u76f8\u5173\u7684\u6587\u4ef6 \u521d\u59cb\u5316Flutter\u8def\u5f84\u4fe1\u606f void FlutterMain :: Init ( JNIEnv * env , jclass clazz , jobject context , jobjectArray jargs , jstring bundlePath , jstring appStoragePath , jstring engineCachesPath ) { std :: vector std :: string args ; args . push_back ( flutter ); for ( auto arg : fml :: jni :: StringArrayToVector ( env , jargs )) { args . push_back ( std :: move ( arg )); } // \u521d\u59cb\u5316\u547d\u4ee4\u884c\u53c2\u6570 auto command_line = fml :: CommandLineFromIterators ( args . begin (), args . end ()); auto settings = SettingsFromCommandLine ( command_line ); // \u521d\u59cb\u5316\u8d44\u6e90\u76ee\u5f55\u7ed3\u6784 settings . assets_path = fml :: jni :: JavaStringToString ( env , bundlePath ); // Restore the callback cache. // TODO(chinmaygarde): Route all cache file access through FML and remove this // setter. // \u8bbe\u7f6e\u7f13\u5b58\u76ee\u5f55 blink :: DartCallbackCache :: SetCachePath ( fml :: jni :: JavaStringToString ( env , appStoragePath )); // \u521d\u59cb\u5316Android\u7f13\u5b58\u76ee\u5f55 fml :: paths :: InitializeAndroidCachesPath ( fml :: jni :: JavaStringToString ( env , engineCachesPath )); // \u4ece\u78c1\u76d8\u52a0\u8f7d\u7f13\u5b58\u6570\u636e blink :: DartCallbackCache :: LoadCacheFromDisk (); // \u5982\u4f55\u8fd0\u884c\u65f6\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 if (! blink :: DartVM :: IsRunningPrecompiledCode ()) { // Check to see if the appropriate kernel files are present and configure // settings accordingly. auto application_kernel_path = fml :: paths :: JoinPaths ({ settings . assets_path , kernel_blob.bin }); if ( fml :: IsFile ( application_kernel_path )) { settings . application_kernel_asset = application_kernel_path ; } } // \u6dfb\u52a0\u56de\u8c03\u8fdb\u5165\u6d88\u606f\u961f\u5217 settings . task_observer_add = []( intptr_t key , fml :: closure callback ) { fml :: MessageLoop :: GetCurrent (). AddTaskObserver ( key , std :: move ( callback )); }; // \u79fb\u9664\u6d88\u606f\u961f\u5217 settings . task_observer_remove = []( intptr_t key ) { fml :: MessageLoop :: GetCurrent (). RemoveTaskObserver ( key ); }; # if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // There are no ownership concerns here as all mappings are owned by the // embedder and not the engine. auto make_mapping_callback = []( const uint8_t * mapping , size_t size ) { return [ mapping , size ]() { return std :: make_unique fml :: NonOwnedMapping ( mapping , size ); }; }; settings . dart_library_sources_kernel = make_mapping_callback ( kPlatformStrongDill , kPlatformStrongDillSize ); # endif // FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // Not thread safe. Will be removed when FlutterMain is refactored to no // longer be a singleton. g_flutter_main . reset ( new FlutterMain ( std :: move ( settings ))); } \b\u6267\u884c\u5230\u8fd9\u4e2a\u5730\u65b9\uff0c\b\b\bApk\u4e2d\u7684\u6587\u4ef6\u5df2\u7ecf\u62bd\u53d6\u5b8c\u6210\uff0c\u56de\u8c03\u65b9\u6cd5\uff0c\u56de\u8c03\u4e8b\u4ef6\u5df2\u7ecf\u5b8c\u6210,\b\u8def\u5f84\u7684\u521d\u59cb\u5316\u4fe1\u606f\u5df2\u7ecf\u521d\u59cb\u5316 \u603b\u7ed3 \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u6210Flutter\u548cAndroid\u7684\u8c03\u7528\u903b\u8f91\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u603b\u7ed3\u4e00\u4e0bFlutter\u521d\u59cb\u5316\u7684\u5927\u6982\u903b\u8f91 1.App\u542f\u52a8\uff0c\u5728Application\u4e2d\u8c03\u7528 FlutterMain \u4e2d\u7684 startInitialization \u65b9\u6cd5\uff0c\u5b8c\u6210\u8def\u5f84\u7684\u914d\u7f6e\uff0cflutter\u4ee3\u7801\u7684\u62bd\u53d6\uff0c\u52a0\u8f7dFlutter.so\u5e93 2.\u5f00\u59cb\u521d\u59cb\u5316Activity\u4e2d\u7684UI\u754c\u9762\u548c\u7ed1\u5b9aAndroid\u548cFlutter\u901a\u4fe1\uff0c\u56de\u8c03\u7b49\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c FlutterActivityDelegate \u4e2d\u5b8c\u6210 3.\u5728 `\u4e2d\u8c03\u7528 nativeInit \u65b9\u6cd5\u521d\u59cb\u5316 Flutter.so`\u5e93\u8fdb\u884cDartVM\u7684\u521d\u59cb\u5316\u64cd\u4f5c 4. Flutter.so \u5e93\u52a0\u8f7d\u65f6\u8c03\u7528 JNI_OnLoad \u65b9\u6cd5\u4e2d\u521d\u59cb\u5316 FlutterMain \u4f5c\u4e3aAndroid\u7aef\u7684\u8c03\u7528\u5165\u53e3 5.\u521d\u59cb\u5316 PlatformViewAndroid ,Android\u7aef\u548cFlutterView\u901a\u4fe1\u4ea4\u4e92\u7684\u5165\u53e3 6.Flutter.so\u521d\u59cb\u5316\u5b8c\u6210Engine\u76f8\u5173\u7684\u8d44\u6e90\u4e4b\u540e\uff0c\u5728 FlutterLoader.class \u4e2d\u8c03\u7528 nativeInit \u65b9\u6cd5\u521d\u59cb\u5316 7.\u901a\u8fc7 FlutterJNI \u4e2d\u7684 nativeAttach \u65b9\u6cd5\u521d\u59cb\u5316 Flutter.so \u5f00\u59cb\u7ed1\u5b9aAndroid\u7aef\u548cFlutter\u76f8\u5173\u7684\u4e8b\u4ef6\u56de\u8c03 8.\u5728Android\u7aef\u8fdb\u884cSurfaceView\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0cSurfaceView\u7684\u56de\u5230\u51fd\u6570 Callback \u4e2d\uff0c\u901a\u8fc7 FlutterJNI \u7c7b\u4e2d\u7684\u672c\u5730\u65b9\u6cd5\u548cJNI\u5c42\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u7ed1\u5b9a\uff0cFlutterEngine\u5728\u8fdb\u884cFlutter\u7684\u6e32\u67d3\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f20\u9012\u76f8\u5173\u7684Surface\u7ed9Android\u5e73\u53f0\u8fdb\u884c\u6e32\u67d3\u663e\u793a \u81f3\u6b64\uff0cAndroid\u7aef\u542f\u52a8\u3001\u52a0\u8f7dFlutter\u8d44\u6e90\u3001\u521d\u59cb\u5316FlutterEngine\uff0c\u7ed1\u5b9aSurfaceView\u548cFlutterEngine\u5f15\u64ce\u7684\u5bf9\u8c61\uff0c\u6ce8\u518c\u7cfb\u7edf\u7ea7\u522b\u7684\u63d2\u4ef6\u529f\u80fd\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u4e0b\u4e00\u7bc7\u4e2d\u6211\u4eec\u5c06\uff0c\u5206\u6790FlutterEngine\u5f15\u64ce\u662f\u600e\u4e48\u521d\u59cb\u5316\u7684\uff0c\u6bd5\u7adf\u8981\u5728\u624b\u673a\u4e0a\u770b\u5230Flutter\u5f15\u64ce\u4ee3\u7801\u7684\u663e\u793a","title":"Android\u52a0\u8f7dDart\u6587\u4ef6"},{"location":"android/flutter/flutterAndroidInit/#androidflutter","text":"","title":"Android\u542f\u52a8\u52a0\u8f7dFlutter\u6d41\u7a0b"},{"location":"android/flutter/flutterAndroidInit/#android","text":"Flutter Engine\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u4f1a\u751f\u6210\u4e00\u4e2a FlutterJar \u5305,\u63d0\u4f9b\u7ed9Android\u548cFlutter\u4ee3\u7801\u4ea4\u4e92\u7684\u8fc7\u7a0b Flutter\b\u4ee3\u7801\u5728Android\u7aef\b\u4ee3\u7801\u542f\u52a8\u65f6\uff0c\u662f\u5982\u4f55\u52a0\u8f7d\u76f8\u5173\u7684Dart\u4ee3\u7801\uff0c\u8fdb\u884c\u6267\u884c\uff0c\b\u6700\u7ec8\b\u5728\u624b\u673a\u7aef\u662f\u5982\u4f55\u663e\u793a\u51fa\u6765\b\u7684 Android\u521d\u59cb\u5316\u8fc7\u7a0b 1.Android Application\u542f\u52a8 2.Flutter\bMain\u7c7b\u521d\u59cb\u5316Flutter\u76f8\u5173\u7684\u6587\u4ef6\uff0c\u8bf7\u67e5\u770bflutter\u7684Apk\u5305\u4e2d\u7684\u6587\u4ef6\u7ed3\u6784 3.\u62bd\u53d6\bApk\b\u5305\u4e2d\u7684Flutter\u76f8\u5173\u7684\u8d44\u6e90 4.\bSystem.loadLibrary(\u201c\bflutter\u201d)\b\u52a0\u8f7d libflutter.so \u5f15\u64ce\u6587\u4ef6 5.\bJNI\b\u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528JNI_OnLoad\u65b9\u6cd5,\u5173\u8054Flutter java\u5e73\u53f0\u4ee3\u7801\u5230JNI\u4e2d 6.\u5728FlutterMain.cc\u4e2d\u8c03\u7528 Init() \u521d\u59cb\u5316\u5728java\u7aef\u62bd\u53d6\u7684flutter\u4ee3\u7801\uff0c\u628a\u76f8\u5173\u7684\u6587\u4ef6\u8def\u5f84\u4f20\u9012\u5230JNI\u4e2d\uff0c\u8fdb\u884c\u521d\u59cb\u5316\uff0cJNI\u5c42\u53ef\u4ee5\u8bfb\u53d6\u7684\u6587\u4ef6\u8def\u5f84","title":"Android\u521d\u59cb\u5316"},{"location":"android/flutter/flutterAndroidInit/#application","text":"STEP 1.\bApplication\u4e2d\u8c03\u7528FlutterMain.startInitialization(this); 2.\b\u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\u914d\u7f6e\uff0c\u65b9\u4fbf\u8bfb\u53d6\b\u4e0d\u540c\u4f4d\u7f6e\u7684flutter\u6587\u4ef6 3.\b\u62bd\u53d6Aot\u4f18\u5316\u8fc7\u7684\u4ee3\u7801 4.\b\b\b\b\u52a0\u8f7d\b\u8d44\u6e90\u6587\u4ef6\u5230\u8d44\u6e90\u67e5\u627e\u8def\u5f84\u4e2d 5.\u52a0\u8f7dso\u5e93:System.loadLibrary(\"flutter\"); 6.FlutterActivity\b\b:\u5bf9\bView\u3001\u4e8b\u4ef6\b\u4e00\u7cfb\u5217\u52a8\u4f5c\u7684\u521d\u59cb\u5316 \bandroid\u5e94\u7528\u542f\u52a8Application\u521d\u59cb\u5316Dart\u76f8\u5173\u7684\u4ee3\u7801","title":"Application\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\uff1a"},{"location":"android/flutter/flutterAndroidInit/#flutter","text":"","title":"\u521d\u59cb\u5316Flutter\u6587\u4ef6"},{"location":"android/flutter/flutterAndroidInit/#applicationflutterjar","text":"public class FlutterApplication extends Application { private Activity mCurrentActivity = null ; public FlutterApplication () { } @CallSuper public void onCreate () { super . onCreate (); FlutterMain . startInitialization ( this ); } public Activity getCurrentActivity () { return this . mCurrentActivity ; } public void setCurrentActivity ( Activity mCurrentActivity ) { this . mCurrentActivity = mCurrentActivity ; } }","title":"Application\u542f\u52a8Flutter.jar\u8fdb\u884c\u521d\u59cb\u5316"},{"location":"android/flutter/flutterAndroidInit/#flutterflutterso","text":"flutter\u5728apk\u4e2d\u7684\u6587\u4ef6\u9700\u8981\u52a0\u8f7d\u624d\u80fd\u591f\u8fd0\u884cdart\u4ee3\u7801 1.\u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6 2.\u62bd\u8c61\u76f8\u5173\u7684\u4ee3\u7801Apk\u5305Asset\u76ee\u5f55\u4e2d\u7684\u6570\u636e\u62bd\u53d6\u5230apk\u5305\u4e0b\u7684\u76ee\u5f55\u4e2d 3.System.loadLibrary(\"flutter\");\u521d\u59cb\u5316so\u5e93 public void startInitialization ( @NonNull Context applicationContext , @NonNull FlutterLoader . Settings settings ) { if ( this . settings == null ) { if ( Looper . myLooper () != Looper . getMainLooper ()) { throw new IllegalStateException ( startInitialization must be called on the main thread ); } else { this . settings = settings ; long initStartTimestampMillis = SystemClock . uptimeMillis (); this . initConfig ( applicationContext ); this . initResources ( applicationContext ); System . loadLibrary ( flutter ); VsyncWaiter . getInstance (( WindowManager ) applicationContext . getSystemService ( window )). init (); long initTimeMillis = SystemClock . uptimeMillis () - initStartTimestampMillis ; FlutterJNI . nativeRecordStartTimestamp ( initTimeMillis ); } } } \u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6\uff0c\u5728apk\u5305\u5b89\u88c5\u5230\u624b\u673a\u4e4b\u540e\uff0c\u5728apk\u7684\u76ee\u5f55\u4e0b\u53ef\u4ee5\u627e,\u521d\u59cb\u5316\u67e5\u627e\u7684\u8def\u5f84 private void initConfig ( @NonNull Context applicationContext ) { Bundle metadata = this . getApplicationInfo ( applicationContext ). metaData ; if ( metadata != null ) { this . aotSharedLibraryName = metadata . getString ( PUBLIC_AOT_SHARED_LIBRARY_NAME , libapp.so ); this . flutterAssetsDir = metadata . getString ( PUBLIC_FLUTTER_ASSETS_DIR_KEY , flutter_assets ); this . vmSnapshotData = metadata . getString ( PUBLIC_VM_SNAPSHOT_DATA_KEY , vm_snapshot_data ); this . isolateSnapshotData = metadata . getString ( PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY , isolate_snapshot_data ); } } apk\u662f\u4e00\u4e2a\u6587\u4ef6\u538b\u7f29\u5305\uff0cflutter\u4ee3\u7801\u53d1\u5728apk\u5305\u4e2d\u7684Assert\u4e2d\uff0c\u9700\u8981\u51fa\u53bb\u51fa\u6765\u53d1\u5728apk\u7684\u5b89\u88c5\u76ee\u5f55\u4e2d\uff0c\u901a\u8fc7 ExtractTask \u7c7b\u89e3\u6790\u62bd\u53d6\uff0c AssetManager \u7ba1\u7406\u5668\u53ef\u4ee5\u62bd\u53d6\u51fa\u76f8\u5173\u7684Flutter\u4ee3\u7801\uff0c\u4f1a\u6839\u636e\u76ee\u5f55\u4e0b\u7684\u65f6\u95f4\u6233\u6587\u4ef6\u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5df2\u7ecf\u88ab\u62bd\u53d6\u8fc7 res_timestamp private void initResources ( @NonNull Context applicationContext ) { ( new ResourceCleaner ( applicationContext )). start (); String dataDirPath = PathUtils . getDataDirectory ( applicationContext ); String packageName = applicationContext . getPackageName (); PackageManager packageManager = applicationContext . getPackageManager (); AssetManager assetManager = applicationContext . getResources (). getAssets (); this . resourceExtractor = new ResourceExtractor ( dataDirPath , packageName , packageManager , assetManager ); this . resourceExtractor . addResource ( this . fullAssetPathFrom ( this . vmSnapshotData )). addResource ( this . fullAssetPathFrom ( this . isolateSnapshotData )). addResource ( this . fullAssetPathFrom ( kernel_blob.bin )); this . resourceExtractor . start (); } \u5230\u76ee\u524d\u4e3a\u6b62\u53ea\u662fandroid\u5728\u542f\u52a8\u65f6\u8fdb\u884c\u9759\u6001\u7684\u52a0\u8f7d\u6570\u636e\uff0c","title":"\u62bd\u53d6Flutter\u76f8\u5173\u4ee3\u7801\uff0c\u52a0\u8f7dFlutter.so\u5e93"},{"location":"android/flutter/flutterAndroidInit/#uiplug","text":"1.\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u521d\u59cb\u5316Flutter\u6587\u4ef6\u7684\u5b89\u88c5\u8def\u5f84 2. FlutterLoader \u4e3b\u8981\u8d1f\u8d23\u62bd\u53d6Flutter\u7684\u76f8\u5173\u6587\u4ef6\u5230\u4eceapk\u5305\u4e2d\u7684asset\u6587\u4ef6\u5939\u4e0b\u62bd\u53d6\u5230\u5b89\u88c5\u76ee\u5f55\u6587\u4ef6\u4e0b FlutterEngine\u662f\u4e00\u4e2aso\u5e93\uff0c\u53ea\u6709\u52a0\u8f7d\u5230Java\u7684\u6267\u884c\u8def\u5f84\u4e2d\u624d\u80fd\u521d\u59cb\u5316Dart\u865a\u62df\u673a\uff0c\u63d0\u4f9bDart\u8fd0\u884c\u7684\u73af\u5883\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u6587\u7ae0\u4e2d\u5c06\u4e00\u4e9b\u5206\u6790FlutterEngine\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5728Android\u4e2dApplication\u542f\u52a8\u5b8c\u6210\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u8fdb\u7a0b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u542fActivity\uff0c\u5728\u6e05\u5355\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u542f\u52a8Activity\u7c7b\u7ee7\u627f\u4e86 FlutterActivity 1.\u521d\u59cb\u5316Androidwindow\u5c5e\u6027\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c4f\u72b6\u6001\u4e2aFlutter\u6765\u4f7f\u7528 2.\u7b49\u5f85Flutter\u5f15\u64ce\u521d\u59cb\u5316\u5b8c\u6210 3.createFlutterView \u63d0\u4f9b\u7ed9\u5f00\u53d1\u8005\u81ea\u5df1\u5b9a\u4e49Flutter SurfaceView\u7684\u673a\u5236 4.\u5982\u679c createFlutterView \u7528\u6237\u6ca1\u6709\u5b9a\u5236\uff0c\u90a3\u4e48\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684SurfaceView 5. FlutterView \u63d0\u4f9b\u4e86\u9762\u5411\u7528\u6237\u64cd\u4f5c\u7684\u7c7b\uff0c FlutterNativeView \u63d0\u4f9b\u4e86Android\u4ee3\u7801\u548cFlutter\u7684\u4e92\u64cd\u4f5c\u673a\u5236 6.\u8c03\u7528 setContentView \u6dfb\u52a0SurfaceView 7.\u6dfb\u52a0\u7b2c\u4e00\u5e27\u5230\u7cfb\u7edf\uff0c\u53ef\u4ee5\u907f\u514dFlutter\u521d\u59cb\u5316\u7684\u65f6\u5019\u51fa\u73b0\u767d\u5c4f\u73b0\u8c61 \u7ecf\u8fc7\u4e0a\u9762\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u6210UI\u754c\u9762\uff0c\u4f46\u662f\u8fd8\u6709Flutter.so\u6587\u4ef6\u7684\u52a0\u8f7d\u5de5\u4f5c\u8fd8\u6ca1\u6709\u5b8c\u6210 public void onCreate ( Bundle savedInstanceState ) { if ( VERSION . SDK_INT = 21 ) { Window window = this . activity . getWindow (); window . addFlags (- 2147483648 ); window . setStatusBarColor ( 1073741824 ); window . getDecorView (). setSystemUiVisibility ( 1280 ); } String [] args = getArgsFromIntent ( this . activity . getIntent ()); \u52a0\u8f7dflutter . so\u5e93 \uff0c \u901a\u8fc7FlutterJNI . nativeInit\u65b9\u6cd5 FlutterMain . ensureInitializationComplete ( this . activity . getApplicationContext (), args ); this . flutterView = this . viewFactory . createFlutterView ( this . activity ); if ( this . flutterView == null ) { FlutterNativeView nativeView = this . viewFactory . createFlutterNativeView (); this . flutterView = new FlutterView ( this . activity , ( AttributeSet ) null , nativeView ); this . flutterView . setLayoutParams ( matchParent ); this . activity . setContentView ( this . flutterView ); this . launchView = this . createLaunchView (); if ( this . launchView != null ) { this . addLaunchView (); } } if (! this . loadIntent ( this . activity . getIntent ())) { String appBundlePath = FlutterMain . findAppBundlePath (); if ( appBundlePath != null ) { this . runBundle ( appBundlePath ); } } } FlutterView\u521d\u59cb\u5316\u65f6\u9700\u8981\u52a0\u8f7dFlutter\u76f8\u5173\u7684\u8d44\u6e90 1.\u521d\u59cb\u5316 FlutterNativeView \u76d1\u542c Flutter.so \u5e93\u7684\u4e8b\u4ef6\u76d1\u542c\uff0c\u52a0\u8f7d\uff0c\u5378\u8f7dso\u5e93\u7684\u4e8b\u4ef6 FlutterPluginRegistry :\u6ce8\u518c\u7cfb\u7edf\u5c42\u7ea7\u7684\u63d2\u4ef6\u7ba1\u7406\u5bf9\u8c61 DartExecutor :\u771f\u6b63\u7684\u7ba1\u7406FlutterAndroid\u4fa7\u7684\u63d2\u4ef6\u7ed1\u5b9a\u53ca\u89e3\u7ed1\u5b9a,\u4e8b\u4ef6\u7ea7\u522b\u7684\u7684\u5904\u7406 FlutterJNI :\u76d1\u542cFlutter\u4fa7\u56de\u8c03Android\u7aef\u7684\u4ee3\u7801\u903b\u8f91\uff0cso\u5e93\u5c42\u7ea7\u7684\u4e8b\u4ef6\u5904\u7406 FlutterUiDisplayListener :Flutter\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u4f1a\u56de\u5230\u5230Android\u7aef\u7684UI\u6539\u53d8\u76d1\u542c 2. public FlutterView ( Context context , AttributeSet attrs , FlutterNativeView nativeView ) { super ( context , attrs ); this . nextTextureId = new AtomicLong ( 0 L ); this . mIsSoftwareRenderingEnabled = false ; this . didRenderFirstFrame = false ; this . onAccessibilityChangeListener = new OnAccessibilityChangeListener () { public void onAccessibilityChanged ( boolean isAccessibilityEnabled , boolean isTouchExplorationEnabled ) { FlutterView . this . resetWillNotDraw ( isAccessibilityEnabled , isTouchExplorationEnabled ); } }; Activity activity = getActivity ( this . getContext ()); if ( activity == null ) { throw new IllegalArgumentException ( Bad context ); } else { if ( nativeView == null ) { this . mNativeView = new FlutterNativeView ( activity . getApplicationContext ()); } else { this . mNativeView = nativeView ; } this . dartExecutor = this . mNativeView . getDartExecutor (); this . flutterRenderer = new FlutterRenderer ( this . mNativeView . getFlutterJNI ()); this . mIsSoftwareRenderingEnabled = this . mNativeView . getFlutterJNI (). nativeGetIsSoftwareRenderingEnabled (); this . mMetrics = new FlutterView . ViewportMetrics (); this . mMetrics . devicePixelRatio = context . getResources (). getDisplayMetrics (). density ; this . setFocusable ( true ); this . setFocusableInTouchMode ( true ); this . mNativeView . attachViewAndActivity ( this , activity ); this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } }; this . getHolder (). addCallback ( this . mSurfaceCallback ); this . mActivityLifecycleListeners = new ArrayList (); this . mFirstFrameListeners = new ArrayList (); \u6ce8\u518c\u7cfb\u7edf\u7ea7\u522b\u7684\u63d2\u4ef6\u76d1\u542c this . navigationChannel = new NavigationChannel ( this . dartExecutor ); this . keyEventChannel = new KeyEventChannel ( this . dartExecutor ); this . lifecycleChannel = new LifecycleChannel ( this . dartExecutor ); this . localizationChannel = new LocalizationChannel ( this . dartExecutor ); this . platformChannel = new PlatformChannel ( this . dartExecutor ); this . systemChannel = new SystemChannel ( this . dartExecutor ); this . settingsChannel = new SettingsChannel ( this . dartExecutor ); final PlatformPlugin platformPlugin = new PlatformPlugin ( activity , this . platformChannel ); this . addActivityLifecycleListener ( new ActivityLifecycleListener () { public void onPostResume () { platformPlugin . updateSystemUiOverlays (); } }); this . mImm = ( InputMethodManager ) this . getContext (). getSystemService ( input_method ); PlatformViewsController platformViewsController = this . mNativeView . getPluginRegistry (). getPlatformViewsController (); this . mTextInputPlugin = new TextInputPlugin ( this , this . dartExecutor , platformViewsController ); this . androidKeyProcessor = new AndroidKeyProcessor ( this . keyEventChannel , this . mTextInputPlugin ); this . androidTouchProcessor = new AndroidTouchProcessor ( this . flutterRenderer ); this . mNativeView . getPluginRegistry (). getPlatformViewsController (). attachTextInputPlugin ( this . mTextInputPlugin ); this . sendLocalesToDart ( this . getResources (). getConfiguration ()); this . sendUserPlatformSettingsToDart (); } }","title":"\u521d\u59cb\u5316UI\u754c\u9762\u3001Plug\uff0c\u4e8b\u4ef6\u76d1\u542c\u56de\u8c03\u65b9\u6cd5"},{"location":"android/flutter/flutterAndroidInit/#surfaceviewflutterengine","text":"\u5728Android\u7aef\u8fdb\u884cSurfaceView\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0cSurfaceView\u7684\u56de\u5230\u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 FlutterJNI \u7c7b\u4e2d\u7684\u672c\u5730\u65b9\u6cd5\u548cJNI\u5c42\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u7ed1\u5b9a\uff0cFlutterEngine\u5728\u8fdb\u884cFlutter\u7684\u6e32\u67d3\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f20\u9012\u76f8\u5173\u7684Surface\u7ed9Android\u5e73\u53f0\u8fdb\u884c\u6e32\u67d3\u663e\u793a this . mSurfaceCallback = new Callback () { public void surfaceCreated ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceCreated ( holder . getSurface ()); } public void surfaceChanged ( SurfaceHolder holder , int format , int width , int height ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceChanged ( width , height ); } public void surfaceDestroyed ( SurfaceHolder holder ) { FlutterView . this . assertAttached (); FlutterView . this . mNativeView . getFlutterJNI (). onSurfaceDestroyed (); } };","title":"SurfaceView\u4e8b\u4ef6\u548cFlutterEngine\u4e8b\u4ef6"},{"location":"android/flutter/flutterAndroidInit/#fluttermain","text":"\b\u8c03\u7528Flutter for android \u5e93\u521d\u59cb\u5316Flutter\u76f8\u5173\u7684\u6587\u4ef6 1. FlutterMain.startInitialization(this); 2. System.loadLibrary('flutter') \u52a0\u8f7dso \u5728\b\bengine\u4e2d\u8c03\u7528engine/src/flutter/shell/platform/android/library_loader.cc\uff0c\b\bJNI\u4e2d\u7684\u4ee3\u7801\u521d\u59cb\u5316: \u4e3b\u8981\u5b8c\u6210\b\u4e09\u4ef6\u4e8b 1.\u521d\u59cb\u5316\b\b\bFlutterMain\u4f5c\u4e3aJNI\u5c42\u56de\u8c03\u7684\u7c7b 2.\u521d\u59cb\u5316\b\u5e73\u53f0\b\u4e8b\u4ef6\u7684\u5904\u7406\u7c7b 3.\u521d\u59cb\u5316UI\u7ed8\u5236Sync\u4fe1\u53f7\u7684\u4f20\u9012","title":"\b\b\bFlutterMain"},{"location":"android/flutter/flutterAndroidInit/#systemloadlibrary","text":"\u5728Flutter.jar\u521d\u59cb\u5316\u65f6\uff0c\u8c03\u7528System.loadLibrary \u67e5\u627e\u89e3\u538b\u51fa\u6765\u7684Flutter.so\u6587\u4ef6\uff0c\u8c03\u7528dlopen\u6253\u5f00\u6253\u5f00so\u5e93\uff0c\u52a0\u8f7dC++\u76f8\u5173\u7684\u8d44\u6e90\uff0c\u52a0\u8f7d\u5b8c\u6210\u540e\u8c03\u7528JNI_OnLoad,\u5177\u4f53\u8c03\u7528\u8fc7\u7a0b\u53c2\u8003\u4e0b\u56fe\uff0c\u5f53\u8c03\u7528 JNI_OnLoad \u5b8c\u6210\u540eso\u5e93\u4ee5\u53ca\u63d0\u4f9b\u4e86\u53ef\u4ee5\u8fd0\u884c\u7684\u51fd\u6570\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u521d\u59cb\u5316Flutter\u76f8\u5173\u7684\u4ee3\u7801\u548c\u4e1a\u52a1\u903b\u8f91","title":"System.loadLibrary \u8c03\u7528\u8fc7\u7a0b"},{"location":"android/flutter/flutterAndroidInit/#jni_onload","text":"JNI\u4e2d\u5bf9\u5e94\u76f8\u5173\u7684\u7c7b\u8fdb\u884c\u521d\u59cb\u5316 \u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u65f6\uff0c\u8c03\u7528\u5f53\u524d\u7684\u65b9\u6cd5\uff0c\u5b8c\u6210\u4e00\u4e0b\u4e09\u4ef6\u4e8b: \u6ce8\u518cJava\u5c42\u4ee3\u7801\u5230JNI\u5c42\uff0c\u65b9\u4fbf\u540e\u7eed\u7684\u56de\u8c03Java\u5c42\u4ee3\u7801 engine/src/flutter/shell/platform/android/flutter_main.cc /src/flutter/shell/platform/android/io/flutter/view/FlutterView.java \u521d\u59cb\u5316\u76f8\u5173\u7684\u5e73\u53f0View\u7684\u4e8b\u4ef6\u5904\u7406\u903b\u8f91 JNIEXPORT jint JNI_OnLoad ( JavaVM * vm , void * reserved ) { // Initialize the Java VM. fml :: jni :: InitJavaVM ( vm ); JNIEnv * env = fml :: jni :: AttachCurrentThread (); bool result = false ; // Register FlutterMain. result = shell :: FlutterMain :: Register ( env ); FML_CHECK ( result ); // Register PlatformView // \u5904\u7406\u5e73\u53f0\u7684UI/\u4e8b\u4ef6\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\uff0c\u540e\u53f0\u6267\u884c result = shell :: PlatformViewAndroid :: Register ( env ); FML_CHECK ( result ); // Register VSyncWaiter. // \u771f\u6b63\u5904\u7406\u76f8\u5173\u7684UI\u7ed8\u5236\u4e8b\u4ef6 result = shell :: VsyncWaiterAndroid :: Register ( env ); FML_CHECK ( result ); return JNI_VERSION_1_4 ; }","title":"JNI_OnLoad"},{"location":"android/flutter/flutterAndroidInit/#fluttermainregisterenv","text":"\u5728library_loader\u5e93\u4e2d\u8fdb\u884c\u7ec4\u6210,\u7f16\u8bd1engine\u56de\u8c03java\u6210\u4ee3\u7801 bool FlutterMain::Register(JNIEnv* env) { static const JNINativeMethod methods[] = { { .name = nativeInit , .signature = (Landroid/content/Context;[Ljava/lang/String;Ljava/ lang/String;Ljava/lang/String;Ljava/lang/String;)V , .fnPtr = reinterpret_cast lt;void* gt;( amp;Init), }, { .name = nativeRecordStartTimestamp , .signature = (J)V , .fnPtr = reinterpret_cast lt;void* gt;( amp;RecordStartTimestamp), }, }; jclass clazz = env- gt;FindClass( io/flutter/view/FlutterMain ); if (clazz == nullptr) { return false; } return env- gt;RegisterNatives(clazz, methods, arraysize(methods)) == 0; }","title":"FlutterMain::Register(env)"},{"location":"android/flutter/flutterAndroidInit/#shell","text":"result = shell::PlatformViewAndroid::Register(env);\b\u5bf9\u5e94\b\bjava\u5c42\u4e8b\u4ef6\u7684\u5904\u7406 /engine/src/flutter/shell/platform/android/platform_view_android.h class PlatformViewAndroid final : public PlatformView { !-- \u6ca1\u6709\u5bf9\b Register \u8fdb\u884c\u521d\u59cb\u5316 -- public : static bool Register ( JNIEnv * env );","title":"Shell"},{"location":"android/flutter/flutterAndroidInit/#vsyncwaiterandroid","text":"VsyncWaiterAndroid::Register(env);\u5904\u7406\u76f8\u5173\u7684frame rate\u95ee\u9898\uff0c\u540c\u6b65\u5e73\u53f0\u5c42\u7684\u4e8b\u4ef6\u548cdart UI\u7684\u4e8b\u4ef6\u66f4\u65b0,JNI\u56de\u8c03Java\u5c42\u7684\u4ee3\u7801 io/flutter/view/VsyncWaiter ,Android\u5e73\u53f0\u5c42\u5bf9\u5e27\u7387\u7684\u63a7\u5236\u4f7f\u7528\u7684\u7c7b\uff1a android.view.Choreographer // \u5bf9\u5e94flutter for android \u5e93\u4e2d\u7684\uff1aio.flutter.view.VsyncWaiter // bool VsyncWaiterAndroid :: Register ( JNIEnv * env ) { static const JNINativeMethod methods [] = {{ . name = nativeOnVsync , . signature = (JJJ)V , . fnPtr = reinterpret_cast void * ( OnNativeVsync ), }}; jclass clazz = env - FindClass ( io/flutter/view/VsyncWaiter ); if ( clazz == nullptr ) { return false ; } g_vsync_waiter_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , clazz ); FML_CHECK ( ! g_vsync_waiter_class - is_null ()); g_async_wait_for_vsync_method_ = env - GetStaticMethodID ( g_vsync_waiter_class - obj (), asyncWaitForVsync , (J)V ); FML_CHECK ( g_async_wait_for_vsync_method_ != nullptr ); return env - RegisterNatives ( clazz , methods , arraysize ( methods )) == 0 ; }","title":"VsyncWaiterAndroid"},{"location":"android/flutter/flutterAndroidInit/#flutter_mainnativeinit","text":"apk\u4e2d\u6587\u4ef6\u62bd\u53d6\b\u5b8c\u6210\u4e4b\u540e\u5904\u7406\b\u521d\u59cb\u5316JNI\u4e2d\u7684\u4ee3\u7801\uff0c\u52a0\u8f7d\bflutter\b\u76f8\u5173\u7684\u6587\u4ef6\u4ee3\u7801\uff0cio/flutter/view/FlutterMain.class \b, nativeInit(applicationContext, (String[])shellArgs.toArray(new String[0]), appBundlePath, appStoragePath, engineCachesPath); ,\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\u5341\u91cc\u6cb3 nativeInit() \u5728Java\u5c42\u53ef\u4ee5\u4f7f\u7528\u76f8\u5173\u7684\u547d\u4ee4\u4f20\u9012\u76f8\u5173\u7684\u53c2\u6570 Java\u5c42\u4e2dapk\u6587\u4ef6\u62bd\u53d6\u5b8c\u6210\u540e\u521d\u59cb\u5316\u53c2\u6570\u4fe1\u606f\uff0c \u4e3b\u8981\u662f\u4f20\u9012\u76f8\u5173\u7684\u521d\u59cb\u5316\u53c2\u6570\u5230JNI\u5c42\uff0c\u65b9\u4fbf\u52a0\u8f7d\u76f8\u5173\u7684\u6587\u4ef6 \u521d\u59cb\u5316Flutter\u8def\u5f84\u4fe1\u606f void FlutterMain :: Init ( JNIEnv * env , jclass clazz , jobject context , jobjectArray jargs , jstring bundlePath , jstring appStoragePath , jstring engineCachesPath ) { std :: vector std :: string args ; args . push_back ( flutter ); for ( auto arg : fml :: jni :: StringArrayToVector ( env , jargs )) { args . push_back ( std :: move ( arg )); } // \u521d\u59cb\u5316\u547d\u4ee4\u884c\u53c2\u6570 auto command_line = fml :: CommandLineFromIterators ( args . begin (), args . end ()); auto settings = SettingsFromCommandLine ( command_line ); // \u521d\u59cb\u5316\u8d44\u6e90\u76ee\u5f55\u7ed3\u6784 settings . assets_path = fml :: jni :: JavaStringToString ( env , bundlePath ); // Restore the callback cache. // TODO(chinmaygarde): Route all cache file access through FML and remove this // setter. // \u8bbe\u7f6e\u7f13\u5b58\u76ee\u5f55 blink :: DartCallbackCache :: SetCachePath ( fml :: jni :: JavaStringToString ( env , appStoragePath )); // \u521d\u59cb\u5316Android\u7f13\u5b58\u76ee\u5f55 fml :: paths :: InitializeAndroidCachesPath ( fml :: jni :: JavaStringToString ( env , engineCachesPath )); // \u4ece\u78c1\u76d8\u52a0\u8f7d\u7f13\u5b58\u6570\u636e blink :: DartCallbackCache :: LoadCacheFromDisk (); // \u5982\u4f55\u8fd0\u884c\u65f6\u914d\u7f6e\u6587\u4ef6\u8def\u5f84 if (! blink :: DartVM :: IsRunningPrecompiledCode ()) { // Check to see if the appropriate kernel files are present and configure // settings accordingly. auto application_kernel_path = fml :: paths :: JoinPaths ({ settings . assets_path , kernel_blob.bin }); if ( fml :: IsFile ( application_kernel_path )) { settings . application_kernel_asset = application_kernel_path ; } } // \u6dfb\u52a0\u56de\u8c03\u8fdb\u5165\u6d88\u606f\u961f\u5217 settings . task_observer_add = []( intptr_t key , fml :: closure callback ) { fml :: MessageLoop :: GetCurrent (). AddTaskObserver ( key , std :: move ( callback )); }; // \u79fb\u9664\u6d88\u606f\u961f\u5217 settings . task_observer_remove = []( intptr_t key ) { fml :: MessageLoop :: GetCurrent (). RemoveTaskObserver ( key ); }; # if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // There are no ownership concerns here as all mappings are owned by the // embedder and not the engine. auto make_mapping_callback = []( const uint8_t * mapping , size_t size ) { return [ mapping , size ]() { return std :: make_unique fml :: NonOwnedMapping ( mapping , size ); }; }; settings . dart_library_sources_kernel = make_mapping_callback ( kPlatformStrongDill , kPlatformStrongDillSize ); # endif // FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // Not thread safe. Will be removed when FlutterMain is refactored to no // longer be a singleton. g_flutter_main . reset ( new FlutterMain ( std :: move ( settings ))); } \b\u6267\u884c\u5230\u8fd9\u4e2a\u5730\u65b9\uff0c\b\b\bApk\u4e2d\u7684\u6587\u4ef6\u5df2\u7ecf\u62bd\u53d6\u5b8c\u6210\uff0c\u56de\u8c03\u65b9\u6cd5\uff0c\u56de\u8c03\u4e8b\u4ef6\u5df2\u7ecf\u5b8c\u6210,\b\u8def\u5f84\u7684\u521d\u59cb\u5316\u4fe1\u606f\u5df2\u7ecf\u521d\u59cb\u5316","title":"flutter_main::nativeInit"},{"location":"android/flutter/flutterAndroidInit/#_1","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u6210Flutter\u548cAndroid\u7684\u8c03\u7528\u903b\u8f91\uff0c\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u603b\u7ed3\u4e00\u4e0bFlutter\u521d\u59cb\u5316\u7684\u5927\u6982\u903b\u8f91 1.App\u542f\u52a8\uff0c\u5728Application\u4e2d\u8c03\u7528 FlutterMain \u4e2d\u7684 startInitialization \u65b9\u6cd5\uff0c\u5b8c\u6210\u8def\u5f84\u7684\u914d\u7f6e\uff0cflutter\u4ee3\u7801\u7684\u62bd\u53d6\uff0c\u52a0\u8f7dFlutter.so\u5e93 2.\u5f00\u59cb\u521d\u59cb\u5316Activity\u4e2d\u7684UI\u754c\u9762\u548c\u7ed1\u5b9aAndroid\u548cFlutter\u901a\u4fe1\uff0c\u56de\u8c03\u7b49\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c FlutterActivityDelegate \u4e2d\u5b8c\u6210 3.\u5728 `\u4e2d\u8c03\u7528 nativeInit \u65b9\u6cd5\u521d\u59cb\u5316 Flutter.so`\u5e93\u8fdb\u884cDartVM\u7684\u521d\u59cb\u5316\u64cd\u4f5c 4. Flutter.so \u5e93\u52a0\u8f7d\u65f6\u8c03\u7528 JNI_OnLoad \u65b9\u6cd5\u4e2d\u521d\u59cb\u5316 FlutterMain \u4f5c\u4e3aAndroid\u7aef\u7684\u8c03\u7528\u5165\u53e3 5.\u521d\u59cb\u5316 PlatformViewAndroid ,Android\u7aef\u548cFlutterView\u901a\u4fe1\u4ea4\u4e92\u7684\u5165\u53e3 6.Flutter.so\u521d\u59cb\u5316\u5b8c\u6210Engine\u76f8\u5173\u7684\u8d44\u6e90\u4e4b\u540e\uff0c\u5728 FlutterLoader.class \u4e2d\u8c03\u7528 nativeInit \u65b9\u6cd5\u521d\u59cb\u5316 7.\u901a\u8fc7 FlutterJNI \u4e2d\u7684 nativeAttach \u65b9\u6cd5\u521d\u59cb\u5316 Flutter.so \u5f00\u59cb\u7ed1\u5b9aAndroid\u7aef\u548cFlutter\u76f8\u5173\u7684\u4e8b\u4ef6\u56de\u8c03 8.\u5728Android\u7aef\u8fdb\u884cSurfaceView\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0cSurfaceView\u7684\u56de\u5230\u51fd\u6570 Callback \u4e2d\uff0c\u901a\u8fc7 FlutterJNI \u7c7b\u4e2d\u7684\u672c\u5730\u65b9\u6cd5\u548cJNI\u5c42\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u7ed1\u5b9a\uff0cFlutterEngine\u5728\u8fdb\u884cFlutter\u7684\u6e32\u67d3\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f20\u9012\u76f8\u5173\u7684Surface\u7ed9Android\u5e73\u53f0\u8fdb\u884c\u6e32\u67d3\u663e\u793a \u81f3\u6b64\uff0cAndroid\u7aef\u542f\u52a8\u3001\u52a0\u8f7dFlutter\u8d44\u6e90\u3001\u521d\u59cb\u5316FlutterEngine\uff0c\u7ed1\u5b9aSurfaceView\u548cFlutterEngine\u5f15\u64ce\u7684\u5bf9\u8c61\uff0c\u6ce8\u518c\u7cfb\u7edf\u7ea7\u522b\u7684\u63d2\u4ef6\u529f\u80fd\uff0c\u5df2\u7ecf\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u4e0b\u4e00\u7bc7\u4e2d\u6211\u4eec\u5c06\uff0c\u5206\u6790FlutterEngine\u5f15\u64ce\u662f\u600e\u4e48\u521d\u59cb\u5316\u7684\uff0c\u6bd5\u7adf\u8981\u5728\u624b\u673a\u4e0a\u770b\u5230Flutter\u5f15\u64ce\u4ee3\u7801\u7684\u663e\u793a","title":"\u603b\u7ed3"},{"location":"android/flutter/flutterDev/","text":"Fluttter \u5f00\u53d1 \u5728\u5b66\u4e60\u4e00\u4e2a\u65b0\u7684\u6280\u672f\u7684\u4f7f\u7528\uff0c\u4ee5\u5f80\u7684\u7ecf\u9a8c\u90fd\u662f\u5728\u4e00\u4e2a\u70b9\u4e0a\u82b1\u5f88\u591a\u65f6\u95f4\uff0c\u5728\u7528\u4e00\u4e2a\u77e5\u8bc6\u70b9\u8bdd\u82b1\u8d39\u91cd\u590d\u7684\u5de5\u4f5c\uff0c\u4e00\u65e6\u6709\u6240\u6539\u53d8\uff0c\u5c31\u6ca1\u6709\u89e3\u51b3\u65b9\u6848\u548c\u5b9e\u5f55\uff0c\u672c\u6587\u8bb0\u5f55\u4e00\u4e0b Flutter\u5b66\u4e60\u7684\u4e00\u4e0b\u65b9\u5411\u548c\u89c4\u5212: Flutter \u7684\u67b6\u6784 * \u4e0d\u540c\u67b6\u6784\u7684\u529f\u80fd\u3001\u4f5c\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\u8ba1\uff0c\u8fd9\u6837\u8bbe\u8ba1\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff0c\u5728\u90a3\u4e9b\u5730\u65b9\u53ef\u4ee5\u8fdb\u4e00\u6b65\u505a\u4e00\u4e9b\u6539\u8fdb\uff0c\u4f7f\u7528\u7684\u6e90\u4ee3\u7801\u548c\u5de5\u7a0b\u6848\u4f8b Flutter \u5f00\u53d1\u5de5\u5177\u63d2\u4ef6 Flutter \u6253\u5305\u6d41\u7a0b\uff0c\u751f\u6210\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u4e0d\u540c\u7684\u6253\u5305\u6a21\u5f0f\u914d\u7f6e Flutter \u6df7\u6dc6 Flutter \u4f18\u5316","title":"Flutter\u5f00\u53d1"},{"location":"android/flutter/flutterDev/#fluttter","text":"\u5728\u5b66\u4e60\u4e00\u4e2a\u65b0\u7684\u6280\u672f\u7684\u4f7f\u7528\uff0c\u4ee5\u5f80\u7684\u7ecf\u9a8c\u90fd\u662f\u5728\u4e00\u4e2a\u70b9\u4e0a\u82b1\u5f88\u591a\u65f6\u95f4\uff0c\u5728\u7528\u4e00\u4e2a\u77e5\u8bc6\u70b9\u8bdd\u82b1\u8d39\u91cd\u590d\u7684\u5de5\u4f5c\uff0c\u4e00\u65e6\u6709\u6240\u6539\u53d8\uff0c\u5c31\u6ca1\u6709\u89e3\u51b3\u65b9\u6848\u548c\u5b9e\u5f55\uff0c\u672c\u6587\u8bb0\u5f55\u4e00\u4e0b Flutter\u5b66\u4e60\u7684\u4e00\u4e0b\u65b9\u5411\u548c\u89c4\u5212:","title":"Fluttter \u5f00\u53d1"},{"location":"android/flutter/flutterDev/#flutter","text":"* \u4e0d\u540c\u67b6\u6784\u7684\u529f\u80fd\u3001\u4f5c\u7528\uff0c\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8bbe\u8ba1\uff0c\u8fd9\u6837\u8bbe\u8ba1\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff0c\u5728\u90a3\u4e9b\u5730\u65b9\u53ef\u4ee5\u8fdb\u4e00\u6b65\u505a\u4e00\u4e9b\u6539\u8fdb\uff0c\u4f7f\u7528\u7684\u6e90\u4ee3\u7801\u548c\u5de5\u7a0b\u6848\u4f8b","title":"Flutter \u7684\u67b6\u6784"},{"location":"android/flutter/flutterDev/#flutter_1","text":"","title":"Flutter \u5f00\u53d1\u5de5\u5177\u63d2\u4ef6"},{"location":"android/flutter/flutterDev/#flutter_2","text":"","title":"Flutter \u6253\u5305\u6d41\u7a0b\uff0c\u751f\u6210\u7684\u4e2d\u95f4\u6587\u4ef6\uff0c\u4e0d\u540c\u7684\u6253\u5305\u6a21\u5f0f\u914d\u7f6e"},{"location":"android/flutter/flutterDev/#flutter_3","text":"","title":"Flutter \u6df7\u6dc6"},{"location":"android/flutter/flutterDev/#flutter_4","text":"","title":"Flutter \u4f18\u5316"},{"location":"android/flutter/flutterEngine/","text":"Flutter engine\u6e90\u7801\u7f16\u8bd1 \u4f7f\u7528Flutter \u9996\u5148\u81ea\u5df1\u5f97\u6709\u4e00\u53f0Mac\u7535\u8111\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u4e00\u4e0b\uff0c\u82f9\u679c\u7684\u4ea7\u54c1\u505a\u5f97\u4e0d\u9519\u54e6\uff0c\u5f00\u53d1\u4e94\u5e74\uff0c\u81ea\u4ece\u6362\u4e0a\u4e86Mac\u4e4b\u540e\uff0c\u7591\u96be\u6742\u75c7\u5c31\u5c11\u4e86\u4e0d\u5c11\uff0c\u5927\u91cf\u7684\u65f6\u95f4\u90fd\u53ef\u4ee5\u7528\u5728\u5f00\u53d1 \u548c\u4ea7\u54c1\u903b\u8f91\u4e4b\u4e0a\u3002 SSH\u7684\u5b89\u88c5\u548c\u4f7f\u7528 https://help.github.com/en/articles/connecting-to-github-with-ssh","title":"FlutterEngine\u6e90\u7801\u7f16\u8bd1"},{"location":"android/flutter/flutterEngine/#flutter-engine","text":"\u4f7f\u7528Flutter \u9996\u5148\u81ea\u5df1\u5f97\u6709\u4e00\u53f0Mac\u7535\u8111\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u4e00\u4e0b\uff0c\u82f9\u679c\u7684\u4ea7\u54c1\u505a\u5f97\u4e0d\u9519\u54e6\uff0c\u5f00\u53d1\u4e94\u5e74\uff0c\u81ea\u4ece\u6362\u4e0a\u4e86Mac\u4e4b\u540e\uff0c\u7591\u96be\u6742\u75c7\u5c31\u5c11\u4e86\u4e0d\u5c11\uff0c\u5927\u91cf\u7684\u65f6\u95f4\u90fd\u53ef\u4ee5\u7528\u5728\u5f00\u53d1 \u548c\u4ea7\u54c1\u903b\u8f91\u4e4b\u4e0a\u3002","title":"Flutter engine\u6e90\u7801\u7f16\u8bd1"},{"location":"android/flutter/flutterEngine/#ssh","text":"https://help.github.com/en/articles/connecting-to-github-with-ssh","title":"SSH\u7684\u5b89\u88c5\u548c\u4f7f\u7528"},{"location":"android/flutter/flutterUI/","text":"Flutter Most of the screenshots in this tutorial are displayed with debugPaintSizeEnabled set to true so you can see the visual layout. For more information, see Visual debugging , a section in Debugging Flutter apps. A child property if they take a single child \u2013 for example, Center or Container A children property if they take a list of widgets \u2013 for example, Row, Column, ListView, or Stack. Meterail UI \u662f\u4e00\u5957\u5df2\u7ecf\u5b9a\u5236\u597d\u7684UI\u754c\u9762 For a Material app, you can use a Scaffold widget; it provides a default banner, background color, and has API for adding drawers, snack bars, and bottom sheets. Then you can add the Center widget directly to the body property for the home page. By default a non-Material app doesn\u2019t include an AppBar, title, or background color. App source code: Material app Non-Material app","title":"FlutterUI"},{"location":"android/flutter/flutterUI/#flutter","text":"Most of the screenshots in this tutorial are displayed with debugPaintSizeEnabled set to true so you can see the visual layout. For more information, see Visual debugging , a section in Debugging Flutter apps. A child property if they take a single child \u2013 for example, Center or Container A children property if they take a list of widgets \u2013 for example, Row, Column, ListView, or Stack. Meterail UI \u662f\u4e00\u5957\u5df2\u7ecf\u5b9a\u5236\u597d\u7684UI\u754c\u9762 For a Material app, you can use a Scaffold widget; it provides a default banner, background color, and has API for adding drawers, snack bars, and bottom sheets. Then you can add the Center widget directly to the body property for the home page. By default a non-Material app doesn\u2019t include an AppBar, title, or background color. App source code: Material app Non-Material app","title":"Flutter"},{"location":"android/flutter/flutterUIframework/","text":"Flutter UI \u67b6\u6784 \u6982\u8ff0 \u5728Engine\u6e90\u4ee3\u7801\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\uff0cFlutter\u662f\u901a\u8fc7widow\u5c42\u548cFlutter \u6846\u67b6\u5c42\u901a\u4fe1\uff0cWidow\u662f\u4e0a\u4e0b\u5c42\u901a\u4fe1\u7684\u67a2\u7ebd\uff0c\u542f\u52a8\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff0c\u90a3\u4e48Widow\u6700\u5c0f\u7684\u53ef\u6267\u884c\u5355\u5143\u662f\u4ec0\u4e48\uff1f\uff1f flutter \u5f15\u64ce\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u8c03\u7528Window\u4e2d\u7684 onBeginFrame \u65b9\u6cd5\u6765\u6784\u5efa\u4e00\u5e27\uff0c\u6784\u5efa\u5b8c\u6210\u4e00\u5e27\u4e4b\u540e\u8c03\u7528 ui.window.render(sceneBuilder.build()); \u4f20\u9012\u7ed9Flutter\u7684Engine\u4e2d\uff0c\u7b2c\u4e8c\u5e27\u662f\u901a\u8fc7 scheduleFrame \u4e0d\u65ad\u7684\u8c03\u52a8\u6765\u6539\u53d8\u6574\u4e2aWidget\u7684\u6784\u5efa\u8fc7\u7a0b\uff0c\u4e0d\u65ad\u7684\u6539\u53d8Widget\u751f\u6210\u7684\u6e32\u67d3\u5bf9\u8c61\uff0c\u4f20\u9012\u7ed9Flutter\u5f15\u64ce\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u76f8\u5173\u7684\u4ee3\u7801\u754c\u9762\u7684\u53d8\u52a8\uff0c\u9875\u9762\u8df3\u8f6c\u7b49\u3002 \u8bb0\u7740\u4e0b\u9762\u4e09\u4e2a\u65b9\u6cd5\uff0cWidget\u7684\u6240\u7528\u8c03\u7528\u8fc7\u7a0b\u90fd\u662f\u5728\u4e3a\u6784\u5efa\u4e00\u5e27\u5728\u505a\u51c6\u5907 ui.window.onBeginFrame = beginFrame; ui.window.render(sceneBuilder.build()); ui.window.scheduleFrame(); ui.Window\u7c7b\u662fFlutter\u5f15\u64ce\u548cFlutterUI\u6846\u67b6\u7684\u63a5\u53e3\uff0cFlutterUI\u662f\u600e\u4e48\u542f\u52a8\u8d77\u6765\u7684\uff1f\uff1f\uff1f 1.\u4e3b\u8981\u5b8c\u6210\u7684\u662fFlutterUI\u5c42\u548cFlutterEngine\u5c42\u7684\u7ed1\u5b9a\u64cd\u4f5cui.Window 2.\u5206\u89e3\u7cfb\u7edf\u6210\u7684\u4e8b\u4ef6 GestureBinding ServicesBinding SchedulerBinding PaintingBinding, SemanticsBinding RendererBinding WidgetsBinding 3.\u63d0\u4f9b\u4e00\u4e2a\u6e32\u67d3\u5bf9\u8c61\u4e2a\u7ed9ui.window.render(sceneBuilder.build()); \u8c03\u7528Engine\u4e2d\u7684\u6e32\u67d3\u5f15\u64ce 4.\u521d\u59cb\u5316\u5e73\u53f0Plugin\u63a5\u53e3 4.\u521d\u59cb\u5316\u591a\u8bed\u8a00\uff0c\u591a\u533a\u57df window \u4e8b\u4ef6\u662f\u600e\u4e48\u5206\u89e3\u7ed9\u4e0d\u540c\u7684Binding\u8fdb\u884c\u5904\u7406\u7684\uff1f\uff1f 1.FlutterEngine\u901a\u8fc7Widow\u7c7b\u548cFlutterUI\u8fdb\u884c\u901a\u4fe1\uff0c\u5305\u62ecWidget\u7684\u7ed8\u5236\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406 2.Window\u7c7b\u628a\u76f8\u5173\u7684\u4e8b\u4ef6\u56de\u8c03\u548c\u8c03\u7528\u65b9\u6cd5\u8fd4\u56de\u7ed9\u4e0d\u540c\u7684Bindings\u7c7b\u8fdb\u884c\u89e3\u8026\uff0c\u6bcf\u4e2a\u90e8\u5206\u5b8c\u6210\u76f8\u5173\u7684\u64cd\u4f5c 3.FlutterUI\u5c42\u901a\u8fc7runApp\u5305Flutter\u76f8\u5173\u7684\u90e8\u5206\u63d0\u4ea4\u7ed9\u7cfb\u7edf\u6846\u67b6\u548c\u7cfb\u7edf\u6846\u67b6\u5c42\u8fdb\u884c\u901a\u4fe1 4.\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528window\u7c7b\u8fdb\u884cFrame\u7684\u7ed8\u5236\uff0c\u5c31\u80fd\u591f\u5bf9Flutter\u5c42\u8fdb\u884c\u7406\u89e3\uff0cFlutterUI\u5c42\u5176\u5b9e\u662fWindow\u6784\u9020\u7684\u4e00\u4e2a\u6269\u5c55\u548c\u7ec6\u5316\uff0c \u6838\u5fc3\u6b65\u9aa4: Widgets\u5c42\u548cwindow\u5c42\u89e3\u8026\u662f\u901a\u8fc7\u7ee7\u627f BindingBase \u7684 mixin \u7c7b\u6765\u7ee7\u7eed\u7684\uff0c\u4e0d\u540c\u7684Bindings\u7c7b\u7ee7\u627f BindingBase , /// A concrete binding for applications based on the Widgets framework. /// /// This is the glue that binds the framework to the Flutter engine. class WidgetsFlutterBinding extends BindingBase with GestureBinding , ServicesBinding , SchedulerBinding , PaintingBinding , SemanticsBinding , RendererBinding , WidgetsBinding { /// Returns an instance of the [WidgetsBinding], creating and /// initializing it if necessary. If one is created, it will be a /// [WidgetsFlutterBinding]. If one was previously initialized, then /// it will at least implement [WidgetsBinding]. /// /// You only need to call this method if you need the binding to be /// initialized before calling [runApp]. /// /// In the `flutter_test` framework, [testWidgets] initializes the /// binding instance to a [TestWidgetsFlutterBinding], not a /// [WidgetsFlutterBinding]. static WidgetsBinding ensureInitialized () { if ( WidgetsBinding . instance == null ) WidgetsFlutterBinding (); return WidgetsBinding . instance ; } } WidgetsFlutterBinding \u5b9e\u73b0\u4e86 BindingBase ,\u5728 BindingBase \u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528 initInstances \u65b9\u6cd5\uff0c runApp\u8c03\u7528 ensureInitialized \u65b9\u6cd5\u6765\u5168\u90e8\u6bcf\u4e00\u4e2aBinding\u5bf9\u8c61\u90fd\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u987a\u5e8f\u662f\u4ece\u540e\u5f80\u524d\u8c03\u7528 initInstances \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u540c\u65f6\u4e5f\u5bf9Window\u5206\u89e3\u7684\u5185\u5bb9\u8fdb\u884c BindingBase \u5b8c\u6210\u8fc7\u7a0b 1.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initInstances 2.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initServiceExtensions 3.\u540c\u65f6BindingBase, SchedulerBinding, GestureBinding, RendererBinding, SemanticsBinding \u4e5f\u548c\u8c03\u7528\u81ea\u5df1\u7684\u4e0a\u8ff0\u4e24\u4e2a\u6784\u9020\u65b9\u6cd5 4.\u5b8c\u6210FlutterUI\u5c42\u548cFlutterEngine\u4e4b\u95f4\u7684\u4ea4\u4e92\u8fc7\u7a0b flutterUI\u6846\u67b6\u4e2d\u63d0\u4f9b\u7684\u5b9e\u73b0BindingBase\u7684\u7c7b \u6bcf\u4e2a\u7c7b\u7684\u5177\u4f53\u529f\u80fd\u67e5\u770b\u4e00\u4e0b\u5bf9\u5e94\u7c7b\u7684\uff1a \u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initInstances , initServiceExtensions Object (dart.core) BindingBase (binding.dart) \u6240\u6709Binding\u7c7b\u7684\u7236\u7c7b\uff0c\u4e4b\u540e\u521d\u59cb\u5316\u4e00\u6b21 SemanticsBinding (binding.dart) PaintingBinding (binding.dart) ServicesBinding (binding.dart) SchedulerBinding (binding.dart) GestureBinding (binding.dart) RendererBinding (binding.dart) RenderingFlutterBinding (binding.dart) WidgetsBinding (binding.dart) FlutterUI\u7684\u7edf\u4e00\u6ce8\u518c\u5165\u53e3 WidgetsFlutterBinding (binding.dart) TestWidgetsFlutterBinding (binding.dart) PaintingBinding \u7ed1\u5b9a\u753b\u7b14\u5e93\uff0c\u5904\u7406\u56fe\u50cf\u7f13\u5b58\uff0c\u548cServicesBinding \u914d\u5957\u4f7f\u7528 mixin PaintingBinding on BindingBase , ServicesBinding { @ override void initInstances () { super . initInstances (); _instance = this ; _imageCache = createImageCache (); if ( shaderWarmUp != null ) { shaderWarmUp . execute (); } } ServicesBinding \u76d1\u542c\u5e73\u53f0\u6d88\u606f\u5e76\u5c06\u5b83\u4eec\u5b9a\u5411\u5230[BinaryMessages]\u3002[ServicesBinding]\u8fd8\u6ce8\u518c\u4e86\u4e00\u4e2a\u516c\u5f00\u7684[LicenseEntryCollector]\u5728\u5b58\u50a8\u5728\u8d44\u4ea7\u6839\u76ee\u5f55\u7684 LICENSE \u6587\u4ef6\u4e2d\u627e\u5230\u7684\u8bb8\u53ef\u8bc1\u6346\u7ed1\uff0c\u5e76\u5b9e\u73b0 ext.flutter.evict \u670d\u52a1\u6269\u5c55 mixin ServicesBinding on BindingBase { @ override void initInstances () { super . initInstances (); _instance = this ; window .. onPlatformMessage = BinaryMessages . handlePlatformMessage ; initLicenses (); } SchedulerBinding \u7528\u4e8e\u8fd0\u884c\u4ee5\u4e0b\u5185\u5bb9\u7684\u8c03\u5ea6\u7a0b\u5e8f\uff1a Transient\u56de\u8c03 \uff0c\u7531\u7cfb\u7edf\u7684[Window.onBeginFrame]\u89e6\u53d1 \u56de\u8c03\uff0c\u7528\u4e8e\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\u540c\u6b65\u5230\u7cfb\u7edf\u663e\u793a\u4f8b\u5982\uff0c[Ticker]\u548c[AnimationController]\u7684\u89e6\u53d1\u5668\u6765\u81ea\u8fd9\u4e9b\u3002 Persistent callbacks \uff0c\u7531\u7cfb\u7edf\u7684[Window.onDrawFrame]\u89e6\u53d1\u56de\u8c03\uff0c\u7528\u4e8e\u5728\u77ac\u6001\u56de\u8c03\u540e\u66f4\u65b0\u7cfb\u7edf\u7684\u663e\u793a\u6267\u884c\u4f8b\u5982\uff0c\u6e32\u67d3\u5c42\u4f7f\u7528\u5b83\u6765\u9a71\u52a8\u5b83\u6e32\u67d3\u7ba1\u9053\u3002 Post-frame callbacks \uff0c\u4ec5\u5728\u6301\u4e45\u56de\u8c03\u4e4b\u540e\u8fd0\u884c \u4ece[Window.onDrawFrame]\u56de\u8c03\u8fd4\u56de\u4e4b\u524d\u3002 *\u975e\u6e32\u67d3\u4efb\u52a1\uff0c\u5728\u5e27\u4e4b\u95f4\u8fd0\u884c\u3002\u7ed9\u51fa\u4e86\u8fd9\u4e9b \u4f18\u5148\u7ea7\uff0c\u6839\u636ea\u6309\u4f18\u5148\u7ea7\u987a\u5e8f\u6267\u884c mixin SchedulerBinding on BindingBase , ServicesBinding { @ override void initInstances () { super . initInstances (); _instance = this ; window . onBeginFrame = _handleBeginFrame ; window . onDrawFrame = _handleDrawFrame ; SystemChannels . lifecycle . setMessageHandler ( _handleLifecycleMessage ); readInitialLifecycleStateFromNativeWindow (); } \u76d1\u542c\u5e73\u53f0\u6d88\u606f\u5e76\u5c06\u5b83\u4eec\u5b9a\u5411\u5230[BinaryMessages]\u3002[ServicesBinding]\u8fd8\u6ce8\u518c\u4e86\u4e00\u4e2a\u516c\u5f00\u7684[LicenseEntryCollector]\u5728\u5b58\u50a8\u5728\u8d44\u4ea7\u6839\u76ee\u5f55\u7684 LICENSE \u6587\u4ef6\u4e2d\u627e\u5230\u7684\u8bb8\u53ef\u8bc1\u6346\u7ed1\uff0c\u5e76\u5b9e\u73b0 ext.flutter.evict \u670d\u52a1\u6269\u5c55\u3002 mixin ServicesBinding on BindingBase { @ override void initInstances () { super . initInstances (); _instance = this ; window .. onPlatformMessage = BinaryMessages . handlePlatformMessage ; initLicenses (); } GestureBinding \u5f53[GestureBinding]\u6536\u5230[PointerDownEvent]\u65f6\uff08\u6765\u81ea[Window.onPointerDataPacket]\uff0c\u7531\u3002\u89e3\u91ca[PointerEventConverter]\uff09\uff0c\u6267\u884c[hitTest]\u4ee5\u786e\u5b9a\u54ea\u4e2a[HitTestTarget]\u8282\u70b9\u53d7\u5230\u5f71\u54cd\u3002 \uff08\u9884\u8ba1\u5176\u4ed6\u7ea6\u675f\u529b\u5b9e\u73b0[hitTest]\u4ee5\u63a8\u8fdf[HitTestable]\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u6e32\u67d3\u5c42\u5ef6\u4f38\u5230[RenderView]\u548c\u6e32\u67d3\u5bf9\u8c61\u7684\u5176\u4f59\u90e8\u5206\u5c42\u6b21\u7ed3\u6784\u3002\uff09 mixin GestureBinding on BindingBase implements HitTestable , HitTestDispatcher , HitTestTarget { @ override void initInstances () { super . initInstances (); _instance = this ; window . onPointerDataPacket = _handlePointerDataPacket ; } RendererBinding /// The glue between the render tree and the Flutter engine. mixin RendererBinding on BindingBase , ServicesBinding , SchedulerBinding , GestureBinding , SemanticsBinding , HitTestable { @ override void initInstances () { super . initInstances (); _instance = this ; _pipelineOwner = PipelineOwner ( onNeedVisualUpdate: ensureVisualUpdate , onSemanticsOwnerCreated: _handleSemanticsOwnerCreated , onSemanticsOwnerDisposed: _handleSemanticsOwnerDisposed , ); window .. onMetricsChanged = handleMetricsChanged .. onTextScaleFactorChanged = handleTextScaleFactorChanged .. onPlatformBrightnessChanged = handlePlatformBrightnessChanged .. onSemanticsEnabledChanged = _handleSemanticsEnabledChanged .. onSemanticsAction = _handleSemanticsAction ; initRenderView (); _handleSemanticsEnabledChanged (); assert ( renderView != null ); addPersistentFrameCallback ( _handlePersistentFrameCallback ); _mouseTracker = _createMouseTracker (); } WidgetsBinding /// The glue between the widgets layer and the Flutter engine. mixin WidgetsBinding on BindingBase , SchedulerBinding , GestureBinding , RendererBinding , SemanticsBinding { @ override void initInstances () { super . initInstances (); _instance = this ; buildOwner . onBuildScheduled = _handleBuildScheduled ; window . onLocaleChanged = handleLocaleChanged ; window . onAccessibilityFeaturesChanged = handleAccessibilityFeaturesChanged ; SystemChannels . navigation . setMethodCallHandler ( _handleNavigationInvocation ); SystemChannels . system . setMessageHandler ( _handleSystemMessage ); } \u6e90\u7801\u5b9e\u73b0 \u4f7f\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u586b\u5145\u5e76\u5c06\u5176\u9644\u52a0\u5230\u5c4f\u5e55\u4e0a\u3002\u5c0f\u90e8\u4ef6\u5728\u5e03\u5c40\u671f\u95f4\u88ab\u8d4b\u4e88\u7ea6\u675f\uff0c\u8feb\u4f7f\u5b83\u586b\u5145\u6574\u4e2a\u5c4f\u5e55\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5bf9\u9f50\u5230\u5c4f\u5e55\u7684\u4e00\u4fa7\uff08\u4f8b\u5982\uff0c\u9876\u90e8\uff09\uff0c\u8003\u8651\u4f7f\u7528[Align]\u5c0f\u90e8\u4ef6\u3002\u5982\u679c\u4f60\u60f3\u4e2d\u5fc3\u60a8\u7684\u5c0f\u90e8\u4ef6\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528[\u4e2d\u5fc3]\u5c0f\u90e8\u4ef6\u518d\u6b21\u8c03\u7528[runApp]\u5c06\u4ece\u5c4f\u5e55\u4e0a\u5206\u79bb\u4e0a\u4e00\u4e2a\u6839\u5c0f\u90e8\u4ef6\u5e76\u5c06\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u9644\u52a0\u5230\u5176\u4f4d\u7f6e\u3002\u6bd4\u8f83\u65b0\u7684\u5c0f\u90e8\u4ef6\u6811\u9488\u5bf9\u4e0a\u4e00\u4e2a\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6811\uff0c\u4efb\u4f55\u5dee\u5f02\u90fd\u5e94\u7528\u4e8e\u5e95\u5c42\u6e32\u67d3\u6811\uff0c\u7c7b\u4f3c\u4e8e[StatefulWidget]\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u8c03\u7528[State.setState]\u540e\u91cd\u5efa\u3002\u5982\u6709\u5fc5\u8981\uff0c\u4f7f\u7528[WidgetsFlutterBinding]\u521d\u59cb\u5316\u7ed1\u5b9a\u3002 \u4e5f\u53ef\u4ee5\u770b\u770b\uff1a[WidgetsBinding.attachRootWidget]\uff0c\u5b83\u4e3a\u3002\u521b\u5efa\u6839\u5c0f\u90e8\u4ef6\u5c0f\u90e8\u4ef6\u5c42\u6b21\u7ed3\u6784\u3002 [RenderObjectToWidgetAdapter.attachToRenderTree]\uff0c\u5b83\u521b\u5efa\u4e86\u6839\u5143\u7d20\u5c42\u6b21\u7ed3\u6784\u7684\u5143\u7d20\u3002 [WidgetsBinding.handleBeginFrame]\uff0c\u5b83\u5c06\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7ba1\u9053\u6cf5\u9001\u5230\u786e\u4fdd\u6784\u5efa\u5c0f\u90e8\u4ef6\uff0c\u5143\u7d20\u548c\u6e32\u67d3\u6811\u3002 void runApp ( Widget app ) { WidgetsFlutterBinding . ensureInitialized () .. attachRootWidget ( app ) .. scheduleWarmUpFrame (); } WidgetsBinding\u96c6\u6210Bindingbase: 1.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initInstances 2.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initServiceExtensions 3.\u540c\u65f6BindingBase, SchedulerBinding, GestureBinding, RendererBinding, SemanticsBinding \u4e5f\u548c\u8c03\u7528\u81ea\u5df1\u7684\u4e0a\u8ff0\u4e24\u4e2a\u6784\u9020\u65b9\u6cd5 4.\u5b8c\u6210FlutterUI\u5c42\u548cFlutterEngine\u4e4b\u95f4\u7684\u4ea4\u4e92\u8fc7\u7a0b /// The glue between the widgets layer and the Flutter engine. mixin WidgetsBinding on BindingBase , SchedulerBinding , GestureBinding , RendererBinding , SemanticsBinding { @ override void initInstances () { super . initInstances (); _instance = this ; buildOwner . onBuildScheduled = _handleBuildScheduled ; window . onLocaleChanged = handleLocaleChanged ; window . onAccessibilityFeaturesChanged = handleAccessibilityFeaturesChanged ; SystemChannels . navigation . setMethodCallHandler ( _handleNavigationInvocation ); SystemChannels . system . setMessageHandler ( _handleSystemMessage ); } static WidgetsBinding get instance = _instance ; static WidgetsBinding _instance ; @ override void initServiceExtensions () { super . initServiceExtensions (); registerBoolServiceExtension ( name: showPerformanceOverlay , getter: () = Future bool . value ( WidgetsApp . showPerformanceOverlayOverride ), setter: ( bool value ) { if ( WidgetsApp . showPerformanceOverlayOverride == value ) return Future void . value (); WidgetsApp . showPerformanceOverlayOverride = value ; return _forceRebuild (); }, ); WidgetInspectorService . instance . initServiceExtensions ( registerServiceExtension ); return true ; }()); } FlutterUI\u548cFlutterEngine\u4e4b\u95f4\u7684\u7c98\u5408\u5242 BindingBase 1.BindingBase\u521d\u59cb\u5316 \u7528\u4e8e\u63d0\u4f9b\u5355\u4f8b\u670d\u52a1\u7684mixins\u7684\u57fa\u7c7b\uff08\u4e5f\u79f0\u4e3a\u201cBinding\u201d\uff09\u3002\u5728mixin\u7684 on \u5b50\u53e5\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u7ee7\u627f\u5b83\u5e76\u5b9e\u73b0[initInstances\uff08\uff09]\u3002 mixin\u4fdd\u8bc1\u53ea\u80fd\u6784\u5efa\u4e00\u6b21\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\uff08\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5982\u679c\u6784\u9020\u4e24\u6b21\uff0c\u5b83\u5c06\u65ad\u8a00 \u5728\u68c0\u67e5\u6a21\u5f0f\u4e0b\uff09\u3002\u7528\u4e8e\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u9876\u5c42\u5c06\u5177\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u7ee7\u627f\u81ea[BindingBase]\u5e76\u4f7f\u7528\u6240\u6709\u5404\u79cd[BindingBase]mixins\uff08\u4f8b\u5982[ServicesBinding]\uff09\u3002\u4f8b\u5982\uff0cWidgets\u5e93\u4e2dFlutter\u5f15\u5165\u4e86\u4e00\u4e2a\u540d\u4e3a[WidgetsFlutterBinding]\u7684\u7ed1\u5b9a\u3002\u76f8\u5173\u7684library\u5b9a\u4e49\u4e86\u5982\u4f55\u521b\u5efa\u7ed1\u5b9a\u3002\u53ef\u4ee5\u6697\u793a\uff08\u4f8b\u5982\uff0c[WidgetsFlutterBinding]\u81ea\u52a8\u4ece[runApp]\u5f00\u59cb\uff0c\u6216\u8005\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u663e\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002\u5c0f\u90e8\u4ef6\u5c42\u548cFlutter\u5f15\u64ce\u4e4b\u95f4\u7684\u7c98\u5408\u5242\u3002 \u521d\u59cb\u5316\u7ed1\u5b9a\u65f6\u8c03\u7528\uff0c\u6ce8\u518c\u670d\u52a1\u6269\u5c55\u3002\u60f3\u8981\u516c\u5f00\u670d\u52a1\u6269\u5c55\u7684\u7ed1\u5b9a\u5e94\u8be5\u91cd\u8f7d\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u8c03\u7528\u6765\u6ce8\u518c\u5b83\u4eec [registerSignalServiceExtension]\uff0c[registerBoolServiceExtension]\uff0c [registerNumericServiceExtension]\uff0c\u548c [registerServiceExtension]\uff08\u6309\u590d\u6742\u7a0b\u5ea6\u9012\u589e\uff09\u3002\u6b64\u65b9\u6cd5\u7684\u5b9e\u73b0\u5fc5\u987b\u8c03\u7528\u5b83\u4eec\u7684\u8d85\u7c7b\u5b9e\u65bd{ @macro flutter.foundation.bindingBase.registerServiceExtension} \u4e5f\u53ef\u4ee5\u770b\u770b\uff1a https://github.com/dart-lang/sdk/blob/master/runtime/vm/service/service.md#rpcs-requests-and-responses 2.\u548cWindow\u7c7b\u7684\u5173\u8054 \u7ed1\u5b9a\u6b64\u7ed1\u5b9a\u7684\u7a97\u53e3\u3002\u8bb8\u591a\u5176\u4ed6\u7ed1\u5b9a\u88ab\u5b9a\u4e49\u4e3a[BindingBase]\u7684\u6269\u5c55\uff0c\uff0c\u4f8b\u5982\uff0c[ServicesBinding]\uff0c[RendererBinding]\u548c[WidgetsBinding]\u3002\u6bcf\u4e2a\u8fd9\u4e9b\u7ed1\u5b9a\u5b9a\u4e49\u4e86\u4e0e[ui.Window]\u4ea4\u4e92\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\uff0c[ServicesBinding]\u6ce8\u518c\u4e00\u4e2a[ui.Window.onPlatformMessage]\u5904\u7406\u7a0b\u5e8f\uff0c\u548c[RendererBinding]\u6ce8\u518c[ui.Window.onMetricsChanged]\uff0c[ui.Window.onTextScaleFactorChanged]\uff0c[ui.Window.onSemanticsEnabledChanged]\uff0c\u548c[ui.Window.onSemanticsAction]\u5904\u7406\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u5176\u4ed6\u7ed1\u5b9a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u53ef\u4ee5\u9759\u6001\u5730\u5355\u72ec\u8bbf\u95ee[Window]\uff0c\u4f46\u8fd9\u4f1a\u59a8\u788d\u7528\u5047\u5192\u6d4b\u8bd5\u8fd9\u4e9b\u884c\u4e3a\u7684\u80fd\u529b\u7a97\u53e3\u7528\u4e8e\u9a8c\u8bc1\u76ee\u7684\u3002\u56e0\u6b64\uff0c[BindingBase]\u66b4\u9732\u4e86\u8fd9\u4e00\u70b9[Window]\u4f9b\u5176\u4ed6\u7ed1\u5b9a\u4f7f\u7528\u3002 [BindingBase]\u7684\u5b50\u7c7b\uff0c\u5982 [TestWidgetsFlutterBinding]\uff0c\u53ef\u4ee5\u8986\u76d6\u6b64\u8bbf\u95ee\u5668\u4ee5\u8fd4\u56dea\u4e0d\u540c\u7684[Window]\u5b9e\u73b0\uff0c\u4f8b\u5982[TestWindow]\u3002 abstract class BindingBase { BindingBase () { 1. \u521d\u59cb\u5316\u5b9e\u4f8b\u672c\u8eab 2. \u6ce8\u518c\u6269\u5c55\u670d\u52a1 ....... initInstances (); initServiceExtensions (); ....... } \u83b7\u53d6 window \u7c7b ui . Window get window = ui . window ; void initInstances () { } \u6ce8\u518c\u6269\u5c55\u670d\u52a1 @ protected @ mustCallSuper void initServiceExtensions () { assert (() { const String platformOverrideExtensionName = platformOverride ; registerServiceExtension ( name: platformOverrideExtensionName , callback: ( Map String , String parameters ) async { if ( parameters . containsKey ( value )) { switch ( parameters [ value ]) { case android : debugDefaultTargetPlatformOverride = TargetPlatform . android ; break ; case iOS : debugDefaultTargetPlatformOverride = TargetPlatform . iOS ; break ; case fuchsia : debugDefaultTargetPlatformOverride = TargetPlatform . fuchsia ; break ; case default : default : debugDefaultTargetPlatformOverride = null ; } _postExtensionStateChangedEvent ( platformOverrideExtensionName , defaultTargetPlatform . toString (). substring ( $ TargetPlatform . . length ), ); await reassembleApplication (); } return String , dynamic { value : defaultTargetPlatform . toString () . substring ( $ TargetPlatform . . length ), }; }, ); return true ; }()); } \u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002 } window Flutter\u7528\u6237UI\u5c42\u662f\u600e\u4e48\u548cWindow\u7ba1\u7406\u8d77\u6765 \u4e0a\u4e00\u8282\u4e2d\uff0c\u5df2\u7ecf\u628a\u7cfb\u7edf\u4e3a\u6211\u4eec\u521b\u5efa\u597d\u7684Binding\u7c7b\uff0c\u5b9a\u4e49\u4e86\u591a\u4e2a\uff0c\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u5206\u522b\u5bf9FlutterEngine\u548cFlutterUI\u76f4\u63a5\u7684\u56de\u8c03\u548c\u4ea4\u4e92\u505a\u533a\u5206\u5904\u7406\uff0c\u8fbe\u5230\u4ee3\u7801\u89e3\u8026\u7684\u76ee\u7684 \u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u754c\u9762\u7684\u6700\u57fa\u672c\u754c\u9762\u3002\u7cfb\u7edf\u4e2d\u6709\u4e00\u4e2aWindow\u5b9e\u4f8b\uff0c\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a\u4ece[window]\u5c5e\u6027\u83b7\u53d6 FlutterUI\u7528\u6237\u662f\u600e\u4e48\u8bbf\u95eeWindow\u63a5\u53e3\u7684\uff1f\u5148\u4f7f\u7528\u4e00\u4e2a\u6781\u7b80\u7684\u6848\u4f8b\u6765\u5c55\u793a\u4e00\u4e2aFlutterUI\u9879\u76ee\u8c03\u7528FlutterEngine\u4e2d\u7684\u63a5\u53e3 Window\u662f\u5982\u4f55\u6700\u7b80\u5355\u7684\u4e00\u5e27\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a\u7684 \u4f7f\u7528\u65b0\u63d0\u4f9b\u7684\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u5728GPU\u4e0a\u7684\u6e32\u67d3[Scene]\u5fc5\u987b\u5728\u8303\u56f4\u5185\u8c03\u7528\u6b64\u51fd\u6570[onBeginFrame]\u6216[onDrawFrame]\u56de\u8c03\u88ab\u8c03\u7528\u3002\u5982\u679c\u8fd9\u4e2a\u529f\u80fd\u5728\u5355\u4e2a[onBeginFrame] / [onDrawFrame]\u4e2d\u7b2c\u4e8c\u6b21\u88ab\u8c03\u7528\u56de\u8c03\u5e8f\u5217\u6216\u8c03\u7528\u90a3\u4e9b\u56de\u8c03\u8303\u56f4\u4e4b\u5916\u7684\u8c03\u7528\u5c06\u88ab\u5ffd\u7565\u3002\u8981\u8bb0\u5f55\u56fe\u5f62\u64cd\u4f5c\uff0c\u9996\u5148\u8981\u521b\u5efa\u4e00\u4e2a[PictureRecorder]\u6784\u9020\u4e00\u4e2a[Canvas]\uff0c\u5c06[PictureRecorder]\u4f20\u9012\u7ed9\u5b83\u7684\u6784\u9020\u51fd\u6570\u3002\u53d1\u51fa\u6240\u6709\u56fe\u5f62\u64cd\u4f5c\u540e\uff0c\u8c03\u7528[PictureRecorder.endRecording]\u51fd\u6570\u5728[PictureRecorder]\u4e0a\u83b7\u53d6\u8868\u793a\u5df2\u53d1\u5e03\u56fe\u5f62\u64cd\u4f5c\u7684\u6700\u7ec8[Picture]\u3002\u63a5\u4e0b\u6765\uff0c\u521b\u5efa\u4e00\u4e2a[SceneBuilder]\uff0c\u7136\u540e\u4f7f\u7528\u6dfb\u52a0[Picture][SceneBuilder.addPicture]\u3002\u4f7f\u7528[SceneBuilder.build]\u65b9\u6cd5\u5373\u53ef\u7136\u540e\u83b7\u53d6[Scene]\u5bf9\u8c61\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6b64\u5bf9\u8c61\u663e\u793a\u8be5\u5bf9\u8c61[\u6e32\u67d3]\u529f\u80fd\u3002\u4e5f\u53ef\u4ee5\u770b\u770b\uff1a[SchedulerBinding]\uff0c\u7528\u4e8e\u7ba1\u7406\u7684Flutter\u6846\u67b6\u7c7b\u5e27\u7684\u8c03\u5ea6\u3002[RendererBinding]\uff0cFlutter\u6846\u67b6\u7c7b\uff0c\u7528\u4e8e\u7ba1\u7406\u5e03\u5c40\u548c\u753b\u3002 \u6838\u5fc3\u5b9e\u73b0: color = const ui.Color(0xFF00FF00); \u63d0\u4f9b\u4e00\u4e2aFrame\u6570\u636e\u7ed9Window ui.window.onBeginFrame = beginFrame; \u5904\u7406\u70b9\u51fb\u4e8b\u4ef6 ui.window.onPointerDataPacket = handlePointerDataPacket; \u8c03\u7528scheduleFrame\u65b9\u6cd5\u8c03\u7528native\u65b9\u6cd5\u8bbf\u95eeFlutterengine ui.window.scheduleFrame(); \u9700\u8981\u6c47\u603b\u7684\u5bf9\u8c61\u6dfb\u52a0\u5230window.render\u4e2d final ui.SceneBuilder sceneBuilder = ui.SceneBuilder() // TODO(abarth): We should be able to add a picture without pushing a // container layer first. ..pushClipRect(physicalBounds) ..addPicture(ui.Offset.zero, picture) ..pop(); ui.window.render(sceneBuilder.build()); import dart:ui as ui ; void beginFrame ( Duration timeStamp ) { final double devicePixelRatio = ui . window . devicePixelRatio ; final ui . Size logicalSize = ui . window . physicalSize / devicePixelRatio ; final ui . ParagraphBuilder paragraphBuilder = ui . ParagraphBuilder ( ui . ParagraphStyle ( textDirection: ui . TextDirection . ltr ), ) .. addText ( Hello, world. ); final ui . Paragraph paragraph = paragraphBuilder . build () .. layout ( ui . ParagraphConstraints ( width: logicalSize . width )); final ui . Rect physicalBounds = ui . Offset . zero ( logicalSize * devicePixelRatio ); final ui . PictureRecorder recorder = ui . PictureRecorder (); final ui . Canvas canvas = ui . Canvas ( recorder , physicalBounds ); canvas . scale ( devicePixelRatio , devicePixelRatio ); canvas . drawParagraph ( paragraph , ui . Offset ( ( logicalSize . width - paragraph . maxIntrinsicWidth ) / 2.0 , ( logicalSize . height - paragraph . height ) / 2.0 , )); final ui . Picture picture = recorder . endRecording (); final ui . SceneBuilder sceneBuilder = ui . SceneBuilder () .. pushClipRect ( physicalBounds ) .. addPicture ( ui . Offset . zero , picture ) .. pop (); ui . window . render ( sceneBuilder . build ()); } void main () { ui . window . onBeginFrame = beginFrame ; ui . window . scheduleFrame (); } \u603b\u7ed3 \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u5df2\u7ecf\u5bf9Window\u76f8\u5173\u7684\u63a5\u53e3\u7ee7\u7eed\u89e3\u8026\u5230\u4e0d\u540c\u7684binding\u5bf9\u8c61\uff0c\u6240\u6709\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u90fd\u662f\u5728 initInstances() \u65b9\u6cd5\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u7684 1.\u8c03\u7528runApp\u5f00\u59cb\u542f\u52a8\u4e00\u4e2aAppWidget\u5c42\u7684\u5165\u53e3 2.\u8c03\u7528 WidgetsFlutterBinding \u7684 ensureInitialized \u65b9\u6cd5\u6765\u5bf9 BindingBase \u7684\u6240\u6709\u5b50\u7c7b\u8fdb\u884c\u521d\u59cb\u5316 3.mixin\u7c7b\u7684\u521d\u59cb\u5316\u662f\u4ece\u7ee7\u627f\u987a\u5e8f\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u521d\u59cb\u5316 \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\u548cdemo\u7684\u6f14\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u4e86\u89e3Widow\u4e8b\u4ef6\u7684\u62c6\u5206\uff0c\u4e0d\u540c BindingBase \u7684\u521d\u59cb\u5316\u3001\u4ee5\u53caWindow\u7684\u6e32\u67d3\u5bf9\u8c61\u56de\u8c03\u5230Flutterengin\u5c42\u63d0\u4f9b\u6e32\u67d3\u5bf9\u8c61\uff0c\u540e\u7eed\u7684\u6587\u7ae0\u5c06\u4ecb\u7ecd\uff0cFlutterWidget\u5c42\u662f\u5982\u4f55\u8fd4\u56deFlutter\u6e32\u67d3\u5bf9\u8c61\u7684","title":"FlutterUI\u548cEngine\u5173\u8054"},{"location":"android/flutter/flutterUIframework/#flutter-ui","text":"","title":"Flutter UI \u67b6\u6784"},{"location":"android/flutter/flutterUIframework/#_1","text":"\u5728Engine\u6e90\u4ee3\u7801\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\uff0cFlutter\u662f\u901a\u8fc7widow\u5c42\u548cFlutter \u6846\u67b6\u5c42\u901a\u4fe1\uff0cWidow\u662f\u4e0a\u4e0b\u5c42\u901a\u4fe1\u7684\u67a2\u7ebd\uff0c\u542f\u52a8\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff0c\u90a3\u4e48Widow\u6700\u5c0f\u7684\u53ef\u6267\u884c\u5355\u5143\u662f\u4ec0\u4e48\uff1f\uff1f flutter \u5f15\u64ce\u521d\u59cb\u5316\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u8c03\u7528Window\u4e2d\u7684 onBeginFrame \u65b9\u6cd5\u6765\u6784\u5efa\u4e00\u5e27\uff0c\u6784\u5efa\u5b8c\u6210\u4e00\u5e27\u4e4b\u540e\u8c03\u7528 ui.window.render(sceneBuilder.build()); \u4f20\u9012\u7ed9Flutter\u7684Engine\u4e2d\uff0c\u7b2c\u4e8c\u5e27\u662f\u901a\u8fc7 scheduleFrame \u4e0d\u65ad\u7684\u8c03\u52a8\u6765\u6539\u53d8\u6574\u4e2aWidget\u7684\u6784\u5efa\u8fc7\u7a0b\uff0c\u4e0d\u65ad\u7684\u6539\u53d8Widget\u751f\u6210\u7684\u6e32\u67d3\u5bf9\u8c61\uff0c\u4f20\u9012\u7ed9Flutter\u5f15\u64ce\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u76f8\u5173\u7684\u4ee3\u7801\u754c\u9762\u7684\u53d8\u52a8\uff0c\u9875\u9762\u8df3\u8f6c\u7b49\u3002 \u8bb0\u7740\u4e0b\u9762\u4e09\u4e2a\u65b9\u6cd5\uff0cWidget\u7684\u6240\u7528\u8c03\u7528\u8fc7\u7a0b\u90fd\u662f\u5728\u4e3a\u6784\u5efa\u4e00\u5e27\u5728\u505a\u51c6\u5907 ui.window.onBeginFrame = beginFrame; ui.window.render(sceneBuilder.build()); ui.window.scheduleFrame(); ui.Window\u7c7b\u662fFlutter\u5f15\u64ce\u548cFlutterUI\u6846\u67b6\u7684\u63a5\u53e3\uff0cFlutterUI\u662f\u600e\u4e48\u542f\u52a8\u8d77\u6765\u7684\uff1f\uff1f\uff1f 1.\u4e3b\u8981\u5b8c\u6210\u7684\u662fFlutterUI\u5c42\u548cFlutterEngine\u5c42\u7684\u7ed1\u5b9a\u64cd\u4f5cui.Window 2.\u5206\u89e3\u7cfb\u7edf\u6210\u7684\u4e8b\u4ef6 GestureBinding ServicesBinding SchedulerBinding PaintingBinding, SemanticsBinding RendererBinding WidgetsBinding 3.\u63d0\u4f9b\u4e00\u4e2a\u6e32\u67d3\u5bf9\u8c61\u4e2a\u7ed9ui.window.render(sceneBuilder.build()); \u8c03\u7528Engine\u4e2d\u7684\u6e32\u67d3\u5f15\u64ce 4.\u521d\u59cb\u5316\u5e73\u53f0Plugin\u63a5\u53e3 4.\u521d\u59cb\u5316\u591a\u8bed\u8a00\uff0c\u591a\u533a\u57df","title":"\u6982\u8ff0"},{"location":"android/flutter/flutterUIframework/#window-binding","text":"1.FlutterEngine\u901a\u8fc7Widow\u7c7b\u548cFlutterUI\u8fdb\u884c\u901a\u4fe1\uff0c\u5305\u62ecWidget\u7684\u7ed8\u5236\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406 2.Window\u7c7b\u628a\u76f8\u5173\u7684\u4e8b\u4ef6\u56de\u8c03\u548c\u8c03\u7528\u65b9\u6cd5\u8fd4\u56de\u7ed9\u4e0d\u540c\u7684Bindings\u7c7b\u8fdb\u884c\u89e3\u8026\uff0c\u6bcf\u4e2a\u90e8\u5206\u5b8c\u6210\u76f8\u5173\u7684\u64cd\u4f5c 3.FlutterUI\u5c42\u901a\u8fc7runApp\u5305Flutter\u76f8\u5173\u7684\u90e8\u5206\u63d0\u4ea4\u7ed9\u7cfb\u7edf\u6846\u67b6\u548c\u7cfb\u7edf\u6846\u67b6\u5c42\u8fdb\u884c\u901a\u4fe1 4.\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528window\u7c7b\u8fdb\u884cFrame\u7684\u7ed8\u5236\uff0c\u5c31\u80fd\u591f\u5bf9Flutter\u5c42\u8fdb\u884c\u7406\u89e3\uff0cFlutterUI\u5c42\u5176\u5b9e\u662fWindow\u6784\u9020\u7684\u4e00\u4e2a\u6269\u5c55\u548c\u7ec6\u5316\uff0c","title":"window \u4e8b\u4ef6\u662f\u600e\u4e48\u5206\u89e3\u7ed9\u4e0d\u540c\u7684Binding\u8fdb\u884c\u5904\u7406\u7684\uff1f\uff1f"},{"location":"android/flutter/flutterUIframework/#_2","text":"Widgets\u5c42\u548cwindow\u5c42\u89e3\u8026\u662f\u901a\u8fc7\u7ee7\u627f BindingBase \u7684 mixin \u7c7b\u6765\u7ee7\u7eed\u7684\uff0c\u4e0d\u540c\u7684Bindings\u7c7b\u7ee7\u627f BindingBase , /// A concrete binding for applications based on the Widgets framework. /// /// This is the glue that binds the framework to the Flutter engine. class WidgetsFlutterBinding extends BindingBase with GestureBinding , ServicesBinding , SchedulerBinding , PaintingBinding , SemanticsBinding , RendererBinding , WidgetsBinding { /// Returns an instance of the [WidgetsBinding], creating and /// initializing it if necessary. If one is created, it will be a /// [WidgetsFlutterBinding]. If one was previously initialized, then /// it will at least implement [WidgetsBinding]. /// /// You only need to call this method if you need the binding to be /// initialized before calling [runApp]. /// /// In the `flutter_test` framework, [testWidgets] initializes the /// binding instance to a [TestWidgetsFlutterBinding], not a /// [WidgetsFlutterBinding]. static WidgetsBinding ensureInitialized () { if ( WidgetsBinding . instance == null ) WidgetsFlutterBinding (); return WidgetsBinding . instance ; } } WidgetsFlutterBinding \u5b9e\u73b0\u4e86 BindingBase ,\u5728 BindingBase \u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528 initInstances \u65b9\u6cd5\uff0c runApp\u8c03\u7528 ensureInitialized \u65b9\u6cd5\u6765\u5168\u90e8\u6bcf\u4e00\u4e2aBinding\u5bf9\u8c61\u90fd\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u987a\u5e8f\u662f\u4ece\u540e\u5f80\u524d\u8c03\u7528 initInstances \u8fdb\u884c\u521d\u59cb\u5316\uff0c\u540c\u65f6\u4e5f\u5bf9Window\u5206\u89e3\u7684\u5185\u5bb9\u8fdb\u884c BindingBase \u5b8c\u6210\u8fc7\u7a0b 1.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initInstances 2.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initServiceExtensions 3.\u540c\u65f6BindingBase, SchedulerBinding, GestureBinding, RendererBinding, SemanticsBinding \u4e5f\u548c\u8c03\u7528\u81ea\u5df1\u7684\u4e0a\u8ff0\u4e24\u4e2a\u6784\u9020\u65b9\u6cd5 4.\u5b8c\u6210FlutterUI\u5c42\u548cFlutterEngine\u4e4b\u95f4\u7684\u4ea4\u4e92\u8fc7\u7a0b","title":"\u6838\u5fc3\u6b65\u9aa4:"},{"location":"android/flutter/flutterUIframework/#flutteruibindingbase","text":"\u6bcf\u4e2a\u7c7b\u7684\u5177\u4f53\u529f\u80fd\u67e5\u770b\u4e00\u4e0b\u5bf9\u5e94\u7c7b\u7684\uff1a \u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initInstances , initServiceExtensions Object (dart.core) BindingBase (binding.dart) \u6240\u6709Binding\u7c7b\u7684\u7236\u7c7b\uff0c\u4e4b\u540e\u521d\u59cb\u5316\u4e00\u6b21 SemanticsBinding (binding.dart) PaintingBinding (binding.dart) ServicesBinding (binding.dart) SchedulerBinding (binding.dart) GestureBinding (binding.dart) RendererBinding (binding.dart) RenderingFlutterBinding (binding.dart) WidgetsBinding (binding.dart) FlutterUI\u7684\u7edf\u4e00\u6ce8\u518c\u5165\u53e3 WidgetsFlutterBinding (binding.dart) TestWidgetsFlutterBinding (binding.dart)","title":"flutterUI\u6846\u67b6\u4e2d\u63d0\u4f9b\u7684\u5b9e\u73b0BindingBase\u7684\u7c7b"},{"location":"android/flutter/flutterUIframework/#paintingbinding","text":"\u7ed1\u5b9a\u753b\u7b14\u5e93\uff0c\u5904\u7406\u56fe\u50cf\u7f13\u5b58\uff0c\u548cServicesBinding \u914d\u5957\u4f7f\u7528 mixin PaintingBinding on BindingBase , ServicesBinding { @ override void initInstances () { super . initInstances (); _instance = this ; _imageCache = createImageCache (); if ( shaderWarmUp != null ) { shaderWarmUp . execute (); } }","title":"PaintingBinding"},{"location":"android/flutter/flutterUIframework/#servicesbinding","text":"\u76d1\u542c\u5e73\u53f0\u6d88\u606f\u5e76\u5c06\u5b83\u4eec\u5b9a\u5411\u5230[BinaryMessages]\u3002[ServicesBinding]\u8fd8\u6ce8\u518c\u4e86\u4e00\u4e2a\u516c\u5f00\u7684[LicenseEntryCollector]\u5728\u5b58\u50a8\u5728\u8d44\u4ea7\u6839\u76ee\u5f55\u7684 LICENSE \u6587\u4ef6\u4e2d\u627e\u5230\u7684\u8bb8\u53ef\u8bc1\u6346\u7ed1\uff0c\u5e76\u5b9e\u73b0 ext.flutter.evict \u670d\u52a1\u6269\u5c55 mixin ServicesBinding on BindingBase { @ override void initInstances () { super . initInstances (); _instance = this ; window .. onPlatformMessage = BinaryMessages . handlePlatformMessage ; initLicenses (); }","title":"ServicesBinding"},{"location":"android/flutter/flutterUIframework/#schedulerbinding","text":"\u7528\u4e8e\u8fd0\u884c\u4ee5\u4e0b\u5185\u5bb9\u7684\u8c03\u5ea6\u7a0b\u5e8f\uff1a Transient\u56de\u8c03 \uff0c\u7531\u7cfb\u7edf\u7684[Window.onBeginFrame]\u89e6\u53d1 \u56de\u8c03\uff0c\u7528\u4e8e\u5c06\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\u540c\u6b65\u5230\u7cfb\u7edf\u663e\u793a\u4f8b\u5982\uff0c[Ticker]\u548c[AnimationController]\u7684\u89e6\u53d1\u5668\u6765\u81ea\u8fd9\u4e9b\u3002 Persistent callbacks \uff0c\u7531\u7cfb\u7edf\u7684[Window.onDrawFrame]\u89e6\u53d1\u56de\u8c03\uff0c\u7528\u4e8e\u5728\u77ac\u6001\u56de\u8c03\u540e\u66f4\u65b0\u7cfb\u7edf\u7684\u663e\u793a\u6267\u884c\u4f8b\u5982\uff0c\u6e32\u67d3\u5c42\u4f7f\u7528\u5b83\u6765\u9a71\u52a8\u5b83\u6e32\u67d3\u7ba1\u9053\u3002 Post-frame callbacks \uff0c\u4ec5\u5728\u6301\u4e45\u56de\u8c03\u4e4b\u540e\u8fd0\u884c \u4ece[Window.onDrawFrame]\u56de\u8c03\u8fd4\u56de\u4e4b\u524d\u3002 *\u975e\u6e32\u67d3\u4efb\u52a1\uff0c\u5728\u5e27\u4e4b\u95f4\u8fd0\u884c\u3002\u7ed9\u51fa\u4e86\u8fd9\u4e9b \u4f18\u5148\u7ea7\uff0c\u6839\u636ea\u6309\u4f18\u5148\u7ea7\u987a\u5e8f\u6267\u884c mixin SchedulerBinding on BindingBase , ServicesBinding { @ override void initInstances () { super . initInstances (); _instance = this ; window . onBeginFrame = _handleBeginFrame ; window . onDrawFrame = _handleDrawFrame ; SystemChannels . lifecycle . setMessageHandler ( _handleLifecycleMessage ); readInitialLifecycleStateFromNativeWindow (); } \u76d1\u542c\u5e73\u53f0\u6d88\u606f\u5e76\u5c06\u5b83\u4eec\u5b9a\u5411\u5230[BinaryMessages]\u3002[ServicesBinding]\u8fd8\u6ce8\u518c\u4e86\u4e00\u4e2a\u516c\u5f00\u7684[LicenseEntryCollector]\u5728\u5b58\u50a8\u5728\u8d44\u4ea7\u6839\u76ee\u5f55\u7684 LICENSE \u6587\u4ef6\u4e2d\u627e\u5230\u7684\u8bb8\u53ef\u8bc1\u6346\u7ed1\uff0c\u5e76\u5b9e\u73b0 ext.flutter.evict \u670d\u52a1\u6269\u5c55\u3002 mixin ServicesBinding on BindingBase { @ override void initInstances () { super . initInstances (); _instance = this ; window .. onPlatformMessage = BinaryMessages . handlePlatformMessage ; initLicenses (); }","title":"SchedulerBinding"},{"location":"android/flutter/flutterUIframework/#gesturebinding","text":"\u5f53[GestureBinding]\u6536\u5230[PointerDownEvent]\u65f6\uff08\u6765\u81ea[Window.onPointerDataPacket]\uff0c\u7531\u3002\u89e3\u91ca[PointerEventConverter]\uff09\uff0c\u6267\u884c[hitTest]\u4ee5\u786e\u5b9a\u54ea\u4e2a[HitTestTarget]\u8282\u70b9\u53d7\u5230\u5f71\u54cd\u3002 \uff08\u9884\u8ba1\u5176\u4ed6\u7ea6\u675f\u529b\u5b9e\u73b0[hitTest]\u4ee5\u63a8\u8fdf[HitTestable]\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u6e32\u67d3\u5c42\u5ef6\u4f38\u5230[RenderView]\u548c\u6e32\u67d3\u5bf9\u8c61\u7684\u5176\u4f59\u90e8\u5206\u5c42\u6b21\u7ed3\u6784\u3002\uff09 mixin GestureBinding on BindingBase implements HitTestable , HitTestDispatcher , HitTestTarget { @ override void initInstances () { super . initInstances (); _instance = this ; window . onPointerDataPacket = _handlePointerDataPacket ; }","title":"GestureBinding"},{"location":"android/flutter/flutterUIframework/#rendererbinding","text":"/// The glue between the render tree and the Flutter engine. mixin RendererBinding on BindingBase , ServicesBinding , SchedulerBinding , GestureBinding , SemanticsBinding , HitTestable { @ override void initInstances () { super . initInstances (); _instance = this ; _pipelineOwner = PipelineOwner ( onNeedVisualUpdate: ensureVisualUpdate , onSemanticsOwnerCreated: _handleSemanticsOwnerCreated , onSemanticsOwnerDisposed: _handleSemanticsOwnerDisposed , ); window .. onMetricsChanged = handleMetricsChanged .. onTextScaleFactorChanged = handleTextScaleFactorChanged .. onPlatformBrightnessChanged = handlePlatformBrightnessChanged .. onSemanticsEnabledChanged = _handleSemanticsEnabledChanged .. onSemanticsAction = _handleSemanticsAction ; initRenderView (); _handleSemanticsEnabledChanged (); assert ( renderView != null ); addPersistentFrameCallback ( _handlePersistentFrameCallback ); _mouseTracker = _createMouseTracker (); }","title":"RendererBinding"},{"location":"android/flutter/flutterUIframework/#widgetsbinding","text":"/// The glue between the widgets layer and the Flutter engine. mixin WidgetsBinding on BindingBase , SchedulerBinding , GestureBinding , RendererBinding , SemanticsBinding { @ override void initInstances () { super . initInstances (); _instance = this ; buildOwner . onBuildScheduled = _handleBuildScheduled ; window . onLocaleChanged = handleLocaleChanged ; window . onAccessibilityFeaturesChanged = handleAccessibilityFeaturesChanged ; SystemChannels . navigation . setMethodCallHandler ( _handleNavigationInvocation ); SystemChannels . system . setMessageHandler ( _handleSystemMessage ); }","title":"WidgetsBinding"},{"location":"android/flutter/flutterUIframework/#_3","text":"\u4f7f\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u586b\u5145\u5e76\u5c06\u5176\u9644\u52a0\u5230\u5c4f\u5e55\u4e0a\u3002\u5c0f\u90e8\u4ef6\u5728\u5e03\u5c40\u671f\u95f4\u88ab\u8d4b\u4e88\u7ea6\u675f\uff0c\u8feb\u4f7f\u5b83\u586b\u5145\u6574\u4e2a\u5c4f\u5e55\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5c06\u7a97\u53e3\u5c0f\u90e8\u4ef6\u5bf9\u9f50\u5230\u5c4f\u5e55\u7684\u4e00\u4fa7\uff08\u4f8b\u5982\uff0c\u9876\u90e8\uff09\uff0c\u8003\u8651\u4f7f\u7528[Align]\u5c0f\u90e8\u4ef6\u3002\u5982\u679c\u4f60\u60f3\u4e2d\u5fc3\u60a8\u7684\u5c0f\u90e8\u4ef6\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528[\u4e2d\u5fc3]\u5c0f\u90e8\u4ef6\u518d\u6b21\u8c03\u7528[runApp]\u5c06\u4ece\u5c4f\u5e55\u4e0a\u5206\u79bb\u4e0a\u4e00\u4e2a\u6839\u5c0f\u90e8\u4ef6\u5e76\u5c06\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u9644\u52a0\u5230\u5176\u4f4d\u7f6e\u3002\u6bd4\u8f83\u65b0\u7684\u5c0f\u90e8\u4ef6\u6811\u9488\u5bf9\u4e0a\u4e00\u4e2a\u7a97\u53e3\u5c0f\u90e8\u4ef6\u6811\uff0c\u4efb\u4f55\u5dee\u5f02\u90fd\u5e94\u7528\u4e8e\u5e95\u5c42\u6e32\u67d3\u6811\uff0c\u7c7b\u4f3c\u4e8e[StatefulWidget]\u65f6\u53d1\u751f\u7684\u60c5\u51b5\u8c03\u7528[State.setState]\u540e\u91cd\u5efa\u3002\u5982\u6709\u5fc5\u8981\uff0c\u4f7f\u7528[WidgetsFlutterBinding]\u521d\u59cb\u5316\u7ed1\u5b9a\u3002 \u4e5f\u53ef\u4ee5\u770b\u770b\uff1a[WidgetsBinding.attachRootWidget]\uff0c\u5b83\u4e3a\u3002\u521b\u5efa\u6839\u5c0f\u90e8\u4ef6\u5c0f\u90e8\u4ef6\u5c42\u6b21\u7ed3\u6784\u3002 [RenderObjectToWidgetAdapter.attachToRenderTree]\uff0c\u5b83\u521b\u5efa\u4e86\u6839\u5143\u7d20\u5c42\u6b21\u7ed3\u6784\u7684\u5143\u7d20\u3002 [WidgetsBinding.handleBeginFrame]\uff0c\u5b83\u5c06\u7a97\u53e3\u5c0f\u90e8\u4ef6\u7ba1\u9053\u6cf5\u9001\u5230\u786e\u4fdd\u6784\u5efa\u5c0f\u90e8\u4ef6\uff0c\u5143\u7d20\u548c\u6e32\u67d3\u6811\u3002 void runApp ( Widget app ) { WidgetsFlutterBinding . ensureInitialized () .. attachRootWidget ( app ) .. scheduleWarmUpFrame (); } WidgetsBinding\u96c6\u6210Bindingbase: 1.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initInstances 2.\u6784\u9020\u65b9\u6cd5\u4e2d\u9ed8\u8ba4\u8c03\u7528initServiceExtensions 3.\u540c\u65f6BindingBase, SchedulerBinding, GestureBinding, RendererBinding, SemanticsBinding \u4e5f\u548c\u8c03\u7528\u81ea\u5df1\u7684\u4e0a\u8ff0\u4e24\u4e2a\u6784\u9020\u65b9\u6cd5 4.\u5b8c\u6210FlutterUI\u5c42\u548cFlutterEngine\u4e4b\u95f4\u7684\u4ea4\u4e92\u8fc7\u7a0b /// The glue between the widgets layer and the Flutter engine. mixin WidgetsBinding on BindingBase , SchedulerBinding , GestureBinding , RendererBinding , SemanticsBinding { @ override void initInstances () { super . initInstances (); _instance = this ; buildOwner . onBuildScheduled = _handleBuildScheduled ; window . onLocaleChanged = handleLocaleChanged ; window . onAccessibilityFeaturesChanged = handleAccessibilityFeaturesChanged ; SystemChannels . navigation . setMethodCallHandler ( _handleNavigationInvocation ); SystemChannels . system . setMessageHandler ( _handleSystemMessage ); } static WidgetsBinding get instance = _instance ; static WidgetsBinding _instance ; @ override void initServiceExtensions () { super . initServiceExtensions (); registerBoolServiceExtension ( name: showPerformanceOverlay , getter: () = Future bool . value ( WidgetsApp . showPerformanceOverlayOverride ), setter: ( bool value ) { if ( WidgetsApp . showPerformanceOverlayOverride == value ) return Future void . value (); WidgetsApp . showPerformanceOverlayOverride = value ; return _forceRebuild (); }, ); WidgetInspectorService . instance . initServiceExtensions ( registerServiceExtension ); return true ; }()); }","title":"\u6e90\u7801\u5b9e\u73b0"},{"location":"android/flutter/flutterUIframework/#flutteruiflutterenginebindingbase","text":"1.BindingBase\u521d\u59cb\u5316 \u7528\u4e8e\u63d0\u4f9b\u5355\u4f8b\u670d\u52a1\u7684mixins\u7684\u57fa\u7c7b\uff08\u4e5f\u79f0\u4e3a\u201cBinding\u201d\uff09\u3002\u5728mixin\u7684 on \u5b50\u53e5\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u7c7b\uff0c\u7ee7\u627f\u5b83\u5e76\u5b9e\u73b0[initInstances\uff08\uff09]\u3002 mixin\u4fdd\u8bc1\u53ea\u80fd\u6784\u5efa\u4e00\u6b21\u5e94\u7528\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\uff08\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5982\u679c\u6784\u9020\u4e24\u6b21\uff0c\u5b83\u5c06\u65ad\u8a00 \u5728\u68c0\u67e5\u6a21\u5f0f\u4e0b\uff09\u3002\u7528\u4e8e\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u9876\u5c42\u5c06\u5177\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u7ee7\u627f\u81ea[BindingBase]\u5e76\u4f7f\u7528\u6240\u6709\u5404\u79cd[BindingBase]mixins\uff08\u4f8b\u5982[ServicesBinding]\uff09\u3002\u4f8b\u5982\uff0cWidgets\u5e93\u4e2dFlutter\u5f15\u5165\u4e86\u4e00\u4e2a\u540d\u4e3a[WidgetsFlutterBinding]\u7684\u7ed1\u5b9a\u3002\u76f8\u5173\u7684library\u5b9a\u4e49\u4e86\u5982\u4f55\u521b\u5efa\u7ed1\u5b9a\u3002\u53ef\u4ee5\u6697\u793a\uff08\u4f8b\u5982\uff0c[WidgetsFlutterBinding]\u81ea\u52a8\u4ece[runApp]\u5f00\u59cb\uff0c\u6216\u8005\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u663e\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002\u5c0f\u90e8\u4ef6\u5c42\u548cFlutter\u5f15\u64ce\u4e4b\u95f4\u7684\u7c98\u5408\u5242\u3002 \u521d\u59cb\u5316\u7ed1\u5b9a\u65f6\u8c03\u7528\uff0c\u6ce8\u518c\u670d\u52a1\u6269\u5c55\u3002\u60f3\u8981\u516c\u5f00\u670d\u52a1\u6269\u5c55\u7684\u7ed1\u5b9a\u5e94\u8be5\u91cd\u8f7d\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u8c03\u7528\u6765\u6ce8\u518c\u5b83\u4eec [registerSignalServiceExtension]\uff0c[registerBoolServiceExtension]\uff0c [registerNumericServiceExtension]\uff0c\u548c [registerServiceExtension]\uff08\u6309\u590d\u6742\u7a0b\u5ea6\u9012\u589e\uff09\u3002\u6b64\u65b9\u6cd5\u7684\u5b9e\u73b0\u5fc5\u987b\u8c03\u7528\u5b83\u4eec\u7684\u8d85\u7c7b\u5b9e\u65bd{ @macro flutter.foundation.bindingBase.registerServiceExtension} \u4e5f\u53ef\u4ee5\u770b\u770b\uff1a https://github.com/dart-lang/sdk/blob/master/runtime/vm/service/service.md#rpcs-requests-and-responses 2.\u548cWindow\u7c7b\u7684\u5173\u8054 \u7ed1\u5b9a\u6b64\u7ed1\u5b9a\u7684\u7a97\u53e3\u3002\u8bb8\u591a\u5176\u4ed6\u7ed1\u5b9a\u88ab\u5b9a\u4e49\u4e3a[BindingBase]\u7684\u6269\u5c55\uff0c\uff0c\u4f8b\u5982\uff0c[ServicesBinding]\uff0c[RendererBinding]\u548c[WidgetsBinding]\u3002\u6bcf\u4e2a\u8fd9\u4e9b\u7ed1\u5b9a\u5b9a\u4e49\u4e86\u4e0e[ui.Window]\u4ea4\u4e92\u7684\u884c\u4e3a\uff0c\u4f8b\u5982\uff0c[ServicesBinding]\u6ce8\u518c\u4e00\u4e2a[ui.Window.onPlatformMessage]\u5904\u7406\u7a0b\u5e8f\uff0c\u548c[RendererBinding]\u6ce8\u518c[ui.Window.onMetricsChanged]\uff0c[ui.Window.onTextScaleFactorChanged]\uff0c[ui.Window.onSemanticsEnabledChanged]\uff0c\u548c[ui.Window.onSemanticsAction]\u5904\u7406\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u5176\u4ed6\u7ed1\u5b9a\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u53ef\u4ee5\u9759\u6001\u5730\u5355\u72ec\u8bbf\u95ee[Window]\uff0c\u4f46\u8fd9\u4f1a\u59a8\u788d\u7528\u5047\u5192\u6d4b\u8bd5\u8fd9\u4e9b\u884c\u4e3a\u7684\u80fd\u529b\u7a97\u53e3\u7528\u4e8e\u9a8c\u8bc1\u76ee\u7684\u3002\u56e0\u6b64\uff0c[BindingBase]\u66b4\u9732\u4e86\u8fd9\u4e00\u70b9[Window]\u4f9b\u5176\u4ed6\u7ed1\u5b9a\u4f7f\u7528\u3002 [BindingBase]\u7684\u5b50\u7c7b\uff0c\u5982 [TestWidgetsFlutterBinding]\uff0c\u53ef\u4ee5\u8986\u76d6\u6b64\u8bbf\u95ee\u5668\u4ee5\u8fd4\u56dea\u4e0d\u540c\u7684[Window]\u5b9e\u73b0\uff0c\u4f8b\u5982[TestWindow]\u3002 abstract class BindingBase { BindingBase () { 1. \u521d\u59cb\u5316\u5b9e\u4f8b\u672c\u8eab 2. \u6ce8\u518c\u6269\u5c55\u670d\u52a1 ....... initInstances (); initServiceExtensions (); ....... } \u83b7\u53d6 window \u7c7b ui . Window get window = ui . window ; void initInstances () { } \u6ce8\u518c\u6269\u5c55\u670d\u52a1 @ protected @ mustCallSuper void initServiceExtensions () { assert (() { const String platformOverrideExtensionName = platformOverride ; registerServiceExtension ( name: platformOverrideExtensionName , callback: ( Map String , String parameters ) async { if ( parameters . containsKey ( value )) { switch ( parameters [ value ]) { case android : debugDefaultTargetPlatformOverride = TargetPlatform . android ; break ; case iOS : debugDefaultTargetPlatformOverride = TargetPlatform . iOS ; break ; case fuchsia : debugDefaultTargetPlatformOverride = TargetPlatform . fuchsia ; break ; case default : default : debugDefaultTargetPlatformOverride = null ; } _postExtensionStateChangedEvent ( platformOverrideExtensionName , defaultTargetPlatform . toString (). substring ( $ TargetPlatform . . length ), ); await reassembleApplication (); } return String , dynamic { value : defaultTargetPlatform . toString () . substring ( $ TargetPlatform . . length ), }; }, ); return true ; }()); } \u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002 }","title":"FlutterUI\u548cFlutterEngine\u4e4b\u95f4\u7684\u7c98\u5408\u5242BindingBase"},{"location":"android/flutter/flutterUIframework/#window","text":"","title":"window"},{"location":"android/flutter/flutterUIframework/#flutteruiwindow","text":"\u4e0a\u4e00\u8282\u4e2d\uff0c\u5df2\u7ecf\u628a\u7cfb\u7edf\u4e3a\u6211\u4eec\u521b\u5efa\u597d\u7684Binding\u7c7b\uff0c\u5b9a\u4e49\u4e86\u591a\u4e2a\uff0c\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u5206\u522b\u5bf9FlutterEngine\u548cFlutterUI\u76f4\u63a5\u7684\u56de\u8c03\u548c\u4ea4\u4e92\u505a\u533a\u5206\u5904\u7406\uff0c\u8fbe\u5230\u4ee3\u7801\u89e3\u8026\u7684\u76ee\u7684 \u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u754c\u9762\u7684\u6700\u57fa\u672c\u754c\u9762\u3002\u7cfb\u7edf\u4e2d\u6709\u4e00\u4e2aWindow\u5b9e\u4f8b\uff0c\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a\u4ece[window]\u5c5e\u6027\u83b7\u53d6 FlutterUI\u7528\u6237\u662f\u600e\u4e48\u8bbf\u95eeWindow\u63a5\u53e3\u7684\uff1f\u5148\u4f7f\u7528\u4e00\u4e2a\u6781\u7b80\u7684\u6848\u4f8b\u6765\u5c55\u793a\u4e00\u4e2aFlutterUI\u9879\u76ee\u8c03\u7528FlutterEngine\u4e2d\u7684\u63a5\u53e3","title":"Flutter\u7528\u6237UI\u5c42\u662f\u600e\u4e48\u548cWindow\u7ba1\u7406\u8d77\u6765"},{"location":"android/flutter/flutterUIframework/#window_1","text":"\u4f7f\u7528\u65b0\u63d0\u4f9b\u7684\u66f4\u65b0\u5e94\u7528\u7a0b\u5e8f\u5728GPU\u4e0a\u7684\u6e32\u67d3[Scene]\u5fc5\u987b\u5728\u8303\u56f4\u5185\u8c03\u7528\u6b64\u51fd\u6570[onBeginFrame]\u6216[onDrawFrame]\u56de\u8c03\u88ab\u8c03\u7528\u3002\u5982\u679c\u8fd9\u4e2a\u529f\u80fd\u5728\u5355\u4e2a[onBeginFrame] / [onDrawFrame]\u4e2d\u7b2c\u4e8c\u6b21\u88ab\u8c03\u7528\u56de\u8c03\u5e8f\u5217\u6216\u8c03\u7528\u90a3\u4e9b\u56de\u8c03\u8303\u56f4\u4e4b\u5916\u7684\u8c03\u7528\u5c06\u88ab\u5ffd\u7565\u3002\u8981\u8bb0\u5f55\u56fe\u5f62\u64cd\u4f5c\uff0c\u9996\u5148\u8981\u521b\u5efa\u4e00\u4e2a[PictureRecorder]\u6784\u9020\u4e00\u4e2a[Canvas]\uff0c\u5c06[PictureRecorder]\u4f20\u9012\u7ed9\u5b83\u7684\u6784\u9020\u51fd\u6570\u3002\u53d1\u51fa\u6240\u6709\u56fe\u5f62\u64cd\u4f5c\u540e\uff0c\u8c03\u7528[PictureRecorder.endRecording]\u51fd\u6570\u5728[PictureRecorder]\u4e0a\u83b7\u53d6\u8868\u793a\u5df2\u53d1\u5e03\u56fe\u5f62\u64cd\u4f5c\u7684\u6700\u7ec8[Picture]\u3002\u63a5\u4e0b\u6765\uff0c\u521b\u5efa\u4e00\u4e2a[SceneBuilder]\uff0c\u7136\u540e\u4f7f\u7528\u6dfb\u52a0[Picture][SceneBuilder.addPicture]\u3002\u4f7f\u7528[SceneBuilder.build]\u65b9\u6cd5\u5373\u53ef\u7136\u540e\u83b7\u53d6[Scene]\u5bf9\u8c61\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6b64\u5bf9\u8c61\u663e\u793a\u8be5\u5bf9\u8c61[\u6e32\u67d3]\u529f\u80fd\u3002\u4e5f\u53ef\u4ee5\u770b\u770b\uff1a[SchedulerBinding]\uff0c\u7528\u4e8e\u7ba1\u7406\u7684Flutter\u6846\u67b6\u7c7b\u5e27\u7684\u8c03\u5ea6\u3002[RendererBinding]\uff0cFlutter\u6846\u67b6\u7c7b\uff0c\u7528\u4e8e\u7ba1\u7406\u5e03\u5c40\u548c\u753b\u3002 \u6838\u5fc3\u5b9e\u73b0: color = const ui.Color(0xFF00FF00); \u63d0\u4f9b\u4e00\u4e2aFrame\u6570\u636e\u7ed9Window ui.window.onBeginFrame = beginFrame; \u5904\u7406\u70b9\u51fb\u4e8b\u4ef6 ui.window.onPointerDataPacket = handlePointerDataPacket; \u8c03\u7528scheduleFrame\u65b9\u6cd5\u8c03\u7528native\u65b9\u6cd5\u8bbf\u95eeFlutterengine ui.window.scheduleFrame(); \u9700\u8981\u6c47\u603b\u7684\u5bf9\u8c61\u6dfb\u52a0\u5230window.render\u4e2d final ui.SceneBuilder sceneBuilder = ui.SceneBuilder() // TODO(abarth): We should be able to add a picture without pushing a // container layer first. ..pushClipRect(physicalBounds) ..addPicture(ui.Offset.zero, picture) ..pop(); ui.window.render(sceneBuilder.build()); import dart:ui as ui ; void beginFrame ( Duration timeStamp ) { final double devicePixelRatio = ui . window . devicePixelRatio ; final ui . Size logicalSize = ui . window . physicalSize / devicePixelRatio ; final ui . ParagraphBuilder paragraphBuilder = ui . ParagraphBuilder ( ui . ParagraphStyle ( textDirection: ui . TextDirection . ltr ), ) .. addText ( Hello, world. ); final ui . Paragraph paragraph = paragraphBuilder . build () .. layout ( ui . ParagraphConstraints ( width: logicalSize . width )); final ui . Rect physicalBounds = ui . Offset . zero ( logicalSize * devicePixelRatio ); final ui . PictureRecorder recorder = ui . PictureRecorder (); final ui . Canvas canvas = ui . Canvas ( recorder , physicalBounds ); canvas . scale ( devicePixelRatio , devicePixelRatio ); canvas . drawParagraph ( paragraph , ui . Offset ( ( logicalSize . width - paragraph . maxIntrinsicWidth ) / 2.0 , ( logicalSize . height - paragraph . height ) / 2.0 , )); final ui . Picture picture = recorder . endRecording (); final ui . SceneBuilder sceneBuilder = ui . SceneBuilder () .. pushClipRect ( physicalBounds ) .. addPicture ( ui . Offset . zero , picture ) .. pop (); ui . window . render ( sceneBuilder . build ()); } void main () { ui . window . onBeginFrame = beginFrame ; ui . window . scheduleFrame (); }","title":"Window\u662f\u5982\u4f55\u6700\u7b80\u5355\u7684\u4e00\u5e27\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a\u7684"},{"location":"android/flutter/flutterUIframework/#_4","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u5df2\u7ecf\u5bf9Window\u76f8\u5173\u7684\u63a5\u53e3\u7ee7\u7eed\u89e3\u8026\u5230\u4e0d\u540c\u7684binding\u5bf9\u8c61\uff0c\u6240\u6709\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u90fd\u662f\u5728 initInstances() \u65b9\u6cd5\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u7684 1.\u8c03\u7528runApp\u5f00\u59cb\u542f\u52a8\u4e00\u4e2aAppWidget\u5c42\u7684\u5165\u53e3 2.\u8c03\u7528 WidgetsFlutterBinding \u7684 ensureInitialized \u65b9\u6cd5\u6765\u5bf9 BindingBase \u7684\u6240\u6709\u5b50\u7c7b\u8fdb\u884c\u521d\u59cb\u5316 3.mixin\u7c7b\u7684\u521d\u59cb\u5316\u662f\u4ece\u7ee7\u627f\u987a\u5e8f\u4ece\u540e\u5f80\u524d\u8fdb\u884c\u521d\u59cb\u5316 \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\u548cdemo\u7684\u6f14\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u4e86\u89e3Widow\u4e8b\u4ef6\u7684\u62c6\u5206\uff0c\u4e0d\u540c BindingBase \u7684\u521d\u59cb\u5316\u3001\u4ee5\u53caWindow\u7684\u6e32\u67d3\u5bf9\u8c61\u56de\u8c03\u5230Flutterengin\u5c42\u63d0\u4f9b\u6e32\u67d3\u5bf9\u8c61\uff0c\u540e\u7eed\u7684\u6587\u7ae0\u5c06\u4ecb\u7ecd\uff0cFlutterWidget\u5c42\u662f\u5982\u4f55\u8fd4\u56deFlutter\u6e32\u67d3\u5bf9\u8c61\u7684","title":"\u603b\u7ed3"},{"location":"android/flutter/fluttercommunicationAndroidorIOS/","text":"Flutter UI \u6846\u67b6\u548c Android\u3001IOS\u901a\u4fe1 1.Flutter \u4e2dUI\u53d8\u5316\u4e0d\u4f1a\u50cfAndroid\u4e2dredraw View \u800c\u662f\u91cd\u65b0\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b 2.Flutter \u4e2dUI\u66f4\u65b0\u662f\u901a\u8fc7\u4fee\u6539State\u6765\u89e6\u53d1Widget\u7684\u7ed8\u5236 3.StatelessWidgets\u548cStatelessWidget \u533a\u522b\u662f\u5728\u4e8e\u662f\u5426\u6709\u72b6\u6001\u9700\u8981\u6539\u53d8 If you want to dynamically change the UI based on data received after making an HTTP call or user interaction then you have to work with StatefulWidget and tell the Flutter framework that the widget\u2019s State has been updated so it can update that widget. 4.\u5f53\b\b\u5b50\u63a7\u4ef6\u662f\u6709\u72b6\u6001\u7684\uff0c\u7236\u63a7\u4ef6\u53ef\u4ee5\u662f\b\u65e0\u72b6\u6001\u7684\uff0c\u4e0d\u9700\u8981\u4fdd\u6301\u4e00\u81f4\uff0c 5.\u5728Flutter\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u6539\u53d8\u7684\uff0c\u9700\u8981\u901a\u8fc7\u64cd\u4f5c\b\u7236Widget\u6765\u8fd4\u56de\u4e0d\u540c\u7684view 6.Flutter\u4e2d\u4f7f\u7528navigator\u548croute\u6765\u8fdb\u884c\u9875\u9762\b\u5bfc\u822a Navigator:\u5bfc\u822a\u5230\u6307\u5b9a\u7684\u9875\u9762 Route:\u5bfc\u822a\u5230\u533f\u540d\u7684\u754c\u9762\uff0c\u4f7f\u7528\b\b\u952e\u503c\u5bf9\u8fdb\u884c\u6620\u5c04 \u4f7f\u7528\u5df2\u5b58\u5728\u7684\u63d2\u4ef6\u8fdb\u884c\u56fe\u7247\b\u9009\u62e9\u548c\u6587\u4ef6\u8bfb\u53d6 https://pub.dartlang.org/flutter/ 7.MethodChannel\b\u7684\u4f7f\u7528 8.Android\u4e2d\u4f7f\u7528\u80cc\u666f\u7ebf\u7a0b AsyncTask/LiveDate/IntentService/JobScheduler 9.The MyAppBar widget creates a Container with a height of 56 device-independent pixels with an internal padding of 8 pixels, both on the left and the right. Flutter UI \u4f7f\u7528\u6ca1\u6709UI\u754c\u9762\u7684\u4efb\u52a1\u548c\u5e95\u5c42\u901a\u4fe1(non-UI Task) \u4e3b\u9898 Flutter \u548c\u8c03\u7528Android Native Method Android Native \u8c03\u7528 Flutter pip install --upgrade google-auth-oauthlib","title":"FlutterUI\u901a\u4fe1Android&IOS"},{"location":"android/flutter/fluttercommunicationAndroidorIOS/#flutter-ui-androidios","text":"1.Flutter \u4e2dUI\u53d8\u5316\u4e0d\u4f1a\u50cfAndroid\u4e2dredraw View \u800c\u662f\u91cd\u65b0\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b 2.Flutter \u4e2dUI\u66f4\u65b0\u662f\u901a\u8fc7\u4fee\u6539State\u6765\u89e6\u53d1Widget\u7684\u7ed8\u5236 3.StatelessWidgets\u548cStatelessWidget \u533a\u522b\u662f\u5728\u4e8e\u662f\u5426\u6709\u72b6\u6001\u9700\u8981\u6539\u53d8 If you want to dynamically change the UI based on data received after making an HTTP call or user interaction then you have to work with StatefulWidget and tell the Flutter framework that the widget\u2019s State has been updated so it can update that widget. 4.\u5f53\b\b\u5b50\u63a7\u4ef6\u662f\u6709\u72b6\u6001\u7684\uff0c\u7236\u63a7\u4ef6\u53ef\u4ee5\u662f\b\u65e0\u72b6\u6001\u7684\uff0c\u4e0d\u9700\u8981\u4fdd\u6301\u4e00\u81f4\uff0c 5.\u5728Flutter\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u6539\u53d8\u7684\uff0c\u9700\u8981\u901a\u8fc7\u64cd\u4f5c\b\u7236Widget\u6765\u8fd4\u56de\u4e0d\u540c\u7684view 6.Flutter\u4e2d\u4f7f\u7528navigator\u548croute\u6765\u8fdb\u884c\u9875\u9762\b\u5bfc\u822a Navigator:\u5bfc\u822a\u5230\u6307\u5b9a\u7684\u9875\u9762 Route:\u5bfc\u822a\u5230\u533f\u540d\u7684\u754c\u9762\uff0c\u4f7f\u7528\b\b\u952e\u503c\u5bf9\u8fdb\u884c\u6620\u5c04 \u4f7f\u7528\u5df2\u5b58\u5728\u7684\u63d2\u4ef6\u8fdb\u884c\u56fe\u7247\b\u9009\u62e9\u548c\u6587\u4ef6\u8bfb\u53d6 https://pub.dartlang.org/flutter/ 7.MethodChannel\b\u7684\u4f7f\u7528 8.Android\u4e2d\u4f7f\u7528\u80cc\u666f\u7ebf\u7a0b AsyncTask/LiveDate/IntentService/JobScheduler 9.The MyAppBar widget creates a Container with a height of 56 device-independent pixels with an internal padding of 8 pixels, both on the left and the right. Flutter UI \u4f7f\u7528\u6ca1\u6709UI\u754c\u9762\u7684\u4efb\u52a1\u548c\u5e95\u5c42\u901a\u4fe1(non-UI Task)","title":"Flutter UI \u6846\u67b6\u548c Android\u3001IOS\u901a\u4fe1"},{"location":"android/flutter/fluttercommunicationAndroidorIOS/#flutter-android-native-method","text":"","title":"\u4e3b\u9898 Flutter \u548c\u8c03\u7528Android Native Method"},{"location":"android/flutter/fluttercommunicationAndroidorIOS/#android-native-flutter","text":"pip install --upgrade google-auth-oauthlib","title":"Android Native \u8c03\u7528 Flutter"},{"location":"android/flutter/flutterenginedir/","text":"Flutter\u5f15\u64ce\u76ee\u5f55 AUTHORS BUILD.gn LICENSE README.md build buildtools flutter ios_tools out third_party tools Flutter \u76ee\u5f55\u4e8c\u7ea7\u76ee\u5f55: total 96 -rw-r--../../ 1 cuco staff 525B Feb 28 11:00 AUTHORS -rw-r--r-- 1 cuco staff 3.8K Feb 28 11:00 BUILD.gn -rw-r--r-- 1 cuco staff 756B Feb 28 11:00 CONTRIBUTING.md -rw-r--r-- 1 cuco staff 20K Feb 28 13:17 DEPS -rw-r--r-- 1 cuco staff 1.5K Feb 28 11:00 LICENSE -rw-r--r-- 1 cuco staff 1.4K Feb 28 11:00 README.md -rw-r--r-- 1 cuco staff 6.4K Feb 28 11:00 analysis_options.yaml drwxr-xr-x 10 cuco staff 320B Feb 28 11:00 assets drwxr-xr-x 5 cuco staff 160B Feb 28 11:00 benchmarking drwxr-xr-x 5 cuco staff 160B Feb 28 11:00 build drwxr-xr-x 11 cuco staff 352B Feb 28 11:00 ci drwxr-xr-x 10 cuco staff 320B Feb 28 11:00 common drwxr-xr-x 3 cuco staff 96B Feb 28 11:00 docs drwxr-xr-x 31 cuco staff 992B Feb 28 11:00 flow drwxr-xr-x 6 cuco staff 192B Feb 28 11:45 flutter_kernel_transformers drwxr-xr-x 61 cuco staff 1.9K Feb 28 11:00 fml drwxr-xr-x 10 cuco staff 320B Feb 28 11:45 frontend_server drwxr-xr-x 6 cuco staff 192B Feb 28 11:00 lib drwxr-xr-x 29 cuco staff 928B Feb 28 11:00 runtime drwxr-xr-x 8 cuco staff 256B Feb 28 11:00 shell\uff1a\u5ba2\u6237\u7aef\u8c03\u7528Flutter\u7684\u6587\u4ef6\u76ee\u5f55\uff0c\u652f\u6301Android\uff0cMac\uff0cIOS\uff0c\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff0c\u5728\u5ba2\u6237\u7aef\u5f00\u59cb\u4f1a\u5bfc\u5165\u8be5\u76ee\u5f55\u4e0b\u7684\u5305\uff0c\u5728AndroidStudio\u4e2d\u663e\u793a\u4e3aFlutterForAndroid drwxr-xr-x 6 cuco staff 192B Feb 28 11:00 sky drwxr-xr-x 8 cuco staff 256B Feb 28 13:17 synchronization drwxr-xr-x 15 cuco staff 480B Feb 28 11:00 testing drwxr-xr-x 4 cuco staff 128B Feb 28 11:00 third_party drwxr-xr-x 11 cuco staff 352B Mar 4 19:32 tools drwxr-xr-x 37 cuco staff 1.2K Feb 28 11:00 vulkan FlutterNativeView\b\u5e73\u53f0\u901a\u9053\u6570\u636e\u4f20\u8f93\u9700\u8981\u8fdb\u4e00\u6b65\u5206\u6790 make_unique \u51fd\u6570\uff1a/Users/cuco/engine/src/flutter/shell/platform/android/android_shell_holder.cc RefPtr \uff1a/Users/cuco/engine/src/flutter/common/task_runners.cc MessageLoop:engine/src/flutter/shell/platform/android/android_shell_holder.cc MakeRefCounted:/Users/cuco/engine/src/flutter/shell/platform/android/platform_view_android_jni.cc Flutter \u521d\u59cb\u5316\u8c03\u7528JNI\u65b9\u6cd5\u5b8c\u6210\u521d\u59cb\u5316 \bAndroid\u521d\u59cb\u5316\u9ed8\u8ba4\u7f16\u8bd1\u597d\u7684Flutter\u4ee3\u7801\u7684\u6587\u4ef6 Android\u4ee3\u7801\u5728\u521d\u59cb\u5316\u5b8c\u6210flutter\u7684\u6587\u4ef6\u4e4b\u540e\uff0c\u63d0\u4f9bSurfaceView\u5230\u5e95\u5c42\u8fdb\u884cFlutter engine \u4e2d\u7684Skia 2d\u56fe\u50cf \u540c\u4e3a\u8de8\u5e73\u53f0\u6280\u672f\uff0cFlutter\u6709\u4f55\u4f18\u52bf\u5462\uff1f Flutter\u5728Rlease\u6a21\u5f0f\u4e0b\u76f4\u63a5\u5c06Dart\u7f16\u8bd1\u6210\u672c\u5730\u673a\u5668\u7801\uff0c\u907f\u514d\u4e86\u4ee3\u7801\u89e3\u91ca\u8fd0\u884c\u7684\u6027\u80fd\u6d88\u8017\u3002 Dart\u672c\u8eab\u9488\u5bf9\u9ad8\u9891\u7387\u5faa\u73af\u5237\u65b0\uff08\u5982\u5c4f\u5e55\u6bcf\u79d260\u5e27\uff09\u5728\u5185\u5b58\u5c42\u9762\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4f7f\u5f97Dart\u8fd0\u884c\u65f6\u5728\u5c4f\u5e55\u7ed8\u5236\u5b9e\u73b0\u5982\u9c7c\u5f97\u6c34\u3002 Flutter\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u56fe\u5f62\u7ed8\u5236\u907f\u514d\u4e86Native\u6865\u63a5\u3002 Flutter\u5728\u5e94\u7528\u5c42\u4f7f\u7528Dart\u8fdb\u884c\u5f00\u53d1\uff0c\u800c\u652f\u6491\u5b83\u7684\u662f\u7528C++\u5f00\u53d1\u7684\u5f15\u64ce\u3002 \u5728\b\bAndroid\u7aef\b\u521d\u59cb\u5316Flutter \u76f8\u5173\u7684\u73af\u5883\b\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u6765\u5b8c\u6210\uff1a \b\u5728\u4e0b\u56fe\u4e2d\b: * 1.\u521d\u59cb\u5316\bFlutter Engine \b\b\u8fd0\u884c\b\bFlutterUI\u5e93\u7684\u73af\u5883\uff0c\b\u521d\u59cb\u5316AndroidShellHolder\uff1a\u6765\u7ba1\u7406Flutter\u76f8\u5173\u7684\u5f15\u73af\u5883 * 2.\u6ce8\u518cSurfaceView\u7ed9Flutter Eingine\uff0c\u63d0\u4f9b\u7ed9\u5f15\u64ce\u8fdb\u884c\u7ed8\u5236\u7684\u753b\u5e03\uff0c\b\b\u8c03\u7528ANative_window\u7c7b\u6765\u8fde\u63a5FlutterUI\u548c\bAndroidUI\u7684\u6865\u6881 \b \u63a5\u4e0b\u6765\u8fdb\u884c\u5206\u6790\u5728JNI\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b:AttachJNI\u4e2d\u8c03\u7528 std::make_unique AndroidShellHolder \u65b9\u6cd5\b\u521b\u5efa AndroidShellHolder \u5b9e\u4f8b engine/src/flutter/shell/platform/android/platform_view_android_jni.cc // Called By Java // \u65b9\u6cd5\u6ce8\u518c\u8fdb\u5165JNI static jlong AttachJNI ( JNIEnv * env , jclass clazz , jobject flutterJNI , jboolean is_background_view ) { fml :: jni :: JavaObjectWeakGlobalRef java_object ( env , flutterJNI ); auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); if ( shell_holder - IsValid ()) { return reinterpret_cast jlong ( shell_holder . release ()); } else { return 0 ; } } AndroidShellHolder \u7c7b\u662f\u5bf9\bPlatfrom\u5c42\u8c03\u7528JNI\u7684\u63a5\u53e3\u4f5c\u4e3a\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u6765\u8fdb\u884c\u7edf\u4e00\u7684\u4ee3\u7406\u5165\u53e3\uff0c\u4f7f\u7528C++11\u7684\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u6765\u7edf\u4e00\b\u7ba1\u7406\u4e00\u4e2a\u5bf9\u8c61 C++\u667a\u80fd\u6307\u9488 \u4ecb\u7ecdc++\u91cc\u9762\u7684\u56db\u4e2a\u667a\u80fd\u6307\u9488: auto_ptr, shared_ptr, weak_ptr, unique_ptr \u5176\u4e2d\u540e\u4e09\u4e2a\u662fc++11\u652f\u6301\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5df2\u7ecf\u88abc++11\u5f03\u7528\u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff1a\u6211\u4eec\u77e5\u9053c++\u7684\u5185\u5b58\u7ba1\u7406\u662f\u8ba9\u5f88\u591a\u4eba\u5934\u75bc\u7684\u4e8b\uff0c\u5f53\u6211\u4eec\u5199\u4e00\u4e2anew\u8bed\u53e5\u65f6\uff0c\u4e00\u822c\u5c31\u4f1a\u7acb\u5373\u628adelete\u8bed\u53e5\u76f4\u63a5\u4e5f\u5199\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u907f\u514d\u7a0b\u5e8f\u8fd8\u672a\u6267\u884c\u5230delete\u65f6\u5c31\u8df3\u8f6c\u4e86\u6216\u8005\u5728\u51fd\u6570\u4e2d\u6ca1\u6709\u6267\u884c\u5230\u6700\u540e\u7684delete\u8bed\u53e5\u5c31\u8fd4\u56de\u4e86\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5728\u6bcf\u4e00\u4e2a\u53ef\u80fd\u8df3\u8f6c\u6216\u8005\u8fd4\u56de\u7684\u8bed\u53e5\u524d\u91ca\u653e\u8d44\u6e90\uff0c\u5c31\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002\u4f7f\u7528\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7684\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u667a\u80fd\u6307\u9488\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u5f53\u8d85\u51fa\u4e86\u7c7b\u7684\u4f5c\u7528\u57df\u662f\uff0c\u7c7b\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002\u4e0b\u9762\u6211\u4eec\u9010\u4e2a\u4ecb\u7ecd\u3002 unique_ptr ,\u662f\u7528\u4e8e\u53d6\u4ee3c++98\u7684auto_ptr\u7684\u4ea7\u7269,\u5728c++98\u7684\u65f6\u5019\u8fd8\u6ca1\u6709\u79fb\u52a8\u8bed\u4e49(move semantics)\u7684\u652f\u6301,\u56e0\u6b64\u5bf9\u4e8eauto_ptr\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u7684\u5b9e\u73b0\u6ca1\u6709\u6838\u5fc3\u5143\u7d20\u7684\u652f\u6301,\u4f46\u662f\u8fd8\u662f\u5b9e\u73b0\u4e86auto_ptr\u7684\u79fb\u52a8\u8bed\u4e49,\u8fd9\u6837\u5e26\u6765\u7684\u4e00\u4e9b\u95ee\u9898\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u590d\u5236\u64cd\u4f5c\u91cd\u8f7d\u51fd\u6570\u4e0d\u591f\u5b8c\u7f8e,\u5177\u4f53\u4f53\u73b0\u5c31\u662f\u628aauto_ptr\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570,\u4f20\u8fdb\u53bb\u7684\u65f6\u5019\u63a7\u5236\u6743\u8f6c\u79fb,\u8f6c\u79fb\u5230\u51fd\u6570\u53c2\u6570,\u5f53\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u4e00\u4e2a\u63a7\u5236\u6743\u79fb\u4ea4\u7684\u8fc7\u7a0b,\u6240\u4ee5\u8fc7\u4e86\u51fd\u6570\u8c03\u7528\u5219\u539f\u5148\u7684auto_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u5728c++11\u5f53\u4e2d\u6709\u4e86\u79fb\u52a8\u8bed\u4e49,\u4f7f\u7528move()\u628aunique_ptr\u4f20\u5165\u51fd\u6570,\u8fd9\u6837\u4f60\u5c31\u77e5\u9053\u539f\u5148\u7684unique_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u79fb\u52a8\u8bed\u4e49\u672c\u8eab\u5c31\u8bf4\u660e\u4e86\u8fd9\u6837\u7684\u95ee\u9898,\u6bd4\u8f83\u5751\u7239\u7684\u662f\u6807\u51c6\u63cf\u8ff0\u662f\u8bf4\u5bf9\u4e8emove\u4e4b\u540e\u4f7f\u7528\u539f\u6765\u7684\u5185\u5bb9\u662f\u672a\u5b9a\u4e49\u884c\u4e3a,\u5e76\u975e\u629b\u51fa\u5f02\u5e38,\u6240\u4ee5\u8fd8\u662f\u8981\u9760\u4eba\u8089\u9075\u5b88\u6e38\u620f\u89c4\u5219.\u518d\u4e00\u4e2a,auto_ptr\u4e0d\u652f\u6301\u4f20\u5165deleter,\u6240\u4ee5\u53ea\u80fd\u652f\u6301\u5355\u5bf9\u8c61(delete object),\u800cunique_ptr\u5bf9\u6570\u7ec4\u7c7b\u578b\u6709\u504f\u7279\u5316\u91cd\u8f7d,\u5e76\u4e14\u8fd8\u505a\u4e86\u76f8\u5e94\u7684\u4f18\u5316,\u6bd4\u5982\u7528[]\u8bbf\u95ee\u76f8\u5e94\u5143\u7d20\u7b49. unique_ptr \u662f\u4e00\u4e2a\u72ec\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u6240\u6709\u6743\uff0c\u5305\u62ec\uff1a 1\u3001\u62e5\u6709\u5b83\u6307\u5411\u7684\u5bf9\u8c61 2\u3001\u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u6784\u9020\uff0c\u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u8d4b\u503c\u64cd\u4f5c\u3002\u5373\u65e0\u6cd5\u4f7f\u4e24\u4e2aunique_ptr\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u4f46\u662f\u53ef\u4ee5\u8fdb\u884c\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u64cd\u4f5c 3\u3001\u4fdd\u5b58\u6307\u5411\u67d0\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5f53\u5b83\u672c\u8eab\u88ab\u5220\u9664\u91ca\u653e\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u7ed9\u5b9a\u7684\u5220\u9664\u5668\u91ca\u653e\u5b83\u6307\u5411\u7684\u5bf9\u8c61 unique_ptr \u53ef\u4ee5\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a 1\u3001\u4e3a\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168 2\u3001\u8bb2\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u6240\u6709\u6743\u4f20\u9012\u7ed9\u67d0\u51fd\u6570 3\u3001\u4ece\u67d0\u4e2a\u51fd\u6570\u8fd4\u56de\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7684\u6240\u6709\u6743 4\u3001\u5728\u5bb9\u5668\u4e2d\u4fdd\u5b58\u6307\u9488 5\u3001auto_ptr \u5e94\u8be5\u5177\u6709\u7684\u529f\u80fd share_ptr \u4ece\u540d\u5b57share\u5c31\u53ef\u4ee5\u770b\u51fa\u4e86\u8d44\u6e90\u53ef\u4ee5\u88ab\u591a\u4e2a\u6307\u9488\u5171\u4eab\uff0c\u5b83\u4f7f\u7528\u8ba1\u6570\u673a\u5236\u6765\u8868\u660e\u8d44\u6e90\u88ab\u51e0\u4e2a\u6307\u9488\u5171\u4eab\u3002\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u51fd\u6570use_count()\u6765\u67e5\u770b\u8d44\u6e90\u7684\u6240\u6709\u8005\u4e2a\u6570\u3002\u51fa\u4e86\u53ef\u4ee5\u901a\u8fc7new\u6765\u6784\u9020\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165auto_ptr, unique_ptr,weak_ptr\u6765\u6784\u9020\u3002\u5f53\u6211\u4eec\u8c03\u7528release()\u65f6\uff0c\u5f53\u524d\u6307\u9488\u4f1a\u91ca\u653e\u8d44\u6e90\u6240\u6709\u6743\uff0c\u8ba1\u6570\u51cf\u4e00\u3002\u5f53\u8ba1\u6570\u7b49\u4e8e0\u65f6\uff0c\u8d44\u6e90\u4f1a\u88ab\u91ca\u653e. weak_ptr weak_ptr\u662f\u7528\u6765\u89e3\u51b3shared_ptr\u76f8\u4e92\u5f15\u7528\u65f6\u7684\u6b7b\u9501\u95ee\u9898,\u5982\u679c\u8bf4\u4e24\u4e2ashared_ptr\u76f8\u4e92\u5f15\u7528,\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u6c38\u8fdc\u4e0d\u53ef\u80fd\u4e0b\u964d\u4e3a0,\u8d44\u6e90\u6c38\u8fdc\u4e0d\u4f1a\u91ca\u653e\u3002\u5b83\u662f\u5bf9\u5bf9\u8c61\u7684\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u4e0d\u4f1a\u589e\u52a0\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u548cshared_ptr\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316\uff0cshared_ptr\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u7ed9\u5b83\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528lock\u51fd\u6570\u6765\u83b7\u5f97shared_ptr\u3002 usr/include/c++/v1/memory auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); \u4f7f\u7528\u6a21\u677f\b\u65b9\u6cd5\b\u6765\u521b\u5efa\u4e00\u4e2a\bunique_ptr\b\b template class _Tp inline _LIBCPP_INLINE_VISIBILITY typename __unique_if _Tp :: __unique_array_unknown_bound make_unique ( size_t __n ) { typedef typename remove_extent _Tp :: type _Up ; return unique_ptr _Tp ( new _Up [ __n ]()); } \u5728Flutter\b Android\u4fa7\u521d\u59cb\u5316\u65f6\u8c03\u7528\b AndroidShellHolder\uff1a\u4e3b\u8981\u662f\u7ba1\u7406flutter engine \u5728Platform\u7aef\u7684\u5165\u53e3: 1.Platfrom,UI,IO,GUP\u7ebf\u7a0b\u7684\u7ba1\u7406\uff0c\u914d\u7f6e\u53c2\u6570\u7684\u7684\u52a0\u8f7d 2.\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c 3.thread_host_\u8d1f\u8d23\u7ba1\u7406\u76f8\u5173\u7684\u7ebf\u7a0b,\u6258\u7ba1\u56db\u4e2a\u76f8\u5904 4.PlatformViewAndroid\u7684\u521b\u5efa\uff0c\u8d1f\u8d23\u7ba1\u7406\u5e73\u53f0\u4fa7\u662f\u4e8b\u4ef6\u5904\u7406\u5728UI\u7ebf\u7a0b\b\u6267\u884c 5.Rasterizer\u7684\u521d\u59cb\u5316\u6805\u683c\u5316\u5728GPU\u7ebf\u7a0b\u6267\u884c 6.MessageLoop\u7684\u521b\u5efa\uff0c\u5728platfrom\u4e2d\u8fd0\u884c 7.TaskRunners\u7ba1\u7406\u6dfb\u52a0\u5230\u4e0d\u540c\u5e73\u53f0\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\uff0c\b\u8d1f\u8d23\u7ba1\u7406\u56db\u4e2a\b\u4efb\u52a1\u8fd0\u884c\u5668 8.Shell\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cJava\u865a\u62df\u673a\u7684\u521b\u5efa // \u53c2\u6570\u8bf4\u660e: // // blink::Settings settings,//\b\u914d\u7f6e\u6570\u636e // fml::jni::JavaObjectWeakGlobalRef java_object,//\bFlutterJNI \u5bf9\u8c61 // bool is_background_view // static size_t shell_count = 1; Shell:\u5bf9\u8c61\u7684\u4e2a\u6570\u4e3a\u4e00\u4e2a // \u5b8c\u6210\b\uff1a // 1.\b\u52a0\u8f7dSettings\u914d\u7f6e\u6587\u4ef6\uff0c\u7ed1\u5b9a\u5168\u5c40\u5bf9\u8c61java_object // 2.\b\b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c // 3.\bThreadHost\u7c7b\u6765\u7ba1\u7406Flutter engine\u7684Platform\uff0cio\uff0cGPU\uff0cUI\u7ebf\u7a0b // 4.\b\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217\uff1afml::MessageLoop::EnsureInitializedForCurrentThread(); //FlutterEngine\u7684\u521d\u59cb\u5316\u5165\u53e3 AndroidShellHolder :: AndroidShellHolder ( blink :: Settings settings , fml :: jni :: JavaObjectWeakGlobalRef java_object , bool is_background_view ) : settings_ ( std :: move ( settings )), java_object_ ( java_object ) { static size_t shell_count = 1 ; auto thread_label = std :: to_string ( shell_count ++ ); // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); } fml :: WeakPtr PlatformViewAndroid weak_platform_view ; Shell :: CreateCallback PlatformView on_create_platform_view = [ is_background_view , java_object , weak_platform_view ]( Shell shell ) { std :: unique_ptr PlatformViewAndroid platform_view_android ; if ( is_background_view ) { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object // java object handle for JNI interop ); } else { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object , // java object handle for JNI interop shell . GetSettings () . enable_software_rendering // use software rendering ); } weak_platform_view = platform_view_android - GetWeakPtr (); return platform_view_android ; }; Shell :: CreateCallback Rasterizer on_create_rasterizer = []( Shell shell ) { return std :: make_unique Rasterizer ( shell . GetTaskRunners ()); }; // The current thread will be used as the platform thread. Ensure that the // message loop is initialized. fml :: MessageLoop :: EnsureInitializedForCurrentThread (); fml :: RefPtr fml :: TaskRunner gpu_runner ; fml :: RefPtr fml :: TaskRunner ui_runner ; fml :: RefPtr fml :: TaskRunner io_runner ; fml :: RefPtr fml :: TaskRunner platform_runner = fml :: MessageLoop :: GetCurrent (). GetTaskRunner (); if ( is_background_view ) { auto single_task_runner = thread_host_ . ui_thread - GetTaskRunner (); gpu_runner = single_task_runner ; ui_runner = single_task_runner ; io_runner = single_task_runner ; } else { gpu_runner = thread_host_ . gpu_thread - GetTaskRunner (); ui_runner = thread_host_ . ui_thread - GetTaskRunner (); io_runner = thread_host_ . io_thread - GetTaskRunner (); } blink :: TaskRunners task_runners ( thread_label , // label platform_runner , // platform gpu_runner , // gpu ui_runner , // ui io_runner // io ); shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); platform_view_ = weak_platform_view ; FML_DCHECK ( platform_view_ ); is_valid_ = shell_ != nullptr ; if ( is_valid_ ) { task_runners . GetGPUTaskRunner () - PostTask ([]() { // Android describes -8 as most important display threads, for // compositing the screen and retrieving input events . Conservatively // set the GPU thread to slightly lower priority than it. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 5 ) != 0 ) { // Defensive fallback. Depending on the OEM, it may not be possible // to set priority to -5. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 2 ) != 0 ) { FML_LOG ( ERROR ) Failed to set GPU task runner priority ; } } }); task_runners . GetUITaskRunner () - PostTask ([]() { if ( :: setpriority ( PRIO_PROCESS , gettid (), - 1 ) != 0 ) { FML_LOG ( ERROR ) Failed to set UI task runner priority ; } }); } } \b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5bf9\bDart vm\u865a\u62df\u673a\u9000\u51fa\u540e\b\b\u505a\u4e00\u8d77\u626b\u5c3e\u5de5\u4f5c,\u5e76\u4e14\u6dfb\u52a0\u5230ui_thread,\u5982\u679c\bis_background_view\u662f\u5728\u540e\u53f0\u5de5\u4f5c\uff0c\u4e5f\u6dfb\u52a0\u5230GPU_Thread\u91cc\u9762 // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); } Flutter Engine\u8981\u6c42Embeder\u63d0\u4f9b\u56db\u4e2aTask Runner\uff0cEmbeder\u6307\u7684\u662f\u5c06\u5f15\u64ce\u79fb\u690d\u5230\u5e73\u53f0\u7684\u4e2d\u95f4\u5c42\u4ee3\u7801\u3002\u8fd9\u56db\u4e2a\u4e3b\u8981\u7684Task Runner\u5305\u62ec\uff1a \b\u6839\u636e\u5728java\u5c42\u8c03\u7528native\u5c42\u7684\u8c03\u7528\u662f\u4f20\u5165\u7684\u53c2\u6570\u5224\u65ad\u521b\u5efa\u7ebf\u7a0b\u7684\u7c7b\u578b: * 1.\u521b\u5efa\u4e00\u4e2a\bThreadHost\u6765\u7ba1\u74064\u4e2a\u7ebf\u7a0b\u5bf9\u8c61 * 2.\u5b9a\u4e49\u4e00\u4e2a\u7ebf\u7a0b\u7c7b\u7684\u4ee3\u7406\u7c7b /engine/src/flutter/fml/thread.cc * 3.\u5728\u7ebf\u7a0b\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\bMessageLoop\u3001\u7ed1\u5b9aTaskRunner,\u540c\u65f6\b\u542f\u52a8\bMessageLoop * 4.\u521b\u5efa\u4e00\u4e2aTaskRunners\u7c7b\u6765\u7ba1\u7406\u56db\u4e2a\u4efb\u52a1\u8fd0\u884c\u5668 if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } ThreadHost \u7c7b\b\u4e3b\u8981\u662f\u521b\u5efa\u552f\u4e00\u7684Platform\uff0cUI\uff0cIO\uff0cGPU\u7ebf\u7a0b\uff0c\u4e3b\u8981\u7528\u6765\u5bf9\b\u56db\u4e2a\u7ebf\u7a0b\u7684\b\u5bbf\u4e3b\u5bf9\u8c61,\u5b9a\u4e49\b\u4e00\u4e2a\b\u679a\u4e3e\u7c7b\u578b\u6765\u6807\u8bb0\u56db\u79cd\u7ebf\u7a0b\u7684\u7c7b\u578b: enum Type { Platform = 1 0 , UI = 1 1 , GPU = 1 2 , IO = 1 3 , }; \u6784\u9020\u65b9\u6cd5\u521b\u5efa\u56db\u4e2a\u7ebf: ThreadHost :: ThreadHost ( std :: string name_prefix , uint64_t mask ) { if ( mask ThreadHost :: Type :: Platform ) { platform_thread = std :: make_unique fml :: Thread ( name_prefix + .platform ); } if ( mask ThreadHost :: Type :: UI ) { ui_thread = std :: make_unique fml :: Thread ( name_prefix + .ui ); } if ( mask ThreadHost :: Type :: GPU ) { gpu_thread = std :: make_unique fml :: Thread ( name_prefix + .gpu ); } if ( mask ThreadHost :: Type :: IO ) { io_thread = std :: make_unique fml :: Thread ( name_prefix + .io ); } } \b\u5728 engine/src/flutter/fml/thread.cc \u6784\u9020\u65b9\u6cd5\u4e2d\u521b\u5efa\u7ebf\u7a0b\u7c7b\uff0c\u540c\u65f6\u521d\u59cb\u5316\b MessageLoop ,\u5173\u8054\u4efb\u52a1\u8fd0\u884c\u5668\u5230\b\u6d88\u606f\u961f\u5217\uff0c\u540c\u65f6\u542f\u52a8\u6d88\u606f\u961f\u5217 loop.Run() Thread :: Thread ( const std :: string name ) : joined_ ( false ) { fml :: AutoResetWaitableEvent latch ; fml :: RefPtr fml :: TaskRunner runner ; thread_ = std :: make_unique std :: thread ([ latch , runner , name ]() - void { SetCurrentThreadName ( name ); fml :: MessageLoop :: EnsureInitializedForCurrentThread (); //\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217 auto loop = MessageLoop :: GetCurrent (); runner = loop . GetTaskRunner (); latch . Signal (); loop . Run (); //\u542f\u52a8\u6d88\u606f\u961f\u5217 }); // \u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u72b6\u6001 latch . Wait (); task_runner_ = runner ; } Platform Task Runner: Flutter Engine\u7684\u4e3bTask Runner\uff0c\u7c7b\u4f3c\u4e8eAndroid Main Thread\u6216\u8005iOS\u7684Main Thread\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u4ed6\u4eec\u8fd8\u662f\u6709\u533a\u522b\u7684\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e2aFlutter\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2aEngine\u5b9e\u4f8b\uff0cEngine\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4f9bPlatform Runner\u4f7f\u7528\u3002 \u8ddfFlutter Engine\u7684\u6240\u6709\u4ea4\u4e92\uff08\u63a5\u53e3\u8c03\u7528\uff09\u5fc5\u987b\u5728Platform Thread\u8fdb\u884c\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u3002\u8fd9\u8ddfiOS UI\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u76f8\u7c7b\u4f3c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728Flutter Engine\u4e2d\u6709\u5f88\u591a\u6a21\u5757\u90fd\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u89c4\u5219\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8eFlutter Engine\u7684\u63a5\u53e3\u8c03\u7528\u90fd\u9700\u4fdd\u8bc1\u5728Platform Thread\u8fdb\u884c\u3002 \u963b\u585ePlatform Thread\u4e0d\u4f1a\u76f4\u63a5\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\uff08\u8ddfiOS android\u4e3b\u7ebf\u7a0b\u4e0d\u540c\uff09\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e5f\u4e0d\u5efa\u8bae\u5728\u8fd9\u4e2aRunner\u6267\u884c\u7e41\u91cd\u7684\u64cd\u4f5c\uff0c\u957f\u65f6\u95f4\u5361\u4f4fPlatform Thread\u5e94\u7528\u6709\u53ef\u80fd\u4f1a\u88ab\u7cfb\u7edfWatchdog\u5f3a\u6740\u3002 UI Task Runner Thread\uff08Dart Runner\uff09 UI Task Runner\u7528\u4e8e\u6267\u884cDart root isolate\u4ee3\u7801\uff08isolate\u6211\u4eec\u540e\u9762\u4f1a\u8bb2\u5230\uff0c\u59d1\u4e14\u5148\u7b80\u5355\u7406\u89e3\u4e3aDart VM\u91cc\u9762\u7684\u7ebf\u7a0b\uff09\u3002Root isolate\u6bd4\u8f83\u7279\u6b8a\uff0c\u5b83\u7ed1\u5b9a\u4e86\u4e0d\u5c11Flutter\u9700\u8981\u7684\u51fd\u6570\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u8fdb\u884c\u6e32\u67d3\u76f8\u5173\u64cd\u4f5c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5e27\uff0c\u5f15\u64ce\u8981\u505a\u7684\u4e8b\u60c5\u6709\uff1a Root isolate\u901a\u77e5Flutter Engine\u6709\u5e27\u9700\u8981\u6e32\u67d3\u3002 Flutter Engine\u901a\u77e5\u5e73\u53f0\uff0c\u9700\u8981\u5728\u4e0b\u4e00\u4e2avsync\u7684\u65f6\u5019\u5f97\u5230\u901a\u77e5\u3002 \u5e73\u53f0\u7b49\u5f85\u4e0b\u4e00\u4e2avsync \u5bf9\u521b\u5efa\u7684\u5bf9\u8c61\u548cWidgets\u8fdb\u884cLayout\u5e76\u751f\u6210\u4e00\u4e2aLayer Tree\uff0c\u8fd9\u4e2aTree\u9a6c\u4e0a\u88ab\u63d0\u4ea4\u7ed9Flutter Engine\u3002\u5f53\u524d\u9636\u6bb5\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u5149\u6805\u5316\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u4ec5\u662f\u751f\u6210\u4e86\u5bf9\u9700\u8981\u7ed8\u5236\u5185\u5bb9\u7684\u63cf\u8ff0\u3002 \u521b\u5efa\u6216\u8005\u66f4\u65b0Tree\uff0c\u8fd9\u4e2aTree\u5305\u542b\u4e86\u7528\u4e8e\u5c4f\u5e55\u4e0a\u663e\u793aWidgets\u7684\u8bed\u4e49\u4fe1\u606f\u3002\u8fd9\u4e2a\u4e1c\u897f\u4e3b\u8981\u7528\u4e8e\u5e73\u53f0\u76f8\u5173\u7684\u8f85\u52a9Accessibility\u5143\u7d20\u7684\u914d\u7f6e\u548c\u6e32\u67d3\u3002 \u9664\u4e86\u6e32\u67d3\u76f8\u5173\u903b\u8f91\u4e4b\u5916Root Isolate\u8fd8\u662f\u5904\u7406\u6765\u81eaNative Plugins\u7684\u6d88\u606f\uff0cTimers\uff0cMicrotasks\u548c\u5f02\u6b65IO\u7b49\u64cd\u4f5c\u3002Root Isolate\u8d1f\u8d23\u521b\u5efa\u7ba1\u7406\u7684Layer Tree\u6700\u7ec8\u51b3\u5b9a\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u7684\u5185\u5bb9\u3002\u56e0\u6b64\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u8fc7\u8f7d\u4f1a\u76f4\u63a5\u5bfc\u81f4\u5361\u987f\u6389\u5e27\u3002 GPU Task Runner GPU Task Runner\u4e3b\u8981\u7528\u4e8e\u6267\u884c\u8bbe\u5907GPU\u7684\u6307\u4ee4\u3002UI Task Runner\u521b\u5efa\u7684Layer Tree\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u5b83\u4e0d\u5173\u5fc3\u5230\u5e95\u7531\u8c01\u6765\u5b8c\u6210\u7ed8\u5236\u3002GPU Task Runner\u8d1f\u8d23\u5c06Layer Tree\u63d0\u4f9b\u7684\u4fe1\u606f\u8f6c\u5316\u4e3a\u5e73\u53f0\u53ef\u6267\u884c\u7684GPU\u6307\u4ee4\u3002GPU Task Runner\u540c\u65f6\u8d1f\u8d23\u7ed8\u5236\u6240\u9700\u8981\u7684GPU\u8d44\u6e90\u7684\u7ba1\u7406\u3002\u8d44\u6e90\u4e3b\u8981\u5305\u62ec\u5e73\u53f0Framebuffer\uff0cSurface\uff0cTexture\u548cBuffers\u7b49\u3002 \u4e00\u822c\u6765\u8bf4UI Runner\u548cGPU Runner\u8dd1\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002GPU Runner\u4f1a\u6839\u636e\u76ee\u524d\u5e27\u6267\u884c\u7684\u8fdb\u5ea6\u53bb\u5411UI Runner\u8981\u6c42\u4e0b\u4e00\u5e27\u7684\u6570\u636e\uff0c\u5728\u4efb\u52a1\u7e41\u91cd\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u544a\u8bc9UI Runner\u5ef6\u8fdf\u4efb\u52a1\u3002\u8fd9\u79cd\u8c03\u5ea6\u673a\u5236\u786e\u4fddGPU Runner\u4e0d\u81f3\u4e8e\u8fc7\u8f7d\uff0c\u540c\u65f6\u4e5f\u907f\u514d\u4e86UI Runner\u4e0d\u5fc5\u8981\u7684\u6d88\u8017\u3002 \u5efa\u8bae\u4e3a\u6bcf\u4e00\u4e2aEngine\u5b9e\u4f8b\u90fd\u65b0\u5efa\u4e00\u4e2a\u4e13\u7528\u7684GPU Runner\u7ebf\u7a0b\u3002 IO Task Runner \u524d\u9762\u8ba8\u8bba\u7684\u51e0\u4e2aRunner\u5bf9\u4e8e\u6267\u884c\u6d41\u7545\u5ea6\u6709\u6bd4\u8f83\u9ad8\u7684\u8981\u6c42\u3002Platform Runner\u8fc7\u8f7d\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edfWatchDog\u5f3a\u6740\uff0cUI\u548cGPU Runner\u8fc7\u8f7d\u5219\u53ef\u80fd\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\u3002\u4f46\u662fGPU\u7ebf\u7a0b\u7684\u4e00\u4e9b\u5fc5\u8981\u64cd\u4f5c\uff0c\u4f8b\u5982IO\uff0c\u653e\u5230\u54ea\u91cc\u6267\u884c\u5462\uff1f\u7b54\u6848\u6b63\u662fIO Runner\u3002 IO Runner\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4ece\u56fe\u7247\u5b58\u50a8\uff08\u6bd4\u5982\u78c1\u76d8\uff09\u4e2d\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u5c06\u56fe\u7247\u6570\u636e\u8fdb\u884c\u5904\u7406\u4e3aGPU Runner\u7684\u6e32\u67d3\u505a\u597d\u51c6\u5907\u3002IO Runner\u9996\u5148\u8981\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u4e8c\u8fdb\u5236\u6570\u636e\uff08\u6bd4\u5982PNG\uff0cJPEG\uff09\uff0c\u5c06\u5176\u89e3\u538b\u8f6c\u6362\u6210GPU\u80fd\u591f\u5904\u7406\u7684\u683c\u5f0f\u7136\u540e\u5c06\u6570\u636e\u4e0a\u4f20\u5230GPU\u3002 \u83b7\u53d6\u8bf8\u5982ui.Image\u8fd9\u6837\u7684\u8d44\u6e90\u53ea\u6709\u901a\u8fc7async call\u53bb\u8c03\u7528\uff0c\u5f53\u8c03\u7528\u53d1\u751f\u7684\u65f6\u5019Flutter Framework\u544a\u8bc9IO Runner\u8fdb\u884c\u52a0\u8f7d\u7684\u5f02\u6b65\u64cd\u4f5c\u3002 IO Runner\u76f4\u63a5\u51b3\u5b9a\u4e86\u56fe\u7247\u548c\u5176\u5b83\u4e00\u4e9b\u8d44\u6e90\u52a0\u8f7d\u7684\u5ef6\u8fdf\u95f4\u63a5\u5f71\u54cd\u6027\u80fd\u3002\u6240\u4ee5\u5efa\u8bae\u4e3aIO Runner\u521b\u5efa\u4e00\u4e2a\u4e13\u7528\u7684\u7ebf\u7a0b\u3002 Shell\u7c7b\u7684\u5b9e\u73b0: \b##\b \u521d\u59cb\u5316\u6d88\u606f\u961f\u5217\u5728AndroidShellHolder // Copyright 2013 The Flutter Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. #include flutter/fml/message_loop.h #include utility #include flutter/fml/memory/ref_counted.h #include flutter/fml/memory/ref_ptr.h #include flutter/fml/message_loop_impl.h #include flutter/fml/task_runner.h #include flutter/fml/thread_local.h namespace fml { // \u4f7f\u7528\u672c\u5730\u7ebf\u7a0b\u5bf9\u8c61\u4fdd\u5b58\u4e0d\u540cioslate\u7684\u6d88\u606f\u961f\u5217\u4fe1\u606f FML_THREAD_LOCAL ThreadLocal tls_message_loop ([]( intptr_t value ) { delete reinterpret_cast MessageLoop * ( value ); }); // \u83b7\u53d6\u5f53\u524d\u7684\u7ebf\u7a0b\u4fe1\u606f MessageLoop MessageLoop :: GetCurrent () { auto * loop = reinterpret_cast MessageLoop * ( tls_message_loop . Get ()); FML_CHECK ( loop != nullptr ) MessageLoop::EnsureInitializedForCurrentThread was not called on this thread prior to message loop use. ; return * loop ; } void MessageLoop :: EnsureInitializedForCurrentThread () { if ( tls_message_loop . Get () != 0 ) { // Already initialized. return ; } tls_message_loop . Set ( reinterpret_cast intptr_t ( new MessageLoop ())); } bool MessageLoop :: IsInitializedForCurrentThread () { return tls_message_loop . Get () != 0 ; } // \u521b\u5efa\u6d88\u606f\u961f\u5217 MessageLoop :: MessageLoop () : loop_ ( MessageLoopImpl :: Create ()), task_runner_ ( fml :: MakeRefCounted fml :: TaskRunner ( loop_ )) { FML_CHECK ( loop_ ); FML_CHECK ( task_runner_ ); } MessageLoop ::~ MessageLoop () = default ; void MessageLoop :: Run () { loop_ - DoRun (); } void MessageLoop :: Terminate () { loop_ - DoTerminate (); } fml :: RefPtr fml :: TaskRunner MessageLoop :: GetTaskRunner () const { return task_runner_ ; } fml :: RefPtr MessageLoopImpl MessageLoop :: GetLoopImpl () const { return loop_ ; } void MessageLoop :: AddTaskObserver ( intptr_t key , fml :: closure callback ) { loop_ - AddTaskObserver ( key , callback ); } void MessageLoop :: RemoveTaskObserver ( intptr_t key ) { loop_ - RemoveTaskObserver ( key ); } void MessageLoop :: RunExpiredTasksNow () { loop_ - RunExpiredTasksNow (); } } // namespace fml \u4f7f\u7528\u672c\u5730\u7ebf\u7a0b\u5bf9\u8c61\u4fdd\u5b58\u4e0d\u540cioslate\u7684\u6d88\u606f\u961f\u5217\u4fe1\u606f,\u4f7f\u7528 ThreadLocal \u8fdb\u884c\b\b\u6d88\u606f\b\u5faa\u73af\u7684\u4fdd\u5b58 FML_THREAD_LOCAL ThreadLocal tls_message_loop ([]( intptr_t value ) { delete reinterpret_cast MessageLoop * ( value ); }); \u521d\u59cb\u5316MessageLoop: // \u521b\u5efa\u6d88\u606f\u961f\u5217 MessageLoop :: MessageLoop () : loop_ ( MessageLoopImpl :: Create ()), task_runner_ ( fml :: MakeRefCounted fml :: TaskRunner ( loop_ )) { FML_CHECK ( loop_ ); FML_CHECK ( task_runner_ ); } message_loop_impl\u662fMessageLoop\u7684\u5b9e\u73b0\b\u7c7b\uff0c\u771f\u6b63\b\u7ba1\u7406\u6d88\u606f\u7684\u7c7b engine/src/flutter/fml/message_loop_impl.cc ,\b\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u7684\u5177\u4f53\b\u5b9e\u73b0 // Copyright 2013 The Flutter Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. #define FML_USED_ON_EMBEDDER #include flutter/fml/message_loop_impl.h #include algorithm #include vector #include flutter/fml/build_config.h #include flutter/fml/logging.h #include flutter/fml/trace_event.h #if OS_MACOSX #include flutter/fml/platform/darwin/message_loop_darwin.h #elif OS_ANDROID #include flutter/fml/platform/android/message_loop_android.h #elif OS_LINUX #include flutter/fml/platform/linux/message_loop_linux.h #elif OS_WIN #include flutter/fml/platform/win/message_loop_win.h #endif namespace fml { // \u4f7f\u7528\u7f16\u8bd1\u547d\u4ee4\u6765\u6807\u8bb0\u52a0\u8f7d\u4e0d\u540c\u5e73\u53f0\u7684\u6d88\u606f\u961f\u5217 fml :: RefPtr MessageLoopImpl MessageLoopImpl :: Create () { #if OS_MACOSX return fml :: MakeRefCounted MessageLoopDarwin (); #elif OS_ANDROID return fml :: MakeRefCounted MessageLoopAndroid (); #elif OS_LINUX return fml :: MakeRefCounted MessageLoopLinux (); #elif OS_WIN return fml :: MakeRefCounted MessageLoopWin (); #else return nullptr ; #endif } Shell \u7c7b\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u8d1f\u8d23\u7ba1\u7406\b\b\u5ba2\u6237\u7aef\u76f8\u5173\u7684\u8d44\u6e90 /engine/src/flutter/shell/platform/android/android_shell_holder.cc ,\u521b\u5efa\u7684\u5730\u65b9 Shell\u4e3b\u8981\u7684\u529f\u80fd\u521d\u59cb\u5316\b\u4e00\u4e0b\u56db\u4e2a\u5bf9\u8c61: platform_view_ = std::move(platform_view); engine_ = std::move(engine); rasterizer_ = std::move(rasterizer); io_manager_ = std::move(io_manager); \u521b\u5efaDartVM\u865a\u62df\u673a \u4e3b\u8981\u8fd9\u4e9b\u7684\u52a8\u4f5c: 1.\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4 2.\b\u521d\u59cb\u5316\u65e5\u5fd7\u8bbe\u7f6e 3.\u521d\u59cb\u5316Skia\uff1aInitSkiaEventTracer 4.\u521d\u59cb\u5316\uff1aSkGraphics 5.\u521d\u59cb\u5316\u672c\u5730\u5316\u5e93:InitializeICU 6.\u521b\u5efa\u865a\u62df\u673a:blink::DartVM::ForProcess(settings); 7.\u5f00\u542f\u5e73\u53f0\u4efb\u52a1\u4efb\u52a1 7.1:new Shell 7.2:\b\u5728new \bShell\u65f6\u5019\u6709\u4ece\u65b0\u521b\u5efa\u4e86\u4e00\u4e2aDartVM\uff1a Shell :: Shell ( blink :: TaskRunners task_runners , blink :: Settings settings ) : task_runners_ ( std :: move ( task_runners )), //\u4efb\u52a1\u8fd0\u884c\u5668 settings_ ( std :: move ( settings )), vm_ ( blink :: DartVM :: ForProcess ( settings_ )) { //\u521b\u5efa\u4e00\u4e2a\u65b0\u7684DartVM FML_DCHECK ( task_runners_ . IsValid ()); FML_DCHECK ( task_runners_ . GetPlatformTaskRunner () - RunsTasksOnCurrentThread ()); 7.3 Install service protocol handlers. \u771f\u6b63\u521b\u5efa\u5e73\u53f0\u64cd\u4f5c\u7684\u5bf9\u8c61 /engine/src/flutter/shell/platform/android/platform_view_android.cc \u521b\u5efa\u4e00\u4e2aCreateVSyncWaiter\u5bf9\u8c61\b \u521b\u5efa IOManager \u7ba1\u7406\u5668\uff0c\u5728IO\u7ebf\u7a0b\u6267\u884c \u521b\u5efaRasterizer\u6267\u884c\u5728GPU\u7ebf\u7a0b \u521b\u5efaengine\u5728UI\u7ebf\u7a0b\u6267\u884c shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); \u5728 Shell \b\b\u521b\u5efa\u65f6 : std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { //\b\u521d\u59cb\u5316\u7b2c\u4e09\u65b9\u5e93 PerformInitializationTasks ( settings ); //\u521d\u59cb\u5316DartVM\u865a\u62df\u673a auto vm = blink :: DartVM :: ForProcess ( settings ); FML_CHECK ( vm ) Must be able to initialize the VM. ; return Shell :: Create ( std :: move ( task_runners ), // std :: move ( settings ), // vm - GetIsolateSnapshot (), // blink :: DartSnapshot :: Empty (), // std :: move ( on_create_platform_view ), // std :: move ( on_create_rasterizer ) // ); } \b\b\b\b Shell\b\b\u521b\u5efa\u65f6\u7b2c\u4e09\u65b9\u5e93\u521d\u59cb\u5316\b\u4f4d\u7f6e PerformInitializationTasks , /engine/src/flutter/shell/common/shell.cc `RecordStartupTimestamp();` \u8bb0\u5f55\u65f6\u95f4\u6233 `fml::SetLogSettings(log_settings);` \u8bbe\u7f6e\u65e5\u5fd7\u4fe1\u606f `InitSkiaEventTracer(settings.trace_skia);` \u521d\u59cb\u5316Skia\b2d\u56fe\u50cf\u5f15\u64ce\u5e93\u8ddf\u8e2a\u5668 `SkGraphics::Init();` \b \u521d\u59cb\u53162d\b\u56fe\u5f62\u5f15\u64ce\u5e93 `fml::icu::InitializeICU(settings.icu_data_path);` \u521d\u59cb\u5316\b\b\u56fd\u9645\u5316\u5904\u7406\bICU // Though there can be multiple shells, some settings apply to all components in // the process. These have to be setup before the shell or any of its // sub-components can be initialized. In a perfect world, this would be empty. // TODO(chinmaygarde): The unfortunate side effect of this call is that settings // that cause shell initialization failures will still lead to some of their // settings being applied. static void PerformInitializationTasks ( const blink :: Settings settings ) { static std :: once_flag gShellSettingsInitialization = {}; std :: call_once ( gShellSettingsInitialization , [ settings ] { RecordStartupTimestamp (); { fml :: LogSettings log_settings ; log_settings . min_log_level = settings . verbose_logging ? fml :: LOG_INFO : fml :: LOG_ERROR ; fml :: SetLogSettings ( log_settings ); } tonic :: SetLogHandler ( []( const char * message ) { FML_LOG ( ERROR ) message ; }); if ( settings . trace_skia ) { InitSkiaEventTracer ( settings . trace_skia ); } if ( ! settings . skia_deterministic_rendering_on_cpu ) { SkGraphics :: Init (); } else { FML_DLOG ( INFO ) Skia deterministic rendering is enabled. ; } if ( settings . icu_initialization_required ) { if ( settings . icu_data_path . size () != 0 ) { fml :: icu :: InitializeICU ( settings . icu_data_path ); } else if ( settings . icu_mapper ) { fml :: icu :: InitializeICUFromMapping ( settings . icu_mapper ()); } else { FML_DLOG ( WARNING ) Skipping ICU initialization in the shell. ; } } }); } Dart VM \u865a\u62df\u673a\u5728Shell\b\u521b\u5efa\u7684\u65f6\u5019\b\u521d\u59cb\u5316\uff1a auto vm = blink::DartVM::ForProcess(settings); , /engine/src/flutter/shell/common/shell.cc ,Shell::Create\uff0c\b\bDart\u865a\u62df\u673a\u7684\b\u5206\u6790\uff0c\u5728\u540e\u7eed\u5728\u8fdb\u884c\u6269\u5c55 1.\u52a0\u8f7ddart\u865a\u62df\u673a\u5feb\u7167 2.\u52a0\u8f7dIsolate\u5feb\u7167 3.\b\u8c03\u7528DartVM\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u865a\u62df\u673a * fml :: RefPtr DartVM DartVM :: ForProcess ( Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) { std :: lock_guard std :: mutex lock ( gVMMutex ); std :: call_once ( gVMInitialization , [ settings , // vm_snapshot , // isolate_snapshot , // shared_snapshot // ]() mutable { if ( ! vm_snapshot ) { vm_snapshot = DartSnapshot :: VMSnapshotFromSettings ( settings ); } if ( ! ( vm_snapshot vm_snapshot - IsValid ())) { FML_LOG ( ERROR ) VM snapshot must be valid. ; return ; } if ( ! isolate_snapshot ) { isolate_snapshot = DartSnapshot :: IsolateSnapshotFromSettings ( settings ); } if ( ! ( isolate_snapshot isolate_snapshot - IsValid ())) { FML_LOG ( ERROR ) Isolate snapshot must be valid. ; return ; } if ( ! shared_snapshot ) { shared_snapshot = DartSnapshot :: Empty (); } gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); }); return gVM ; } \b# Shell\b\u521b\u5efa\u6240\u9700\u8981\u7684\u5728\b\u8fd9\u4e2a\u7c7b\u91cc\u9762\u8fdb\u884c\u521d\u59cb\u5316 CreateShellOnPlatformThread \u5bf9\bShell\u5bf9\u5e94\u7684platefrom,IO,GPU,UI, /engine/src/flutter/shell/common/shell.cc std::unique_ptr lt;Shell gt; Shell::Create( blink::TaskRunners task_runners, blink::Settings settings, fml::RefPtr lt;blink::DartSnapshot gt; isolate_snapshot, fml::RefPtr lt;blink::DartSnapshot gt; shared_snapshot, Shell::CreateCallback lt;PlatformView gt; on_create_platform_view, Shell::CreateCallback lt;Rasterizer gt; on_create_rasterizer) { PerformInitializationTasks(settings); if (!task_runners.IsValid() || !on_create_platform_view || !on_create_rasterizer) { return nullptr; } fml::AutoResetWaitableEvent latch; std::unique_ptr lt;Shell gt; shell; fml::TaskRunner::RunNowOrPostTask( task_runners.GetPlatformTaskRunner(), [ amp;latch, // amp;shell, // task_runners = std::move(task_runners), // settings, // isolate_snapshot = std::move(isolate_snapshot), // shared_snapshot = std::move(shared_snapshot), // on_create_platform_view, // on_create_rasterizer // ]() { shell = CreateShellOnPlatformThread(std::move(task_runners), // settings, // std::move(isolate_snapshot), // std::move(shared_snapshot), // on_create_platform_view, // on_create_rasterizer // ); latch.Signal(); }); latch.Wait(); return shell; } CreateShellOnPlatformThread \b\b\u5b8c\u6210Shell\u5206\u7684\u4e00\u4e0b\u521d\u59cb\u5316\u4fe1\u606f 1.\u521b\u5efa\u4e00\u4e2a\bShell\u5b9e\u4f8b\u5bf9\u8c61 auto shell = std::unique_ptr Shell (new Shell(task_runners, settings)); 2.\u521b\u5efa\u5e73\u53f0View\u5728\u5e73\u53f0\u7ebf\u7a0b auto platform_view = on_create_platform_view(*shell.get()); 3.\u521b\u5efa\u4e00\u4e2aSyncwaiter auto vsync_waiter = platform_view- CreateVSyncWaiter(); 4.\u521b\u5efa\u4e00\u4e2aIO\u7ba1\u7406io\u7ebf\u7a0b std::unique_ptr IOManager io_manager; 5.\u5728UI\u7ebf\u7a0b\u521b\u5efa\bengine\uff1a fml::AutoResetWaitableEvent ui_latch; std::unique_ptr lt;Shell gt; Shell::CreateShellOnPlatformThread( blink::TaskRunners task_runners, blink::Settings settings, fml::RefPtr lt;blink::DartSnapshot gt; isolate_snapshot, fml::RefPtr lt;blink::DartSnapshot gt; shared_snapshot, Shell::CreateCallback lt;PlatformView gt; on_create_platform_view, Shell::CreateCallback lt;Rasterizer gt; on_create_rasterizer) { if (!task_runners.IsValid()) { return nullptr; } auto shell = std::unique_ptr lt;Shell gt;(new Shell(task_runners, settings)); // Create the platform view on the platform thread (this thread). auto platform_view = on_create_platform_view(*shell.get()); if (!platform_view || !platform_view- gt;GetWeakPtr()) { return nullptr; } // Ask the platform view for the vsync waiter. This will be used by the engine // to create the animator. auto vsync_waiter = platform_view- gt;CreateVSyncWaiter(); if (!vsync_waiter) { return nullptr; } // Create the IO manager on the IO thread. The IO manager must be initialized // first because it has state that the other subsystems depend on. It must // first be booted and the necessary references obtained to initialize the // other subsystems. fml::AutoResetWaitableEvent io_latch; std::unique_ptr lt;IOManager gt; io_manager; auto io_task_runner = shell- gt;GetTaskRunners().GetIOTaskRunner(); fml::TaskRunner::RunNowOrPostTask( io_task_runner, [ amp;io_latch, // amp;io_manager, // amp;platform_view, // io_task_runner // ]() { io_manager = std::make_unique lt;IOManager gt;( platform_view- gt;CreateResourceContext(), io_task_runner); io_latch.Signal(); }); io_latch.Wait(); // Create the rasterizer on the GPU thread. fml::AutoResetWaitableEvent gpu_latch; std::unique_ptr lt;Rasterizer gt; rasterizer; fml::WeakPtr lt;blink::SnapshotDelegate gt; snapshot_delegate; fml::TaskRunner::RunNowOrPostTask( task_runners.GetGPUTaskRunner(), [ amp;gpu_latch, // amp;rasterizer, // on_create_rasterizer, // shell = shell.get(), // amp;snapshot_delegate // ]() { if (auto new_rasterizer = on_create_rasterizer(*shell)) { rasterizer = std::move(new_rasterizer); snapshot_delegate = rasterizer- gt;GetSnapshotDelegate(); } gpu_latch.Signal(); }); gpu_latch.Wait(); // Create the engine on the UI thread. fml::AutoResetWaitableEvent ui_latch; std::unique_ptr lt;Engine gt; engine; fml::TaskRunner::RunNowOrPostTask( shell- gt;GetTaskRunners().GetUITaskRunner(), fml::MakeCopyable([ amp;ui_latch, // amp;engine, // shell = shell.get(), // isolate_snapshot = std::move(isolate_snapshot), // shared_snapshot = std::move(shared_snapshot), // vsync_waiter = std::move(vsync_waiter), // snapshot_delegate = std::move(snapshot_delegate), // io_manager = io_manager- gt;GetWeakPtr() // ]() mutable { const auto amp; task_runners = shell- gt;GetTaskRunners(); // The animator is owned by the UI thread but it gets its vsync pulses // from the platform. auto animator = std::make_unique lt;Animator gt;(*shell, task_runners, std::move(vsync_waiter)); engine = std::make_unique lt;Engine gt;(*shell, // shell- gt;GetDartVM(), // std::move(isolate_snapshot), // std::move(shared_snapshot), // task_runners, // shell- gt;GetSettings(), // std::move(animator), // std::move(snapshot_delegate), // std::move(io_manager) // ); ui_latch.Signal(); })); ui_latch.Wait(); // We are already on the platform thread. So there is no platform latch to // wait on. if (!shell- gt;Setup(std::move(platform_view), // std::move(engine), // std::move(rasterizer), // std::move(io_manager)) // ) { return nullptr; } return shell; } \u8bbe\u7f6eShell\u7ba1\u7406\u7684Platform\u7ebf\u7a0b\u7ba1\u7406\u7684\u76f8\u5173\b\u8d44\u6e90: /engine/src/flutter/shell/common/engine.cc \u5728 /engine/src/flutter/shell/common/shell.cc \u4e2d\u6267\u884c CreateShellOnPlatformThread \u65b9\u6cd5\u65f6\u8c03\u7528 1.PlatformView:\b\u4e3b\u8981\u7ba1\u7406\u76f8\u5173\u7684\bview\u4e8b\u4ef6 2.Engine:\b\u6240\u6709\u7684\b\u8d44\u6e90\u90fd\u51c6\u5907\b\u5b8c\u6210\uff0c\b\u5f00\u59cb\u8c03\u7528dart\u4ee3\u7801\u548cDart\u865a\u62df\u673a\uff0c\b\u8fdb\u884c\u4ee3\u7801\b\u6267\u884c 3.Rasterizer:\u5149\u6805\u4e3b\u8981\u662f\u5904\u7406GPU\u76f8\u5173\u7684\u4e8b\u4ef6 4.IOManager:\u5bf9io\b\u7ebf\u7a0b\u8fdb\u884c\u7ba1\u7406 5.\u8bbe\u7f6e DartVM ServiceProtocol\b\u8bbe\u7f6e\b\u5904\u7406\u56de\u8c03 6.PersistentCache::GetCacheForProcess()- gt;AddWorkerTaskRunner(task_runners_.GetIOTaskRunner());\b\b\u5bf9\u7f13\u5b58\u76ee\u5f55\u7684\u5904\u7406 bool Shell::Setup(std::unique_ptr lt;PlatformView gt; platform_view, std::unique_ptr lt;Engine gt; engine, std::unique_ptr lt;Rasterizer gt; rasterizer, std::unique_ptr lt;IOManager gt; io_manager) { if (is_setup_) { return false; } if (!platform_view || !engine || !rasterizer || !io_manager) { return false; } platform_view_ = std::move(platform_view); engine_ = std::move(engine); rasterizer_ = std::move(rasterizer); io_manager_ = std::move(io_manager); is_setup_ = true; if (auto vm = blink::DartVM::ForProcessIfInitialized()) { vm- gt;GetServiceProtocol().AddHandler(this, GetServiceProtocolDescription()); } PersistentCache::GetCacheForProcess()- gt;AddWorkerTaskRunner( task_runners_.GetIOTaskRunner()); return true; } Android Native\u5c42\u4e0elibFlutter\u901a\u4fe1\u63a5\u53e3: Android\u7aef\u8c03\u7528JNI\u5c42\u7684\u4ee3\u7801\uff0c\u4f7f\u7528\u672c\u5730\u63a5\u53e3\u548cFlutterEngine\b\u901a\u4fe1\uff0c\u5728\bFlutter for Android \u4e2d\u901a\u8fc7FlutterJNI\u4e2d\b\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5\uff0cplatform_view_android_jni\u5728\b\u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u662f\u8fdb\u884c\u521d\u59cb\u5316: /io/flutter/embedding/engine/FlutterJNI.class engine/src/flutter/shell/platform/android/platform_view_android_jni.cc public class FlutterJNI { @UiThread public static native boolean nativeGetIsSoftwareRenderingEnabled (); @UiThread public static native String nativeGetObservatoryUri (); private native void nativeSurfaceCreated ( long var1 , Surface var3 ); private native void nativeSurfaceChanged ( long var1 , int var3 , int var4 ); private native void nativeSurfaceDestroyed ( long var1 ); private native void nativeSetViewportMetrics ( long var1 , float var3 , int var4 , int var5 , int var6 , int var7 , int var8 , int var9 , int var10 , int var11 , int var12 , int var13 ); private native Bitmap nativeGetBitmap ( long var1 ); private native void nativeDispatchPointerDataPacket ( long var1 , ByteBuffer var3 , int var4 ); private native void nativeDispatchSemanticsAction ( long var1 , int var3 , int var4 , ByteBuffer var5 , int var6 ); private native void nativeSetSemanticsEnabled ( long var1 , boolean var3 ); private native void nativeSetAccessibilityFeatures ( long var1 , int var3 ); private native void nativeRegisterTexture ( long var1 , long var3 , SurfaceTexture var5 ); private native void nativeMarkTextureFrameAvailable ( long var1 , long var3 ); private native void nativeUnregisterTexture ( long var1 , long var3 ); private native long nativeAttach ( FlutterJNI var1 , boolean var2 ); private native void nativeDetach ( long var1 ); private native void nativeDestroy ( long var1 ); private native void nativeRunBundleAndSnapshotFromLibrary ( long var1 , @NonNull String [] var3 , @Nullable String var4 , @Nullable String var5 , @NonNull AssetManager var6 ); private native void nativeDispatchEmptyPlatformMessage ( long var1 , String var3 , int var4 ); private native void nativeDispatchPlatformMessage ( long var1 , String var3 , ByteBuffer var4 , int var5 , int var6 ); private native void nativeInvokePlatformMessageEmptyResponseCallback ( long var1 , int var3 ); private native void nativeInvokePlatformMessageResponseCallback ( long var1 , int var3 , ByteBuffer var4 , int var5 ); } \u5f15\u64ce\u5143\u4ee3\u7801\u4e2d\b\b\b\u4f7f\u7528\u52a8\u6001JNI\u7684\u65b9\u5f0f\u6ce8\u518c\u76f8\u5173\u65b9\u6cd5: engine/src/flutter/shell/platform/android/platform_view_android_jni.cc \u8c03\u7528Register\b\u65b9\u6cd5\u6ce8\u518c\u672c\u5730\u65b9\u6cd5\uff1a bool RegisterApi ( JNIEnv * env ) { static const JNINativeMethod flutter_jni_methods [] = { // Start of methods from FlutterNativeView { . name = nativeAttach , . signature = (Lio/flutter/embedding/engine/FlutterJNI;Z)J , . fnPtr = reinterpret_cast void * ( shell :: AttachJNI ), }, { . name = nativeDestroy , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: DestroyJNI ), }, { . name = nativeRunBundleAndSnapshotFromLibrary , . signature = (J[Ljava/lang/String;Ljava/lang/String; Ljava/lang/String;Landroid/content/res/AssetManager;)V , . fnPtr = reinterpret_cast void * ( shell :: RunBundleAndSnapshotFromLibrary ), }, }; if ( env - RegisterNatives ( g_flutter_jni_class - obj (), flutter_jni_methods , arraysize ( flutter_jni_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterJNI ; return false ; } \b\u542f\u52a8DartVM\u52a0\u8f7dFlutter\u4fa7\u7684\u8d44\u6e90\u6587\u4ef6\u548c\u521d\u59cb\u5316\b /engine/src/flutter/shell/common/shell.cc \u5728\u521d\u59cb\u5316\u65f6\u521b\u5efaDart\u865a\u62df\u673a std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { PerformInitializationTasks ( settings ); auto vm = blink :: DartVM :: ForProcess ( settings ); FML_CHECK ( vm ) Must be able to initialize the VM. ; return Shell :: Create ( std :: move ( task_runners ), // std :: move ( settings ), // vm - GetIsolateSnapshot (), // blink :: DartSnapshot :: Empty (), // std :: move ( on_create_platform_view ), // std :: move ( on_create_rasterizer ) // ); } \u521b\u5efa\u4e00\u4e2aDartVM\u4f5c\u4e3aroot ioslate \u4f5c\u4e3awindow\u7684\b\u5173\u8054\u64cd\u4f5c: auto vm = blink::DartVM::ForProcess(settings); //1. \u8bbe\u7f6eDartSnapshot\u7684\u76f8\u5173\u8fd0\u884c\u53c2\u6570 //2. \u542f\u52a8DartVM\u865a\u62df\u673a fml :: RefPtr DartVM DartVM :: ForProcess ( Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) { std :: lock_guard std :: mutex lock ( gVMMutex ); std :: call_once ( gVMInitialization , [ settings , // vm_snapshot , // isolate_snapshot , // shared_snapshot // ]() mutable { if ( ! vm_snapshot ) { vm_snapshot = DartSnapshot :: VMSnapshotFromSettings ( settings ); } if ( ! ( vm_snapshot vm_snapshot - IsValid ())) { FML_LOG ( ERROR ) VM snapshot must be valid. ; return ; } if ( ! isolate_snapshot ) { isolate_snapshot = DartSnapshot :: IsolateSnapshotFromSettings ( settings ); } if ( ! ( isolate_snapshot isolate_snapshot - IsValid ())) { FML_LOG ( ERROR ) Isolate snapshot must be valid. ; return ; } if ( ! shared_snapshot ) { shared_snapshot = DartSnapshot :: Empty (); } // \u865a\u62df\u673a\u7684\u521b\u5efa gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); }); return gVM ; } \b\u8c03\u7528 MakeRefCounted \u5bf9\u865a\u62df\u673a\u5f15\u7528\u7684\u7ba1\u7406,\u8c03\u7528DartVM\u6784\u9020\u51fd\u6570 engine/src/flutter/runtime/dart_vm.cc // \u865a\u62df\u673a\u7684\u521b\u5efa gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); // 1.\u6784\u9020\u65b9\u6cd5\u51fa\u5165ioslate\u76f8\u5173\u7684\u53c2\u6570\uff0csetting\u4e2d\u7684\u914d\u7f6e\u53c2\u6570 // 2.\u5224\u65ad\u542f\u52a8\u7684DartVM\u6a21\u5f0f // 3.\u521d\u59cb\u5316FlutterUI\u76f8\u5173\u7684\u7c7b DartUI::InitForGlobal(); UI\u76f8\u5173\u7684\u6587\u4ef6engine/src/flutter/lib/ui/dart_ui.gni\uff0c/engine/src/flutter/lib/ui/ui.dart // 4.\u771f\u6b63\u521d\u59cb\u5316\u521d\u59cb\u5316DartVM:engine/src/third_party/dart/runtime/include/dart_api.h DartVM\u64cd\u4f5c\u63a5\u53e3 // char* init_error = Dart_Initialize( params); // 5.\u6dfb\u52a0\u865a\u62df\u673a\u56de\u8c03 // 6.// \u6dfb\u52a0\u52a0\u8f7d\u7684\u7c7b\u5e93\u8d44\u6e90\u5230Kernel\u4e2d,\u914d\u7f6e\u6587\u4ef6engine/src/flutter/common/settings.h DartVM :: DartVM ( const Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) : settings_ ( settings ), vm_snapshot_ ( std :: move ( vm_snapshot )), isolate_snapshot_ ( std :: move ( isolate_snapshot )), shared_snapshot_ ( std :: move ( shared_snapshot )), weak_factory_ ( this ) { TRACE_EVENT0 ( flutter , DartVMInitializer ); FML_DLOG ( INFO ) Attempting Dart VM launch for mode: ( IsRunningPrecompiledCode () ? AOT : Interpreter ); { TRACE_EVENT0 ( flutter , dart::bin::BootstrapDartIo ); dart :: bin :: BootstrapDartIo (); if ( ! settings . temp_directory_path . empty ()) { dart :: bin :: SetSystemTempDirectory ( settings . temp_directory_path . c_str ()); } } std :: vector const char * args ; // Instruct the VM to ignore unrecognized flags. // There is a lot of diversity in a lot of combinations when it // comes to the arguments the VM supports. And, if the VM comes across a flag // it does not recognize, it exits immediately. args . push_back ( --ignore-unrecognized-flags ); for ( auto * const profiler_flag : ProfilingFlags ( settings . enable_dart_profiling )) { args . push_back ( profiler_flag ); } PushBackAll ( args , kDartLanguageArgs , arraysize ( kDartLanguageArgs )); if ( IsRunningPrecompiledCode ()) { PushBackAll ( args , kDartPrecompilationArgs , arraysize ( kDartPrecompilationArgs )); } // Enable Dart assertions if we are not running precompiled code. We run non- // precompiled code only in the debug product mode. bool enable_asserts = ! settings . disable_dart_asserts ; #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DYNAMIC_PROFILE || \\ FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DYNAMIC_RELEASE enable_asserts = false ; #endif #if !OS_FUCHSIA if ( IsRunningPrecompiledCode ()) { enable_asserts = false ; } #endif // !OS_FUCHSIA #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // Debug mode uses the JIT, disable code page write protection to avoid // memory page protection changes before and after every compilation. PushBackAll ( args , kDartWriteProtectCodeArgs , arraysize ( kDartWriteProtectCodeArgs )); #endif if ( enable_asserts ) { PushBackAll ( args , kDartAssertArgs , arraysize ( kDartAssertArgs )); } if ( settings . start_paused ) { PushBackAll ( args , kDartStartPausedArgs , arraysize ( kDartStartPausedArgs )); } if ( settings . endless_trace_buffer || settings . trace_startup ) { // If we are tracing startup, make sure the trace buffer is endless so we // don t lose early traces. PushBackAll ( args , kDartEndlessTraceBufferArgs , arraysize ( kDartEndlessTraceBufferArgs )); } if ( settings . trace_systrace ) { PushBackAll ( args , kDartSystraceTraceBufferArgs , arraysize ( kDartSystraceTraceBufferArgs )); PushBackAll ( args , kDartTraceStreamsArgs , arraysize ( kDartTraceStreamsArgs )); } if ( settings . trace_startup ) { PushBackAll ( args , kDartTraceStartupArgs , arraysize ( kDartTraceStartupArgs )); } #if defined(OS_FUCHSIA) PushBackAll ( args , kDartFuchsiaTraceArgs , arraysize ( kDartFuchsiaTraceArgs )); PushBackAll ( args , kDartTraceStreamsArgs , arraysize ( kDartTraceStreamsArgs )); #endif for ( size_t i = 0 ; i settings . dart_flags . size (); i ++ ) args . push_back ( settings . dart_flags [ i ]. c_str ()); char * flags_error = Dart_SetVMFlags ( args . size (), args . data ()); if ( flags_error ) { FML_LOG ( FATAL ) Error while setting Dart VM flags: flags_error ; :: free ( flags_error ); } // \u521d\u59cb\u5316FlutterUI\u76f8\u5173\u7684\u7c7b\u5e93 DartUI :: InitForGlobal (); Dart_SetFileModifiedCallback ( DartFileModifiedCallback ); // \u771f\u6b63\u5b9e\u73b0\u865a\u62df\u673a,\u8c03\u7528\u63a5\u53e3 { TRACE_EVENT0 ( flutter , Dart_Initialize ); Dart_InitializeParams params = {}; params . version = DART_INITIALIZE_PARAMS_CURRENT_VERSION ; params . vm_snapshot_data = vm_snapshot_ - GetData () - GetSnapshotPointer (); params . vm_snapshot_instructions = vm_snapshot_ - GetInstructionsIfPresent (); params . create = reinterpret_cast decltype ( params . create ) ( DartIsolate :: DartIsolateCreateCallback ); params . shutdown = reinterpret_cast decltype ( params . shutdown ) ( DartIsolate :: DartIsolateShutdownCallback ); params . cleanup = reinterpret_cast decltype ( params . cleanup ) ( DartIsolate :: DartIsolateCleanupCallback ); params . thread_exit = ThreadExitCallback ; params . get_service_assets = GetVMServiceAssetsArchiveCallback ; params . entropy_source = DartIO :: EntropySource ; // engine/src/third_party/dart/runtime/include/dart_api.h DartVM\u64cd\u4f5c\u63a5\u53e3 // \u771f\u6b63\u521d\u59cb\u5316DartVM char * init_error = Dart_Initialize ( params ); if ( init_error ) { FML_LOG ( FATAL ) Error while initializing the Dart VM: init_error ; :: free ( init_error ); } // Send the earliest available timestamp in the application lifecycle to // timeline. The difference between this timestamp and the time we render // the very first frame gives us a good idea about Flutter s startup time. // Use a duration event so about:tracing will consider this event when // deciding the earliest event to use as time 0. if ( blink :: engine_main_enter_ts != 0 ) { Dart_TimelineEvent ( FlutterEngineMainEnter , // label blink :: engine_main_enter_ts , // timestamp0 blink :: engine_main_enter_ts , // timestamp1_or_async_id Dart_Timeline_Event_Duration , // event type 0 , // argument_count nullptr , // argument_names nullptr // argument_values ); } } // Allow streaming of stdout and stderr by the Dart vm. Dart_SetServiceStreamCallbacks ( ServiceStreamListenCallback , ServiceStreamCancelCallback ); Dart_SetEmbedderInformationCallback ( EmbedderInformationCallback ); // \u6dfb\u52a0\u52a0\u8f7d\u7684\u7c7b\u5e93\u8d44\u6e90\u5230Kernel\u4e2d,\u914d\u7f6e\u6587\u4ef6engine/src/flutter/common/settings.h if ( settings . dart_library_sources_kernel != nullptr ) { std :: unique_ptr fml :: Mapping dart_library_sources = settings . dart_library_sources_kernel (); // Set sources for dart:* libraries for debugging. Dart_SetDartLibrarySourcesKernel ( dart_library_sources - GetMapping (), dart_library_sources - GetSize ()); } } DartVM\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528 DartUI::InitForGlobal(); ,\u521b\u5efa\u4e00\u4e2a\b\u7ba1\u7406FlutterUI\u76f8\u5173\u7684\u63a5\u53e3 /engine/src/flutter/lib/ui/dart_ui.cc // Dart\u5c42UI\u76f8\u5173\u7684\u64cd\u4f5c\u7c7b\u521d\u59cb\u5316\u5165\u53e3,\u63d0\u4f9bUI\u76f8\u5173\u8054\u7684API // \u521b\u5efa\u4e24\u4e2aDartLibraryNatives\uff0cDart\u8c03\u7528JNI\u76f8\u5173\u65b9\u6cd5 // 1.\u521b\u5efa\u4e00\u4e2a\u548cUI\u76f8\u5173\u7684DartLibraryNatives // 2.\u521b\u5efa\u4e00\u4e2a\u548cUI\u4e0d\u76f8\u5173\u7684DartLibraryNatives void DartUI :: InitForGlobal () { if ( ! g_natives ) { g_natives = new tonic :: DartLibraryNatives (); //engine/src/third_party/tonic/dart_library_natives.cc // \u6ce8\u518c\u753b\u7b14\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5 engine/src/flutter/lib/ui/painting Canvas :: RegisterNatives ( g_natives ); CanvasGradient :: RegisterNatives ( g_natives ); CanvasImage :: RegisterNatives ( g_natives ); CanvasPath :: RegisterNatives ( g_natives ); CanvasPathMeasure :: RegisterNatives ( g_natives ); Codec :: RegisterNatives ( g_natives ); // engine/src/flutter/lib/ui/dart_runtime_hooks.cc DartVM\u6784\u9020\u51fd\u6570 DartRuntimeHooks :: RegisterNatives ( g_natives ); // \u6ce8\u518c\u753b\u7b14\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5 engine/src/flutter/lib/ui/painting EngineLayer :: RegisterNatives ( g_natives ); FontCollection :: RegisterNatives ( g_natives ); FrameInfo :: RegisterNatives ( g_natives ); ImageFilter :: RegisterNatives ( g_natives ); ImageShader :: RegisterNatives ( g_natives ); //engine/src/flutter/lib/ui/isolate_name_server IsolateNameServerNatives :: RegisterNatives ( g_natives ); Paragraph :: RegisterNatives ( g_natives ); ParagraphBuilder :: RegisterNatives ( g_natives ); Picture :: RegisterNatives ( g_natives ); PictureRecorder :: RegisterNatives ( g_natives ); Scene :: RegisterNatives ( g_natives ); SceneBuilder :: RegisterNatives ( g_natives ); SceneHost :: RegisterNatives ( g_natives ); SemanticsUpdate :: RegisterNatives ( g_natives ); SemanticsUpdateBuilder :: RegisterNatives ( g_natives ); Versions :: RegisterNatives ( g_natives ); Vertices :: RegisterNatives ( g_natives ); // \u521d\u59cb\u5316Window\u7c7b Window :: RegisterNatives ( g_natives ); // Secondary isolates do not provide UI-related APIs. g_natives_secondary = new tonic :: DartLibraryNatives (); DartRuntimeHooks :: RegisterNatives ( g_natives_secondary ); IsolateNameServerNatives :: RegisterNatives ( g_natives_secondary ); } } engine/src/flutter/shell/common/shell.cc \u4f5c\u4e3a\b\u4e00\u4e2a\b\u4e2d\u67a2\u63a7\u5236\u4f5c\u7528\uff0c\u4f7f\u7528\b\u5f31\u5f15\u7528\u6765\u4fdd\u5b58\b\bPlatformView\uff0c\bAndroid\uff0cios\u4fdd\u5b58\u4f7f\u7528shell\u4e2dPlatform\u4e0b\u7684Platefrom\u5b9e\u73b0\u6765\b\u5904\u7406\u5e73\u53f0\u76f8\u5173\u7684View,\bShell\u7684\b\u521d\u59cb\u5316\u662f\u5728 engine/src/flutter/shell/platform/android/android_shell_holder.cc \uff0c FlutterMain::Get().GetSettings() \u7f16\u8bd1\u65f6\u7684\u914d\u7f6e\u6587\u4ef6 engine/src/flutter/common/settings.cc , flutterJNI \u662fandroid\u5c42\u7684\u4ee3\u7801\uff0c is_background_view \u662f\u5728\bjava\u5c42\bFlutterNativeView\uff0c\u8fd9\u662fJava\u548cJNI\u7684\u901a\u4fe1\uff0c\u6570\u636e\u4f20\u8f93\u903b\u8f91\u5904\u7406\uff0cFlutterNativeView\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\b\u8c03\u7528JNI\b\u4ee3\u7801\uff0c\b\u521d\u59cb\u5316 android_shell_holder \u4f7f\u7528\u8fd9\u4e2a\u7c7b\u6765\b\u5168\u90e8\b\b Shell \u8fd9\u4e2a\u7c7b a","title":"Flutter\u5f15\u64ce\u76ee\u5f55"},{"location":"android/flutter/flutterenginedir/#flutter","text":"AUTHORS BUILD.gn LICENSE README.md build buildtools flutter ios_tools out third_party tools Flutter \u76ee\u5f55\u4e8c\u7ea7\u76ee\u5f55: total 96 -rw-r--../../ 1 cuco staff 525B Feb 28 11:00 AUTHORS -rw-r--r-- 1 cuco staff 3.8K Feb 28 11:00 BUILD.gn -rw-r--r-- 1 cuco staff 756B Feb 28 11:00 CONTRIBUTING.md -rw-r--r-- 1 cuco staff 20K Feb 28 13:17 DEPS -rw-r--r-- 1 cuco staff 1.5K Feb 28 11:00 LICENSE -rw-r--r-- 1 cuco staff 1.4K Feb 28 11:00 README.md -rw-r--r-- 1 cuco staff 6.4K Feb 28 11:00 analysis_options.yaml drwxr-xr-x 10 cuco staff 320B Feb 28 11:00 assets drwxr-xr-x 5 cuco staff 160B Feb 28 11:00 benchmarking drwxr-xr-x 5 cuco staff 160B Feb 28 11:00 build drwxr-xr-x 11 cuco staff 352B Feb 28 11:00 ci drwxr-xr-x 10 cuco staff 320B Feb 28 11:00 common drwxr-xr-x 3 cuco staff 96B Feb 28 11:00 docs drwxr-xr-x 31 cuco staff 992B Feb 28 11:00 flow drwxr-xr-x 6 cuco staff 192B Feb 28 11:45 flutter_kernel_transformers drwxr-xr-x 61 cuco staff 1.9K Feb 28 11:00 fml drwxr-xr-x 10 cuco staff 320B Feb 28 11:45 frontend_server drwxr-xr-x 6 cuco staff 192B Feb 28 11:00 lib drwxr-xr-x 29 cuco staff 928B Feb 28 11:00 runtime drwxr-xr-x 8 cuco staff 256B Feb 28 11:00 shell\uff1a\u5ba2\u6237\u7aef\u8c03\u7528Flutter\u7684\u6587\u4ef6\u76ee\u5f55\uff0c\u652f\u6301Android\uff0cMac\uff0cIOS\uff0c\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff0c\u5728\u5ba2\u6237\u7aef\u5f00\u59cb\u4f1a\u5bfc\u5165\u8be5\u76ee\u5f55\u4e0b\u7684\u5305\uff0c\u5728AndroidStudio\u4e2d\u663e\u793a\u4e3aFlutterForAndroid drwxr-xr-x 6 cuco staff 192B Feb 28 11:00 sky drwxr-xr-x 8 cuco staff 256B Feb 28 13:17 synchronization drwxr-xr-x 15 cuco staff 480B Feb 28 11:00 testing drwxr-xr-x 4 cuco staff 128B Feb 28 11:00 third_party drwxr-xr-x 11 cuco staff 352B Mar 4 19:32 tools drwxr-xr-x 37 cuco staff 1.2K Feb 28 11:00 vulkan FlutterNativeView\b\u5e73\u53f0\u901a\u9053\u6570\u636e\u4f20\u8f93\u9700\u8981\u8fdb\u4e00\u6b65\u5206\u6790 make_unique \u51fd\u6570\uff1a/Users/cuco/engine/src/flutter/shell/platform/android/android_shell_holder.cc RefPtr \uff1a/Users/cuco/engine/src/flutter/common/task_runners.cc MessageLoop:engine/src/flutter/shell/platform/android/android_shell_holder.cc MakeRefCounted:/Users/cuco/engine/src/flutter/shell/platform/android/platform_view_android_jni.cc","title":"Flutter\u5f15\u64ce\u76ee\u5f55"},{"location":"android/flutter/flutterenginedir/#flutter-jni","text":"","title":"Flutter \u521d\u59cb\u5316\u8c03\u7528JNI\u65b9\u6cd5\u5b8c\u6210\u521d\u59cb\u5316"},{"location":"android/flutter/flutterenginedir/#androidflutter","text":"Android\u4ee3\u7801\u5728\u521d\u59cb\u5316\u5b8c\u6210flutter\u7684\u6587\u4ef6\u4e4b\u540e\uff0c\u63d0\u4f9bSurfaceView\u5230\u5e95\u5c42\u8fdb\u884cFlutter engine \u4e2d\u7684Skia 2d\u56fe\u50cf \u540c\u4e3a\u8de8\u5e73\u53f0\u6280\u672f\uff0cFlutter\u6709\u4f55\u4f18\u52bf\u5462\uff1f Flutter\u5728Rlease\u6a21\u5f0f\u4e0b\u76f4\u63a5\u5c06Dart\u7f16\u8bd1\u6210\u672c\u5730\u673a\u5668\u7801\uff0c\u907f\u514d\u4e86\u4ee3\u7801\u89e3\u91ca\u8fd0\u884c\u7684\u6027\u80fd\u6d88\u8017\u3002 Dart\u672c\u8eab\u9488\u5bf9\u9ad8\u9891\u7387\u5faa\u73af\u5237\u65b0\uff08\u5982\u5c4f\u5e55\u6bcf\u79d260\u5e27\uff09\u5728\u5185\u5b58\u5c42\u9762\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4f7f\u5f97Dart\u8fd0\u884c\u65f6\u5728\u5c4f\u5e55\u7ed8\u5236\u5b9e\u73b0\u5982\u9c7c\u5f97\u6c34\u3002 Flutter\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u56fe\u5f62\u7ed8\u5236\u907f\u514d\u4e86Native\u6865\u63a5\u3002 Flutter\u5728\u5e94\u7528\u5c42\u4f7f\u7528Dart\u8fdb\u884c\u5f00\u53d1\uff0c\u800c\u652f\u6491\u5b83\u7684\u662f\u7528C++\u5f00\u53d1\u7684\u5f15\u64ce\u3002","title":"\bAndroid\u521d\u59cb\u5316\u9ed8\u8ba4\u7f16\u8bd1\u597d\u7684Flutter\u4ee3\u7801\u7684\u6587\u4ef6"},{"location":"android/flutter/flutterenginedir/#androidflutter_1","text":"\b\u5728\u4e0b\u56fe\u4e2d\b: * 1.\u521d\u59cb\u5316\bFlutter Engine \b\b\u8fd0\u884c\b\bFlutterUI\u5e93\u7684\u73af\u5883\uff0c\b\u521d\u59cb\u5316AndroidShellHolder\uff1a\u6765\u7ba1\u7406Flutter\u76f8\u5173\u7684\u5f15\u73af\u5883 * 2.\u6ce8\u518cSurfaceView\u7ed9Flutter Eingine\uff0c\u63d0\u4f9b\u7ed9\u5f15\u64ce\u8fdb\u884c\u7ed8\u5236\u7684\u753b\u5e03\uff0c\b\b\u8c03\u7528ANative_window\u7c7b\u6765\u8fde\u63a5FlutterUI\u548c\bAndroidUI\u7684\u6865\u6881 \b \u63a5\u4e0b\u6765\u8fdb\u884c\u5206\u6790\u5728JNI\u5c42\u7684\u8c03\u7528\u8fc7\u7a0b:AttachJNI\u4e2d\u8c03\u7528 std::make_unique AndroidShellHolder \u65b9\u6cd5\b\u521b\u5efa AndroidShellHolder \u5b9e\u4f8b engine/src/flutter/shell/platform/android/platform_view_android_jni.cc // Called By Java // \u65b9\u6cd5\u6ce8\u518c\u8fdb\u5165JNI static jlong AttachJNI ( JNIEnv * env , jclass clazz , jobject flutterJNI , jboolean is_background_view ) { fml :: jni :: JavaObjectWeakGlobalRef java_object ( env , flutterJNI ); auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); if ( shell_holder - IsValid ()) { return reinterpret_cast jlong ( shell_holder . release ()); } else { return 0 ; } } AndroidShellHolder \u7c7b\u662f\u5bf9\bPlatfrom\u5c42\u8c03\u7528JNI\u7684\u63a5\u53e3\u4f5c\u4e3a\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u6765\u8fdb\u884c\u7edf\u4e00\u7684\u4ee3\u7406\u5165\u53e3\uff0c\u4f7f\u7528C++11\u7684\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u6765\u7edf\u4e00\b\u7ba1\u7406\u4e00\u4e2a\u5bf9\u8c61 C++\u667a\u80fd\u6307\u9488 \u4ecb\u7ecdc++\u91cc\u9762\u7684\u56db\u4e2a\u667a\u80fd\u6307\u9488: auto_ptr, shared_ptr, weak_ptr, unique_ptr \u5176\u4e2d\u540e\u4e09\u4e2a\u662fc++11\u652f\u6301\uff0c\u5e76\u4e14\u7b2c\u4e00\u4e2a\u5df2\u7ecf\u88abc++11\u5f03\u7528\u3002 \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff1a\u6211\u4eec\u77e5\u9053c++\u7684\u5185\u5b58\u7ba1\u7406\u662f\u8ba9\u5f88\u591a\u4eba\u5934\u75bc\u7684\u4e8b\uff0c\u5f53\u6211\u4eec\u5199\u4e00\u4e2anew\u8bed\u53e5\u65f6\uff0c\u4e00\u822c\u5c31\u4f1a\u7acb\u5373\u628adelete\u8bed\u53e5\u76f4\u63a5\u4e5f\u5199\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u80fd\u907f\u514d\u7a0b\u5e8f\u8fd8\u672a\u6267\u884c\u5230delete\u65f6\u5c31\u8df3\u8f6c\u4e86\u6216\u8005\u5728\u51fd\u6570\u4e2d\u6ca1\u6709\u6267\u884c\u5230\u6700\u540e\u7684delete\u8bed\u53e5\u5c31\u8fd4\u56de\u4e86\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5728\u6bcf\u4e00\u4e2a\u53ef\u80fd\u8df3\u8f6c\u6216\u8005\u8fd4\u56de\u7684\u8bed\u53e5\u524d\u91ca\u653e\u8d44\u6e90\uff0c\u5c31\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\u3002\u4f7f\u7528\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7684\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u667a\u80fd\u6307\u9488\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u5f53\u8d85\u51fa\u4e86\u7c7b\u7684\u4f5c\u7528\u57df\u662f\uff0c\u7c7b\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90\u3002\u4e0b\u9762\u6211\u4eec\u9010\u4e2a\u4ecb\u7ecd\u3002 unique_ptr ,\u662f\u7528\u4e8e\u53d6\u4ee3c++98\u7684auto_ptr\u7684\u4ea7\u7269,\u5728c++98\u7684\u65f6\u5019\u8fd8\u6ca1\u6709\u79fb\u52a8\u8bed\u4e49(move semantics)\u7684\u652f\u6301,\u56e0\u6b64\u5bf9\u4e8eauto_ptr\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u7684\u5b9e\u73b0\u6ca1\u6709\u6838\u5fc3\u5143\u7d20\u7684\u652f\u6301,\u4f46\u662f\u8fd8\u662f\u5b9e\u73b0\u4e86auto_ptr\u7684\u79fb\u52a8\u8bed\u4e49,\u8fd9\u6837\u5e26\u6765\u7684\u4e00\u4e9b\u95ee\u9898\u662f\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u590d\u5236\u64cd\u4f5c\u91cd\u8f7d\u51fd\u6570\u4e0d\u591f\u5b8c\u7f8e,\u5177\u4f53\u4f53\u73b0\u5c31\u662f\u628aauto_ptr\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570,\u4f20\u8fdb\u53bb\u7684\u65f6\u5019\u63a7\u5236\u6743\u8f6c\u79fb,\u8f6c\u79fb\u5230\u51fd\u6570\u53c2\u6570,\u5f53\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u4e00\u4e2a\u63a7\u5236\u6743\u79fb\u4ea4\u7684\u8fc7\u7a0b,\u6240\u4ee5\u8fc7\u4e86\u51fd\u6570\u8c03\u7528\u5219\u539f\u5148\u7684auto_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u5728c++11\u5f53\u4e2d\u6709\u4e86\u79fb\u52a8\u8bed\u4e49,\u4f7f\u7528move()\u628aunique_ptr\u4f20\u5165\u51fd\u6570,\u8fd9\u6837\u4f60\u5c31\u77e5\u9053\u539f\u5148\u7684unique_ptr\u5df2\u7ecf\u5931\u6548\u4e86.\u79fb\u52a8\u8bed\u4e49\u672c\u8eab\u5c31\u8bf4\u660e\u4e86\u8fd9\u6837\u7684\u95ee\u9898,\u6bd4\u8f83\u5751\u7239\u7684\u662f\u6807\u51c6\u63cf\u8ff0\u662f\u8bf4\u5bf9\u4e8emove\u4e4b\u540e\u4f7f\u7528\u539f\u6765\u7684\u5185\u5bb9\u662f\u672a\u5b9a\u4e49\u884c\u4e3a,\u5e76\u975e\u629b\u51fa\u5f02\u5e38,\u6240\u4ee5\u8fd8\u662f\u8981\u9760\u4eba\u8089\u9075\u5b88\u6e38\u620f\u89c4\u5219.\u518d\u4e00\u4e2a,auto_ptr\u4e0d\u652f\u6301\u4f20\u5165deleter,\u6240\u4ee5\u53ea\u80fd\u652f\u6301\u5355\u5bf9\u8c61(delete object),\u800cunique_ptr\u5bf9\u6570\u7ec4\u7c7b\u578b\u6709\u504f\u7279\u5316\u91cd\u8f7d,\u5e76\u4e14\u8fd8\u505a\u4e86\u76f8\u5e94\u7684\u4f18\u5316,\u6bd4\u5982\u7528[]\u8bbf\u95ee\u76f8\u5e94\u5143\u7d20\u7b49. unique_ptr \u662f\u4e00\u4e2a\u72ec\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u6240\u6709\u6743\uff0c\u5305\u62ec\uff1a 1\u3001\u62e5\u6709\u5b83\u6307\u5411\u7684\u5bf9\u8c61 2\u3001\u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u6784\u9020\uff0c\u65e0\u6cd5\u8fdb\u884c\u590d\u5236\u8d4b\u503c\u64cd\u4f5c\u3002\u5373\u65e0\u6cd5\u4f7f\u4e24\u4e2aunique_ptr\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u4f46\u662f\u53ef\u4ee5\u8fdb\u884c\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u64cd\u4f5c 3\u3001\u4fdd\u5b58\u6307\u5411\u67d0\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5f53\u5b83\u672c\u8eab\u88ab\u5220\u9664\u91ca\u653e\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u7ed9\u5b9a\u7684\u5220\u9664\u5668\u91ca\u653e\u5b83\u6307\u5411\u7684\u5bf9\u8c61 unique_ptr \u53ef\u4ee5\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a 1\u3001\u4e3a\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168 2\u3001\u8bb2\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u6240\u6709\u6743\u4f20\u9012\u7ed9\u67d0\u51fd\u6570 3\u3001\u4ece\u67d0\u4e2a\u51fd\u6570\u8fd4\u56de\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7684\u6240\u6709\u6743 4\u3001\u5728\u5bb9\u5668\u4e2d\u4fdd\u5b58\u6307\u9488 5\u3001auto_ptr \u5e94\u8be5\u5177\u6709\u7684\u529f\u80fd share_ptr \u4ece\u540d\u5b57share\u5c31\u53ef\u4ee5\u770b\u51fa\u4e86\u8d44\u6e90\u53ef\u4ee5\u88ab\u591a\u4e2a\u6307\u9488\u5171\u4eab\uff0c\u5b83\u4f7f\u7528\u8ba1\u6570\u673a\u5236\u6765\u8868\u660e\u8d44\u6e90\u88ab\u51e0\u4e2a\u6307\u9488\u5171\u4eab\u3002\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u51fd\u6570use_count()\u6765\u67e5\u770b\u8d44\u6e90\u7684\u6240\u6709\u8005\u4e2a\u6570\u3002\u51fa\u4e86\u53ef\u4ee5\u901a\u8fc7new\u6765\u6784\u9020\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165auto_ptr, unique_ptr,weak_ptr\u6765\u6784\u9020\u3002\u5f53\u6211\u4eec\u8c03\u7528release()\u65f6\uff0c\u5f53\u524d\u6307\u9488\u4f1a\u91ca\u653e\u8d44\u6e90\u6240\u6709\u6743\uff0c\u8ba1\u6570\u51cf\u4e00\u3002\u5f53\u8ba1\u6570\u7b49\u4e8e0\u65f6\uff0c\u8d44\u6e90\u4f1a\u88ab\u91ca\u653e. weak_ptr weak_ptr\u662f\u7528\u6765\u89e3\u51b3shared_ptr\u76f8\u4e92\u5f15\u7528\u65f6\u7684\u6b7b\u9501\u95ee\u9898,\u5982\u679c\u8bf4\u4e24\u4e2ashared_ptr\u76f8\u4e92\u5f15\u7528,\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6307\u9488\u7684\u5f15\u7528\u8ba1\u6570\u6c38\u8fdc\u4e0d\u53ef\u80fd\u4e0b\u964d\u4e3a0,\u8d44\u6e90\u6c38\u8fdc\u4e0d\u4f1a\u91ca\u653e\u3002\u5b83\u662f\u5bf9\u5bf9\u8c61\u7684\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u4e0d\u4f1a\u589e\u52a0\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u548cshared_ptr\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8f6c\u5316\uff0cshared_ptr\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u7ed9\u5b83\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528lock\u51fd\u6570\u6765\u83b7\u5f97shared_ptr\u3002 usr/include/c++/v1/memory auto shell_holder = std :: make_unique AndroidShellHolder ( FlutterMain :: Get (). GetSettings (), java_object , is_background_view ); \u4f7f\u7528\u6a21\u677f\b\u65b9\u6cd5\b\u6765\u521b\u5efa\u4e00\u4e2a\bunique_ptr\b\b template class _Tp inline _LIBCPP_INLINE_VISIBILITY typename __unique_if _Tp :: __unique_array_unknown_bound make_unique ( size_t __n ) { typedef typename remove_extent _Tp :: type _Up ; return unique_ptr _Tp ( new _Up [ __n ]()); }","title":"\u5728\b\bAndroid\u7aef\b\u521d\u59cb\u5316Flutter \u76f8\u5173\u7684\u73af\u5883\b\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\u6765\u5b8c\u6210\uff1a"},{"location":"android/flutter/flutterenginedir/#flutter-android","text":"AndroidShellHolder\uff1a\u4e3b\u8981\u662f\u7ba1\u7406flutter engine \u5728Platform\u7aef\u7684\u5165\u53e3: 1.Platfrom,UI,IO,GUP\u7ebf\u7a0b\u7684\u7ba1\u7406\uff0c\u914d\u7f6e\u53c2\u6570\u7684\u7684\u52a0\u8f7d 2.\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c 3.thread_host_\u8d1f\u8d23\u7ba1\u7406\u76f8\u5173\u7684\u7ebf\u7a0b,\u6258\u7ba1\u56db\u4e2a\u76f8\u5904 4.PlatformViewAndroid\u7684\u521b\u5efa\uff0c\u8d1f\u8d23\u7ba1\u7406\u5e73\u53f0\u4fa7\u662f\u4e8b\u4ef6\u5904\u7406\u5728UI\u7ebf\u7a0b\b\u6267\u884c 5.Rasterizer\u7684\u521d\u59cb\u5316\u6805\u683c\u5316\u5728GPU\u7ebf\u7a0b\u6267\u884c 6.MessageLoop\u7684\u521b\u5efa\uff0c\u5728platfrom\u4e2d\u8fd0\u884c 7.TaskRunners\u7ba1\u7406\u6dfb\u52a0\u5230\u4e0d\u540c\u5e73\u53f0\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\uff0c\b\u8d1f\u8d23\u7ba1\u7406\u56db\u4e2a\b\u4efb\u52a1\u8fd0\u884c\u5668 8.Shell\u52a0\u8f7d\u7b2c\u4e09\u65b9\u5e93\uff0cJava\u865a\u62df\u673a\u7684\u521b\u5efa // \u53c2\u6570\u8bf4\u660e: // // blink::Settings settings,//\b\u914d\u7f6e\u6570\u636e // fml::jni::JavaObjectWeakGlobalRef java_object,//\bFlutterJNI \u5bf9\u8c61 // bool is_background_view // static size_t shell_count = 1; Shell:\u5bf9\u8c61\u7684\u4e2a\u6570\u4e3a\u4e00\u4e2a // \u5b8c\u6210\b\uff1a // 1.\b\u52a0\u8f7dSettings\u914d\u7f6e\u6587\u4ef6\uff0c\u7ed1\u5b9a\u5168\u5c40\u5bf9\u8c61java_object // 2.\b\b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c // 3.\bThreadHost\u7c7b\u6765\u7ba1\u7406Flutter engine\u7684Platform\uff0cio\uff0cGPU\uff0cUI\u7ebf\u7a0b // 4.\b\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217\uff1afml::MessageLoop::EnsureInitializedForCurrentThread(); //FlutterEngine\u7684\u521d\u59cb\u5316\u5165\u53e3 AndroidShellHolder :: AndroidShellHolder ( blink :: Settings settings , fml :: jni :: JavaObjectWeakGlobalRef java_object , bool is_background_view ) : settings_ ( std :: move ( settings )), java_object_ ( java_object ) { static size_t shell_count = 1 ; auto thread_label = std :: to_string ( shell_count ++ ); // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); } fml :: WeakPtr PlatformViewAndroid weak_platform_view ; Shell :: CreateCallback PlatformView on_create_platform_view = [ is_background_view , java_object , weak_platform_view ]( Shell shell ) { std :: unique_ptr PlatformViewAndroid platform_view_android ; if ( is_background_view ) { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object // java object handle for JNI interop ); } else { platform_view_android = std :: make_unique PlatformViewAndroid ( shell , // delegate shell . GetTaskRunners (), // task runners java_object , // java object handle for JNI interop shell . GetSettings () . enable_software_rendering // use software rendering ); } weak_platform_view = platform_view_android - GetWeakPtr (); return platform_view_android ; }; Shell :: CreateCallback Rasterizer on_create_rasterizer = []( Shell shell ) { return std :: make_unique Rasterizer ( shell . GetTaskRunners ()); }; // The current thread will be used as the platform thread. Ensure that the // message loop is initialized. fml :: MessageLoop :: EnsureInitializedForCurrentThread (); fml :: RefPtr fml :: TaskRunner gpu_runner ; fml :: RefPtr fml :: TaskRunner ui_runner ; fml :: RefPtr fml :: TaskRunner io_runner ; fml :: RefPtr fml :: TaskRunner platform_runner = fml :: MessageLoop :: GetCurrent (). GetTaskRunner (); if ( is_background_view ) { auto single_task_runner = thread_host_ . ui_thread - GetTaskRunner (); gpu_runner = single_task_runner ; ui_runner = single_task_runner ; io_runner = single_task_runner ; } else { gpu_runner = thread_host_ . gpu_thread - GetTaskRunner (); ui_runner = thread_host_ . ui_thread - GetTaskRunner (); io_runner = thread_host_ . io_thread - GetTaskRunner (); } blink :: TaskRunners task_runners ( thread_label , // label platform_runner , // platform gpu_runner , // gpu ui_runner , // ui io_runner // io ); shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); platform_view_ = weak_platform_view ; FML_DCHECK ( platform_view_ ); is_valid_ = shell_ != nullptr ; if ( is_valid_ ) { task_runners . GetGPUTaskRunner () - PostTask ([]() { // Android describes -8 as most important display threads, for // compositing the screen and retrieving input events . Conservatively // set the GPU thread to slightly lower priority than it. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 5 ) != 0 ) { // Defensive fallback. Depending on the OEM, it may not be possible // to set priority to -5. if ( :: setpriority ( PRIO_PROCESS , gettid (), - 2 ) != 0 ) { FML_LOG ( ERROR ) Failed to set GPU task runner priority ; } } }); task_runners . GetUITaskRunner () - PostTask ([]() { if ( :: setpriority ( PRIO_PROCESS , gettid (), - 1 ) != 0 ) { FML_LOG ( ERROR ) Failed to set UI task runner priority ; } }); } }","title":"\u5728Flutter\b Android\u4fa7\u521d\u59cb\u5316\u65f6\u8c03\u7528\b"},{"location":"android/flutter/flutterenginedir/#dart-vmui_threadis_background_viewgpu_thread","text":"// \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6e05\u7406\u865a\u62df\u673a\u9000\u51fa\u7684\u6e05\u7406\u5de5\u4f5c FML_CHECK ( pthread_key_create ( thread_destruct_key_ , ThreadDestructCallback ) == 0 ); // Detach from JNI when the UI and GPU threads exit. auto jni_exit_task ([ key = thread_destruct_key_ ]() { FML_CHECK ( pthread_setspecific ( key , reinterpret_cast void * ( 1 )) == 0 ); }); thread_host_ . ui_thread - GetTaskRunner () - PostTask ( jni_exit_task ); if ( ! is_background_view ) { thread_host_ . gpu_thread - GetTaskRunner () - PostTask ( jni_exit_task ); }","title":"\b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5bf9\bDart vm\u865a\u62df\u673a\u9000\u51fa\u540e\b\b\u505a\u4e00\u8d77\u626b\u5c3e\u5de5\u4f5c,\u5e76\u4e14\u6dfb\u52a0\u5230ui_thread,\u5982\u679c\bis_background_view\u662f\u5728\u540e\u53f0\u5de5\u4f5c\uff0c\u4e5f\u6dfb\u52a0\u5230GPU_Thread\u91cc\u9762"},{"location":"android/flutter/flutterenginedir/#flutter-engineembedertask-runnerembedertask-runner","text":"\b\u6839\u636e\u5728java\u5c42\u8c03\u7528native\u5c42\u7684\u8c03\u7528\u662f\u4f20\u5165\u7684\u53c2\u6570\u5224\u65ad\u521b\u5efa\u7ebf\u7a0b\u7684\u7c7b\u578b: * 1.\u521b\u5efa\u4e00\u4e2a\bThreadHost\u6765\u7ba1\u74064\u4e2a\u7ebf\u7a0b\u5bf9\u8c61 * 2.\u5b9a\u4e49\u4e00\u4e2a\u7ebf\u7a0b\u7c7b\u7684\u4ee3\u7406\u7c7b /engine/src/flutter/fml/thread.cc * 3.\u5728\u7ebf\u7a0b\u4ee3\u7406\u7c7b\u4e2d\u521b\u5efa\bMessageLoop\u3001\u7ed1\u5b9aTaskRunner,\u540c\u65f6\b\u542f\u52a8\bMessageLoop * 4.\u521b\u5efa\u4e00\u4e2aTaskRunners\u7c7b\u6765\u7ba1\u7406\u56db\u4e2a\u4efb\u52a1\u8fd0\u884c\u5668 if ( is_background_view ) { thread_host_ = { thread_label , ThreadHost :: Type :: UI }; } else { thread_host_ = { thread_label , ThreadHost :: Type :: UI | ThreadHost :: Type :: GPU | ThreadHost :: Type :: IO }; } ThreadHost \u7c7b\b\u4e3b\u8981\u662f\u521b\u5efa\u552f\u4e00\u7684Platform\uff0cUI\uff0cIO\uff0cGPU\u7ebf\u7a0b\uff0c\u4e3b\u8981\u7528\u6765\u5bf9\b\u56db\u4e2a\u7ebf\u7a0b\u7684\b\u5bbf\u4e3b\u5bf9\u8c61,\u5b9a\u4e49\b\u4e00\u4e2a\b\u679a\u4e3e\u7c7b\u578b\u6765\u6807\u8bb0\u56db\u79cd\u7ebf\u7a0b\u7684\u7c7b\u578b: enum Type { Platform = 1 0 , UI = 1 1 , GPU = 1 2 , IO = 1 3 , }; \u6784\u9020\u65b9\u6cd5\u521b\u5efa\u56db\u4e2a\u7ebf: ThreadHost :: ThreadHost ( std :: string name_prefix , uint64_t mask ) { if ( mask ThreadHost :: Type :: Platform ) { platform_thread = std :: make_unique fml :: Thread ( name_prefix + .platform ); } if ( mask ThreadHost :: Type :: UI ) { ui_thread = std :: make_unique fml :: Thread ( name_prefix + .ui ); } if ( mask ThreadHost :: Type :: GPU ) { gpu_thread = std :: make_unique fml :: Thread ( name_prefix + .gpu ); } if ( mask ThreadHost :: Type :: IO ) { io_thread = std :: make_unique fml :: Thread ( name_prefix + .io ); } } \b\u5728 engine/src/flutter/fml/thread.cc \u6784\u9020\u65b9\u6cd5\u4e2d\u521b\u5efa\u7ebf\u7a0b\u7c7b\uff0c\u540c\u65f6\u521d\u59cb\u5316\b MessageLoop ,\u5173\u8054\u4efb\u52a1\u8fd0\u884c\u5668\u5230\b\u6d88\u606f\u961f\u5217\uff0c\u540c\u65f6\u542f\u52a8\u6d88\u606f\u961f\u5217 loop.Run() Thread :: Thread ( const std :: string name ) : joined_ ( false ) { fml :: AutoResetWaitableEvent latch ; fml :: RefPtr fml :: TaskRunner runner ; thread_ = std :: make_unique std :: thread ([ latch , runner , name ]() - void { SetCurrentThreadName ( name ); fml :: MessageLoop :: EnsureInitializedForCurrentThread (); //\u521d\u59cb\u5316\u6d88\u606f\u961f\u5217 auto loop = MessageLoop :: GetCurrent (); runner = loop . GetTaskRunner (); latch . Signal (); loop . Run (); //\u542f\u52a8\u6d88\u606f\u961f\u5217 }); // \u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u72b6\u6001 latch . Wait (); task_runner_ = runner ; } Platform Task Runner: Flutter Engine\u7684\u4e3bTask Runner\uff0c\u7c7b\u4f3c\u4e8eAndroid Main Thread\u6216\u8005iOS\u7684Main Thread\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u4ed6\u4eec\u8fd8\u662f\u6709\u533a\u522b\u7684\u3002 \u4e00\u822c\u6765\u8bf4\uff0c\u4e00\u4e2aFlutter\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2aEngine\u5b9e\u4f8b\uff0cEngine\u521b\u5efa\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u4f9bPlatform Runner\u4f7f\u7528\u3002 \u8ddfFlutter Engine\u7684\u6240\u6709\u4ea4\u4e92\uff08\u63a5\u53e3\u8c03\u7528\uff09\u5fc5\u987b\u5728Platform Thread\u8fdb\u884c\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u3002\u8fd9\u8ddfiOS UI\u76f8\u5173\u7684\u64cd\u4f5c\u90fd\u5fc5\u987b\u5728\u4e3b\u7ebf\u7a0b\u8fdb\u884c\u76f8\u7c7b\u4f3c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728Flutter Engine\u4e2d\u6709\u5f88\u591a\u6a21\u5757\u90fd\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 \u89c4\u5219\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8eFlutter Engine\u7684\u63a5\u53e3\u8c03\u7528\u90fd\u9700\u4fdd\u8bc1\u5728Platform Thread\u8fdb\u884c\u3002 \u963b\u585ePlatform Thread\u4e0d\u4f1a\u76f4\u63a5\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\uff08\u8ddfiOS android\u4e3b\u7ebf\u7a0b\u4e0d\u540c\uff09\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e5f\u4e0d\u5efa\u8bae\u5728\u8fd9\u4e2aRunner\u6267\u884c\u7e41\u91cd\u7684\u64cd\u4f5c\uff0c\u957f\u65f6\u95f4\u5361\u4f4fPlatform Thread\u5e94\u7528\u6709\u53ef\u80fd\u4f1a\u88ab\u7cfb\u7edfWatchdog\u5f3a\u6740\u3002 UI Task Runner Thread\uff08Dart Runner\uff09 UI Task Runner\u7528\u4e8e\u6267\u884cDart root isolate\u4ee3\u7801\uff08isolate\u6211\u4eec\u540e\u9762\u4f1a\u8bb2\u5230\uff0c\u59d1\u4e14\u5148\u7b80\u5355\u7406\u89e3\u4e3aDart VM\u91cc\u9762\u7684\u7ebf\u7a0b\uff09\u3002Root isolate\u6bd4\u8f83\u7279\u6b8a\uff0c\u5b83\u7ed1\u5b9a\u4e86\u4e0d\u5c11Flutter\u9700\u8981\u7684\u51fd\u6570\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u8fdb\u884c\u6e32\u67d3\u76f8\u5173\u64cd\u4f5c\u3002\u5bf9\u4e8e\u6bcf\u4e00\u5e27\uff0c\u5f15\u64ce\u8981\u505a\u7684\u4e8b\u60c5\u6709\uff1a Root isolate\u901a\u77e5Flutter Engine\u6709\u5e27\u9700\u8981\u6e32\u67d3\u3002 Flutter Engine\u901a\u77e5\u5e73\u53f0\uff0c\u9700\u8981\u5728\u4e0b\u4e00\u4e2avsync\u7684\u65f6\u5019\u5f97\u5230\u901a\u77e5\u3002 \u5e73\u53f0\u7b49\u5f85\u4e0b\u4e00\u4e2avsync \u5bf9\u521b\u5efa\u7684\u5bf9\u8c61\u548cWidgets\u8fdb\u884cLayout\u5e76\u751f\u6210\u4e00\u4e2aLayer Tree\uff0c\u8fd9\u4e2aTree\u9a6c\u4e0a\u88ab\u63d0\u4ea4\u7ed9Flutter Engine\u3002\u5f53\u524d\u9636\u6bb5\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u5149\u6805\u5316\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u4ec5\u662f\u751f\u6210\u4e86\u5bf9\u9700\u8981\u7ed8\u5236\u5185\u5bb9\u7684\u63cf\u8ff0\u3002 \u521b\u5efa\u6216\u8005\u66f4\u65b0Tree\uff0c\u8fd9\u4e2aTree\u5305\u542b\u4e86\u7528\u4e8e\u5c4f\u5e55\u4e0a\u663e\u793aWidgets\u7684\u8bed\u4e49\u4fe1\u606f\u3002\u8fd9\u4e2a\u4e1c\u897f\u4e3b\u8981\u7528\u4e8e\u5e73\u53f0\u76f8\u5173\u7684\u8f85\u52a9Accessibility\u5143\u7d20\u7684\u914d\u7f6e\u548c\u6e32\u67d3\u3002 \u9664\u4e86\u6e32\u67d3\u76f8\u5173\u903b\u8f91\u4e4b\u5916Root Isolate\u8fd8\u662f\u5904\u7406\u6765\u81eaNative Plugins\u7684\u6d88\u606f\uff0cTimers\uff0cMicrotasks\u548c\u5f02\u6b65IO\u7b49\u64cd\u4f5c\u3002Root Isolate\u8d1f\u8d23\u521b\u5efa\u7ba1\u7406\u7684Layer Tree\u6700\u7ec8\u51b3\u5b9a\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u7684\u5185\u5bb9\u3002\u56e0\u6b64\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u8fc7\u8f7d\u4f1a\u76f4\u63a5\u5bfc\u81f4\u5361\u987f\u6389\u5e27\u3002 GPU Task Runner GPU Task Runner\u4e3b\u8981\u7528\u4e8e\u6267\u884c\u8bbe\u5907GPU\u7684\u6307\u4ee4\u3002UI Task Runner\u521b\u5efa\u7684Layer Tree\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u5b83\u4e0d\u5173\u5fc3\u5230\u5e95\u7531\u8c01\u6765\u5b8c\u6210\u7ed8\u5236\u3002GPU Task Runner\u8d1f\u8d23\u5c06Layer Tree\u63d0\u4f9b\u7684\u4fe1\u606f\u8f6c\u5316\u4e3a\u5e73\u53f0\u53ef\u6267\u884c\u7684GPU\u6307\u4ee4\u3002GPU Task Runner\u540c\u65f6\u8d1f\u8d23\u7ed8\u5236\u6240\u9700\u8981\u7684GPU\u8d44\u6e90\u7684\u7ba1\u7406\u3002\u8d44\u6e90\u4e3b\u8981\u5305\u62ec\u5e73\u53f0Framebuffer\uff0cSurface\uff0cTexture\u548cBuffers\u7b49\u3002 \u4e00\u822c\u6765\u8bf4UI Runner\u548cGPU Runner\u8dd1\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002GPU Runner\u4f1a\u6839\u636e\u76ee\u524d\u5e27\u6267\u884c\u7684\u8fdb\u5ea6\u53bb\u5411UI Runner\u8981\u6c42\u4e0b\u4e00\u5e27\u7684\u6570\u636e\uff0c\u5728\u4efb\u52a1\u7e41\u91cd\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u544a\u8bc9UI Runner\u5ef6\u8fdf\u4efb\u52a1\u3002\u8fd9\u79cd\u8c03\u5ea6\u673a\u5236\u786e\u4fddGPU Runner\u4e0d\u81f3\u4e8e\u8fc7\u8f7d\uff0c\u540c\u65f6\u4e5f\u907f\u514d\u4e86UI Runner\u4e0d\u5fc5\u8981\u7684\u6d88\u8017\u3002 \u5efa\u8bae\u4e3a\u6bcf\u4e00\u4e2aEngine\u5b9e\u4f8b\u90fd\u65b0\u5efa\u4e00\u4e2a\u4e13\u7528\u7684GPU Runner\u7ebf\u7a0b\u3002 IO Task Runner \u524d\u9762\u8ba8\u8bba\u7684\u51e0\u4e2aRunner\u5bf9\u4e8e\u6267\u884c\u6d41\u7545\u5ea6\u6709\u6bd4\u8f83\u9ad8\u7684\u8981\u6c42\u3002Platform Runner\u8fc7\u8f7d\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edfWatchDog\u5f3a\u6740\uff0cUI\u548cGPU Runner\u8fc7\u8f7d\u5219\u53ef\u80fd\u5bfc\u81f4Flutter\u5e94\u7528\u7684\u5361\u987f\u3002\u4f46\u662fGPU\u7ebf\u7a0b\u7684\u4e00\u4e9b\u5fc5\u8981\u64cd\u4f5c\uff0c\u4f8b\u5982IO\uff0c\u653e\u5230\u54ea\u91cc\u6267\u884c\u5462\uff1f\u7b54\u6848\u6b63\u662fIO Runner\u3002 IO Runner\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4ece\u56fe\u7247\u5b58\u50a8\uff08\u6bd4\u5982\u78c1\u76d8\uff09\u4e2d\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u683c\u5f0f\uff0c\u5c06\u56fe\u7247\u6570\u636e\u8fdb\u884c\u5904\u7406\u4e3aGPU Runner\u7684\u6e32\u67d3\u505a\u597d\u51c6\u5907\u3002IO Runner\u9996\u5148\u8981\u8bfb\u53d6\u538b\u7f29\u7684\u56fe\u7247\u4e8c\u8fdb\u5236\u6570\u636e\uff08\u6bd4\u5982PNG\uff0cJPEG\uff09\uff0c\u5c06\u5176\u89e3\u538b\u8f6c\u6362\u6210GPU\u80fd\u591f\u5904\u7406\u7684\u683c\u5f0f\u7136\u540e\u5c06\u6570\u636e\u4e0a\u4f20\u5230GPU\u3002 \u83b7\u53d6\u8bf8\u5982ui.Image\u8fd9\u6837\u7684\u8d44\u6e90\u53ea\u6709\u901a\u8fc7async call\u53bb\u8c03\u7528\uff0c\u5f53\u8c03\u7528\u53d1\u751f\u7684\u65f6\u5019Flutter Framework\u544a\u8bc9IO Runner\u8fdb\u884c\u52a0\u8f7d\u7684\u5f02\u6b65\u64cd\u4f5c\u3002 IO Runner\u76f4\u63a5\u51b3\u5b9a\u4e86\u56fe\u7247\u548c\u5176\u5b83\u4e00\u4e9b\u8d44\u6e90\u52a0\u8f7d\u7684\u5ef6\u8fdf\u95f4\u63a5\u5f71\u54cd\u6027\u80fd\u3002\u6240\u4ee5\u5efa\u8bae\u4e3aIO Runner\u521b\u5efa\u4e00\u4e2a\u4e13\u7528\u7684\u7ebf\u7a0b\u3002 Shell\u7c7b\u7684\u5b9e\u73b0: \b##\b \u521d\u59cb\u5316\u6d88\u606f\u961f\u5217\u5728AndroidShellHolder // Copyright 2013 The Flutter Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. #include flutter/fml/message_loop.h #include utility #include flutter/fml/memory/ref_counted.h #include flutter/fml/memory/ref_ptr.h #include flutter/fml/message_loop_impl.h #include flutter/fml/task_runner.h #include flutter/fml/thread_local.h namespace fml { // \u4f7f\u7528\u672c\u5730\u7ebf\u7a0b\u5bf9\u8c61\u4fdd\u5b58\u4e0d\u540cioslate\u7684\u6d88\u606f\u961f\u5217\u4fe1\u606f FML_THREAD_LOCAL ThreadLocal tls_message_loop ([]( intptr_t value ) { delete reinterpret_cast MessageLoop * ( value ); }); // \u83b7\u53d6\u5f53\u524d\u7684\u7ebf\u7a0b\u4fe1\u606f MessageLoop MessageLoop :: GetCurrent () { auto * loop = reinterpret_cast MessageLoop * ( tls_message_loop . Get ()); FML_CHECK ( loop != nullptr ) MessageLoop::EnsureInitializedForCurrentThread was not called on this thread prior to message loop use. ; return * loop ; } void MessageLoop :: EnsureInitializedForCurrentThread () { if ( tls_message_loop . Get () != 0 ) { // Already initialized. return ; } tls_message_loop . Set ( reinterpret_cast intptr_t ( new MessageLoop ())); } bool MessageLoop :: IsInitializedForCurrentThread () { return tls_message_loop . Get () != 0 ; } // \u521b\u5efa\u6d88\u606f\u961f\u5217 MessageLoop :: MessageLoop () : loop_ ( MessageLoopImpl :: Create ()), task_runner_ ( fml :: MakeRefCounted fml :: TaskRunner ( loop_ )) { FML_CHECK ( loop_ ); FML_CHECK ( task_runner_ ); } MessageLoop ::~ MessageLoop () = default ; void MessageLoop :: Run () { loop_ - DoRun (); } void MessageLoop :: Terminate () { loop_ - DoTerminate (); } fml :: RefPtr fml :: TaskRunner MessageLoop :: GetTaskRunner () const { return task_runner_ ; } fml :: RefPtr MessageLoopImpl MessageLoop :: GetLoopImpl () const { return loop_ ; } void MessageLoop :: AddTaskObserver ( intptr_t key , fml :: closure callback ) { loop_ - AddTaskObserver ( key , callback ); } void MessageLoop :: RemoveTaskObserver ( intptr_t key ) { loop_ - RemoveTaskObserver ( key ); } void MessageLoop :: RunExpiredTasksNow () { loop_ - RunExpiredTasksNow (); } } // namespace fml \u4f7f\u7528\u672c\u5730\u7ebf\u7a0b\u5bf9\u8c61\u4fdd\u5b58\u4e0d\u540cioslate\u7684\u6d88\u606f\u961f\u5217\u4fe1\u606f,\u4f7f\u7528 ThreadLocal \u8fdb\u884c\b\b\u6d88\u606f\b\u5faa\u73af\u7684\u4fdd\u5b58 FML_THREAD_LOCAL ThreadLocal tls_message_loop ([]( intptr_t value ) { delete reinterpret_cast MessageLoop * ( value ); }); \u521d\u59cb\u5316MessageLoop: // \u521b\u5efa\u6d88\u606f\u961f\u5217 MessageLoop :: MessageLoop () : loop_ ( MessageLoopImpl :: Create ()), task_runner_ ( fml :: MakeRefCounted fml :: TaskRunner ( loop_ )) { FML_CHECK ( loop_ ); FML_CHECK ( task_runner_ ); } message_loop_impl\u662fMessageLoop\u7684\u5b9e\u73b0\b\u7c7b\uff0c\u771f\u6b63\b\u7ba1\u7406\u6d88\u606f\u7684\u7c7b engine/src/flutter/fml/message_loop_impl.cc ,\b\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u7684\u5177\u4f53\b\u5b9e\u73b0 // Copyright 2013 The Flutter Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. #define FML_USED_ON_EMBEDDER #include flutter/fml/message_loop_impl.h #include algorithm #include vector #include flutter/fml/build_config.h #include flutter/fml/logging.h #include flutter/fml/trace_event.h #if OS_MACOSX #include flutter/fml/platform/darwin/message_loop_darwin.h #elif OS_ANDROID #include flutter/fml/platform/android/message_loop_android.h #elif OS_LINUX #include flutter/fml/platform/linux/message_loop_linux.h #elif OS_WIN #include flutter/fml/platform/win/message_loop_win.h #endif namespace fml { // \u4f7f\u7528\u7f16\u8bd1\u547d\u4ee4\u6765\u6807\u8bb0\u52a0\u8f7d\u4e0d\u540c\u5e73\u53f0\u7684\u6d88\u606f\u961f\u5217 fml :: RefPtr MessageLoopImpl MessageLoopImpl :: Create () { #if OS_MACOSX return fml :: MakeRefCounted MessageLoopDarwin (); #elif OS_ANDROID return fml :: MakeRefCounted MessageLoopAndroid (); #elif OS_LINUX return fml :: MakeRefCounted MessageLoopLinux (); #elif OS_WIN return fml :: MakeRefCounted MessageLoopWin (); #else return nullptr ; #endif }","title":"Flutter Engine\u8981\u6c42Embeder\u63d0\u4f9b\u56db\u4e2aTask Runner\uff0cEmbeder\u6307\u7684\u662f\u5c06\u5f15\u64ce\u79fb\u690d\u5230\u5e73\u53f0\u7684\u4e2d\u95f4\u5c42\u4ee3\u7801\u3002\u8fd9\u56db\u4e2a\u4e3b\u8981\u7684Task Runner\u5305\u62ec\uff1a"},{"location":"android/flutter/flutterenginedir/#shell-enginesrcfluttershellplatformandroidandroid_shell_holdercc","text":"Shell\u4e3b\u8981\u7684\u529f\u80fd\u521d\u59cb\u5316\b\u4e00\u4e0b\u56db\u4e2a\u5bf9\u8c61: platform_view_ = std::move(platform_view); engine_ = std::move(engine); rasterizer_ = std::move(rasterizer); io_manager_ = std::move(io_manager); \u521b\u5efaDartVM\u865a\u62df\u673a \u4e3b\u8981\u8fd9\u4e9b\u7684\u52a8\u4f5c: 1.\u8bb0\u5f55\u5f00\u59cb\u65f6\u95f4 2.\b\u521d\u59cb\u5316\u65e5\u5fd7\u8bbe\u7f6e 3.\u521d\u59cb\u5316Skia\uff1aInitSkiaEventTracer 4.\u521d\u59cb\u5316\uff1aSkGraphics 5.\u521d\u59cb\u5316\u672c\u5730\u5316\u5e93:InitializeICU 6.\u521b\u5efa\u865a\u62df\u673a:blink::DartVM::ForProcess(settings); 7.\u5f00\u542f\u5e73\u53f0\u4efb\u52a1\u4efb\u52a1 7.1:new Shell 7.2:\b\u5728new \bShell\u65f6\u5019\u6709\u4ece\u65b0\u521b\u5efa\u4e86\u4e00\u4e2aDartVM\uff1a Shell :: Shell ( blink :: TaskRunners task_runners , blink :: Settings settings ) : task_runners_ ( std :: move ( task_runners )), //\u4efb\u52a1\u8fd0\u884c\u5668 settings_ ( std :: move ( settings )), vm_ ( blink :: DartVM :: ForProcess ( settings_ )) { //\u521b\u5efa\u4e00\u4e2a\u65b0\u7684DartVM FML_DCHECK ( task_runners_ . IsValid ()); FML_DCHECK ( task_runners_ . GetPlatformTaskRunner () - RunsTasksOnCurrentThread ()); 7.3 Install service protocol handlers. \u771f\u6b63\u521b\u5efa\u5e73\u53f0\u64cd\u4f5c\u7684\u5bf9\u8c61 /engine/src/flutter/shell/platform/android/platform_view_android.cc \u521b\u5efa\u4e00\u4e2aCreateVSyncWaiter\u5bf9\u8c61\b \u521b\u5efa IOManager \u7ba1\u7406\u5668\uff0c\u5728IO\u7ebf\u7a0b\u6267\u884c \u521b\u5efaRasterizer\u6267\u884c\u5728GPU\u7ebf\u7a0b \u521b\u5efaengine\u5728UI\u7ebf\u7a0b\u6267\u884c shell_ = Shell :: Create ( task_runners , // task runners settings_ , // settings on_create_platform_view , // platform view create callback on_create_rasterizer // rasterizer create callback ); \u5728 Shell \b\b\u521b\u5efa\u65f6 : std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { //\b\u521d\u59cb\u5316\u7b2c\u4e09\u65b9\u5e93 PerformInitializationTasks ( settings ); //\u521d\u59cb\u5316DartVM\u865a\u62df\u673a auto vm = blink :: DartVM :: ForProcess ( settings ); FML_CHECK ( vm ) Must be able to initialize the VM. ; return Shell :: Create ( std :: move ( task_runners ), // std :: move ( settings ), // vm - GetIsolateSnapshot (), // blink :: DartSnapshot :: Empty (), // std :: move ( on_create_platform_view ), // std :: move ( on_create_rasterizer ) // ); } \b\b\b\b Shell\b\b\u521b\u5efa\u65f6\u7b2c\u4e09\u65b9\u5e93\u521d\u59cb\u5316\b\u4f4d\u7f6e PerformInitializationTasks , /engine/src/flutter/shell/common/shell.cc `RecordStartupTimestamp();` \u8bb0\u5f55\u65f6\u95f4\u6233 `fml::SetLogSettings(log_settings);` \u8bbe\u7f6e\u65e5\u5fd7\u4fe1\u606f `InitSkiaEventTracer(settings.trace_skia);` \u521d\u59cb\u5316Skia\b2d\u56fe\u50cf\u5f15\u64ce\u5e93\u8ddf\u8e2a\u5668 `SkGraphics::Init();` \b \u521d\u59cb\u53162d\b\u56fe\u5f62\u5f15\u64ce\u5e93 `fml::icu::InitializeICU(settings.icu_data_path);` \u521d\u59cb\u5316\b\b\u56fd\u9645\u5316\u5904\u7406\bICU // Though there can be multiple shells, some settings apply to all components in // the process. These have to be setup before the shell or any of its // sub-components can be initialized. In a perfect world, this would be empty. // TODO(chinmaygarde): The unfortunate side effect of this call is that settings // that cause shell initialization failures will still lead to some of their // settings being applied. static void PerformInitializationTasks ( const blink :: Settings settings ) { static std :: once_flag gShellSettingsInitialization = {}; std :: call_once ( gShellSettingsInitialization , [ settings ] { RecordStartupTimestamp (); { fml :: LogSettings log_settings ; log_settings . min_log_level = settings . verbose_logging ? fml :: LOG_INFO : fml :: LOG_ERROR ; fml :: SetLogSettings ( log_settings ); } tonic :: SetLogHandler ( []( const char * message ) { FML_LOG ( ERROR ) message ; }); if ( settings . trace_skia ) { InitSkiaEventTracer ( settings . trace_skia ); } if ( ! settings . skia_deterministic_rendering_on_cpu ) { SkGraphics :: Init (); } else { FML_DLOG ( INFO ) Skia deterministic rendering is enabled. ; } if ( settings . icu_initialization_required ) { if ( settings . icu_data_path . size () != 0 ) { fml :: icu :: InitializeICU ( settings . icu_data_path ); } else if ( settings . icu_mapper ) { fml :: icu :: InitializeICUFromMapping ( settings . icu_mapper ()); } else { FML_DLOG ( WARNING ) Skipping ICU initialization in the shell. ; } } }); } Dart VM \u865a\u62df\u673a\u5728Shell\b\u521b\u5efa\u7684\u65f6\u5019\b\u521d\u59cb\u5316\uff1a auto vm = blink::DartVM::ForProcess(settings); , /engine/src/flutter/shell/common/shell.cc ,Shell::Create\uff0c\b\bDart\u865a\u62df\u673a\u7684\b\u5206\u6790\uff0c\u5728\u540e\u7eed\u5728\u8fdb\u884c\u6269\u5c55 1.\u52a0\u8f7ddart\u865a\u62df\u673a\u5feb\u7167 2.\u52a0\u8f7dIsolate\u5feb\u7167 3.\b\u8c03\u7528DartVM\u6784\u9020\u65b9\u6cd5\u521d\u59cb\u5316\u865a\u62df\u673a * fml :: RefPtr DartVM DartVM :: ForProcess ( Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) { std :: lock_guard std :: mutex lock ( gVMMutex ); std :: call_once ( gVMInitialization , [ settings , // vm_snapshot , // isolate_snapshot , // shared_snapshot // ]() mutable { if ( ! vm_snapshot ) { vm_snapshot = DartSnapshot :: VMSnapshotFromSettings ( settings ); } if ( ! ( vm_snapshot vm_snapshot - IsValid ())) { FML_LOG ( ERROR ) VM snapshot must be valid. ; return ; } if ( ! isolate_snapshot ) { isolate_snapshot = DartSnapshot :: IsolateSnapshotFromSettings ( settings ); } if ( ! ( isolate_snapshot isolate_snapshot - IsValid ())) { FML_LOG ( ERROR ) Isolate snapshot must be valid. ; return ; } if ( ! shared_snapshot ) { shared_snapshot = DartSnapshot :: Empty (); } gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); }); return gVM ; } \b# Shell\b\u521b\u5efa\u6240\u9700\u8981\u7684\u5728\b\u8fd9\u4e2a\u7c7b\u91cc\u9762\u8fdb\u884c\u521d\u59cb\u5316 CreateShellOnPlatformThread \u5bf9\bShell\u5bf9\u5e94\u7684platefrom,IO,GPU,UI, /engine/src/flutter/shell/common/shell.cc std::unique_ptr lt;Shell gt; Shell::Create( blink::TaskRunners task_runners, blink::Settings settings, fml::RefPtr lt;blink::DartSnapshot gt; isolate_snapshot, fml::RefPtr lt;blink::DartSnapshot gt; shared_snapshot, Shell::CreateCallback lt;PlatformView gt; on_create_platform_view, Shell::CreateCallback lt;Rasterizer gt; on_create_rasterizer) { PerformInitializationTasks(settings); if (!task_runners.IsValid() || !on_create_platform_view || !on_create_rasterizer) { return nullptr; } fml::AutoResetWaitableEvent latch; std::unique_ptr lt;Shell gt; shell; fml::TaskRunner::RunNowOrPostTask( task_runners.GetPlatformTaskRunner(), [ amp;latch, // amp;shell, // task_runners = std::move(task_runners), // settings, // isolate_snapshot = std::move(isolate_snapshot), // shared_snapshot = std::move(shared_snapshot), // on_create_platform_view, // on_create_rasterizer // ]() { shell = CreateShellOnPlatformThread(std::move(task_runners), // settings, // std::move(isolate_snapshot), // std::move(shared_snapshot), // on_create_platform_view, // on_create_rasterizer // ); latch.Signal(); }); latch.Wait(); return shell; } CreateShellOnPlatformThread \b\b\u5b8c\u6210Shell\u5206\u7684\u4e00\u4e0b\u521d\u59cb\u5316\u4fe1\u606f 1.\u521b\u5efa\u4e00\u4e2a\bShell\u5b9e\u4f8b\u5bf9\u8c61 auto shell = std::unique_ptr Shell (new Shell(task_runners, settings)); 2.\u521b\u5efa\u5e73\u53f0View\u5728\u5e73\u53f0\u7ebf\u7a0b auto platform_view = on_create_platform_view(*shell.get()); 3.\u521b\u5efa\u4e00\u4e2aSyncwaiter auto vsync_waiter = platform_view- CreateVSyncWaiter(); 4.\u521b\u5efa\u4e00\u4e2aIO\u7ba1\u7406io\u7ebf\u7a0b std::unique_ptr IOManager io_manager; 5.\u5728UI\u7ebf\u7a0b\u521b\u5efa\bengine\uff1a fml::AutoResetWaitableEvent ui_latch; std::unique_ptr lt;Shell gt; Shell::CreateShellOnPlatformThread( blink::TaskRunners task_runners, blink::Settings settings, fml::RefPtr lt;blink::DartSnapshot gt; isolate_snapshot, fml::RefPtr lt;blink::DartSnapshot gt; shared_snapshot, Shell::CreateCallback lt;PlatformView gt; on_create_platform_view, Shell::CreateCallback lt;Rasterizer gt; on_create_rasterizer) { if (!task_runners.IsValid()) { return nullptr; } auto shell = std::unique_ptr lt;Shell gt;(new Shell(task_runners, settings)); // Create the platform view on the platform thread (this thread). auto platform_view = on_create_platform_view(*shell.get()); if (!platform_view || !platform_view- gt;GetWeakPtr()) { return nullptr; } // Ask the platform view for the vsync waiter. This will be used by the engine // to create the animator. auto vsync_waiter = platform_view- gt;CreateVSyncWaiter(); if (!vsync_waiter) { return nullptr; } // Create the IO manager on the IO thread. The IO manager must be initialized // first because it has state that the other subsystems depend on. It must // first be booted and the necessary references obtained to initialize the // other subsystems. fml::AutoResetWaitableEvent io_latch; std::unique_ptr lt;IOManager gt; io_manager; auto io_task_runner = shell- gt;GetTaskRunners().GetIOTaskRunner(); fml::TaskRunner::RunNowOrPostTask( io_task_runner, [ amp;io_latch, // amp;io_manager, // amp;platform_view, // io_task_runner // ]() { io_manager = std::make_unique lt;IOManager gt;( platform_view- gt;CreateResourceContext(), io_task_runner); io_latch.Signal(); }); io_latch.Wait(); // Create the rasterizer on the GPU thread. fml::AutoResetWaitableEvent gpu_latch; std::unique_ptr lt;Rasterizer gt; rasterizer; fml::WeakPtr lt;blink::SnapshotDelegate gt; snapshot_delegate; fml::TaskRunner::RunNowOrPostTask( task_runners.GetGPUTaskRunner(), [ amp;gpu_latch, // amp;rasterizer, // on_create_rasterizer, // shell = shell.get(), // amp;snapshot_delegate // ]() { if (auto new_rasterizer = on_create_rasterizer(*shell)) { rasterizer = std::move(new_rasterizer); snapshot_delegate = rasterizer- gt;GetSnapshotDelegate(); } gpu_latch.Signal(); }); gpu_latch.Wait(); // Create the engine on the UI thread. fml::AutoResetWaitableEvent ui_latch; std::unique_ptr lt;Engine gt; engine; fml::TaskRunner::RunNowOrPostTask( shell- gt;GetTaskRunners().GetUITaskRunner(), fml::MakeCopyable([ amp;ui_latch, // amp;engine, // shell = shell.get(), // isolate_snapshot = std::move(isolate_snapshot), // shared_snapshot = std::move(shared_snapshot), // vsync_waiter = std::move(vsync_waiter), // snapshot_delegate = std::move(snapshot_delegate), // io_manager = io_manager- gt;GetWeakPtr() // ]() mutable { const auto amp; task_runners = shell- gt;GetTaskRunners(); // The animator is owned by the UI thread but it gets its vsync pulses // from the platform. auto animator = std::make_unique lt;Animator gt;(*shell, task_runners, std::move(vsync_waiter)); engine = std::make_unique lt;Engine gt;(*shell, // shell- gt;GetDartVM(), // std::move(isolate_snapshot), // std::move(shared_snapshot), // task_runners, // shell- gt;GetSettings(), // std::move(animator), // std::move(snapshot_delegate), // std::move(io_manager) // ); ui_latch.Signal(); })); ui_latch.Wait(); // We are already on the platform thread. So there is no platform latch to // wait on. if (!shell- gt;Setup(std::move(platform_view), // std::move(engine), // std::move(rasterizer), // std::move(io_manager)) // ) { return nullptr; } return shell; } \u8bbe\u7f6eShell\u7ba1\u7406\u7684Platform\u7ebf\u7a0b\u7ba1\u7406\u7684\u76f8\u5173\b\u8d44\u6e90: /engine/src/flutter/shell/common/engine.cc \u5728 /engine/src/flutter/shell/common/shell.cc \u4e2d\u6267\u884c CreateShellOnPlatformThread \u65b9\u6cd5\u65f6\u8c03\u7528 1.PlatformView:\b\u4e3b\u8981\u7ba1\u7406\u76f8\u5173\u7684\bview\u4e8b\u4ef6 2.Engine:\b\u6240\u6709\u7684\b\u8d44\u6e90\u90fd\u51c6\u5907\b\u5b8c\u6210\uff0c\b\u5f00\u59cb\u8c03\u7528dart\u4ee3\u7801\u548cDart\u865a\u62df\u673a\uff0c\b\u8fdb\u884c\u4ee3\u7801\b\u6267\u884c 3.Rasterizer:\u5149\u6805\u4e3b\u8981\u662f\u5904\u7406GPU\u76f8\u5173\u7684\u4e8b\u4ef6 4.IOManager:\u5bf9io\b\u7ebf\u7a0b\u8fdb\u884c\u7ba1\u7406 5.\u8bbe\u7f6e DartVM ServiceProtocol\b\u8bbe\u7f6e\b\u5904\u7406\u56de\u8c03 6.PersistentCache::GetCacheForProcess()- gt;AddWorkerTaskRunner(task_runners_.GetIOTaskRunner());\b\b\u5bf9\u7f13\u5b58\u76ee\u5f55\u7684\u5904\u7406 bool Shell::Setup(std::unique_ptr lt;PlatformView gt; platform_view, std::unique_ptr lt;Engine gt; engine, std::unique_ptr lt;Rasterizer gt; rasterizer, std::unique_ptr lt;IOManager gt; io_manager) { if (is_setup_) { return false; } if (!platform_view || !engine || !rasterizer || !io_manager) { return false; } platform_view_ = std::move(platform_view); engine_ = std::move(engine); rasterizer_ = std::move(rasterizer); io_manager_ = std::move(io_manager); is_setup_ = true; if (auto vm = blink::DartVM::ForProcessIfInitialized()) { vm- gt;GetServiceProtocol().AddHandler(this, GetServiceProtocolDescription()); } PersistentCache::GetCacheForProcess()- gt;AddWorkerTaskRunner( task_runners_.GetIOTaskRunner()); return true; }","title":"Shell \u7c7b\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u8d1f\u8d23\u7ba1\u7406\b\b\u5ba2\u6237\u7aef\u76f8\u5173\u7684\u8d44\u6e90/engine/src/flutter/shell/platform/android/android_shell_holder.cc,\u521b\u5efa\u7684\u5730\u65b9"},{"location":"android/flutter/flutterenginedir/#android-nativelibflutter","text":"Android\u7aef\u8c03\u7528JNI\u5c42\u7684\u4ee3\u7801\uff0c\u4f7f\u7528\u672c\u5730\u63a5\u53e3\u548cFlutterEngine\b\u901a\u4fe1\uff0c\u5728\bFlutter for Android \u4e2d\u901a\u8fc7FlutterJNI\u4e2d\b\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5\uff0cplatform_view_android_jni\u5728\b\u7b2c\u4e00\u6b21\u52a0\u8f7dso\u5e93\u662f\u8fdb\u884c\u521d\u59cb\u5316: /io/flutter/embedding/engine/FlutterJNI.class engine/src/flutter/shell/platform/android/platform_view_android_jni.cc public class FlutterJNI { @UiThread public static native boolean nativeGetIsSoftwareRenderingEnabled (); @UiThread public static native String nativeGetObservatoryUri (); private native void nativeSurfaceCreated ( long var1 , Surface var3 ); private native void nativeSurfaceChanged ( long var1 , int var3 , int var4 ); private native void nativeSurfaceDestroyed ( long var1 ); private native void nativeSetViewportMetrics ( long var1 , float var3 , int var4 , int var5 , int var6 , int var7 , int var8 , int var9 , int var10 , int var11 , int var12 , int var13 ); private native Bitmap nativeGetBitmap ( long var1 ); private native void nativeDispatchPointerDataPacket ( long var1 , ByteBuffer var3 , int var4 ); private native void nativeDispatchSemanticsAction ( long var1 , int var3 , int var4 , ByteBuffer var5 , int var6 ); private native void nativeSetSemanticsEnabled ( long var1 , boolean var3 ); private native void nativeSetAccessibilityFeatures ( long var1 , int var3 ); private native void nativeRegisterTexture ( long var1 , long var3 , SurfaceTexture var5 ); private native void nativeMarkTextureFrameAvailable ( long var1 , long var3 ); private native void nativeUnregisterTexture ( long var1 , long var3 ); private native long nativeAttach ( FlutterJNI var1 , boolean var2 ); private native void nativeDetach ( long var1 ); private native void nativeDestroy ( long var1 ); private native void nativeRunBundleAndSnapshotFromLibrary ( long var1 , @NonNull String [] var3 , @Nullable String var4 , @Nullable String var5 , @NonNull AssetManager var6 ); private native void nativeDispatchEmptyPlatformMessage ( long var1 , String var3 , int var4 ); private native void nativeDispatchPlatformMessage ( long var1 , String var3 , ByteBuffer var4 , int var5 , int var6 ); private native void nativeInvokePlatformMessageEmptyResponseCallback ( long var1 , int var3 ); private native void nativeInvokePlatformMessageResponseCallback ( long var1 , int var3 , ByteBuffer var4 , int var5 ); } \u5f15\u64ce\u5143\u4ee3\u7801\u4e2d\b\b\b\u4f7f\u7528\u52a8\u6001JNI\u7684\u65b9\u5f0f\u6ce8\u518c\u76f8\u5173\u65b9\u6cd5: engine/src/flutter/shell/platform/android/platform_view_android_jni.cc \u8c03\u7528Register\b\u65b9\u6cd5\u6ce8\u518c\u672c\u5730\u65b9\u6cd5\uff1a bool RegisterApi ( JNIEnv * env ) { static const JNINativeMethod flutter_jni_methods [] = { // Start of methods from FlutterNativeView { . name = nativeAttach , . signature = (Lio/flutter/embedding/engine/FlutterJNI;Z)J , . fnPtr = reinterpret_cast void * ( shell :: AttachJNI ), }, { . name = nativeDestroy , . signature = (J)V , . fnPtr = reinterpret_cast void * ( shell :: DestroyJNI ), }, { . name = nativeRunBundleAndSnapshotFromLibrary , . signature = (J[Ljava/lang/String;Ljava/lang/String; Ljava/lang/String;Landroid/content/res/AssetManager;)V , . fnPtr = reinterpret_cast void * ( shell :: RunBundleAndSnapshotFromLibrary ), }, }; if ( env - RegisterNatives ( g_flutter_jni_class - obj (), flutter_jni_methods , arraysize ( flutter_jni_methods )) != 0 ) { FML_LOG ( ERROR ) Failed to RegisterNatives with FlutterJNI ; return false ; }","title":"Android Native\u5c42\u4e0elibFlutter\u901a\u4fe1\u63a5\u53e3:"},{"location":"android/flutter/flutterenginedir/#dartvmflutter","text":"/engine/src/flutter/shell/common/shell.cc \u5728\u521d\u59cb\u5316\u65f6\u521b\u5efaDart\u865a\u62df\u673a std :: unique_ptr Shell Shell :: Create ( blink :: TaskRunners task_runners , blink :: Settings settings , Shell :: CreateCallback PlatformView on_create_platform_view , Shell :: CreateCallback Rasterizer on_create_rasterizer ) { PerformInitializationTasks ( settings ); auto vm = blink :: DartVM :: ForProcess ( settings ); FML_CHECK ( vm ) Must be able to initialize the VM. ; return Shell :: Create ( std :: move ( task_runners ), // std :: move ( settings ), // vm - GetIsolateSnapshot (), // blink :: DartSnapshot :: Empty (), // std :: move ( on_create_platform_view ), // std :: move ( on_create_rasterizer ) // ); } \u521b\u5efa\u4e00\u4e2aDartVM\u4f5c\u4e3aroot ioslate \u4f5c\u4e3awindow\u7684\b\u5173\u8054\u64cd\u4f5c: auto vm = blink::DartVM::ForProcess(settings); //1. \u8bbe\u7f6eDartSnapshot\u7684\u76f8\u5173\u8fd0\u884c\u53c2\u6570 //2. \u542f\u52a8DartVM\u865a\u62df\u673a fml :: RefPtr DartVM DartVM :: ForProcess ( Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) { std :: lock_guard std :: mutex lock ( gVMMutex ); std :: call_once ( gVMInitialization , [ settings , // vm_snapshot , // isolate_snapshot , // shared_snapshot // ]() mutable { if ( ! vm_snapshot ) { vm_snapshot = DartSnapshot :: VMSnapshotFromSettings ( settings ); } if ( ! ( vm_snapshot vm_snapshot - IsValid ())) { FML_LOG ( ERROR ) VM snapshot must be valid. ; return ; } if ( ! isolate_snapshot ) { isolate_snapshot = DartSnapshot :: IsolateSnapshotFromSettings ( settings ); } if ( ! ( isolate_snapshot isolate_snapshot - IsValid ())) { FML_LOG ( ERROR ) Isolate snapshot must be valid. ; return ; } if ( ! shared_snapshot ) { shared_snapshot = DartSnapshot :: Empty (); } // \u865a\u62df\u673a\u7684\u521b\u5efa gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); }); return gVM ; } \b\u8c03\u7528 MakeRefCounted \u5bf9\u865a\u62df\u673a\u5f15\u7528\u7684\u7ba1\u7406,\u8c03\u7528DartVM\u6784\u9020\u51fd\u6570 engine/src/flutter/runtime/dart_vm.cc // \u865a\u62df\u673a\u7684\u521b\u5efa gVM = fml :: MakeRefCounted DartVM ( settings , // std :: move ( vm_snapshot ), // std :: move ( isolate_snapshot ), // std :: move ( shared_snapshot ) // ); // 1.\u6784\u9020\u65b9\u6cd5\u51fa\u5165ioslate\u76f8\u5173\u7684\u53c2\u6570\uff0csetting\u4e2d\u7684\u914d\u7f6e\u53c2\u6570 // 2.\u5224\u65ad\u542f\u52a8\u7684DartVM\u6a21\u5f0f // 3.\u521d\u59cb\u5316FlutterUI\u76f8\u5173\u7684\u7c7b DartUI::InitForGlobal(); UI\u76f8\u5173\u7684\u6587\u4ef6engine/src/flutter/lib/ui/dart_ui.gni\uff0c/engine/src/flutter/lib/ui/ui.dart // 4.\u771f\u6b63\u521d\u59cb\u5316\u521d\u59cb\u5316DartVM:engine/src/third_party/dart/runtime/include/dart_api.h DartVM\u64cd\u4f5c\u63a5\u53e3 // char* init_error = Dart_Initialize( params); // 5.\u6dfb\u52a0\u865a\u62df\u673a\u56de\u8c03 // 6.// \u6dfb\u52a0\u52a0\u8f7d\u7684\u7c7b\u5e93\u8d44\u6e90\u5230Kernel\u4e2d,\u914d\u7f6e\u6587\u4ef6engine/src/flutter/common/settings.h DartVM :: DartVM ( const Settings settings , fml :: RefPtr DartSnapshot vm_snapshot , fml :: RefPtr DartSnapshot isolate_snapshot , fml :: RefPtr DartSnapshot shared_snapshot ) : settings_ ( settings ), vm_snapshot_ ( std :: move ( vm_snapshot )), isolate_snapshot_ ( std :: move ( isolate_snapshot )), shared_snapshot_ ( std :: move ( shared_snapshot )), weak_factory_ ( this ) { TRACE_EVENT0 ( flutter , DartVMInitializer ); FML_DLOG ( INFO ) Attempting Dart VM launch for mode: ( IsRunningPrecompiledCode () ? AOT : Interpreter ); { TRACE_EVENT0 ( flutter , dart::bin::BootstrapDartIo ); dart :: bin :: BootstrapDartIo (); if ( ! settings . temp_directory_path . empty ()) { dart :: bin :: SetSystemTempDirectory ( settings . temp_directory_path . c_str ()); } } std :: vector const char * args ; // Instruct the VM to ignore unrecognized flags. // There is a lot of diversity in a lot of combinations when it // comes to the arguments the VM supports. And, if the VM comes across a flag // it does not recognize, it exits immediately. args . push_back ( --ignore-unrecognized-flags ); for ( auto * const profiler_flag : ProfilingFlags ( settings . enable_dart_profiling )) { args . push_back ( profiler_flag ); } PushBackAll ( args , kDartLanguageArgs , arraysize ( kDartLanguageArgs )); if ( IsRunningPrecompiledCode ()) { PushBackAll ( args , kDartPrecompilationArgs , arraysize ( kDartPrecompilationArgs )); } // Enable Dart assertions if we are not running precompiled code. We run non- // precompiled code only in the debug product mode. bool enable_asserts = ! settings . disable_dart_asserts ; #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DYNAMIC_PROFILE || \\ FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DYNAMIC_RELEASE enable_asserts = false ; #endif #if !OS_FUCHSIA if ( IsRunningPrecompiledCode ()) { enable_asserts = false ; } #endif // !OS_FUCHSIA #if FLUTTER_RUNTIME_MODE == FLUTTER_RUNTIME_MODE_DEBUG // Debug mode uses the JIT, disable code page write protection to avoid // memory page protection changes before and after every compilation. PushBackAll ( args , kDartWriteProtectCodeArgs , arraysize ( kDartWriteProtectCodeArgs )); #endif if ( enable_asserts ) { PushBackAll ( args , kDartAssertArgs , arraysize ( kDartAssertArgs )); } if ( settings . start_paused ) { PushBackAll ( args , kDartStartPausedArgs , arraysize ( kDartStartPausedArgs )); } if ( settings . endless_trace_buffer || settings . trace_startup ) { // If we are tracing startup, make sure the trace buffer is endless so we // don t lose early traces. PushBackAll ( args , kDartEndlessTraceBufferArgs , arraysize ( kDartEndlessTraceBufferArgs )); } if ( settings . trace_systrace ) { PushBackAll ( args , kDartSystraceTraceBufferArgs , arraysize ( kDartSystraceTraceBufferArgs )); PushBackAll ( args , kDartTraceStreamsArgs , arraysize ( kDartTraceStreamsArgs )); } if ( settings . trace_startup ) { PushBackAll ( args , kDartTraceStartupArgs , arraysize ( kDartTraceStartupArgs )); } #if defined(OS_FUCHSIA) PushBackAll ( args , kDartFuchsiaTraceArgs , arraysize ( kDartFuchsiaTraceArgs )); PushBackAll ( args , kDartTraceStreamsArgs , arraysize ( kDartTraceStreamsArgs )); #endif for ( size_t i = 0 ; i settings . dart_flags . size (); i ++ ) args . push_back ( settings . dart_flags [ i ]. c_str ()); char * flags_error = Dart_SetVMFlags ( args . size (), args . data ()); if ( flags_error ) { FML_LOG ( FATAL ) Error while setting Dart VM flags: flags_error ; :: free ( flags_error ); } // \u521d\u59cb\u5316FlutterUI\u76f8\u5173\u7684\u7c7b\u5e93 DartUI :: InitForGlobal (); Dart_SetFileModifiedCallback ( DartFileModifiedCallback ); // \u771f\u6b63\u5b9e\u73b0\u865a\u62df\u673a,\u8c03\u7528\u63a5\u53e3 { TRACE_EVENT0 ( flutter , Dart_Initialize ); Dart_InitializeParams params = {}; params . version = DART_INITIALIZE_PARAMS_CURRENT_VERSION ; params . vm_snapshot_data = vm_snapshot_ - GetData () - GetSnapshotPointer (); params . vm_snapshot_instructions = vm_snapshot_ - GetInstructionsIfPresent (); params . create = reinterpret_cast decltype ( params . create ) ( DartIsolate :: DartIsolateCreateCallback ); params . shutdown = reinterpret_cast decltype ( params . shutdown ) ( DartIsolate :: DartIsolateShutdownCallback ); params . cleanup = reinterpret_cast decltype ( params . cleanup ) ( DartIsolate :: DartIsolateCleanupCallback ); params . thread_exit = ThreadExitCallback ; params . get_service_assets = GetVMServiceAssetsArchiveCallback ; params . entropy_source = DartIO :: EntropySource ; // engine/src/third_party/dart/runtime/include/dart_api.h DartVM\u64cd\u4f5c\u63a5\u53e3 // \u771f\u6b63\u521d\u59cb\u5316DartVM char * init_error = Dart_Initialize ( params ); if ( init_error ) { FML_LOG ( FATAL ) Error while initializing the Dart VM: init_error ; :: free ( init_error ); } // Send the earliest available timestamp in the application lifecycle to // timeline. The difference between this timestamp and the time we render // the very first frame gives us a good idea about Flutter s startup time. // Use a duration event so about:tracing will consider this event when // deciding the earliest event to use as time 0. if ( blink :: engine_main_enter_ts != 0 ) { Dart_TimelineEvent ( FlutterEngineMainEnter , // label blink :: engine_main_enter_ts , // timestamp0 blink :: engine_main_enter_ts , // timestamp1_or_async_id Dart_Timeline_Event_Duration , // event type 0 , // argument_count nullptr , // argument_names nullptr // argument_values ); } } // Allow streaming of stdout and stderr by the Dart vm. Dart_SetServiceStreamCallbacks ( ServiceStreamListenCallback , ServiceStreamCancelCallback ); Dart_SetEmbedderInformationCallback ( EmbedderInformationCallback ); // \u6dfb\u52a0\u52a0\u8f7d\u7684\u7c7b\u5e93\u8d44\u6e90\u5230Kernel\u4e2d,\u914d\u7f6e\u6587\u4ef6engine/src/flutter/common/settings.h if ( settings . dart_library_sources_kernel != nullptr ) { std :: unique_ptr fml :: Mapping dart_library_sources = settings . dart_library_sources_kernel (); // Set sources for dart:* libraries for debugging. Dart_SetDartLibrarySourcesKernel ( dart_library_sources - GetMapping (), dart_library_sources - GetSize ()); } } DartVM\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528 DartUI::InitForGlobal(); ,\u521b\u5efa\u4e00\u4e2a\b\u7ba1\u7406FlutterUI\u76f8\u5173\u7684\u63a5\u53e3 /engine/src/flutter/lib/ui/dart_ui.cc // Dart\u5c42UI\u76f8\u5173\u7684\u64cd\u4f5c\u7c7b\u521d\u59cb\u5316\u5165\u53e3,\u63d0\u4f9bUI\u76f8\u5173\u8054\u7684API // \u521b\u5efa\u4e24\u4e2aDartLibraryNatives\uff0cDart\u8c03\u7528JNI\u76f8\u5173\u65b9\u6cd5 // 1.\u521b\u5efa\u4e00\u4e2a\u548cUI\u76f8\u5173\u7684DartLibraryNatives // 2.\u521b\u5efa\u4e00\u4e2a\u548cUI\u4e0d\u76f8\u5173\u7684DartLibraryNatives void DartUI :: InitForGlobal () { if ( ! g_natives ) { g_natives = new tonic :: DartLibraryNatives (); //engine/src/third_party/tonic/dart_library_natives.cc // \u6ce8\u518c\u753b\u7b14\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5 engine/src/flutter/lib/ui/painting Canvas :: RegisterNatives ( g_natives ); CanvasGradient :: RegisterNatives ( g_natives ); CanvasImage :: RegisterNatives ( g_natives ); CanvasPath :: RegisterNatives ( g_natives ); CanvasPathMeasure :: RegisterNatives ( g_natives ); Codec :: RegisterNatives ( g_natives ); // engine/src/flutter/lib/ui/dart_runtime_hooks.cc DartVM\u6784\u9020\u51fd\u6570 DartRuntimeHooks :: RegisterNatives ( g_natives ); // \u6ce8\u518c\u753b\u7b14\u76f8\u5173\u7684\u672c\u5730\u65b9\u6cd5 engine/src/flutter/lib/ui/painting EngineLayer :: RegisterNatives ( g_natives ); FontCollection :: RegisterNatives ( g_natives ); FrameInfo :: RegisterNatives ( g_natives ); ImageFilter :: RegisterNatives ( g_natives ); ImageShader :: RegisterNatives ( g_natives ); //engine/src/flutter/lib/ui/isolate_name_server IsolateNameServerNatives :: RegisterNatives ( g_natives ); Paragraph :: RegisterNatives ( g_natives ); ParagraphBuilder :: RegisterNatives ( g_natives ); Picture :: RegisterNatives ( g_natives ); PictureRecorder :: RegisterNatives ( g_natives ); Scene :: RegisterNatives ( g_natives ); SceneBuilder :: RegisterNatives ( g_natives ); SceneHost :: RegisterNatives ( g_natives ); SemanticsUpdate :: RegisterNatives ( g_natives ); SemanticsUpdateBuilder :: RegisterNatives ( g_natives ); Versions :: RegisterNatives ( g_natives ); Vertices :: RegisterNatives ( g_natives ); // \u521d\u59cb\u5316Window\u7c7b Window :: RegisterNatives ( g_natives ); // Secondary isolates do not provide UI-related APIs. g_natives_secondary = new tonic :: DartLibraryNatives (); DartRuntimeHooks :: RegisterNatives ( g_natives_secondary ); IsolateNameServerNatives :: RegisterNatives ( g_natives_secondary ); } } engine/src/flutter/shell/common/shell.cc \u4f5c\u4e3a\b\u4e00\u4e2a\b\u4e2d\u67a2\u63a7\u5236\u4f5c\u7528\uff0c\u4f7f\u7528\b\u5f31\u5f15\u7528\u6765\u4fdd\u5b58\b\bPlatformView\uff0c\bAndroid\uff0cios\u4fdd\u5b58\u4f7f\u7528shell\u4e2dPlatform\u4e0b\u7684Platefrom\u5b9e\u73b0\u6765\b\u5904\u7406\u5e73\u53f0\u76f8\u5173\u7684View,\bShell\u7684\b\u521d\u59cb\u5316\u662f\u5728 engine/src/flutter/shell/platform/android/android_shell_holder.cc \uff0c FlutterMain::Get().GetSettings() \u7f16\u8bd1\u65f6\u7684\u914d\u7f6e\u6587\u4ef6 engine/src/flutter/common/settings.cc , flutterJNI \u662fandroid\u5c42\u7684\u4ee3\u7801\uff0c is_background_view \u662f\u5728\bjava\u5c42\bFlutterNativeView\uff0c\u8fd9\u662fJava\u548cJNI\u7684\u901a\u4fe1\uff0c\u6570\u636e\u4f20\u8f93\u903b\u8f91\u5904\u7406\uff0cFlutterNativeView\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\b\u8c03\u7528JNI\b\u4ee3\u7801\uff0c\b\u521d\u59cb\u5316 android_shell_holder \u4f7f\u7528\u8fd9\u4e2a\u7c7b\u6765\b\u5168\u90e8\b\b Shell \u8fd9\u4e2a\u7c7b a","title":"\b\u542f\u52a8DartVM\u52a0\u8f7dFlutter\u4fa7\u7684\u8d44\u6e90\u6587\u4ef6\u548c\u521d\u59cb\u5316\b"},{"location":"android/flutter/flutterenv/","text":"Flutter \u5f15\u64ce\u73af\u5883\u5b89\u88c5 \u5148\u4e86\u89e3\u6846\u67b6\u903b\u8f91,\u5728\u4e86\u89e3\u7ec6\u8282\uff0c\u5efa\u8bae\u4e0d\u8981\u4f4e\u7740\u5934\u8d70\u8def,\u867d\u7136\u4e0d\u4f1a\u6454\u5012\uff0c\u4e0d\u4e00\u5b9a\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u8981\u5148\u62ac\u5934\u627e\u597d\u65b9\u5411\uff0c\u5728\u57cb\u5934\u82e6\u5e72.... Flutter \u662fGoogle\u63d0\u4f9b\u5f00\u53d1Android IOS,Window,Mac,Linux,Web\u7684\u8de8\u5e73\u53f0\u5f00\u53d1UI\u5de5\u5177\u5305,\u4e3b\u8981\u662f\u89e3\u51b3\u4e00\u5957\u4ee3\u7801\u80fd\u591f\u8fd0\u884c\u5728\u591a\u79cd\u8bbe\u5907\u4e0a\u7684UI\u5f00\u53d1Kit\uff0c\u6e90\u4ee3\u7801\u6258\u7ba1 git \u4ee3\u7801\u4ed3\u5e93\u4e4b\u4e0a \u5728\u51c6\u5907\u7f16\u8bd1flutter\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898,\u5e26\u7740\u95ee\u9898\u53bb\u5b66\u4e60\u624d\u662f\u6700\u597d\u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u9ad8\u6548\u7684\u89e3\u51b3\u6709\u7591\u95ee\u7684\u95ee\u9898\u548c\u5185\u5bb9\uff1a 1.Flutter\u4ee3\u7801\u5728\u54ea\u91cc\u4e0b\u8f7d\uff1f 2.Flutter\u600e\u4e48\u4e0b\u8f7d\uff1f 3.Flutter\u5305\u542b\u54ea\u4e9b\u6587\u4ef6\uff1f 4.Flutter\u7f16\u8bd1\u9700\u8981\u54ea\u4e9b\u5de5\u5177\uff1f 5.\u600e\u4e48\u8bbe\u7f6e\u8fd9\u4e9b\u5de5\u5177\uff1f 6.\u5982\u4f55\u4f7f\u7528\u5de5\u5177\u8fdb\u884c\u7f16\u8bd1\uff1f 7.\u7f16\u8bd1\u4e4b\u540e\u7684\u4ea7\u7269\u662f\u4ec0\u4e48\u6837\u7684\uff1f 8.\u600e\u4e48\u4f7f\u7528\u7f16\u8bd1\u597d\u7684\u4ea7\u7269\uff0c\u6709\u54ea\u4e9b\u533a\u522b\u548c\u8981\u6c42\uff1f 9.\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u8bbe\u8ba1\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f Flutter\u4ee3\u7801\u653e\u5728\u54ea\u91cc\uff1f Flutter \u751f\u6001\u5305\u62ecFlutter\u6e90\u4ee3\u7801\u3001FlutterDart\u8bed\u8a00\u3001Flutter Api\uff0cFlutter\u6d4b\u8bd5\u73af\u5883\u3001Flutter\u7f16\u8bd1\u73af\u5883\u3001Flutter issue\u7b49\u4e00\u7cfb\u5217\u548cFlutter\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u6700\u57fa\u672c\u7684\u4fe1\u606f\u53ef\u4ee5\u5728Flutter\u7684git\u4ee3\u7801\u4ed3\u5e93\u4e2d\u627e\u5230\uff0c\u540e\u7eed\u7684\u5f00\u53d1\u4e2d\u4e3b\u8981\u4e5f\u662f\u4e5fFlutter\u4ed3\u5e93\u7684\u5185\u5bb9\u4e3a\u51c6\uff0c\u76ee\u7684\u4e3b\u8981\u662f\u6293\u4f4fFlutter\u5f00\u53d1\u76f8\u5173\u7684\u6e90\u4ee3\u7801\u3001\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e\u3001\u7f16\u8bd1\u3001\u8c03\u8bd5\u3001\u4f18\u5316\u3001issue\u89e3\u51b3\u3001\u8d21\u732e\u4ee3\u7801\u3001\u6211\u4eec\u4e0d\u80fd\u9762\u9762\u4ff1\u5230\u7684\u8bb2\u89e3flutter\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u7406\u6e05\u695aFlutter\u5f00\u53d1\u76f8\u5173\u7684\u5185\u5bb9\u4ee5\u53ca\u5185\u5bb9\u76f4\u63a5\u7684\u5173\u8054\uff0c\u5728\u540e\u7eed\u7684\u5f00\u53d1\u5de5\u4f5c\u4e2d\u80fd\u591f\u5feb\u901f\u7684\u5224\u65ad\u95ee\u9898\u3001\u7406\u89e3\u6574\u4e2aFlutter\u8fd0\u884c\u539f\u7406\uff0c\u5728\u901a\u8fc7\u5de5\u5177\u8f85\u52a9\u9605\u8bfb\u6e90\u4ee3\u7801\uff0c\u8fdb\u884c\u95ee\u9898\u5b9a\u4f4d\u548c\u89e3\u51b3\uff0c\u800c\u4e0d\u662f\u9762\u5411 \u6d4f\u89c8\u5668\u7f16\u7a0b \u3002 Flutter\u6e90\u7801\u6258\u7ba1\u4ed3\u5e93 HomeWiki \u4fee\u6539\u63d0\u4ea4Flutter\u4ee3\u7801\u7684\u89c4\u5219 Flutter\u8def\u7ebf\u56fe Flutter\u6027\u80fd\u6d4b\u8bd5\u5185\u5bb9 Flutter Dashboard FlutterApi UI\u5f00\u53d1\u6846\u67b6 Flutter\u600e\u4e48\u4e0b\u8f7d\uff1f Flutter \u6258\u7ba1\u5728Github\u4e0a\uff0c\u901a\u8fc7 depot_tools \u81ea\u52a8\u8ddf\u8fdb .gclient \u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u5185\u5bb9\u8fdb\u884c\u4f9d\u8d56\u4e0b\u8f7d \u7f16\u8bd1\u73af\u5883\u8bbe\u7f6e 1.fork Flutter github\u4ee3\u7801\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\u5230\u81ea\u5df1\u7684github\u4e2d 2.\u914d\u7f6e\u7535\u8111\u4e0a\u7684ssh\u8bc1\u4e66\u5230\u81ea\u5df1\u7684GitHub\u8d26\u53f7\u4e2d 3.\u5b89\u88c5\u76f8\u5173\u7684\u8f6f\u4ef6\u5de5\u5177 \u8bbe\u7f6e\u5f00\u53d1\u73af\u5883 4.\u914d\u7f6e depot_tools \u73af\u5883 5.\u4f7f\u7528 gclient sync \u4e0b\u8f7dflutter\u6e90\u4ee3\u7801\u5230\u672c\u5730 6.\u7b49\u5f85\u6f2b\u957f\u7684\u4e0b\u8f7d\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u628a\u6e90\u4ee3\u7801\u4e0b\u8f7d\u5230\u672c\u5730 Flutter\u5305\u542b\u54ea\u4e9b\u6587\u4ef6\uff1f Flutter \u6e90\u7801\u9879\u76ee\u662f\u4e00\u4e2a\u5e9e\u5927\u7684\u6e90\u7801\u9879\u76ee\uff0c\u662f\u6309\u7167\u4e0a\u9762\u6837\u7684\u7ec4\u7ec7\u65b9\u5f0f\u6765\u8fdb\u884c\u6e90\u4ee3\u7801\u7ec4\u7ec7\u7684\uff1f\uff1f\uff1f \u7f16\u8bd1\u6e90\u4ee3\u7801: \u6e90\u4ee3\u7801 \u3001 \u7f16\u8bd1\u7cfb\u7edf \u3001 \u7b2c\u4e09\u65b9\u652f\u6301\u5e93 \u3001 \u7f16\u8bd1\u4ea7\u7269 Flutter\u5728\u7ebf\u6784\u5efa\u72b6\u6001 1.Flutter\u81ea\u5df1\u7684\u6e90\u4ee3\u7801\u4fdd\u5b58\u7684\u4f4d\u7f6e??? 2.\u7b2c\u4e09\u65b9\u5e93\u76f8\u5173\u7684\u4ee3\u7801\u5b58\u653e\u7684\u4f4d\u7f6e??? 3.\u7f16\u8bd1\u7cfb\u7edf\u662f\u600e\u4e48\u6839\u636e\u4e0d\u540c\u7684\u547d\u4ee4\u6784\u5efa\u4e0d\u540c\u5e73\u53f0\u7684Flutter\u5f15\u64ce\u7248\u672c??? 4.\u4f7f\u7528\u5230\u4e86\u90a3\u4e9b\u5de5\u5177?\u7528\u4ec0\u4e48\u7528\u5904\uff1f\uff1f 5.\u4e0d\u540c\u5e73\u53f0\u7684SDK\u662f\u600e\u4e48\u7ef4\u62a4\u66f4\u65b0\u7684??? 6.\u7f16\u8bd1\u4e4b\u540e\u7684\u4ea7\u7269\u662f\u4ec0\u4e48\u6837\u5b50\u7684??? flutter Engine\u6e90\u7801\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u975e\u5e38\u6e05\u695a\u7684\u7ec4\u7ec7\uff0c\u4e0d\u540c\u529f\u80fd\u4f5c\u7528\u7684\u6e90\u4ee3\u7801 \u7248\u672c\u4fe1\u606f , \u6784\u5efa\u811a\u672c , \u6784\u5efa\u7cfb\u7edf\u5de5\u5177 , Flutter\u6e90\u4ee3\u7801\u5de5\u7a0b , Android IOS\u7f16\u8bd1\u76f8\u5173\u7684SDK\u68c0\u6d4b\u4ee3\u7801 \u279c engine_2019_11 tree -L 2 . \u2514\u2500\u2500 src \u6e90\u6587\u4ef6\u76ee\u5f55 \u251c\u2500\u2500 AUTHORS \u251c\u2500\u2500 BUILD.gn \u7f16\u8bd1\u811a\u672c \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 build \u6784\u5efa\u811a\u672c\u76ee\u5f55\uff0c\u5305\u542b\u4e0d\u540c\u5e73\u53f0\u7684\u7f16\u8bd1\u6587\u4ef6 \u251c\u2500\u2500 build_overrides \u251c\u2500\u2500 buildtools \u7f16\u8bd1\u6e90\u4ee3\u7801\u65f6\u4f7f\u7528\u5230\u7684\u5de5\u5177 \u251c\u2500\u2500 flutter Flutter\u6838\u5fc3\u4ee3\u7801 \u251c\u2500\u2500 ios_tools \u251c\u2500\u2500 out \u7f16\u8bd1\u8f93\u51fa\u6587\u4ef6\u76ee\u5f55 \u251c\u2500\u2500 third_party \u56fe\u7247\u3001\u6587\u4ef6\u3001zlib\u7b49\u4e00\u7cfb\u5217\u5de5\u5177\u5e93\uff0c\u4e3b\u8981\u662f\u4e00\u4e0b\u72ec\u7acb\u529f\u80fd\u7684\u5e93\u6587\u4ef6 \u2514\u2500\u2500 tools \u4e3b\u8981\u662f\u68c0\u6d4b\u548c\u5e73\u53f0\u76f8\u5173\u7684\u4e00\u4e0b\u7f16\u8bd1\u73af\u5883\u548c\u5de5\u5177(Android\u3001dart\u5f00\u53d1\u5de5\u5177SDK) 9 directories, 5 files \u603b\u7ed3 \u901a\u8fc7\u4ee5\u4e0a\u4e09\u6b65\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06Flutter\u76f8\u5173\u7684 \u8d44\u6e90\u7f51\u7ad9 , \u6e90\u4ee3\u7801\u76f8\u5173\u7684\u4f4d\u7f6e\u548c\u76ee\u5f55 , \u7f16\u8bd1\u73af\u5883\u548c\u6e90\u7801\u4e0b\u8f7d\u5de5\u5177 \u505a\u4e86\u4e00\u4e9b\u51c6\u5907\u548c\u76f8\u5173\u77e5\u8bc6\u7684\u4e86\u89e3\uff0c\u4f5c\u4e3a\u5f00\u7bc7\u5185\u5bb9\uff0c\u5c06\u4e0d\u4f1a\u5bf9\u7ec6\u8282\u505a\u592a\u591a\u7684\u8bf4\u660e\u9700\u8981\u4e3b\u8981\u6211\u7684\u77e5\u8bc6\u70b9: Flutter \u5f00\u53d1\u76f8\u5173\u7684\u8d44\u6e90 \u5982\u4f55\u914d\u7f6eFlutter\u6e90\u4ee3\u7801\u67e5\u770b\u3001\u4e0b\u8f7d\u5de5\u5177\u7684\u4f7f\u7528 flutter\u6e90\u7801\u7684\u76ee\u5f55\u548c\u6587\u4ef6\u5927\u6982\u7684\u6587\u4ef6\u6709\u90a3\u4e9b","title":"Flutter \u5f15\u64ce\u73af\u5883\u5b89\u88c5"},{"location":"android/flutter/flutterenv/#flutter","text":"\u5148\u4e86\u89e3\u6846\u67b6\u903b\u8f91,\u5728\u4e86\u89e3\u7ec6\u8282\uff0c\u5efa\u8bae\u4e0d\u8981\u4f4e\u7740\u5934\u8d70\u8def,\u867d\u7136\u4e0d\u4f1a\u6454\u5012\uff0c\u4e0d\u4e00\u5b9a\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u8981\u5148\u62ac\u5934\u627e\u597d\u65b9\u5411\uff0c\u5728\u57cb\u5934\u82e6\u5e72.... Flutter \u662fGoogle\u63d0\u4f9b\u5f00\u53d1Android IOS,Window,Mac,Linux,Web\u7684\u8de8\u5e73\u53f0\u5f00\u53d1UI\u5de5\u5177\u5305,\u4e3b\u8981\u662f\u89e3\u51b3\u4e00\u5957\u4ee3\u7801\u80fd\u591f\u8fd0\u884c\u5728\u591a\u79cd\u8bbe\u5907\u4e0a\u7684UI\u5f00\u53d1Kit\uff0c\u6e90\u4ee3\u7801\u6258\u7ba1 git \u4ee3\u7801\u4ed3\u5e93\u4e4b\u4e0a \u5728\u51c6\u5907\u7f16\u8bd1flutter\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898,\u5e26\u7740\u95ee\u9898\u53bb\u5b66\u4e60\u624d\u662f\u6700\u597d\u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u9ad8\u6548\u7684\u89e3\u51b3\u6709\u7591\u95ee\u7684\u95ee\u9898\u548c\u5185\u5bb9\uff1a 1.Flutter\u4ee3\u7801\u5728\u54ea\u91cc\u4e0b\u8f7d\uff1f 2.Flutter\u600e\u4e48\u4e0b\u8f7d\uff1f 3.Flutter\u5305\u542b\u54ea\u4e9b\u6587\u4ef6\uff1f 4.Flutter\u7f16\u8bd1\u9700\u8981\u54ea\u4e9b\u5de5\u5177\uff1f 5.\u600e\u4e48\u8bbe\u7f6e\u8fd9\u4e9b\u5de5\u5177\uff1f 6.\u5982\u4f55\u4f7f\u7528\u5de5\u5177\u8fdb\u884c\u7f16\u8bd1\uff1f 7.\u7f16\u8bd1\u4e4b\u540e\u7684\u4ea7\u7269\u662f\u4ec0\u4e48\u6837\u7684\uff1f 8.\u600e\u4e48\u4f7f\u7528\u7f16\u8bd1\u597d\u7684\u4ea7\u7269\uff0c\u6709\u54ea\u4e9b\u533a\u522b\u548c\u8981\u6c42\uff1f 9.\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u8bbe\u8ba1\uff0c\u6709\u4ec0\u4e48\u597d\u5904\uff1f","title":"Flutter \u5f15\u64ce\u73af\u5883\u5b89\u88c5"},{"location":"android/flutter/flutterenv/#flutter_1","text":"Flutter \u751f\u6001\u5305\u62ecFlutter\u6e90\u4ee3\u7801\u3001FlutterDart\u8bed\u8a00\u3001Flutter Api\uff0cFlutter\u6d4b\u8bd5\u73af\u5883\u3001Flutter\u7f16\u8bd1\u73af\u5883\u3001Flutter issue\u7b49\u4e00\u7cfb\u5217\u548cFlutter\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u6700\u57fa\u672c\u7684\u4fe1\u606f\u53ef\u4ee5\u5728Flutter\u7684git\u4ee3\u7801\u4ed3\u5e93\u4e2d\u627e\u5230\uff0c\u540e\u7eed\u7684\u5f00\u53d1\u4e2d\u4e3b\u8981\u4e5f\u662f\u4e5fFlutter\u4ed3\u5e93\u7684\u5185\u5bb9\u4e3a\u51c6\uff0c\u76ee\u7684\u4e3b\u8981\u662f\u6293\u4f4fFlutter\u5f00\u53d1\u76f8\u5173\u7684\u6e90\u4ee3\u7801\u3001\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e\u3001\u7f16\u8bd1\u3001\u8c03\u8bd5\u3001\u4f18\u5316\u3001issue\u89e3\u51b3\u3001\u8d21\u732e\u4ee3\u7801\u3001\u6211\u4eec\u4e0d\u80fd\u9762\u9762\u4ff1\u5230\u7684\u8bb2\u89e3flutter\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u7406\u6e05\u695aFlutter\u5f00\u53d1\u76f8\u5173\u7684\u5185\u5bb9\u4ee5\u53ca\u5185\u5bb9\u76f4\u63a5\u7684\u5173\u8054\uff0c\u5728\u540e\u7eed\u7684\u5f00\u53d1\u5de5\u4f5c\u4e2d\u80fd\u591f\u5feb\u901f\u7684\u5224\u65ad\u95ee\u9898\u3001\u7406\u89e3\u6574\u4e2aFlutter\u8fd0\u884c\u539f\u7406\uff0c\u5728\u901a\u8fc7\u5de5\u5177\u8f85\u52a9\u9605\u8bfb\u6e90\u4ee3\u7801\uff0c\u8fdb\u884c\u95ee\u9898\u5b9a\u4f4d\u548c\u89e3\u51b3\uff0c\u800c\u4e0d\u662f\u9762\u5411 \u6d4f\u89c8\u5668\u7f16\u7a0b \u3002 Flutter\u6e90\u7801\u6258\u7ba1\u4ed3\u5e93 HomeWiki \u4fee\u6539\u63d0\u4ea4Flutter\u4ee3\u7801\u7684\u89c4\u5219 Flutter\u8def\u7ebf\u56fe Flutter\u6027\u80fd\u6d4b\u8bd5\u5185\u5bb9 Flutter Dashboard FlutterApi UI\u5f00\u53d1\u6846\u67b6","title":"Flutter\u4ee3\u7801\u653e\u5728\u54ea\u91cc\uff1f"},{"location":"android/flutter/flutterenv/#flutter_2","text":"Flutter \u6258\u7ba1\u5728Github\u4e0a\uff0c\u901a\u8fc7 depot_tools \u81ea\u52a8\u8ddf\u8fdb .gclient \u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u5185\u5bb9\u8fdb\u884c\u4f9d\u8d56\u4e0b\u8f7d \u7f16\u8bd1\u73af\u5883\u8bbe\u7f6e 1.fork Flutter github\u4ee3\u7801\u4ed3\u5e93\u4e2d\u7684\u4ee3\u7801\u5230\u81ea\u5df1\u7684github\u4e2d 2.\u914d\u7f6e\u7535\u8111\u4e0a\u7684ssh\u8bc1\u4e66\u5230\u81ea\u5df1\u7684GitHub\u8d26\u53f7\u4e2d 3.\u5b89\u88c5\u76f8\u5173\u7684\u8f6f\u4ef6\u5de5\u5177 \u8bbe\u7f6e\u5f00\u53d1\u73af\u5883 4.\u914d\u7f6e depot_tools \u73af\u5883 5.\u4f7f\u7528 gclient sync \u4e0b\u8f7dflutter\u6e90\u4ee3\u7801\u5230\u672c\u5730 6.\u7b49\u5f85\u6f2b\u957f\u7684\u4e0b\u8f7d\u8fc7\u7a0b\u5c31\u53ef\u4ee5\u628a\u6e90\u4ee3\u7801\u4e0b\u8f7d\u5230\u672c\u5730","title":"Flutter\u600e\u4e48\u4e0b\u8f7d\uff1f"},{"location":"android/flutter/flutterenv/#flutter_3","text":"Flutter \u6e90\u7801\u9879\u76ee\u662f\u4e00\u4e2a\u5e9e\u5927\u7684\u6e90\u7801\u9879\u76ee\uff0c\u662f\u6309\u7167\u4e0a\u9762\u6837\u7684\u7ec4\u7ec7\u65b9\u5f0f\u6765\u8fdb\u884c\u6e90\u4ee3\u7801\u7ec4\u7ec7\u7684\uff1f\uff1f\uff1f \u7f16\u8bd1\u6e90\u4ee3\u7801: \u6e90\u4ee3\u7801 \u3001 \u7f16\u8bd1\u7cfb\u7edf \u3001 \u7b2c\u4e09\u65b9\u652f\u6301\u5e93 \u3001 \u7f16\u8bd1\u4ea7\u7269 Flutter\u5728\u7ebf\u6784\u5efa\u72b6\u6001 1.Flutter\u81ea\u5df1\u7684\u6e90\u4ee3\u7801\u4fdd\u5b58\u7684\u4f4d\u7f6e??? 2.\u7b2c\u4e09\u65b9\u5e93\u76f8\u5173\u7684\u4ee3\u7801\u5b58\u653e\u7684\u4f4d\u7f6e??? 3.\u7f16\u8bd1\u7cfb\u7edf\u662f\u600e\u4e48\u6839\u636e\u4e0d\u540c\u7684\u547d\u4ee4\u6784\u5efa\u4e0d\u540c\u5e73\u53f0\u7684Flutter\u5f15\u64ce\u7248\u672c??? 4.\u4f7f\u7528\u5230\u4e86\u90a3\u4e9b\u5de5\u5177?\u7528\u4ec0\u4e48\u7528\u5904\uff1f\uff1f 5.\u4e0d\u540c\u5e73\u53f0\u7684SDK\u662f\u600e\u4e48\u7ef4\u62a4\u66f4\u65b0\u7684??? 6.\u7f16\u8bd1\u4e4b\u540e\u7684\u4ea7\u7269\u662f\u4ec0\u4e48\u6837\u5b50\u7684??? flutter Engine\u6e90\u7801\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u975e\u5e38\u6e05\u695a\u7684\u7ec4\u7ec7\uff0c\u4e0d\u540c\u529f\u80fd\u4f5c\u7528\u7684\u6e90\u4ee3\u7801 \u7248\u672c\u4fe1\u606f , \u6784\u5efa\u811a\u672c , \u6784\u5efa\u7cfb\u7edf\u5de5\u5177 , Flutter\u6e90\u4ee3\u7801\u5de5\u7a0b , Android IOS\u7f16\u8bd1\u76f8\u5173\u7684SDK\u68c0\u6d4b\u4ee3\u7801 \u279c engine_2019_11 tree -L 2 . \u2514\u2500\u2500 src \u6e90\u6587\u4ef6\u76ee\u5f55 \u251c\u2500\u2500 AUTHORS \u251c\u2500\u2500 BUILD.gn \u7f16\u8bd1\u811a\u672c \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 build \u6784\u5efa\u811a\u672c\u76ee\u5f55\uff0c\u5305\u542b\u4e0d\u540c\u5e73\u53f0\u7684\u7f16\u8bd1\u6587\u4ef6 \u251c\u2500\u2500 build_overrides \u251c\u2500\u2500 buildtools \u7f16\u8bd1\u6e90\u4ee3\u7801\u65f6\u4f7f\u7528\u5230\u7684\u5de5\u5177 \u251c\u2500\u2500 flutter Flutter\u6838\u5fc3\u4ee3\u7801 \u251c\u2500\u2500 ios_tools \u251c\u2500\u2500 out \u7f16\u8bd1\u8f93\u51fa\u6587\u4ef6\u76ee\u5f55 \u251c\u2500\u2500 third_party \u56fe\u7247\u3001\u6587\u4ef6\u3001zlib\u7b49\u4e00\u7cfb\u5217\u5de5\u5177\u5e93\uff0c\u4e3b\u8981\u662f\u4e00\u4e0b\u72ec\u7acb\u529f\u80fd\u7684\u5e93\u6587\u4ef6 \u2514\u2500\u2500 tools \u4e3b\u8981\u662f\u68c0\u6d4b\u548c\u5e73\u53f0\u76f8\u5173\u7684\u4e00\u4e0b\u7f16\u8bd1\u73af\u5883\u548c\u5de5\u5177(Android\u3001dart\u5f00\u53d1\u5de5\u5177SDK) 9 directories, 5 files","title":"Flutter\u5305\u542b\u54ea\u4e9b\u6587\u4ef6\uff1f"},{"location":"android/flutter/flutterenv/#_1","text":"\u901a\u8fc7\u4ee5\u4e0a\u4e09\u6b65\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u6211\u4eec\u5df2\u7ecf\u5c06Flutter\u76f8\u5173\u7684 \u8d44\u6e90\u7f51\u7ad9 , \u6e90\u4ee3\u7801\u76f8\u5173\u7684\u4f4d\u7f6e\u548c\u76ee\u5f55 , \u7f16\u8bd1\u73af\u5883\u548c\u6e90\u7801\u4e0b\u8f7d\u5de5\u5177 \u505a\u4e86\u4e00\u4e9b\u51c6\u5907\u548c\u76f8\u5173\u77e5\u8bc6\u7684\u4e86\u89e3\uff0c\u4f5c\u4e3a\u5f00\u7bc7\u5185\u5bb9\uff0c\u5c06\u4e0d\u4f1a\u5bf9\u7ec6\u8282\u505a\u592a\u591a\u7684\u8bf4\u660e\u9700\u8981\u4e3b\u8981\u6211\u7684\u77e5\u8bc6\u70b9: Flutter \u5f00\u53d1\u76f8\u5173\u7684\u8d44\u6e90 \u5982\u4f55\u914d\u7f6eFlutter\u6e90\u4ee3\u7801\u67e5\u770b\u3001\u4e0b\u8f7d\u5de5\u5177\u7684\u4f7f\u7528 flutter\u6e90\u7801\u7684\u76ee\u5f55\u548c\u6587\u4ef6\u5927\u6982\u7684\u6587\u4ef6\u6709\u90a3\u4e9b","title":"\u603b\u7ed3"},{"location":"android/flutter/flutterexample/","text":"MaterialApp\u548cScaffold - \u7b80\u4e66 Flutter\u5e95\u90e8\u5bfc\u822a\u680f\u7684\u5b9e\u73b0 - \u7b80\u4e66 Flutter - \u521b\u5efa\u4fa7\u6ed1\u83dc\u5355 - \u661f\u671f\u516b\u518d\u5a36\u4f60 - \u535a\u5ba2\u56ed Flutter - \u521b\u5efa\u6a2a\u8de8\u6240\u6709\u9875\u9762\u7684\u4fa7\u6ed1\u83dc\u5355 - \u661f\u671f\u516b\u518d\u5a36\u4f60 - \u535a\u5ba2\u56ed Flutter - \u521b\u5efa\u5e95\u90e8\u5bfc\u822a\u680f - \u661f\u671f\u516b\u518d\u5a36\u4f60 - \u535a\u5ba2\u56ed Flutter\uff1aTheme - \u7b80\u4e66 Flutter\u5b8c\u6574\u5f00\u53d1\u5b9e\u6218\u8be6\u89e3(\u56db\u3001 Redux\u3001\u4e3b\u9898\u3001\u56fd\u9645\u5316)-\u4e91\u6816\u793e\u533a-\u963f\u91cc\u4e91 Flutter\u5b9e\u73b0\u96e8\u6ef4\u52a8\u753b","title":"example"},{"location":"android/flutter/interview/","text":"Android \u9762\u8bd5 1.Android \u5e73\u53f0\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u8bbe\u8ba1\u3001\u5f00\u53d1\u3001\u5347\u7ea7\u3001\u7ef4\u62a4 2.\u627f\u62c5Android\u5ba2\u6237\u7aef\u9879\u76ee\u9700\u6c42\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u5b9e\u73b0 3.\u5b89\u88c5\u9879\u76ee\u8981\u6c42\uff0c\u72ec\u7acb\u5b8c\u6210\u754c\u9762\u5e03\u5c40\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u3001\u7f16\u7801\u5b9e\u73b0\u548c\u5355\u5143\u6d4b\u8bd5 4.\u8d1f\u8d23\u548c\u670d\u52a1\u5668\u7aef\u8f6f\u4ef6\u96c6\u6210\u548c\u8054\u8c03\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u8d44\u6599 1.\u719f\u6089Java\u8bed\u8a00 2.\u719f\u6089Android\u6846\u67b6\u539f\u7406\u53caActivity\u751f\u547d\u5468\u671f\uff0cUI\u5e03\u5c40\u3001\u719f\u6089SQLite\uff0c\u5bf9HTML\u4ee5\u53caJAVASCRITPT\u8bed\u8a00\u6709\u6240\u4e86\u89e3 3.\u719f\u6089AndroidAPI\uff0c\u7406\u89e3Android\u8fd0\u884c\u539f\u7406\u548c\u4f53\u7cfb\u67b6\u6784\uff0c\u5f00\u53d1\u8fc7\u6210\u719f\u4ea7\u54c1\u8005\u4f18\u5148 4.\u719f\u6089Android SDK\u4ee5\u53ca\u76f8\u5173\u5f00\u53d1\u3001\u8c03\u8bd5\u3001\u4f18\u5316\u5de5\u5177 5.\u719f\u6089Android Framework\u5de5\u4f5c\u539f\u7406\uff0c\u719f\u6089Android\u7cfb\u7edf\u67b6\u6784","title":"\u9762\u8bd5\u8d44\u6599"},{"location":"android/flutter/interview/#android","text":"1.Android \u5e73\u53f0\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u67b6\u6784\u8bbe\u8ba1\u3001\u5f00\u53d1\u3001\u5347\u7ea7\u3001\u7ef4\u62a4 2.\u627f\u62c5Android\u5ba2\u6237\u7aef\u9879\u76ee\u9700\u6c42\u5206\u6790\u3001\u8bbe\u8ba1\u3001\u5b9e\u73b0 3.\u5b89\u88c5\u9879\u76ee\u8981\u6c42\uff0c\u72ec\u7acb\u5b8c\u6210\u754c\u9762\u5e03\u5c40\u3001\u8f6f\u4ef6\u8bbe\u8ba1\u3001\u7f16\u7801\u5b9e\u73b0\u548c\u5355\u5143\u6d4b\u8bd5 4.\u8d1f\u8d23\u548c\u670d\u52a1\u5668\u7aef\u8f6f\u4ef6\u96c6\u6210\u548c\u8054\u8c03\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u8d44\u6599 1.\u719f\u6089Java\u8bed\u8a00 2.\u719f\u6089Android\u6846\u67b6\u539f\u7406\u53caActivity\u751f\u547d\u5468\u671f\uff0cUI\u5e03\u5c40\u3001\u719f\u6089SQLite\uff0c\u5bf9HTML\u4ee5\u53caJAVASCRITPT\u8bed\u8a00\u6709\u6240\u4e86\u89e3 3.\u719f\u6089AndroidAPI\uff0c\u7406\u89e3Android\u8fd0\u884c\u539f\u7406\u548c\u4f53\u7cfb\u67b6\u6784\uff0c\u5f00\u53d1\u8fc7\u6210\u719f\u4ea7\u54c1\u8005\u4f18\u5148 4.\u719f\u6089Android SDK\u4ee5\u53ca\u76f8\u5173\u5f00\u53d1\u3001\u8c03\u8bd5\u3001\u4f18\u5316\u5de5\u5177 5.\u719f\u6089Android Framework\u5de5\u4f5c\u539f\u7406\uff0c\u719f\u6089Android\u7cfb\u7edf\u67b6\u6784","title":"Android \u9762\u8bd5"},{"location":"android/flutter/platformplugin/","text":"Flutter Platform channel \u6e90\u7801\u5206\u6790 \u6982\u8ff0 Flutter\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u65b9\u6848\uff0c\u5728UI\u3001\u89e6\u63a7\u53ca\u57fa\u672c\u7684\u7f51\u7edc\u8bf7\u6c42\u4e0a\u5df2\u7ecf\u57fa\u672c\u505a\u5230\u5e73\u53f0\u65e0\u5173\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u5e73\u53f0\u7279\u6027\u7684\u529f\u80fd\u4e0a\uff0c\u8fd8\u662f\u5fc5\u987b\u8981\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u505a\u5904\u7406\u3002\u8fd9\u5c31\u6d89\u53ca\u5230\u4e0eNative\u7684\u901a\u4fe1\u3002 Flutter\u63d0\u4f9b\u4e86\u4e00\u5957Platform Channel\u7684\u673a\u5236\uff0c\u6765\u6ee1\u8db3\u4e0eNative\u901a\u4fe1\u7684\u529f\u80fd\u8981\u6c42\u3002 Platform Channel\u5206\u7c7b BasicMessageChannel MethodChannel EventChannel \u5176\u5404\u81ea\u7684\u4e3b\u8981\u7528\u9014\u5982\u4e0b\uff1a BasicMessageChannel: \u7528\u4e8e\u4f20\u9012\u6570\u636e\u3002Flutter\u4e0e\u539f\u751f\u9879\u76ee\u7684\u8d44\u6e90\u662f\u4e0d\u5171\u4eab\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7BasicMessageChannel\u6765\u83b7\u53d6Native\u9879\u76ee\u7684\u56fe\u6807\u7b49\u8d44\u6e90\u3002 MethodChannel: \u4f20\u9012\u65b9\u6cd5\u8c03\u7528\u3002Flutter\u4e3b\u52a8\u8c03\u7528Native\u7684\u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u76f8\u5e94\u7684\u8fd4\u56de\u503c\u3002\u6bd4\u5982\u83b7\u53d6\u7cfb\u7edf\u7535\u91cf\uff0c\u53d1\u8d77Toast\u7b49\u8c03\u7528\u7cfb\u7edfAPI\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6765\u5b8c\u6210\u3002 EventChannel: \u4f20\u9012\u4e8b\u4ef6\u3002\u8fd9\u91cc\u662fNative\u5c06\u4e8b\u4ef6\u901a\u77e5\u5230Flutter\u3002\u6bd4\u5982Flutter\u9700\u8981\u76d1\u542c\u7f51\u7edc\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019MethodChannel\u5c31\u65e0\u6cd5\u80dc\u4efb\u8fd9\u4e2a\u9700\u6c42\u4e86\u3002EventChannel\u53ef\u4ee5\u5c06Flutter\u7684\u4e00\u4e2a\u76d1\u542c\u4ea4\u7ed9Native\uff0cNative\u53bb\u505a\u7f51\u7edc\u5e7f\u64ad\u7684\u76d1\u542c\uff0c\u5f53\u6536\u5230\u5e7f\u64ad\u540e\u501f\u52a9EventChannel\u8c03\u7528Flutter\u6ce8\u518c\u7684\u76d1\u542c\uff0c\u5b8c\u6210\u5bf9Flutter\u7684\u4e8b\u4ef6\u901a\u77e5\u3002 \u5176\u5b9e\u53ef\u4ee5\u770b\u5230\uff0c\u65e0\u8bba\u4f20\u65b9\u6cd5\u8fd8\u662f\u4f20\u4e8b\u4ef6\uff0c\u5176\u672c\u8d28\u4e0a\u90fd\u662f\u6570\u636e\u7684\u4f20\u9012\uff0c\u4e0d\u8fc7\u4e0a\u5c42\u5305\u7684\u4e00\u4e9b\u903b\u8f91\u4e0d\u540c\u800c\u5df2\u3002\u6240\u4ee5\u8fd9\u4e09\u4e2aChannel\u7684\u901a\u4fe1\u5b9e\u73b0\u57fa\u672c\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u662fEventChannel\u5728\u5904\u7406\u6d88\u606f\u5904\u7406\u65f6\u4f1a\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u9644\u52a0\u903b\u8f91\uff0c\u8fd9\u4e2a\u540e\u6587\u4f1a\u505a\u5206\u6790\u3002 \u7528\u5b98\u65b9\u7684Demo\uff0cFlutter\u83b7\u53d6\u8bbe\u5907\u7535\u91cf Platform Channel\u67b6\u6784\u903b\u8f91 \u8c03\u7528\u65f6\u5e8f\u903b\u8f91 \u5728\u5206\u6790Flutter Platform channel\u6e90\u7801\u4e4b\u524d\uff0c\u5148\u6765\b\u4e86\u89e3\u4e00\u4e0b\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2dAndroid\u7aef\u548cFlutterUI\u7aef\b\u8c03\u7528\u7684\u8fc7\u7a0b\b\u65f6\u5e8f\u56fe: \u6e90\u7801\u8c03\u7528 \u5728Native\u9879\u76ee\u7684Activity\u4e2d\uff0c\u6ce8\u518c\u63d2\u4ef6\uff1a flutter/bin/cache/pkg/sky_engine/lib/ui/window.dart engine/src/flutter/lib/ui/window.dart \u7136\u540e\u5728Flutter\u9879\u76ee\u4e2d\uff0c\u76f4\u63a5\u901a\u8fc7ChannelName\u5b9e\u4f8b\u5316MethodChannel\uff0c\u7136\u540e\u8c03\u7528\u65b9\u6cd5\u5373\u53ef\u3002 class _PlatformChannelState extends State PlatformChannel { static const MethodChannel methodChannel = MethodChannel ( samples . flutter . io / battery ); static const EventChannel eventChannel = EventChannel ( samples . flutter . io / charging ); Future void _getBatteryLevel () async { String batteryLevel ; try { final int result = await methodChannel . invokeMethod ( getBatteryLevel ); batteryLevel = Battery level : $result %. ; } on PlatformException { batteryLevel = Failed to get battery level . ; } setState (() { _batteryLevel = batteryLevel ; }); } .............. } Flutter\u5728Native\u4e0a\u662f\u7528\u4e00\u4e2aSurfaceView\u627f\u8f7d\u7684\uff0cgetFlutterView()\u83b7\u53d6\u5230\u8fd9\u4e2aView BATTERY_CHANNEL\u662fchannel\u540d\u79f0\uff0c\u5fc5\u987b\u552f\u4e00\u4e00\u822c\u7528\u5305\u540d\u52a0\u529f\u80fd\u547d\u540d\uff0c\u5982\uff1a\"com.qq.fm/battery\" new MethodChannel ( getFlutterView (), BATTERY_CHANNEL ). setMethodCallHandler ( new MethodCallHandler () { @Override public void onMethodCall ( MethodCall call , Result result ) { if ( call . method . equals ( getBatteryLevel )) { int batteryLevel = getBatteryLevel (); // \u8c03\u7cfb\u7edfAPI\u83b7\u53d6\u7535\u91cf if ( batteryLevel != - 1 ) { result . success ( batteryLevel ); } else { result . error ( UNAVAILABLE , Battery level not available. , null ); } } else { result . notImplemented (); } } } ); FlutterUI\u5c42\u8c03\u7528ui.window\u4e2d\u7684\u65b9\u6cd5 _sendPlatformMessage \u8c03\u7528native\u65b9\u6cd5\u8fdb\u5165\u672c\u5730\u65b9\u6cd5\u8c03\u7528 String _sendPlatformMessage ( String name , PlatformMessageResponseCallback callback , ByteData data ) native Window_sendPlatformMessage ; /// Called whenever this window receives a message from a platform-specific /// plugin. /// /// The `name` parameter determines which plugin sent the message. The `data` /// parameter is the payload and is typically UTF-8 encoded JSON but can be /// arbitrary data. /// /// Message handlers must call the function given in the `callback` parameter. /// If the handler does not need to respond, the handler should pass null to /// the callback. /// /// The framework invokes this callback in the same zone in which the /// callback was set. PlatformMessageCallback get onPlatformMessage = _onPlatformMessage ; PlatformMessageCallback _onPlatformMessage ; Zone _onPlatformMessageZone ; set onPlatformMessage ( PlatformMessageCallback callback ) { _onPlatformMessage = callback ; _onPlatformMessageZone = Zone . current ; } /// Called by [_dispatchPlatformMessage]. void _respondToPlatformMessage ( int responseId , ByteData data ) native Window_respondToPlatformMessage ; \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u5c31\u662f\u5728Native\u9879\u76ee\u4e2d\u6ce8\u518c\u4e00\u4e0bMethodChannel\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728Flutter\u4e2d\u7528\u540c\u6837\u7684ChannelName\u5b9e\u4f8b\u5316\u4e00\u4e2aMethodChannel\uff0c\u7136\u540e\u53d1\u8d77\u8c03\u7528\u3002 \u9700\u8981\u8865\u5145\u7684\u662finvokeMethod\u65b9\u6cd5\u9664\u4e86\u51fd\u6570\u540d\uff0c\u8fd8\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\u4f20\u9012\u8fc7\u53bb\u3002Native\u5c42\u5219\u662f\u901a\u8fc7Result\u7c7b\u7684\u76f8\u5173\u65b9\u6cd5\uff0c\u5c06\u7ed3\u679c\u56de\u4f20\u7ed9Flutter\u3002 Window.cc\u6ce8\u518c\u672c\u5730\u65b9\u6cd5 Window.cc\u7c7b\u5bf9\u5e94FlutterUI\u5c42\u7684ui.windown\u5728\u521b\u5efaDartVM\u865a\u62df\u673a\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2aDart_UI\u7c7b\uff0c\u8c03\u7528Window::RegisterNatives\u65b9\u6cd5\u8fdb\u884c\u672c\u5730\u65b9\u6cd5\u6ce8\u518c\u64cd\u4f5c\u3002 // \u6ce8\u518c\u672c\u5730\u65b9\u6cd5\u5230\u865a\u62df\u673a void Window :: RegisterNatives ( tonic :: DartLibraryNatives * natives ) { natives - Register ({ { Window_defaultRouteName , DefaultRouteName , 1 , true }, { Window_scheduleFrame , ScheduleFrame , 1 , true }, // \u4fdd\u5b58flutter\u7684\u6570\u636e\u5230\u5185\u5b58\u4e2d\uff0c\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u7684\u65b9\u5f0f\u4fdd\u5b58 { Window_sendPlatformMessage , _SendPlatformMessage , 4 , true }, // so\u672c\u5730\u65b9\u6cd5\u4f20\u8f93\u6570\u636e\u5230flutter\u5c42 { Window_respondToPlatformMessage , _RespondToPlatformMessage , 3 , true }, { Window_render , Render , 2 , true }, { Window_updateSemantics , UpdateSemantics , 2 , true }, { Window_setIsolateDebugName , SetIsolateDebugName , 2 , true }, { Window_reportUnhandledException , ReportUnhandledException , 2 , true }, }); } } // namespace blink main.dart invoke \u5728main.dart\u4e2d\u8c03\u7528 methodChannel.invokeMethod('getBatteryLevel'); \u65b9\u6cd5\u6700\u7ec8\u4f1a\u8c03\u7528ui.window.dart\u4e2d\u7684\u672c\u5730\u65b9\u6cd5\u8c03\u7528Window.cc\u4e2d\u7684\u672c\u5730\u65b9\u6cd5 /// Sends a message to a platform-specific plugin. /// /// The `name` parameter determines which plugin receives the message. The /// `data` parameter contains the message payload and is typically UTF-8 /// encoded JSON but can be arbitrary data. If the plugin replies to the /// message, `callback` will be called with the response. /// /// The framework invokes [callback] in the same zone in which this method /// was called. void sendPlatformMessage ( String name , ByteData data , PlatformMessageResponseCallback callback ) { final String error = _sendPlatformMessage ( name , _zonedPlatformMessageResponseCallback ( callback ), data ); if ( error != null ) throw new Exception ( error ); } String _sendPlatformMessage ( String name , PlatformMessageResponseCallback callback , ByteData data ) native Window_sendPlatformMessage ; Window.cc\u672c\u5730\u65b9\u6cd5\u5b9e\u73b0 // \u672c\u5730\u53e5\u67c4\u5728\u5f53\u524dIsolate\u5185\u5206\u914d\uff08\u53c2\u89c1Dart_EnterScope\uff09\u5e76\u5728\u5f53\u524d\u8303\u56f4\u9000\u51fa\u65f6\u6d88\u5931\u3002\u9664\u975e // \u53e6\u6709\u8bf4\u660e\uff0c\u8c03\u7528\u8005\u5e94\u8be5\u5047\u8bbe\u6240\u6709\u529f\u80fd\u90fd\u5728Dart\u5d4c\u5165api\u8fd4\u56de\u672c\u5730\u53e5\u67c4\u3002 // \u6301\u4e45\u53e5\u67c4\u5728\u5f53\u524d\u9694\u79bb\u5185\u5206\u914d\u3002\u4ed6\u4eec\u53ef\u7528\u4e8e\u8de8\u8303\u56f4\u5b58\u50a8\u5bf9\u8c61\u3002\u6301\u4e45\u53e5\u67c4\u6709\u5f53\u524d\u9694\u79bb\u7684\u751f\u547d\u5468\u671f\uff0c\u9664\u975e\u5b83\u4eec\u662f\u660e\u786e\u7684 // deallocated\uff08\u8bf7\u53c2\u9605Dart_DeletePersistentHandle\uff09\u3002Dart_Handle\u7c7b\u578b\u8868\u793a\u53e5\u67c4\uff08\u672c\u5730\u548c\u6301\u4e45\uff09\u3002 // Dart_PersistentHandle\u7c7b\u578b\u662fDart_Handle\uff0c\u7528\u4e8e\u8bb0\u5f55\u671f\u671b\u6301\u4e45\u53e5\u67c4\u4f5c\u4e3a\u8c03\u7528\u7684\u53c2\u6570 //\u6216\u6765\u81ea\u8c03\u7528\u7684\u8fd4\u56de\u503c\u662f\u6301\u4e45\u53e5\u67c4\u3002 Dart_Handle SendPlatformMessage ( Dart_Handle window , //window\u5bf9\u8c61\u5728Ioslate\u4e2d\u4fdd\u5b58\u7684\u5bf9\u8c61 const std :: string name , //chinel\u540d\u79f0 Dart_Handle callback , //ui.window.dart\u56de\u8c03\u51fd\u6570 const tonic :: DartByteData data ) { //\u4f7f\u7528\u5173\u8054\u5f15\u7528\u4fdd\u5b58FlutterUI\u5c42\u4f20\u5165\u7684\u6570\u636e UIDartState * dart_state = UIDartState :: Current (); ..... // \u4fdd\u5b58Dart\u5c42\u56de\u8c03\u4fe1\u606f\u5230\u6301\u4e45\u5316\u6570\u636e\u5c42 if ( ! Dart_IsNull ( callback )) { response = fml :: MakeRefCounted PlatformMessageResponseDart ( // Dart\u5bf9Value\u7684\u6301\u4e45\u5316\u5904\u7406\u7684\u7c7b\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f tonic :: DartPersistentValue ( dart_state , callback ), dart_state - GetTaskRunners (). GetUITaskRunner ()); } if ( Dart_IsNull ( data . dart_handle ())) { dart_state - window () - client () - HandlePlatformMessage ( fml :: MakeRefCounted PlatformMessage ( name , response )); } else { dart_state - window () - client () - HandlePlatformMessage ( fml :: MakeRefCounted PlatformMessage () name , std :: vector uint8_t ( buffer , buffer + data . length_in_bytes ()), response )); } .... } SendPlatformMessage\u51fd\u6570 \u5728 SendPlatformMessage \u65b9\u6cd5\u4e2d\u4e3b\u8981\u505a\u4e863\u4e2a\u529f\u80fd 1.\u83b7\u53d6\u5f53\u524dIsolate\u5bf9\u5e94\u7684 UIDartState ,\u83b7\u53d6\u5bf9\u5e94\u7684Isolate\u4e2d\u7684\u6570\u636e /engine/src/flutter/runtime/dart_isolate.cc 2.\u8c03\u7528 :MakeRefCounted PlatformMessageResponseDart \u4fdd\u5b58DartVM\u865a\u62df\u673a\u4e2d\u7684\u6570\u636e\u548c\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u5c01\u88c5\u548c\u4fdd\u5b58 3.\u8c03\u7528 fml::MakeRefCounted PlatformMessage (name, response) \u521b\u5efa\u4e00\u4e2a\u5728\u5e73\u53f0\u5c42\u4f20\u9012\u7684\u6d88\u606f\u7684\u5c01\u88c5 \u63a5\u4e0b\u6765\uff0c\u8fdb\u4e00\u6b65\u5206\u6790\u4e0a\u9762\u4e09\u4e2a\u6b65\u9aa4\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff1a PlatformMessageResponseDart \u8c03\u7528 :MakeRefCounted PlatformMessageResponseDart \u4fdd\u5b58DartVM\u865a\u62df\u673a\u4e2d\u7684\u6570\u636e\u548c\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u5c01\u88c5\u548c\u4fdd\u5b58 PlatformMessageResponseDart \u4e3b\u8981\u529f\u80fd\b\u5c31\u662f\u4fdd\u5b58\bFlutte\brUI \u5c42\u7684\u56de\u8c03\u5bf9\u8c61\uff0c\u548cui\u7ebf\u7a0b\u4efb\u52a1\u7ba1\u7406\u5bf9\u8c61\uff0c\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf tonic::DartPersistentValue callback_; \u5c01\u88c5\u4e86Dart_api\u4e2d\u7684\u53e5\u67c4\u5bf9\u8c61\uff0c\u4e3b\u8981\u662f\u5bf9DartVM\u4e2d\u7684\u5bf9\u8c61 \u5f15\u7528 \u4fdd\u5b58\uff0c\u5173\u8054\u5230\u5f53\u524d\u7684Isolate\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\uff0c fml::RefPtr fml::TaskRunner ui_task_runner_; \u4fdd\u5b58Engine\u4e2d\u7684TaskRunner\u4efb\u52a1\u8fd0\u884c\u5668\u7d22\u5f15\u5bf9\u8c61\u3002 namespace blink { class PlatformMessageResponseDart : public PlatformMessageResponse { // \u786e\u4fdd\u6784\u9020\u51fd\u6570\u79c1\u6709 FML_FRIEND_MAKE_REF_COUNTED ( PlatformMessageResponseDart ); ... tonic :: DartPersistentValue callback_ ; fml :: RefPtr fml :: TaskRunner ui_task_runner_ ; }; } // namespace blink #endif // FLUTTER_LIB_UI_PLATFORM_PLATFORM_MESSAGE_RESPONSE_DART_H_ DartPersistentValue DartVM\u4e2d\u4f7f\u7528\u6301\u4e45\u5316\u5bf9\u8c61\u6765\u8fdb\u884c\u4fdd\u5b58\uff0c\u5728JNI\u4ee3\u7801\u4e2d\u4f7f\u7528 DartPersistentValue , /engine/src/third_party/tonic/dart_persistent_value.h \u5bf9Isolate\u76f8\u5173\u8054\u7684\u5bf9\u8c61\u8fdb\u884c\u7ba1\u7406\u64cd\u4f5c\uff0c\u5c01\u88c5\u4e86 Dart_Handle \u548c Dart_PersistentHandle \u4e24\u4e2a\u5bf9\u8c61\u662f\u64cd\u4f5cDartVm\u4e2d\u7684\u6570\u636e\u7684\u5f15\u7528 engine/src/third_party/dart/runtime/include/dart_api.h * Dart_Handle: Local and persistent handles --- * * Local handles are allocated within the current scope (see * Dart_EnterScope) and go away when the current scope exits. Unless * otherwise indicated, callers should assume that all functions in * the Dart embedding api return local handles. * * Persistent handles are allocated within the current isolate. They * can be used to store objects across scopes. Persistent handles have * the lifetime of the current isolate unless they are explicitly * deallocated (see Dart_DeletePersistentHandle). * The type Dart_Handle represents a handle (both local and persistent). * The type Dart_PersistentHandle is a Dart_Handle and it is used to * document that a persistent handle is expected as a parameter to a call * or the return value from a call is a persistent handle. #ifndef LIB_TONIC_DART_PERSISTENT_VALUE_H_ #define LIB_TONIC_DART_PERSISTENT_VALUE_H_ #include memory #include third_party/dart/runtime/include/dart_api.h #include tonic/common/macros.h namespace tonic { class DartState ; // DartPersistentValue is a bookkeeping class to help pair calls to // Dart_NewPersistentHandle with Dart_DeletePersistentHandle. Consider using // this class instead of holding a Dart_PersistentHandle directly so that you // don t leak the Dart_PersistentHandle. class DartPersistentValue { std :: weak_ptr DartState dart_state_ ; Dart_PersistentHandle value_ ; TONIC_DISALLOW_COPY_AND_ASSIGN ( DartPersistentValue ); }; } // namespace tonic #endif // LIB_TONIC_DART_PERSISTENT_VALUE_H_ PlatformMessageResponseDart \u672c\u5730\u65b9\u6cd5\u901a\u8fc7\u5f53\u524d\u7c7b\u56de\u8c03\u5230DartVM\u865a\u62df\u673a\u4e2d\uff0c\u5f53\u524d\u7684\u7c7b\u662f\u5728Engine\u7684UI\u7ebf\u7a0b\u6267\u884c void PlatformMessageResponseDart :: Complete ( std :: unique_ptr fml :: Mapping data ) { if ( callback_ . is_empty ()) return ; FML_DCHECK ( ! is_complete_ ); is_complete_ = true ; ui_task_runner_ - PostTask ( fml :: MakeCopyable ( [ callback = std :: move ( callback_ ), data = std :: move ( data )]() mutable { std :: shared_ptr tonic :: DartState dart_state = callback . dart_state (). lock (); if ( ! dart_state ) return ; tonic :: DartState :: Scope scope ( dart_state ); Dart_Handle byte_buffer = WrapByteData ( std :: move ( data )); tonic :: DartInvoke ( callback . Release (), { byte_buffer }); })); } dart_invoke engine/src/third_party/tonic/logging/dart_invoke.cc \u8c03\u7528 DartInvoke \u5168\u5c40\u65b9\u6cd5\u8c03\u7528DartVM,\u771f\u6b63\b\u548c\u3001DartVM\u4ea4\u4e92\u7684\u5730\u65b9 Dart_Handle DartInvoke ( Dart_Handle closure , std :: initializer_list Dart_Handle args ) { int argc = args . size (); Dart_Handle * argv = const_cast Dart_Handle * ( args . begin ()); Dart_Handle handle = Dart_InvokeClosure ( closure , argc , argv ); LogIfError ( handle ); return handle ; } Dart_InvokeClosure \u6700\u7ec8\u56de\u8c03\u56deDartVM\u4e2d\u7684FlutterUI\u4e2d\u7684ui.window\u5bf9\u8c61\u7684Callback\u65b9\u6cd5\uff0c\u8fd4\u56de\u5230main.dart\u4e2d /** * Invokes a Closure with the given arguments. * * May generate an unhandled exception error. * * \\return If no error occurs during execution, then the result of * invoking the closure is returned. If an error occurs during * execution, then an error handle is returned. */ DART_EXPORT DART_WARN_UNUSED_RESULT Dart_Handle Dart_InvokeClosure ( Dart_Handle closure , int number_of_arguments , Dart_Handle * arguments ); \u8d70\u5b8c\u4e0a\u9762\u7684\u6d41\u7a0b\uff0c\u5df2\u7ecf\u4fdd\u5b58\u4e86FlutterUI\u5c42\u56de\u8c03\u76f8\u5173\u7684\u53e5\u67c4\uff0c\u4e5f\u5c31\u662fDartVM\u4e2d\u4fdd\u5b58\u7684\u5bf9\u8c61\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5728\u672c\u5730\u4f20\u9012\u7684\u6d88\u606f\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u8c03\u7528\u4f20\u9012Message\u5230Platform\u5c42\u7684\u4ee3\u7801\u3002 PlatformMessage \u8c03\u7528 fml::MakeRefCounted PlatformMessage (name, response) \u521b\u5efa\u4e00\u4e2a\u5728\u5e73\u53f0\u5c42\u4f20\u9012\u7684\u6d88\u606f\u7684\u5c01\u88c5 PlatformMessage \u5728\u5e73\u53f0\u4e0a\u4f20\u9012\u7684\u6570\u636e\u901a\u8fc7\b PlatformMessage \u5c01\u88c5\u7edf\u4e00\u4f20\u9012\uff0c\u5305\u62ec\u901a\u9053\u540d\u79f0\uff0c\b\u9700\u8981\u4f20\u9012\u7684\u6570\u636e\uff0cFlutterUI\u5c42\u56de\u8c03\u5bf9\u8c61\u7684\u5173\u8054\u5e94\u7528\u5b9a\u4e494\u4e2a\u53d8\u91cf: 1.channel_ 2.data_ 3.hasData_ 4.response_ namespace blink { class PlatformMessage : public fml :: RefCountedThreadSafe PlatformMessage { FML_FRIEND_REF_COUNTED_THREAD_SAFE ( PlatformMessage ); FML_FRIEND_MAKE_REF_COUNTED ( PlatformMessage ); .... std :: string channel_ ; //\u81ea\u5b9a\u4e49\u7684channel\u540d\u79f0 std :: vector uint8_t data_ ; //\u4f20\u5165\u7684\u6570\u636e(\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u53c2\u6570\u7b49\u4e00\u7cfb\u5217\u7684\u53c2\u6570) bool hasData_ ; //\u5224\u65ad\u662f\u5426\u4f20\u5165\u6570\u636e fml :: RefPtr PlatformMessageResponse response_ ; //FlutterUI\u5c42\u7684\u56de\u8c03\u53e5\u67c4\u5c01\u88c5\u5173\u8054\u7d22\u5f15 }; } // namespace blink #endif // FLUTTER_LIB_UI_PLATFORM_PLATFORM_MESSAGE_H_ \u4f20\u8f93\u6570\u636e\u7684\u5927\u5c0f\u9650\u5236 engine/src/flutter/lib/ui/window/platform_message_response_dart.cc \uff0c\u6570\u636e\u7684\u5927\u5c0f \b\b// Avoid copying the contents of messages beyond a certain size. const int kMessageCopyThreshold = 1000; \u4e0b\u56fe\u8868\u793a\u5728FlutteUI\u5c42\u8c03\u7528\u5230Android\u5c42\u7684\u6267\u884c\u8def\u5f84\u548c\u76f8\u5173\u7684\u7c7b\u96c6\u6210\u5173\u7cfb: \u6211\u4eec\u53ef\u4ee5\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\u662f_SendPlatformMessage\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8c03\u5230 SendPlatformMessage \u8c03\u5230WindowClient\u7684HandlePlatformMessage\u65b9\u6cd5\uff0cWindowClient\u7684\u5177\u4f53\u5b9e\u73b0\u662fRuntimeController\uff0c\u7136\u540eRuntimeController\u4f1a\u5c06\u65b9\u6cd5\u4ea4\u7ed9RuntimeDelegate\u6765\u5b9e\u73b0\uff0c\u800cRuntimeDelegate\u7684\u5177\u4f53\u5b9e\u73b0\u5219\u662fEngine\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u5982\u4e0b\uff1a static constexpr char kAssetChannel [] = flutter/assets ; void Engine :: HandlePlatformMessage ( fml :: RefPtr blink :: PlatformMessage message ) { if ( message - channel () == kAssetChannel ) { HandleAssetPlatformMessage ( std :: move ( message )); } else { delegate_ . OnEngineHandlePlatformMessage ( std :: move ( message )); } } \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u9996\u5148\u68c0\u67e5\u662f\u5426\u662fFlutter\u83b7\u53d6\u5e73\u53f0\u8d44\u6e90\u7684\uff0c\u5982\u679c\u662f\u5c31\u8f6c\u5230\u83b7\u53d6\u8d44\u6e90\u7684\u903b\u8f91\u91cc\u53bb\uff0c\u5426\u5219\u8d70Delegate\u7684\u903b\u8f91\uff0c\u8fd9\u91ccDelegate\u662f\u7684\u5b9e\u73b0\u7c7b\u662fShell\u3002 // |shell::Engine::Delegate| void Shell :: OnEngineHandlePlatformMessage ( fml :: RefPtr blink :: PlatformMessage message ) { FML_DCHECK ( is_setup_ ); FML_DCHECK ( task_runners_ . GetUITaskRunner () - RunsTasksOnCurrentThread ()); task_runners_ . GetPlatformTaskRunner () - PostTask ( [ view = platform_view_ - GetWeakPtr (), message = std :: move ( message )]() { if ( view ) { view - HandlePlatformMessage ( std :: move ( message )); } }); } \u53ef\u4ee5\u770b\u5230\uff0c\u5728Shell\u7c7b\u91cc\uff0c\u4f1a\u5728PlatformTaskRunner\u4e2d\u6dfb\u52a0\u4e00\u4e2atask\uff0c\u8fd9\u65f6\u5019\u6267\u884c\u4f1a\u5207\u6362\u5230Platform task\uff0c\u4e4b\u524d\u90fd\u662f\u5728UI task\u4e2d\u6267\u884c\u7684\u3002PlatformView\u7684HandlePlatformMessage\u662f\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u770bPlatformViewAndroid\u4e2d\u5bf9\u5176\u7684\u5b9e\u73b0\u3002 // |shell::PlatformView| void PlatformViewAndroid :: HandlePlatformMessage ( fml :: RefPtr blink :: PlatformMessage message ) { JNIEnv * env = fml :: jni :: AttachCurrentThread (); fml :: jni :: ScopedJavaLocalRef jobject view = java_object_ . get ( env ); // ... auto java_channel = fml :: jni :: StringToJavaString ( env , message - channel ()); // (1) if ( message - hasData ()) { fml :: jni :: ScopedJavaLocalRef jbyteArray message_array ( env , env - NewByteArray ( message - data (). size ())); env - SetByteArrayRegion ( message_array . obj (), 0 , message - data (). size (), reinterpret_cast const jbyte * ( message - data (). data ())); message = nullptr ; // This call can re-enter in InvokePlatformMessageXxxResponseCallback. FlutterViewHandlePlatformMessage ( env , view . obj (), java_channel . obj (), message_array . obj (), response_id ); // (2) } else { message = nullptr ; // This call can re-enter in InvokePlatformMessageXxxResponseCallback. FlutterViewHandlePlatformMessage ( env , view . obj (), java_channel . obj (), nullptr , response_id ); // (3) } } \u8fd9\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5df2\u7ecf\u5f00\u59cb\u8fdb\u884cJNI\u76f8\u5173\u7684\u64cd\u4f5c\u4e86\u3002\u6ce8\u91ca(1)\u5904\u4ecemessage\u7ed3\u6784\u4e2d\uff0c\u62ff\u5230ChannelName\uff0c\u7136\u540e(2)\u548c(3)\u7684\u533a\u522b\u5c31\u662f\u4e00\u4e2a\u5e26\u53c2\u6570\uff0c\u4e00\u4e2a\u4e0d\u5e26\u53c2\u6570\uff0c\u901a\u8fc7FlutterViewHandlePlatformMessage\u53d1\u8d77\u8c03\u7528\u3002 static jmethodID g_handle_platform_message_method = nullptr ; void FlutterViewHandlePlatformMessage ( JNIEnv * env , jobject obj , jstring channel , jobject message , jint responseId ) { env - CallVoidMethod ( obj , g_handle_platform_message_method , channel , message , responseId ); // (1) FML_CHECK ( CheckException ( env )); } // ... bool PlatformViewAndroid :: Register ( JNIEnv * env ) { // ... g_flutter_native_view_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( io/flutter/view/FlutterNativeView )); // (2) // ... g_handle_platform_message_method = env - GetMethodID ( g_flutter_native_view_class - obj (), handlePlatformMessage , (Ljava/lang/String;[BI)V ); // (3) // ... } \u4ece(1)\u5904\u53ef\u4ee5\u770b\u5230\uff0c\u5f00\u59cb\u901a\u8fc7JNI\u8c03Java\u65b9\u6cd5\uff0c\u6ce8\u91ca(2)\u548c(3)\u5904\uff0c\u6307\u5b9a\u4e86Java\u7c7b\u548c\u65b9\u6cd5\u3002\u8c03\u7528\u4e86FlutterNativeView\u7684handlePlatformMessage\u65b9\u6cd5\uff0c\u770b\u8fd9\u91cc\u7684\u6e90\u7801\uff1a private void handlePlatformMessage ( final String channel , byte [] message , final int replyId ) { this . assertAttached (); BinaryMessageHandler handler = ( BinaryMessageHandler ) this . mMessageHandlers . get ( channel ); // (1) if ( handler != null ) { try { ByteBuffer buffer = message == null ? null : ByteBuffer . wrap ( message ); handler . onMessage ( buffer , new BinaryReply () { // ... }); } catch ( Exception var6 ) { // ... } } else { Log . e ( FlutterNativeView , Uncaught exception in binary message listener , var6 ); nativeInvokePlatformMessageEmptyResponseCallback ( this . mNativePlatformView , replyId ); } } \u770b\u6ce8\u91ca(1)\u5904\uff0c\u5c31\u662f\u4ece\u4e4b\u524d\u5b58\u5165\u7684map\u4e2d\u53d6\u51fa\u76f8\u5e94\u7684handler\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5219\u56de\u8c03Native\u8868\u793a\u5931\u8d25\u3002\u5426\u5219\u8c03\u7528BinaryMessageHandler\u7684onMessage\u65b9\u6cd5\uff0c\u5c06\u65b9\u6cd5\u4fe1\u606f\u4f20\u9012\u8fc7\u53bb\u3002 \u7136\u540e\u5c31\u56de\u5230\u4e86\u6700\u5f00\u59cb\u7684\u903b\u8f91\uff0c\u901a\u8fc7IncomingMethodCallHandler\u5904\u7406message\u6570\u636e\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u901a\u8fc7nativeInvokePlatformMessageResponseCallback\u56de\u8c03\u7ed9Flutter\u3002 \u603b\u7ed3\u5206\u6790 \u8ddf\u5b8cMethodChannel\u7684\u6e90\u7801\uff0c\u4f1a\u53d1\u73b0\u6574\u4e2a\u901a\u4fe1\u673a\u5236\u8fd8\u633a\u7b80\u5355\u7684\uff0c\u5148\u53bb\u4e0d\u53bb\u7406\u89e3Codec\u7684\u8bdd\uff0c\u7b49\u4e8e\u5c31\u662f\u5c06dart\u7684\u53d8\u91cf\uff0c\u4f20\u5230dart Native\uff0c\u7136\u540e\u4ea4\u5230java Native\uff0c \u518d\u4f20\u5230java\u3002\u7136\u540e\u76f8\u53cd\u7684\u8def\u5f84\uff0c\u518d\u4ecejava\u5230dart\u3002 \u7136\u540e\u518d\u53bb\u770bBasicMessageChannel\u5c31\u662f\u6ca1\u6709MethodCall\u8fd9\u4e2a\u7ed3\u6784\u7684\uff0c\u5176\u4ed6\u7684\u4e5f\u662f\u8d70\u7684BinaryMessages.send\u65b9\u6cd5\u3002\u7136\u540e\u5728Android\u7aef\uff0c\u6ca1\u6709IncomingMethodCallHandler\u8fd9\u4e2a\u7c7b\uff0c\u76f4\u63a5\u5c31\u662fBinaryMessageHandler\u3002\u6240\u4ee5\u4e86\u89e3\u4e86MethodChannel\uff0cBasicMessageChannel\u539f\u7406\u81ea\u7136\u5c31\u61c2\u4e86\u3002\uff08\u53ef\u4ee5\u8bf4MethodChannel\u5c31\u662f\u501f\u52a9BasicMessageChannel\u5b9e\u73b0\u7684\uff09 \u540c\u6837\u7684EventChannel\u5219\u662f\u57fa\u4e8eMethodChannel\u6765\u5b9e\u73b0\u7684\uff0c\u53ea\u662f\u4e24\u7aef\u7684handler\u4f1a\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u5012\u662f\u4e0e\u901a\u4fe1\u6ca1\u6709\u591a\u5927\u5173\u7cfb\u4e86\uff0c\u4e0d\u8fc7\u8bbe\u8ba1\u7684\u4e5f\u5f88\u7b80\u5355\uff0c\u6bd4\u8f83\u6709\u610f\u601d\u3002\u4e4b\u540e\u53e6\u8d77\u4e00\u6587\u7ec6\u8868\u3002 \u77e5\u8bc6\u70b9: \u539f\u5b50\u6027\u64cd\u4f5c: include /usr/include/c++/v1/atomic /Users/cuco/engine/src/flutter/fml/memory/ref_counted_internal.h \u63d0\u4f9b\u7684\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u7c7b: static_cast (this); vector \u53c2\u8003\u8fde\u63a5: Flutter\u4e0eNative\u901a\u4fe1 - PlatformChannel\u6e90\u7801\u5206\u6790 Flutter\u5b98\u7f51","title":"PlatformChannel"},{"location":"android/flutter/platformplugin/#flutter-platform-channel","text":"","title":"Flutter Platform channel \u6e90\u7801\u5206\u6790"},{"location":"android/flutter/platformplugin/#_1","text":"Flutter\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u65b9\u6848\uff0c\u5728UI\u3001\u89e6\u63a7\u53ca\u57fa\u672c\u7684\u7f51\u7edc\u8bf7\u6c42\u4e0a\u5df2\u7ecf\u57fa\u672c\u505a\u5230\u5e73\u53f0\u65e0\u5173\uff0c\u4f46\u662f\u5728\u67d0\u4e9b\u5e73\u53f0\u7279\u6027\u7684\u529f\u80fd\u4e0a\uff0c\u8fd8\u662f\u5fc5\u987b\u8981\u5bf9\u4e0d\u540c\u7684\u5e73\u53f0\u505a\u5904\u7406\u3002\u8fd9\u5c31\u6d89\u53ca\u5230\u4e0eNative\u7684\u901a\u4fe1\u3002 Flutter\u63d0\u4f9b\u4e86\u4e00\u5957Platform Channel\u7684\u673a\u5236\uff0c\u6765\u6ee1\u8db3\u4e0eNative\u901a\u4fe1\u7684\u529f\u80fd\u8981\u6c42\u3002 Platform Channel\u5206\u7c7b BasicMessageChannel MethodChannel EventChannel \u5176\u5404\u81ea\u7684\u4e3b\u8981\u7528\u9014\u5982\u4e0b\uff1a BasicMessageChannel: \u7528\u4e8e\u4f20\u9012\u6570\u636e\u3002Flutter\u4e0e\u539f\u751f\u9879\u76ee\u7684\u8d44\u6e90\u662f\u4e0d\u5171\u4eab\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7BasicMessageChannel\u6765\u83b7\u53d6Native\u9879\u76ee\u7684\u56fe\u6807\u7b49\u8d44\u6e90\u3002 MethodChannel: \u4f20\u9012\u65b9\u6cd5\u8c03\u7528\u3002Flutter\u4e3b\u52a8\u8c03\u7528Native\u7684\u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u76f8\u5e94\u7684\u8fd4\u56de\u503c\u3002\u6bd4\u5982\u83b7\u53d6\u7cfb\u7edf\u7535\u91cf\uff0c\u53d1\u8d77Toast\u7b49\u8c03\u7528\u7cfb\u7edfAPI\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6765\u5b8c\u6210\u3002 EventChannel: \u4f20\u9012\u4e8b\u4ef6\u3002\u8fd9\u91cc\u662fNative\u5c06\u4e8b\u4ef6\u901a\u77e5\u5230Flutter\u3002\u6bd4\u5982Flutter\u9700\u8981\u76d1\u542c\u7f51\u7edc\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019MethodChannel\u5c31\u65e0\u6cd5\u80dc\u4efb\u8fd9\u4e2a\u9700\u6c42\u4e86\u3002EventChannel\u53ef\u4ee5\u5c06Flutter\u7684\u4e00\u4e2a\u76d1\u542c\u4ea4\u7ed9Native\uff0cNative\u53bb\u505a\u7f51\u7edc\u5e7f\u64ad\u7684\u76d1\u542c\uff0c\u5f53\u6536\u5230\u5e7f\u64ad\u540e\u501f\u52a9EventChannel\u8c03\u7528Flutter\u6ce8\u518c\u7684\u76d1\u542c\uff0c\u5b8c\u6210\u5bf9Flutter\u7684\u4e8b\u4ef6\u901a\u77e5\u3002 \u5176\u5b9e\u53ef\u4ee5\u770b\u5230\uff0c\u65e0\u8bba\u4f20\u65b9\u6cd5\u8fd8\u662f\u4f20\u4e8b\u4ef6\uff0c\u5176\u672c\u8d28\u4e0a\u90fd\u662f\u6570\u636e\u7684\u4f20\u9012\uff0c\u4e0d\u8fc7\u4e0a\u5c42\u5305\u7684\u4e00\u4e9b\u903b\u8f91\u4e0d\u540c\u800c\u5df2\u3002\u6240\u4ee5\u8fd9\u4e09\u4e2aChannel\u7684\u901a\u4fe1\u5b9e\u73b0\u57fa\u672c\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u662fEventChannel\u5728\u5904\u7406\u6d88\u606f\u5904\u7406\u65f6\u4f1a\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u9644\u52a0\u903b\u8f91\uff0c\u8fd9\u4e2a\u540e\u6587\u4f1a\u505a\u5206\u6790\u3002 \u7528\u5b98\u65b9\u7684Demo\uff0cFlutter\u83b7\u53d6\u8bbe\u5907\u7535\u91cf","title":"\u6982\u8ff0"},{"location":"android/flutter/platformplugin/#platform-channel","text":"","title":"Platform Channel\u67b6\u6784\u903b\u8f91"},{"location":"android/flutter/platformplugin/#_2","text":"\u5728\u5206\u6790Flutter Platform channel\u6e90\u7801\u4e4b\u524d\uff0c\u5148\u6765\b\u4e86\u89e3\u4e00\u4e0b\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2dAndroid\u7aef\u548cFlutterUI\u7aef\b\u8c03\u7528\u7684\u8fc7\u7a0b\b\u65f6\u5e8f\u56fe:","title":"\u8c03\u7528\u65f6\u5e8f\u903b\u8f91"},{"location":"android/flutter/platformplugin/#_3","text":"\u5728Native\u9879\u76ee\u7684Activity\u4e2d\uff0c\u6ce8\u518c\u63d2\u4ef6\uff1a flutter/bin/cache/pkg/sky_engine/lib/ui/window.dart engine/src/flutter/lib/ui/window.dart \u7136\u540e\u5728Flutter\u9879\u76ee\u4e2d\uff0c\u76f4\u63a5\u901a\u8fc7ChannelName\u5b9e\u4f8b\u5316MethodChannel\uff0c\u7136\u540e\u8c03\u7528\u65b9\u6cd5\u5373\u53ef\u3002 class _PlatformChannelState extends State PlatformChannel { static const MethodChannel methodChannel = MethodChannel ( samples . flutter . io / battery ); static const EventChannel eventChannel = EventChannel ( samples . flutter . io / charging ); Future void _getBatteryLevel () async { String batteryLevel ; try { final int result = await methodChannel . invokeMethod ( getBatteryLevel ); batteryLevel = Battery level : $result %. ; } on PlatformException { batteryLevel = Failed to get battery level . ; } setState (() { _batteryLevel = batteryLevel ; }); } .............. } Flutter\u5728Native\u4e0a\u662f\u7528\u4e00\u4e2aSurfaceView\u627f\u8f7d\u7684\uff0cgetFlutterView()\u83b7\u53d6\u5230\u8fd9\u4e2aView BATTERY_CHANNEL\u662fchannel\u540d\u79f0\uff0c\u5fc5\u987b\u552f\u4e00\u4e00\u822c\u7528\u5305\u540d\u52a0\u529f\u80fd\u547d\u540d\uff0c\u5982\uff1a\"com.qq.fm/battery\" new MethodChannel ( getFlutterView (), BATTERY_CHANNEL ). setMethodCallHandler ( new MethodCallHandler () { @Override public void onMethodCall ( MethodCall call , Result result ) { if ( call . method . equals ( getBatteryLevel )) { int batteryLevel = getBatteryLevel (); // \u8c03\u7cfb\u7edfAPI\u83b7\u53d6\u7535\u91cf if ( batteryLevel != - 1 ) { result . success ( batteryLevel ); } else { result . error ( UNAVAILABLE , Battery level not available. , null ); } } else { result . notImplemented (); } } } ); FlutterUI\u5c42\u8c03\u7528ui.window\u4e2d\u7684\u65b9\u6cd5 _sendPlatformMessage \u8c03\u7528native\u65b9\u6cd5\u8fdb\u5165\u672c\u5730\u65b9\u6cd5\u8c03\u7528 String _sendPlatformMessage ( String name , PlatformMessageResponseCallback callback , ByteData data ) native Window_sendPlatformMessage ; /// Called whenever this window receives a message from a platform-specific /// plugin. /// /// The `name` parameter determines which plugin sent the message. The `data` /// parameter is the payload and is typically UTF-8 encoded JSON but can be /// arbitrary data. /// /// Message handlers must call the function given in the `callback` parameter. /// If the handler does not need to respond, the handler should pass null to /// the callback. /// /// The framework invokes this callback in the same zone in which the /// callback was set. PlatformMessageCallback get onPlatformMessage = _onPlatformMessage ; PlatformMessageCallback _onPlatformMessage ; Zone _onPlatformMessageZone ; set onPlatformMessage ( PlatformMessageCallback callback ) { _onPlatformMessage = callback ; _onPlatformMessageZone = Zone . current ; } /// Called by [_dispatchPlatformMessage]. void _respondToPlatformMessage ( int responseId , ByteData data ) native Window_respondToPlatformMessage ; \u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u5c31\u662f\u5728Native\u9879\u76ee\u4e2d\u6ce8\u518c\u4e00\u4e0bMethodChannel\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728Flutter\u4e2d\u7528\u540c\u6837\u7684ChannelName\u5b9e\u4f8b\u5316\u4e00\u4e2aMethodChannel\uff0c\u7136\u540e\u53d1\u8d77\u8c03\u7528\u3002 \u9700\u8981\u8865\u5145\u7684\u662finvokeMethod\u65b9\u6cd5\u9664\u4e86\u51fd\u6570\u540d\uff0c\u8fd8\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\u4f20\u9012\u8fc7\u53bb\u3002Native\u5c42\u5219\u662f\u901a\u8fc7Result\u7c7b\u7684\u76f8\u5173\u65b9\u6cd5\uff0c\u5c06\u7ed3\u679c\u56de\u4f20\u7ed9Flutter\u3002","title":"\u6e90\u7801\u8c03\u7528"},{"location":"android/flutter/platformplugin/#windowcc","text":"Window.cc\u7c7b\u5bf9\u5e94FlutterUI\u5c42\u7684ui.windown\u5728\u521b\u5efaDartVM\u865a\u62df\u673a\u7684\u65f6\u5019\u4f1a\u521b\u5efa\u4e00\u4e2aDart_UI\u7c7b\uff0c\u8c03\u7528Window::RegisterNatives\u65b9\u6cd5\u8fdb\u884c\u672c\u5730\u65b9\u6cd5\u6ce8\u518c\u64cd\u4f5c\u3002 // \u6ce8\u518c\u672c\u5730\u65b9\u6cd5\u5230\u865a\u62df\u673a void Window :: RegisterNatives ( tonic :: DartLibraryNatives * natives ) { natives - Register ({ { Window_defaultRouteName , DefaultRouteName , 1 , true }, { Window_scheduleFrame , ScheduleFrame , 1 , true }, // \u4fdd\u5b58flutter\u7684\u6570\u636e\u5230\u5185\u5b58\u4e2d\uff0c\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u7684\u65b9\u5f0f\u4fdd\u5b58 { Window_sendPlatformMessage , _SendPlatformMessage , 4 , true }, // so\u672c\u5730\u65b9\u6cd5\u4f20\u8f93\u6570\u636e\u5230flutter\u5c42 { Window_respondToPlatformMessage , _RespondToPlatformMessage , 3 , true }, { Window_render , Render , 2 , true }, { Window_updateSemantics , UpdateSemantics , 2 , true }, { Window_setIsolateDebugName , SetIsolateDebugName , 2 , true }, { Window_reportUnhandledException , ReportUnhandledException , 2 , true }, }); } } // namespace blink","title":"Window.cc\u6ce8\u518c\u672c\u5730\u65b9\u6cd5"},{"location":"android/flutter/platformplugin/#maindartinvoke","text":"\u5728main.dart\u4e2d\u8c03\u7528 methodChannel.invokeMethod('getBatteryLevel'); \u65b9\u6cd5\u6700\u7ec8\u4f1a\u8c03\u7528ui.window.dart\u4e2d\u7684\u672c\u5730\u65b9\u6cd5\u8c03\u7528Window.cc\u4e2d\u7684\u672c\u5730\u65b9\u6cd5 /// Sends a message to a platform-specific plugin. /// /// The `name` parameter determines which plugin receives the message. The /// `data` parameter contains the message payload and is typically UTF-8 /// encoded JSON but can be arbitrary data. If the plugin replies to the /// message, `callback` will be called with the response. /// /// The framework invokes [callback] in the same zone in which this method /// was called. void sendPlatformMessage ( String name , ByteData data , PlatformMessageResponseCallback callback ) { final String error = _sendPlatformMessage ( name , _zonedPlatformMessageResponseCallback ( callback ), data ); if ( error != null ) throw new Exception ( error ); } String _sendPlatformMessage ( String name , PlatformMessageResponseCallback callback , ByteData data ) native Window_sendPlatformMessage ;","title":"main.dartinvoke"},{"location":"android/flutter/platformplugin/#windowcc_1","text":"// \u672c\u5730\u53e5\u67c4\u5728\u5f53\u524dIsolate\u5185\u5206\u914d\uff08\u53c2\u89c1Dart_EnterScope\uff09\u5e76\u5728\u5f53\u524d\u8303\u56f4\u9000\u51fa\u65f6\u6d88\u5931\u3002\u9664\u975e // \u53e6\u6709\u8bf4\u660e\uff0c\u8c03\u7528\u8005\u5e94\u8be5\u5047\u8bbe\u6240\u6709\u529f\u80fd\u90fd\u5728Dart\u5d4c\u5165api\u8fd4\u56de\u672c\u5730\u53e5\u67c4\u3002 // \u6301\u4e45\u53e5\u67c4\u5728\u5f53\u524d\u9694\u79bb\u5185\u5206\u914d\u3002\u4ed6\u4eec\u53ef\u7528\u4e8e\u8de8\u8303\u56f4\u5b58\u50a8\u5bf9\u8c61\u3002\u6301\u4e45\u53e5\u67c4\u6709\u5f53\u524d\u9694\u79bb\u7684\u751f\u547d\u5468\u671f\uff0c\u9664\u975e\u5b83\u4eec\u662f\u660e\u786e\u7684 // deallocated\uff08\u8bf7\u53c2\u9605Dart_DeletePersistentHandle\uff09\u3002Dart_Handle\u7c7b\u578b\u8868\u793a\u53e5\u67c4\uff08\u672c\u5730\u548c\u6301\u4e45\uff09\u3002 // Dart_PersistentHandle\u7c7b\u578b\u662fDart_Handle\uff0c\u7528\u4e8e\u8bb0\u5f55\u671f\u671b\u6301\u4e45\u53e5\u67c4\u4f5c\u4e3a\u8c03\u7528\u7684\u53c2\u6570 //\u6216\u6765\u81ea\u8c03\u7528\u7684\u8fd4\u56de\u503c\u662f\u6301\u4e45\u53e5\u67c4\u3002 Dart_Handle SendPlatformMessage ( Dart_Handle window , //window\u5bf9\u8c61\u5728Ioslate\u4e2d\u4fdd\u5b58\u7684\u5bf9\u8c61 const std :: string name , //chinel\u540d\u79f0 Dart_Handle callback , //ui.window.dart\u56de\u8c03\u51fd\u6570 const tonic :: DartByteData data ) { //\u4f7f\u7528\u5173\u8054\u5f15\u7528\u4fdd\u5b58FlutterUI\u5c42\u4f20\u5165\u7684\u6570\u636e UIDartState * dart_state = UIDartState :: Current (); ..... // \u4fdd\u5b58Dart\u5c42\u56de\u8c03\u4fe1\u606f\u5230\u6301\u4e45\u5316\u6570\u636e\u5c42 if ( ! Dart_IsNull ( callback )) { response = fml :: MakeRefCounted PlatformMessageResponseDart ( // Dart\u5bf9Value\u7684\u6301\u4e45\u5316\u5904\u7406\u7684\u7c7b\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f tonic :: DartPersistentValue ( dart_state , callback ), dart_state - GetTaskRunners (). GetUITaskRunner ()); } if ( Dart_IsNull ( data . dart_handle ())) { dart_state - window () - client () - HandlePlatformMessage ( fml :: MakeRefCounted PlatformMessage ( name , response )); } else { dart_state - window () - client () - HandlePlatformMessage ( fml :: MakeRefCounted PlatformMessage () name , std :: vector uint8_t ( buffer , buffer + data . length_in_bytes ()), response )); } .... }","title":"Window.cc\u672c\u5730\u65b9\u6cd5\u5b9e\u73b0"},{"location":"android/flutter/platformplugin/#sendplatformmessage","text":"\u5728 SendPlatformMessage \u65b9\u6cd5\u4e2d\u4e3b\u8981\u505a\u4e863\u4e2a\u529f\u80fd 1.\u83b7\u53d6\u5f53\u524dIsolate\u5bf9\u5e94\u7684 UIDartState ,\u83b7\u53d6\u5bf9\u5e94\u7684Isolate\u4e2d\u7684\u6570\u636e /engine/src/flutter/runtime/dart_isolate.cc 2.\u8c03\u7528 :MakeRefCounted PlatformMessageResponseDart \u4fdd\u5b58DartVM\u865a\u62df\u673a\u4e2d\u7684\u6570\u636e\u548c\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u5c01\u88c5\u548c\u4fdd\u5b58 3.\u8c03\u7528 fml::MakeRefCounted PlatformMessage (name, response) \u521b\u5efa\u4e00\u4e2a\u5728\u5e73\u53f0\u5c42\u4f20\u9012\u7684\u6d88\u606f\u7684\u5c01\u88c5 \u63a5\u4e0b\u6765\uff0c\u8fdb\u4e00\u6b65\u5206\u6790\u4e0a\u9762\u4e09\u4e2a\u6b65\u9aa4\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff1a","title":"SendPlatformMessage\u51fd\u6570"},{"location":"android/flutter/platformplugin/#platformmessageresponsedart","text":"\u8c03\u7528 :MakeRefCounted PlatformMessageResponseDart \u4fdd\u5b58DartVM\u865a\u62df\u673a\u4e2d\u7684\u6570\u636e\u548c\u8fd0\u884c\u73af\u5883\u8fdb\u884c\u5c01\u88c5\u548c\u4fdd\u5b58 PlatformMessageResponseDart \u4e3b\u8981\u529f\u80fd\b\u5c31\u662f\u4fdd\u5b58\bFlutte\brUI \u5c42\u7684\u56de\u8c03\u5bf9\u8c61\uff0c\u548cui\u7ebf\u7a0b\u4efb\u52a1\u7ba1\u7406\u5bf9\u8c61\uff0c\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf tonic::DartPersistentValue callback_; \u5c01\u88c5\u4e86Dart_api\u4e2d\u7684\u53e5\u67c4\u5bf9\u8c61\uff0c\u4e3b\u8981\u662f\u5bf9DartVM\u4e2d\u7684\u5bf9\u8c61 \u5f15\u7528 \u4fdd\u5b58\uff0c\u5173\u8054\u5230\u5f53\u524d\u7684Isolate\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\uff0c fml::RefPtr fml::TaskRunner ui_task_runner_; \u4fdd\u5b58Engine\u4e2d\u7684TaskRunner\u4efb\u52a1\u8fd0\u884c\u5668\u7d22\u5f15\u5bf9\u8c61\u3002 namespace blink { class PlatformMessageResponseDart : public PlatformMessageResponse { // \u786e\u4fdd\u6784\u9020\u51fd\u6570\u79c1\u6709 FML_FRIEND_MAKE_REF_COUNTED ( PlatformMessageResponseDart ); ... tonic :: DartPersistentValue callback_ ; fml :: RefPtr fml :: TaskRunner ui_task_runner_ ; }; } // namespace blink #endif // FLUTTER_LIB_UI_PLATFORM_PLATFORM_MESSAGE_RESPONSE_DART_H_","title":"PlatformMessageResponseDart"},{"location":"android/flutter/platformplugin/#dartpersistentvalue","text":"DartVM\u4e2d\u4f7f\u7528\u6301\u4e45\u5316\u5bf9\u8c61\u6765\u8fdb\u884c\u4fdd\u5b58\uff0c\u5728JNI\u4ee3\u7801\u4e2d\u4f7f\u7528 DartPersistentValue , /engine/src/third_party/tonic/dart_persistent_value.h \u5bf9Isolate\u76f8\u5173\u8054\u7684\u5bf9\u8c61\u8fdb\u884c\u7ba1\u7406\u64cd\u4f5c\uff0c\u5c01\u88c5\u4e86 Dart_Handle \u548c Dart_PersistentHandle \u4e24\u4e2a\u5bf9\u8c61\u662f\u64cd\u4f5cDartVm\u4e2d\u7684\u6570\u636e\u7684\u5f15\u7528 engine/src/third_party/dart/runtime/include/dart_api.h * Dart_Handle: Local and persistent handles --- * * Local handles are allocated within the current scope (see * Dart_EnterScope) and go away when the current scope exits. Unless * otherwise indicated, callers should assume that all functions in * the Dart embedding api return local handles. * * Persistent handles are allocated within the current isolate. They * can be used to store objects across scopes. Persistent handles have * the lifetime of the current isolate unless they are explicitly * deallocated (see Dart_DeletePersistentHandle). * The type Dart_Handle represents a handle (both local and persistent). * The type Dart_PersistentHandle is a Dart_Handle and it is used to * document that a persistent handle is expected as a parameter to a call * or the return value from a call is a persistent handle. #ifndef LIB_TONIC_DART_PERSISTENT_VALUE_H_ #define LIB_TONIC_DART_PERSISTENT_VALUE_H_ #include memory #include third_party/dart/runtime/include/dart_api.h #include tonic/common/macros.h namespace tonic { class DartState ; // DartPersistentValue is a bookkeeping class to help pair calls to // Dart_NewPersistentHandle with Dart_DeletePersistentHandle. Consider using // this class instead of holding a Dart_PersistentHandle directly so that you // don t leak the Dart_PersistentHandle. class DartPersistentValue { std :: weak_ptr DartState dart_state_ ; Dart_PersistentHandle value_ ; TONIC_DISALLOW_COPY_AND_ASSIGN ( DartPersistentValue ); }; } // namespace tonic #endif // LIB_TONIC_DART_PERSISTENT_VALUE_H_","title":"DartPersistentValue"},{"location":"android/flutter/platformplugin/#platformmessageresponsedart_1","text":"\u672c\u5730\u65b9\u6cd5\u901a\u8fc7\u5f53\u524d\u7c7b\u56de\u8c03\u5230DartVM\u865a\u62df\u673a\u4e2d\uff0c\u5f53\u524d\u7684\u7c7b\u662f\u5728Engine\u7684UI\u7ebf\u7a0b\u6267\u884c void PlatformMessageResponseDart :: Complete ( std :: unique_ptr fml :: Mapping data ) { if ( callback_ . is_empty ()) return ; FML_DCHECK ( ! is_complete_ ); is_complete_ = true ; ui_task_runner_ - PostTask ( fml :: MakeCopyable ( [ callback = std :: move ( callback_ ), data = std :: move ( data )]() mutable { std :: shared_ptr tonic :: DartState dart_state = callback . dart_state (). lock (); if ( ! dart_state ) return ; tonic :: DartState :: Scope scope ( dart_state ); Dart_Handle byte_buffer = WrapByteData ( std :: move ( data )); tonic :: DartInvoke ( callback . Release (), { byte_buffer }); })); }","title":"PlatformMessageResponseDart"},{"location":"android/flutter/platformplugin/#dart_invoke","text":"engine/src/third_party/tonic/logging/dart_invoke.cc \u8c03\u7528 DartInvoke \u5168\u5c40\u65b9\u6cd5\u8c03\u7528DartVM,\u771f\u6b63\b\u548c\u3001DartVM\u4ea4\u4e92\u7684\u5730\u65b9 Dart_Handle DartInvoke ( Dart_Handle closure , std :: initializer_list Dart_Handle args ) { int argc = args . size (); Dart_Handle * argv = const_cast Dart_Handle * ( args . begin ()); Dart_Handle handle = Dart_InvokeClosure ( closure , argc , argv ); LogIfError ( handle ); return handle ; }","title":"dart_invoke"},{"location":"android/flutter/platformplugin/#dart_invokeclosure","text":"\u6700\u7ec8\u56de\u8c03\u56deDartVM\u4e2d\u7684FlutterUI\u4e2d\u7684ui.window\u5bf9\u8c61\u7684Callback\u65b9\u6cd5\uff0c\u8fd4\u56de\u5230main.dart\u4e2d /** * Invokes a Closure with the given arguments. * * May generate an unhandled exception error. * * \\return If no error occurs during execution, then the result of * invoking the closure is returned. If an error occurs during * execution, then an error handle is returned. */ DART_EXPORT DART_WARN_UNUSED_RESULT Dart_Handle Dart_InvokeClosure ( Dart_Handle closure , int number_of_arguments , Dart_Handle * arguments ); \u8d70\u5b8c\u4e0a\u9762\u7684\u6d41\u7a0b\uff0c\u5df2\u7ecf\u4fdd\u5b58\u4e86FlutterUI\u5c42\u56de\u8c03\u76f8\u5173\u7684\u53e5\u67c4\uff0c\u4e5f\u5c31\u662fDartVM\u4e2d\u4fdd\u5b58\u7684\u5bf9\u8c61\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5728\u672c\u5730\u4f20\u9012\u7684\u6d88\u606f\u5bf9\u8c61\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u8c03\u7528\u4f20\u9012Message\u5230Platform\u5c42\u7684\u4ee3\u7801\u3002","title":"Dart_InvokeClosure"},{"location":"android/flutter/platformplugin/#platformmessage","text":"\u8c03\u7528 fml::MakeRefCounted PlatformMessage (name, response) \u521b\u5efa\u4e00\u4e2a\u5728\u5e73\u53f0\u5c42\u4f20\u9012\u7684\u6d88\u606f\u7684\u5c01\u88c5 PlatformMessage \u5728\u5e73\u53f0\u4e0a\u4f20\u9012\u7684\u6570\u636e\u901a\u8fc7\b PlatformMessage \u5c01\u88c5\u7edf\u4e00\u4f20\u9012\uff0c\u5305\u62ec\u901a\u9053\u540d\u79f0\uff0c\b\u9700\u8981\u4f20\u9012\u7684\u6570\u636e\uff0cFlutterUI\u5c42\u56de\u8c03\u5bf9\u8c61\u7684\u5173\u8054\u5e94\u7528\u5b9a\u4e494\u4e2a\u53d8\u91cf: 1.channel_ 2.data_ 3.hasData_ 4.response_ namespace blink { class PlatformMessage : public fml :: RefCountedThreadSafe PlatformMessage { FML_FRIEND_REF_COUNTED_THREAD_SAFE ( PlatformMessage ); FML_FRIEND_MAKE_REF_COUNTED ( PlatformMessage ); .... std :: string channel_ ; //\u81ea\u5b9a\u4e49\u7684channel\u540d\u79f0 std :: vector uint8_t data_ ; //\u4f20\u5165\u7684\u6570\u636e(\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u53c2\u6570\u7b49\u4e00\u7cfb\u5217\u7684\u53c2\u6570) bool hasData_ ; //\u5224\u65ad\u662f\u5426\u4f20\u5165\u6570\u636e fml :: RefPtr PlatformMessageResponse response_ ; //FlutterUI\u5c42\u7684\u56de\u8c03\u53e5\u67c4\u5c01\u88c5\u5173\u8054\u7d22\u5f15 }; } // namespace blink #endif // FLUTTER_LIB_UI_PLATFORM_PLATFORM_MESSAGE_H_","title":"PlatformMessage"},{"location":"android/flutter/platformplugin/#_4","text":"engine/src/flutter/lib/ui/window/platform_message_response_dart.cc \uff0c\u6570\u636e\u7684\u5927\u5c0f \b\b// Avoid copying the contents of messages beyond a certain size. const int kMessageCopyThreshold = 1000; \u4e0b\u56fe\u8868\u793a\u5728FlutteUI\u5c42\u8c03\u7528\u5230Android\u5c42\u7684\u6267\u884c\u8def\u5f84\u548c\u76f8\u5173\u7684\u7c7b\u96c6\u6210\u5173\u7cfb: \u6211\u4eec\u53ef\u4ee5\u627e\u5230\u5bf9\u5e94\u7684\u65b9\u6cd5\u662f_SendPlatformMessage\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8c03\u5230 SendPlatformMessage \u8c03\u5230WindowClient\u7684HandlePlatformMessage\u65b9\u6cd5\uff0cWindowClient\u7684\u5177\u4f53\u5b9e\u73b0\u662fRuntimeController\uff0c\u7136\u540eRuntimeController\u4f1a\u5c06\u65b9\u6cd5\u4ea4\u7ed9RuntimeDelegate\u6765\u5b9e\u73b0\uff0c\u800cRuntimeDelegate\u7684\u5177\u4f53\u5b9e\u73b0\u5219\u662fEngine\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u5982\u4e0b\uff1a static constexpr char kAssetChannel [] = flutter/assets ; void Engine :: HandlePlatformMessage ( fml :: RefPtr blink :: PlatformMessage message ) { if ( message - channel () == kAssetChannel ) { HandleAssetPlatformMessage ( std :: move ( message )); } else { delegate_ . OnEngineHandlePlatformMessage ( std :: move ( message )); } } \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u9996\u5148\u68c0\u67e5\u662f\u5426\u662fFlutter\u83b7\u53d6\u5e73\u53f0\u8d44\u6e90\u7684\uff0c\u5982\u679c\u662f\u5c31\u8f6c\u5230\u83b7\u53d6\u8d44\u6e90\u7684\u903b\u8f91\u91cc\u53bb\uff0c\u5426\u5219\u8d70Delegate\u7684\u903b\u8f91\uff0c\u8fd9\u91ccDelegate\u662f\u7684\u5b9e\u73b0\u7c7b\u662fShell\u3002 // |shell::Engine::Delegate| void Shell :: OnEngineHandlePlatformMessage ( fml :: RefPtr blink :: PlatformMessage message ) { FML_DCHECK ( is_setup_ ); FML_DCHECK ( task_runners_ . GetUITaskRunner () - RunsTasksOnCurrentThread ()); task_runners_ . GetPlatformTaskRunner () - PostTask ( [ view = platform_view_ - GetWeakPtr (), message = std :: move ( message )]() { if ( view ) { view - HandlePlatformMessage ( std :: move ( message )); } }); } \u53ef\u4ee5\u770b\u5230\uff0c\u5728Shell\u7c7b\u91cc\uff0c\u4f1a\u5728PlatformTaskRunner\u4e2d\u6dfb\u52a0\u4e00\u4e2atask\uff0c\u8fd9\u65f6\u5019\u6267\u884c\u4f1a\u5207\u6362\u5230Platform task\uff0c\u4e4b\u524d\u90fd\u662f\u5728UI task\u4e2d\u6267\u884c\u7684\u3002PlatformView\u7684HandlePlatformMessage\u662f\u4e00\u4e2a\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u770bPlatformViewAndroid\u4e2d\u5bf9\u5176\u7684\u5b9e\u73b0\u3002 // |shell::PlatformView| void PlatformViewAndroid :: HandlePlatformMessage ( fml :: RefPtr blink :: PlatformMessage message ) { JNIEnv * env = fml :: jni :: AttachCurrentThread (); fml :: jni :: ScopedJavaLocalRef jobject view = java_object_ . get ( env ); // ... auto java_channel = fml :: jni :: StringToJavaString ( env , message - channel ()); // (1) if ( message - hasData ()) { fml :: jni :: ScopedJavaLocalRef jbyteArray message_array ( env , env - NewByteArray ( message - data (). size ())); env - SetByteArrayRegion ( message_array . obj (), 0 , message - data (). size (), reinterpret_cast const jbyte * ( message - data (). data ())); message = nullptr ; // This call can re-enter in InvokePlatformMessageXxxResponseCallback. FlutterViewHandlePlatformMessage ( env , view . obj (), java_channel . obj (), message_array . obj (), response_id ); // (2) } else { message = nullptr ; // This call can re-enter in InvokePlatformMessageXxxResponseCallback. FlutterViewHandlePlatformMessage ( env , view . obj (), java_channel . obj (), nullptr , response_id ); // (3) } } \u8fd9\u91cc\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5df2\u7ecf\u5f00\u59cb\u8fdb\u884cJNI\u76f8\u5173\u7684\u64cd\u4f5c\u4e86\u3002\u6ce8\u91ca(1)\u5904\u4ecemessage\u7ed3\u6784\u4e2d\uff0c\u62ff\u5230ChannelName\uff0c\u7136\u540e(2)\u548c(3)\u7684\u533a\u522b\u5c31\u662f\u4e00\u4e2a\u5e26\u53c2\u6570\uff0c\u4e00\u4e2a\u4e0d\u5e26\u53c2\u6570\uff0c\u901a\u8fc7FlutterViewHandlePlatformMessage\u53d1\u8d77\u8c03\u7528\u3002 static jmethodID g_handle_platform_message_method = nullptr ; void FlutterViewHandlePlatformMessage ( JNIEnv * env , jobject obj , jstring channel , jobject message , jint responseId ) { env - CallVoidMethod ( obj , g_handle_platform_message_method , channel , message , responseId ); // (1) FML_CHECK ( CheckException ( env )); } // ... bool PlatformViewAndroid :: Register ( JNIEnv * env ) { // ... g_flutter_native_view_class = new fml :: jni :: ScopedJavaGlobalRef jclass ( env , env - FindClass ( io/flutter/view/FlutterNativeView )); // (2) // ... g_handle_platform_message_method = env - GetMethodID ( g_flutter_native_view_class - obj (), handlePlatformMessage , (Ljava/lang/String;[BI)V ); // (3) // ... } \u4ece(1)\u5904\u53ef\u4ee5\u770b\u5230\uff0c\u5f00\u59cb\u901a\u8fc7JNI\u8c03Java\u65b9\u6cd5\uff0c\u6ce8\u91ca(2)\u548c(3)\u5904\uff0c\u6307\u5b9a\u4e86Java\u7c7b\u548c\u65b9\u6cd5\u3002\u8c03\u7528\u4e86FlutterNativeView\u7684handlePlatformMessage\u65b9\u6cd5\uff0c\u770b\u8fd9\u91cc\u7684\u6e90\u7801\uff1a private void handlePlatformMessage ( final String channel , byte [] message , final int replyId ) { this . assertAttached (); BinaryMessageHandler handler = ( BinaryMessageHandler ) this . mMessageHandlers . get ( channel ); // (1) if ( handler != null ) { try { ByteBuffer buffer = message == null ? null : ByteBuffer . wrap ( message ); handler . onMessage ( buffer , new BinaryReply () { // ... }); } catch ( Exception var6 ) { // ... } } else { Log . e ( FlutterNativeView , Uncaught exception in binary message listener , var6 ); nativeInvokePlatformMessageEmptyResponseCallback ( this . mNativePlatformView , replyId ); } } \u770b\u6ce8\u91ca(1)\u5904\uff0c\u5c31\u662f\u4ece\u4e4b\u524d\u5b58\u5165\u7684map\u4e2d\u53d6\u51fa\u76f8\u5e94\u7684handler\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5219\u56de\u8c03Native\u8868\u793a\u5931\u8d25\u3002\u5426\u5219\u8c03\u7528BinaryMessageHandler\u7684onMessage\u65b9\u6cd5\uff0c\u5c06\u65b9\u6cd5\u4fe1\u606f\u4f20\u9012\u8fc7\u53bb\u3002 \u7136\u540e\u5c31\u56de\u5230\u4e86\u6700\u5f00\u59cb\u7684\u903b\u8f91\uff0c\u901a\u8fc7IncomingMethodCallHandler\u5904\u7406message\u6570\u636e\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u901a\u8fc7nativeInvokePlatformMessageResponseCallback\u56de\u8c03\u7ed9Flutter\u3002 \u603b\u7ed3\u5206\u6790 \u8ddf\u5b8cMethodChannel\u7684\u6e90\u7801\uff0c\u4f1a\u53d1\u73b0\u6574\u4e2a\u901a\u4fe1\u673a\u5236\u8fd8\u633a\u7b80\u5355\u7684\uff0c\u5148\u53bb\u4e0d\u53bb\u7406\u89e3Codec\u7684\u8bdd\uff0c\u7b49\u4e8e\u5c31\u662f\u5c06dart\u7684\u53d8\u91cf\uff0c\u4f20\u5230dart Native\uff0c\u7136\u540e\u4ea4\u5230java Native\uff0c \u518d\u4f20\u5230java\u3002\u7136\u540e\u76f8\u53cd\u7684\u8def\u5f84\uff0c\u518d\u4ecejava\u5230dart\u3002 \u7136\u540e\u518d\u53bb\u770bBasicMessageChannel\u5c31\u662f\u6ca1\u6709MethodCall\u8fd9\u4e2a\u7ed3\u6784\u7684\uff0c\u5176\u4ed6\u7684\u4e5f\u662f\u8d70\u7684BinaryMessages.send\u65b9\u6cd5\u3002\u7136\u540e\u5728Android\u7aef\uff0c\u6ca1\u6709IncomingMethodCallHandler\u8fd9\u4e2a\u7c7b\uff0c\u76f4\u63a5\u5c31\u662fBinaryMessageHandler\u3002\u6240\u4ee5\u4e86\u89e3\u4e86MethodChannel\uff0cBasicMessageChannel\u539f\u7406\u81ea\u7136\u5c31\u61c2\u4e86\u3002\uff08\u53ef\u4ee5\u8bf4MethodChannel\u5c31\u662f\u501f\u52a9BasicMessageChannel\u5b9e\u73b0\u7684\uff09 \u540c\u6837\u7684EventChannel\u5219\u662f\u57fa\u4e8eMethodChannel\u6765\u5b9e\u73b0\u7684\uff0c\u53ea\u662f\u4e24\u7aef\u7684handler\u4f1a\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u8fd9\u4e2a\u5012\u662f\u4e0e\u901a\u4fe1\u6ca1\u6709\u591a\u5927\u5173\u7cfb\u4e86\uff0c\u4e0d\u8fc7\u8bbe\u8ba1\u7684\u4e5f\u5f88\u7b80\u5355\uff0c\u6bd4\u8f83\u6709\u610f\u601d\u3002\u4e4b\u540e\u53e6\u8d77\u4e00\u6587\u7ec6\u8868\u3002","title":"\u4f20\u8f93\u6570\u636e\u7684\u5927\u5c0f\u9650\u5236"},{"location":"android/flutter/platformplugin/#_5","text":"\u539f\u5b50\u6027\u64cd\u4f5c: include /usr/include/c++/v1/atomic /Users/cuco/engine/src/flutter/fml/memory/ref_counted_internal.h \u63d0\u4f9b\u7684\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u7c7b: static_cast (this); vector","title":"\u77e5\u8bc6\u70b9:"},{"location":"android/flutter/platformplugin/#_6","text":"Flutter\u4e0eNative\u901a\u4fe1 - PlatformChannel\u6e90\u7801\u5206\u6790 Flutter\u5b98\u7f51","title":"\u53c2\u8003\u8fde\u63a5:"},{"location":"android/flutter/profile/","text":"\u6027\u80fd\u4f18\u5316 chromium devtools devtools \u7f51\u7ad9\u6027\u80fd\u4f18\u5316","title":"\u6027\u80fd\u4f18\u5316"},{"location":"android/flutter/reviewCode/","text":"How to Do Code Reviews Like a Human","title":"reviewCode"},{"location":"android/flutter_project/flutterApp/","text":"\u5b66\u4e60Flutter\u57fa\u672c\u77e5\u8bc6 Dart\u96c6\u6210\u77e5\u8bc6 AndroidStudio\u3001IOS \u4e00\u5b9a\u7684Android\u3001IOS\u57fa\u7840 \u7c7b\uff1a \u5c01\u88c5\u3001\u57fa\u7840\u3001\u591a\u6001 \u62bd\u8c61 \u6784\u9020\u65b9\u6cd5 \u51fd\u6570\u3001\u65b9\u6cd5: 1.\u5165\u53e3\u65b9\u6cd5 2.\u533f\u540d\u51fd\u6570 3.\u9759\u6001\u65b9\u6cd5 4.\u653e\u56de\u503c 5.\u53c2\u6570\uff1a\u53ef\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570 \u6cdb\u578b\uff1a 1.\u6cdb\u578b\u7c7b 2.\u5728\u6784\u9020\u65b9\u6cd5\u4e0a\u4f7f\u7528\u6cdb\u578b 3.\u6cdb\u578b\u65b9\u6cd5 \u5f02\u6b65\uff1a 1.async await 2.Future 3.Stream \u5b66\u4e60\u8d44\u6599: https://www.dartlang.org https://dart.goodev.org blog \u4e3b\u9898 1.StreamFutur\u4f7f\u7528 2.FutureBuild\u4f7f\u7528 3.\u5e26\u5237\u65b0\u7684Future\u4f7f\u7528 \u5982\u4f55\u4f7f\u7528Flutter\u5305\u548c\u63d2\u4ef6 pub.dartlang.org Flutter \u5e38\u7528Widget ThemeData Decoration (decoration.dart) BoxDecoration (box_decoration.dart) FlutterLogoDecoration (flutter_logo.dart) ShapeDecoration (shape_decoration.dart) _CupertinoEdgeShadowDecoration (route.dart) UnderlineTabIndicator (tab_indicator.dart) MaterialApp Scaffold Appbar bottomnavigatorBar RefreshIndicator images TextField PageView \u5e03\u5c40\u76f8\u5173 Container RenderObjectWidget 1.SingleChildRenderObjectWidget 1.Opacity 2.ClipOval 3.ClipRect 4.PhysicalModel 5.Align:center 6.Padding 7.SizeBox 8.FractionallySizedBox 2.MultiChildRenderObjectWidget 1.Stack 2.Flex 1.Column 2.Row 3.Wrap 4.Flow 5.FractionallySizedBox ParentDataWidget 1.Positional 2.Flexible- Expanded Image \u652f\u6301\u7684\u56fe\u7247\u7c7b\u578b 1.JPEG\u3001PNG\u3001GIF\u3001Animated\u3001WebP\u3001Animator\u3001BMP\u3001WBMP 2.\u5982\u4f55\u52a0\u8f7d\u56fe\u7247\u3001\u5982\u4f55\u5904\u7406\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u7247 \u5165\u95e8 \u5165\u95e8\u5b9e\u6218 \u8fdb\u4ef7\u63d0\u5347 \u8fdb\u9636\u5b9e\u6218 \u8fdb\u9636\u62d3\u5c55 Flutter\u5f00\u53d1\u6280\u80fd \u7406\u89e3\u6574\u4e2aFlutter\u9879\u76ee\u5f00\u53d1\u6d41\u7a0b \u89c4\u8303\u7684\u4ee3\u7801\u7f16\u5199\u4e0e\u5de5\u7a0b\u5316\u5c01\u88c5\u6280\u5de7 \u5927\u4e2d\u578b\u9879\u76ee\u5f00\u53d1\u7684\u6280\u5de7 \u5f00\u53d1\u73af\u5883\u548c\u5f00\u53d1\u73af\u5883\u642d\u5efa \u7f51\u7edc\u7f16\u7a0b \u6570\u636e\u5e93\u5b58\u50a8 JSON\u89e3\u6790\u548c\u590d\u6742\u6a21\u578b\u8f6c\u6362 Future\u6a21\u5757 FutureBuilder Flutter\u548cNative\u6df7\u5408\u5f00\u53d1 \u5f00\u53d1\u5305\u548c\u63d2\u4ef6 \u6298\u53e0\u5c4f\u9002\u914d\u4e0e\u517c\u5bb9\u95ee\u9898 \u6253\u5305\u53d1\u5e03flutter\u5e94\u7528 Flutter\u5347\u7ea7\u548c\u9002\u914d\u6307\u5357 \u52a8\u753b\uff1a 1.AnimatedWidget 2.AnimatedBuilder 3.Animation 4.AnimationController 5.Tween 6.CurvedAnimation 7.Hero\u52a8\u753b NativeModule Flutter Android\u6df7\u5408\u5f00\u53d1 Flutter IOS\u6df7\u5408\u5f00\u53d1 Flutter H5\u6df7\u5408\u5f00\u53d1 \u901a\u4fe1\uff1a BasicMessageChannel MethodChannel EventChannel \u5168\u9762\u5c4f\u3001\u6298\u53e0\u5c4f\uff1a 1.android\u9002\u914d 2.IOS\u9002\u914d \u6253\u5305\uff1a android\u6253\u5305 IOS\u6253\u5305 Flutter\u7248\u672c\uff1a Beta\u3001dev\u3001master\u3001stable flutter doctor\u547d\u4ee4 app\u4e2d\u4f7f\u7528\u5230\u7684\u6280\u672f\u68b3\u7406 Scaffold PageView http Navigator NotificationListener PageRouterBuilder MaterialPageRoute \u81ea\u5b9a\u4e49\u63a7\u4ef6 Native modules Ai\u667a\u80fd\u8bed\u97f3 Channel\u901a\u9053 \u6df7\u5408\u5f00\u53d1 \u63d2\u4ef6 \u5b98\u65b9\u7ec4\u4ef6 ListView PageView ExpansionTile\u53ef\u6298\u53e0\u7684\u5217\u8868 \u56fe\u7247\uff1a 1.\u52a0\u8f7dflutter\u9759\u6001\u56fe\u7247 2.Native\u56fe\u7247 3.\u7f51\u7edc\u56fe\u7247 4.\u7f13\u5b58\u56fe\u7247 5.Icon 6.PlaceHolder \u9700\u6c42\u5206\u6790\u3001\u6280\u672f\u5206\u89e3 \u9996\u9875 1.Banner 2.\u53ef\u914d\u7f6e\u5165\u53e3 3.\u7f51\u683c\u5361\u7247 4.\u8d44\u6e90\u4f4d\u8fd0\u8425 5.\u6eda\u52a8\u6e10\u53d8\u7684\u7279\u6548 \u641c\u7d22\u6a21\u5757 \u5b9e\u65f6\u641c\u7d22 \u81ea\u5b9a\u4e49\u641c\u7d22\u6846 \u517c\u5bb9\u8bed\u97f3 \u5bcc\u6587\u672c\u5c55\u793a Ai\u8bed\u97f3\u6a21\u5757 1.\u6df7\u5408\u5f00\u53d1 2.Native SDK 3.Flutter Plugin 4.Channel\u901a\u9053 \u65c5\u62cd\u6a21\u5757 1.\u7011\u5e03\u6d41\u5e03\u5c40 2.tab\u6ed1\u52a8\u5207\u6362 3.\u652f\u6301\u4e0b\u62c9\u5237\u65b0 4.\u652f\u6301\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a \u6211\u7684\u6a21\u5757 H5\u6df7\u5408\u5f00\u53d1 Flutter-H5\u901a\u4fe1 \u81ea\u5b9a\u4e49WebView \u5de5\u5177 1.AndroidStudio 2.Dart Devtools 3.\u7eafFlutter\u9879\u76ee\u8c03\u8bd5 4.\u6df7\u5408\u9879\u76ee\u8c03\u8bd5 \u63d2\u4ef6\uff1a Flutter\u63d2\u4ef6(\u548cAndroid\u3001IOS\u901a\u4fe1\u7684\u63d2\u4ef6) Dart\u63d2\u4ef6(\u7eafDart\u63d2\u4ef6) \u73af\u5883\u95ee\u9898\u3001\u7248\u672c\u95ee\u9898\u3001\u5de5\u5177\u95ee\u9898 Flutter\u73af\u5883\u53d8\u91cf Stable\u3001dev\u3001Beta\u3001master flutter doctor\u68c0\u67e5\u73af\u5883\u662f\u5426ok Flutter\u5b66\u4e60\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u8bed\u8a00 \u5b66\u4e60Flutter\u8be5\u638c\u63e1\u54ea\u4e9b\u57fa\u7840 \u5982\u4f55\u5feb\u901f\u642d\u5efa\u548c\u8fd0\u884c\u4e00\u4e2aFlutter\u9879\u76ee \u5982\u4f55\u4f7f\u7528Flutter\u5305\u548c\u63d2\u4ef6 statelesswidget\u4e0e\u57fa\u7840\u7ec4\u4ef6 statewidget\u4e0e\u57fa\u7840\u7ec4\u4ef6 \u5982\u4f55\u8fdb\u884cflutter\u5e03\u5c40\u5f00\u53d1 \u5982\u4f55\u4f7f\u7528flutter\u8def\u7531\u548c\u5bfc\u822a \u5982\u4f55\u68c0\u67e5\u7528\u6237\u624b\u52bf\u4ee5\u53ca\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6 \u5982\u4f55\u4f7f\u7528\u548c\u5bfc\u5165flutter\u8d44\u6e90\u6587\u4ef6 \u5982\u4f55\u6253\u5f00\u7b2c\u4e09\u65b9\u5e94\u7528\u62cd\u7167App \u5e38\u7528\u5de5\u5177 Json\u89e3\u6790 \u63a5\u53e3\u6570\u636e www.json.cn Json to Dart \u4f7f\u7528\u7f51\u7edc\u56fe\u7247 \u5982\u4f55\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247 \u5982\u4f55\u52a0\u8f7d\u9759\u6001\u56fe\u7247 \u5982\u4f55\u52a0\u8f7d\u672c\u5730\u56fe\u7247 \u5982\u4f55\u8bbe\u7f6ePlaceholder \u5982\u4f55\u8bbe\u7f6e\u7f13\u5b58 \u5982\u4f55\u52a0\u8f7dICON Animation \u5728flutter\u4e2d\u6709\u54ea\u4e9b\u52a8\u753b \u5982\u4f55\u4f7f\u7528\u52a8\u753b\u5e93\u7684\u57fa\u7840\u7c7b\u7ed9widget\u6dfb\u52a0\u52a8\u753b \u5982\u4f55\u4e3a\u52a8\u753b\u6dfb\u52a0\u76d1\u542c \u8be5\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528AnimatedWidget\u4e0eAnimatedBuilder \u5982\u4f55\u4f7f\u7528Hero\u52a8\u753b \u542f\u52a8\u767d\u5c4f\u95ee\u9898\u548c\u542f\u52a8\u5c4f\u5f00\u53d1 Flutter\u5168\u5c4f\u9002\u914d\u6307\u5357 Flutter\u6298\u53e0\u5c4f\u9002\u914d\u6307\u5357 \u5e38\u7528\u63d2\u4ef6 \u7f51\u7edc\u7f13\u5b58\u63d2\u4ef6 \u56fe\u7247\u5904\u7406\u63d2\u4ef6 \u52a0\u8f7d\u672c\u5730\u56fe\u7247 Material\u56fe\u6807 Flutter\u5b89\u88c5 AndroidStudio Flutter\u955c\u50cf\u5730\u5740 \u6750\u6599\u8bbe\u8ba1 Flutter\u6559\u7a0b Flutter\u5b9e\u6218\u9879\u76ee","title":"Flutter\u9879\u76ee\u7ecf\u9a8c"},{"location":"android/flutter_project/flutterApp/#flutter","text":"Dart\u96c6\u6210\u77e5\u8bc6 AndroidStudio\u3001IOS \u4e00\u5b9a\u7684Android\u3001IOS\u57fa\u7840 \u7c7b\uff1a \u5c01\u88c5\u3001\u57fa\u7840\u3001\u591a\u6001 \u62bd\u8c61 \u6784\u9020\u65b9\u6cd5 \u51fd\u6570\u3001\u65b9\u6cd5: 1.\u5165\u53e3\u65b9\u6cd5 2.\u533f\u540d\u51fd\u6570 3.\u9759\u6001\u65b9\u6cd5 4.\u653e\u56de\u503c 5.\u53c2\u6570\uff1a\u53ef\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570 \u6cdb\u578b\uff1a 1.\u6cdb\u578b\u7c7b 2.\u5728\u6784\u9020\u65b9\u6cd5\u4e0a\u4f7f\u7528\u6cdb\u578b 3.\u6cdb\u578b\u65b9\u6cd5 \u5f02\u6b65\uff1a 1.async await 2.Future 3.Stream \u5b66\u4e60\u8d44\u6599: https://www.dartlang.org https://dart.goodev.org","title":"\u5b66\u4e60Flutter\u57fa\u672c\u77e5\u8bc6"},{"location":"android/flutter_project/flutterApp/#blog","text":"1.StreamFutur\u4f7f\u7528 2.FutureBuild\u4f7f\u7528 3.\u5e26\u5237\u65b0\u7684Future\u4f7f\u7528","title":"blog \u4e3b\u9898"},{"location":"android/flutter_project/flutterApp/#flutter_1","text":"pub.dartlang.org","title":"\u5982\u4f55\u4f7f\u7528Flutter\u5305\u548c\u63d2\u4ef6"},{"location":"android/flutter_project/flutterApp/#flutter-widget","text":"ThemeData Decoration (decoration.dart) BoxDecoration (box_decoration.dart) FlutterLogoDecoration (flutter_logo.dart) ShapeDecoration (shape_decoration.dart) _CupertinoEdgeShadowDecoration (route.dart) UnderlineTabIndicator (tab_indicator.dart) MaterialApp Scaffold Appbar bottomnavigatorBar RefreshIndicator images TextField PageView","title":"Flutter \u5e38\u7528Widget"},{"location":"android/flutter_project/flutterApp/#_1","text":"Container RenderObjectWidget 1.SingleChildRenderObjectWidget 1.Opacity 2.ClipOval 3.ClipRect 4.PhysicalModel 5.Align:center 6.Padding 7.SizeBox 8.FractionallySizedBox 2.MultiChildRenderObjectWidget 1.Stack 2.Flex 1.Column 2.Row 3.Wrap 4.Flow 5.FractionallySizedBox ParentDataWidget 1.Positional 2.Flexible- Expanded","title":"\u5e03\u5c40\u76f8\u5173"},{"location":"android/flutter_project/flutterApp/#image","text":"1.JPEG\u3001PNG\u3001GIF\u3001Animated\u3001WebP\u3001Animator\u3001BMP\u3001WBMP 2.\u5982\u4f55\u52a0\u8f7d\u56fe\u7247\u3001\u5982\u4f55\u5904\u7406\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u7247","title":"Image \u652f\u6301\u7684\u56fe\u7247\u7c7b\u578b"},{"location":"android/flutter_project/flutterApp/#_2","text":"","title":"\u5165\u95e8"},{"location":"android/flutter_project/flutterApp/#_3","text":"","title":"\u5165\u95e8\u5b9e\u6218"},{"location":"android/flutter_project/flutterApp/#_4","text":"","title":"\u8fdb\u4ef7\u63d0\u5347"},{"location":"android/flutter_project/flutterApp/#_5","text":"","title":"\u8fdb\u9636\u5b9e\u6218"},{"location":"android/flutter_project/flutterApp/#_6","text":"Flutter\u5f00\u53d1\u6280\u80fd \u7406\u89e3\u6574\u4e2aFlutter\u9879\u76ee\u5f00\u53d1\u6d41\u7a0b \u89c4\u8303\u7684\u4ee3\u7801\u7f16\u5199\u4e0e\u5de5\u7a0b\u5316\u5c01\u88c5\u6280\u5de7 \u5927\u4e2d\u578b\u9879\u76ee\u5f00\u53d1\u7684\u6280\u5de7 \u5f00\u53d1\u73af\u5883\u548c\u5f00\u53d1\u73af\u5883\u642d\u5efa \u7f51\u7edc\u7f16\u7a0b \u6570\u636e\u5e93\u5b58\u50a8 JSON\u89e3\u6790\u548c\u590d\u6742\u6a21\u578b\u8f6c\u6362 Future\u6a21\u5757 FutureBuilder Flutter\u548cNative\u6df7\u5408\u5f00\u53d1 \u5f00\u53d1\u5305\u548c\u63d2\u4ef6 \u6298\u53e0\u5c4f\u9002\u914d\u4e0e\u517c\u5bb9\u95ee\u9898 \u6253\u5305\u53d1\u5e03flutter\u5e94\u7528 Flutter\u5347\u7ea7\u548c\u9002\u914d\u6307\u5357 \u52a8\u753b\uff1a 1.AnimatedWidget 2.AnimatedBuilder 3.Animation 4.AnimationController 5.Tween 6.CurvedAnimation 7.Hero\u52a8\u753b NativeModule Flutter Android\u6df7\u5408\u5f00\u53d1 Flutter IOS\u6df7\u5408\u5f00\u53d1 Flutter H5\u6df7\u5408\u5f00\u53d1 \u901a\u4fe1\uff1a BasicMessageChannel MethodChannel EventChannel \u5168\u9762\u5c4f\u3001\u6298\u53e0\u5c4f\uff1a 1.android\u9002\u914d 2.IOS\u9002\u914d \u6253\u5305\uff1a android\u6253\u5305 IOS\u6253\u5305 Flutter\u7248\u672c\uff1a Beta\u3001dev\u3001master\u3001stable flutter doctor\u547d\u4ee4","title":"\u8fdb\u9636\u62d3\u5c55"},{"location":"android/flutter_project/flutterApp/#app","text":"Scaffold PageView http Navigator NotificationListener PageRouterBuilder MaterialPageRoute \u81ea\u5b9a\u4e49\u63a7\u4ef6 Native modules Ai\u667a\u80fd\u8bed\u97f3 Channel\u901a\u9053 \u6df7\u5408\u5f00\u53d1 \u63d2\u4ef6 \u5b98\u65b9\u7ec4\u4ef6 ListView PageView ExpansionTile\u53ef\u6298\u53e0\u7684\u5217\u8868 \u56fe\u7247\uff1a 1.\u52a0\u8f7dflutter\u9759\u6001\u56fe\u7247 2.Native\u56fe\u7247 3.\u7f51\u7edc\u56fe\u7247 4.\u7f13\u5b58\u56fe\u7247 5.Icon 6.PlaceHolder","title":"app\u4e2d\u4f7f\u7528\u5230\u7684\u6280\u672f\u68b3\u7406"},{"location":"android/flutter_project/flutterApp/#_7","text":"\u9996\u9875 1.Banner 2.\u53ef\u914d\u7f6e\u5165\u53e3 3.\u7f51\u683c\u5361\u7247 4.\u8d44\u6e90\u4f4d\u8fd0\u8425 5.\u6eda\u52a8\u6e10\u53d8\u7684\u7279\u6548 \u641c\u7d22\u6a21\u5757 \u5b9e\u65f6\u641c\u7d22 \u81ea\u5b9a\u4e49\u641c\u7d22\u6846 \u517c\u5bb9\u8bed\u97f3 \u5bcc\u6587\u672c\u5c55\u793a Ai\u8bed\u97f3\u6a21\u5757 1.\u6df7\u5408\u5f00\u53d1 2.Native SDK 3.Flutter Plugin 4.Channel\u901a\u9053 \u65c5\u62cd\u6a21\u5757 1.\u7011\u5e03\u6d41\u5e03\u5c40 2.tab\u6ed1\u52a8\u5207\u6362 3.\u652f\u6301\u4e0b\u62c9\u5237\u65b0 4.\u652f\u6301\u4e0a\u62c9\u52a0\u8f7d\u66f4\u591a \u6211\u7684\u6a21\u5757 H5\u6df7\u5408\u5f00\u53d1 Flutter-H5\u901a\u4fe1 \u81ea\u5b9a\u4e49WebView","title":"\u9700\u6c42\u5206\u6790\u3001\u6280\u672f\u5206\u89e3"},{"location":"android/flutter_project/flutterApp/#_8","text":"1.AndroidStudio 2.Dart Devtools 3.\u7eafFlutter\u9879\u76ee\u8c03\u8bd5 4.\u6df7\u5408\u9879\u76ee\u8c03\u8bd5 \u63d2\u4ef6\uff1a Flutter\u63d2\u4ef6(\u548cAndroid\u3001IOS\u901a\u4fe1\u7684\u63d2\u4ef6) Dart\u63d2\u4ef6(\u7eafDart\u63d2\u4ef6)","title":"\u5de5\u5177"},{"location":"android/flutter_project/flutterApp/#_9","text":"Flutter\u73af\u5883\u53d8\u91cf Stable\u3001dev\u3001Beta\u3001master flutter doctor\u68c0\u67e5\u73af\u5883\u662f\u5426ok","title":"\u73af\u5883\u95ee\u9898\u3001\u7248\u672c\u95ee\u9898\u3001\u5de5\u5177\u95ee\u9898"},{"location":"android/flutter_project/flutterApp/#flutter_2","text":"\u5b66\u4e60Flutter\u8be5\u638c\u63e1\u54ea\u4e9b\u57fa\u7840 \u5982\u4f55\u5feb\u901f\u642d\u5efa\u548c\u8fd0\u884c\u4e00\u4e2aFlutter\u9879\u76ee \u5982\u4f55\u4f7f\u7528Flutter\u5305\u548c\u63d2\u4ef6 statelesswidget\u4e0e\u57fa\u7840\u7ec4\u4ef6 statewidget\u4e0e\u57fa\u7840\u7ec4\u4ef6 \u5982\u4f55\u8fdb\u884cflutter\u5e03\u5c40\u5f00\u53d1 \u5982\u4f55\u4f7f\u7528flutter\u8def\u7531\u548c\u5bfc\u822a \u5982\u4f55\u68c0\u67e5\u7528\u6237\u624b\u52bf\u4ee5\u53ca\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6 \u5982\u4f55\u4f7f\u7528\u548c\u5bfc\u5165flutter\u8d44\u6e90\u6587\u4ef6 \u5982\u4f55\u6253\u5f00\u7b2c\u4e09\u65b9\u5e94\u7528\u62cd\u7167App","title":"Flutter\u5b66\u4e60\u9700\u8981\u638c\u63e1\u54ea\u4e9b\u8bed\u8a00"},{"location":"android/flutter_project/flutterApp/#_10","text":"Json\u89e3\u6790 \u63a5\u53e3\u6570\u636e www.json.cn Json to Dart \u4f7f\u7528\u7f51\u7edc\u56fe\u7247 \u5982\u4f55\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247 \u5982\u4f55\u52a0\u8f7d\u9759\u6001\u56fe\u7247 \u5982\u4f55\u52a0\u8f7d\u672c\u5730\u56fe\u7247 \u5982\u4f55\u8bbe\u7f6ePlaceholder \u5982\u4f55\u8bbe\u7f6e\u7f13\u5b58 \u5982\u4f55\u52a0\u8f7dICON Animation \u5728flutter\u4e2d\u6709\u54ea\u4e9b\u52a8\u753b \u5982\u4f55\u4f7f\u7528\u52a8\u753b\u5e93\u7684\u57fa\u7840\u7c7b\u7ed9widget\u6dfb\u52a0\u52a8\u753b \u5982\u4f55\u4e3a\u52a8\u753b\u6dfb\u52a0\u76d1\u542c \u8be5\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528AnimatedWidget\u4e0eAnimatedBuilder \u5982\u4f55\u4f7f\u7528Hero\u52a8\u753b \u542f\u52a8\u767d\u5c4f\u95ee\u9898\u548c\u542f\u52a8\u5c4f\u5f00\u53d1 Flutter\u5168\u5c4f\u9002\u914d\u6307\u5357 Flutter\u6298\u53e0\u5c4f\u9002\u914d\u6307\u5357","title":"\u5e38\u7528\u5de5\u5177"},{"location":"android/flutter_project/flutterApp/#_11","text":"\u7f51\u7edc\u7f13\u5b58\u63d2\u4ef6 \u56fe\u7247\u5904\u7406\u63d2\u4ef6 \u52a0\u8f7d\u672c\u5730\u56fe\u7247 Material\u56fe\u6807 Flutter\u5b89\u88c5 AndroidStudio Flutter\u955c\u50cf\u5730\u5740 \u6750\u6599\u8bbe\u8ba1 Flutter\u6559\u7a0b Flutter\u5b9e\u6218\u9879\u76ee","title":"\u5e38\u7528\u63d2\u4ef6"},{"location":"android/flutterdev/FlutterWidgetinit/","text":"Flutter Widget\u521d\u59cb\u5316 \u5f15\u64ce\u7ed8\u5236\u539f\u7406 \u5728\u5206\u6790FlutterUI\u6846\u67b6\u4e4b\u524d\uff0c\u5148\u6765\u5206\u6790\u4e00\u4e0bFlutter\u5f15\u64ce\u662f\u600e\u4e48\u7528\u6700\u5c11\u6b65\u9aa4\u628a\u4e00\u5e27\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a\u7684 \u5927\u8c61\u88c5\u8fdb\u51b0\u7bb1\u91cc 1.Flutter\u542f\u52a8\u65f6\u8c03\u7528scheduleFrame()\u4f1a\u89e6\u53d1ui.window.onBeginFrame()\u56de\u8c03\u65b9\u6cd5\u8c03\u7528 2.sceneBuilder \u751f\u6210\u573a\u666f 3.\u6570\u636e\u56de\u4f20\u5230\u6e32\u67d3\u5f15\u64ce:ui.window.render(scene); 4.\u624b\u52bf\u56de\u8c03\u4e8b\u4ef6:ui.window.onPointerDataPacket = handlePointerDataPacket;\uff0c\u901a\u8fc7\u624b\u52bf\u4e8b\u4ef6\u6765\u89e6\u53d1\u4e0d\u65ad\u7684\u8c03\u7528\u7b2c\u4e09\u6b65\u9aa4\u4e2d\u7684\u65b9\u6cd5 5.\u5237\u65b0\u4e00\u5e27:ui.window.scheduleFrame(); \u901a\u8fc7\u4e0a\u9762\u7684\u4e09\u4e2a\u6b65\u9aa4\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u5e27\u4e00\u5e27\u7684\u7ed8\u5236\u7684\u5c4f\u5e55\u4e0a\uff0c\u4e3b\u8981\u7684\u4e00\u4e2a\u5185\u5bb9\u662f\u5982\u4f55\u7ba1\u7406 Scene \u5bf9\u8c61\u7684\u6570\u636e\u53d8\u5316\u5904\u7406\u903b\u8f91\uff0c\u4e0d\u65ad\u7684\u66f4\u65b0\u6570\u636e\u56de\u4f20\u5230\u6e32\u67d3\u5f15\u64ce\u8fdb\u884c\u8ba1\u7b97 \u5b98\u65b9Demo \u5b98\u65b9Demo \u6e90\u7801 ui . Picture paint ( ui . Rect paintBounds ) { final ui . PictureRecorder recorder = ui . PictureRecorder (); final ui . Canvas canvas = ui . Canvas ( recorder , paintBounds ); final ui . Size size = paintBounds . size ; canvas . drawCircle ( size . center ( ui . Offset . zero ), size . shortestSide * 0.45 , ui . Paint ().. color = color , ); return recorder . endRecording (); } ui . Scene composite ( ui . Picture picture , ui . Rect paintBounds ) { final double devicePixelRatio = ui . window . devicePixelRatio ; final Float64List deviceTransform = Float64List ( 16 ) ..[ 0 ] = devicePixelRatio ..[ 5 ] = devicePixelRatio ..[ 10 ] = 1.0 ..[ 15 ] = 1.0 ; final ui . SceneBuilder sceneBuilder = ui . SceneBuilder () .. pushTransform ( deviceTransform ) .. addPicture ( ui . Offset . zero , picture ) .. pop (); return sceneBuilder . build (); } void beginFrame ( Duration timeStamp ) { final ui . Rect paintBounds = ui . Offset . zero ( ui . window . physicalSize / ui . window . devicePixelRatio ); final ui . Picture picture = paint ( paintBounds ); final ui . Scene scene = composite ( picture , paintBounds ); ui . window . render ( scene ); } void handlePointerDataPacket ( ui . PointerDataPacket packet ) { for ( ui . PointerData datum in packet . data ) { if ( datum . change == ui . PointerChange . down ) { color = const ui . Color ( 0xFF0000FF ); ui . window . scheduleFrame (); } else if ( datum . change == ui . PointerChange . up ) { color = const ui . Color ( 0xFF00FF00 ); ui . window . scheduleFrame (); } } } void main () { color = const ui . Color ( 0xFF00FF00 ); // The engine calls onBeginFrame whenever it wants us to produce a frame. ui . window . onBeginFrame = beginFrame ; // The engine calls onPointerDataPacket whenever it had updated information // about the pointers directed at our app. ui . window . onPointerDataPacket = handlePointerDataPacket ; // Here we kick off the whole process by asking the engine to schedule a new // frame. The engine will eventually call onBeginFrame when it is time for us // to actually produce the frame. ui . window . scheduleFrame (); } Flutter\u67b6\u6784 \u6838\u5fc3\u95ee\u9898\u70b9 \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u77e5\u9053Flutter\u5f15\u64ce\u5bf9UI\u5c42\u7684\u7ed8\u5236\uff0c\u6700\u5173\u5fc3\u7684\u662f: 1.\u8f93\u51fa\u7684\u6e32\u67d3\u5bf9\u8c61 2.\u6e32\u67d3\u5bf9\u8c61\u5982\u4f55\u6539\u53d8 3.\u5982\u4f55\u7ba1\u7406\u6e32\u67d3\u5bf9\u8c61\u7684\u751f\u6210 4.\u5982\u4f55\u7ba1\u7406\u6811\u4e2d\u5bf9\u8c61\u7684\u53d8\u5316 \u8f93\u51fa\u7684\u6e32\u67d3\u5bf9\u8c61 Flutter \u5c42UI\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u662f\u5728\u5165\u53e3\u6587\u4ef6\u4e2d\u8c03\u7528 runApp \u628a\u5e94\u7528Widget\u548c\u7cfb\u7edf\u7684\u6e32\u67d3\u5f15\u64ce\u8fdb\u884c\u5173\u8054 void runApp ( Widget app ) { WidgetsFlutterBinding . ensureInitialized () .. attachRootWidget ( app ) .. scheduleWarmUpFrame (); } \u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86Window\u4e8b\u4ef6\u662f\u5982\u4f55\u5206\u89e3\u5230\u4e0d\u540c\u7684\"BaseBind\"\u5bf9\u8c61\u7684\u5b50\u7c7b\u4e0a\uff0c\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c\u7ee7\u7eed\u5206\u6790\u7528\u6237\u5c42\u7684widget\u5982\u4f55\u548c\u7cfb\u7edf\u6210\u7684Window\u6846\u67b6\u8fdb\u884c\u5173\u8054\u7684\u3002 attachRootWidget \u5b8c\u6210\u4e86RenderObject\u548cElement\u8fdb\u884c\u7ed1\u5b9a\uff0c\u540c\u65f6\u8c03\u7528 BuilderOwer \u6765\u5bf9\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u533a\u57df\u548c\u90a3\u4e9b\u9700\u8981\u8fdb\u884c\u91cd\u65b0\u7ed8\u5236\u7684 Widget \u8ba1\u7b97\u3002 scheduleWarmUpFrame \u6240\u6709\u7684\u6570\u636e\u51c6\u5907\u597d\u4e86\u4e4b\u540e\uff0c\u9700\u8981\u628a\u4e00\u5e27\u7684\u6570\u636e\u4f20\u9012\u5230\u7cfb\u7edfFlutterEngine\u4e2d\u7ee7\u7eed\u6e32\u67d3\u51fa\u6765\u53d1\u5c55\u5c4f\u5e55\u4e0a\u3002 pipeline \u662f\u5bf9\u5df2\u7ecf\u8ba1\u7b97\u597d\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u63d0\u4ea4\u5230FluuterEngine\u4e0a\u8fdb\u884c\u6e32\u67d3 \u4ee5\u4e0a\u903b\u8f91\u4e3b\u8981\u505a\u4e86\u4e24\u4e2a\u64cd\u4f5c: \u751f\u6210\u9759\u6001\u6570\u636e\u7684\u5173\u8054\u5bf9\u8c61:(\u53ea\u662f\u4fdd\u5b58\u4e00\u4e0b\u903b\u8f91\u6570\u636e) 1:RenderView:\u5bf9\u5e94\u7cfb\u7edf\u5c42\u6e32\u67d3\u6846\u67b6\u7684Surface\u5bf9\u8c61\u7684\u6570\u636e\u62bd\u8c61 2.Element: Widget\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0cWidget\u4fdd\u5b58\u4e86\u63a7\u5236\u81ea\u8eab\u7684\u6570\u636e\u7ed3\u6784\u7c7b\u578b\uff0cElement\u5bf9\u8c61\u662f\u5bf9\u662fWidget\u7684\u4e00\u4e2a\u62bd\u8c61\u8868\u793a\uff0c\u7528\u5728\u544a\u8bc9BuilderOwer\u5982\u4f55\u914d\u7f6eWidget\uff0cElement\u7684\u751f\u547d\u5468\u671f_ElementLifecycle {initial,active,inactive,defunct,},\u8c03\u7528`attachRenderObject`\u628a\u6e32\u67d3\u5bf9\u8c61\u6302\u8f7d\u5230\u6e32\u67d3\u6811\u4e2d 3.RenderObject:\u901a\u8fc7\u5b50\u7c7b`RenderBox`\u5bf9Element\u8fdb\u884c\u7b1b\u5361\u5c14\u6216\u8005\u6781\u5750\u6807\u8fdb\u884c\u903b\u8f91\u5e03\u5c40\u7684\u5750\u6807\u7cfb\uff0c\u63d0\u4f9b\u7ed8\u56fe\u5c42\u7684Layer 4.BuildContext:\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u6237\u5728Widget\u8bbf\u95ee`RenderObject`\u7684\u63a5\u53e3\u7c7b 5.RenderObjectToWidgetAdapter\uff1a`RootRenderObjectElement`\u548c`RenderView`\u7ba1\u7406\u5728\u4e00\u8d77\uff0c\u6839`RootRenderObjectElement`\u6301\u6709`RenderView`\u5bf9\u8c61\uff0c\u90a3\u4e48\u5728Element\u548cRenderObject\u5bf9\u8c61\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u6574\u4f53\uff0c\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0\u6570\u636e 6.ParentData\uff1a\u7528\u6765\u5728`RenderObject`\u4e2d\u5bf9\u4fdd\u5b58\u6570\u636e\uff0cWidget\u662f\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\uff0c\u5728Widget\u6539\u53d8\u7684\u65f6\u5019\uff0c\u6307\u5b9aUI\u8fdb\u884c\u66f4\u65b0\uff0c\u628a\u6570\u636e\u4fdd\u5b58\u5728`RenderObject`\u4e2d\uff0crebuild\u4e4b\u540e`RenderObject`\u5bf9\u8c61\u8fd8\u5b58\u5728\uff0c\u9664\u975e\u4fdd\u5b58\u6570\u636e\u7684\u7236\u8282\u70b9\u4e0d\u79fb\u9664\u6784\u5efa\u6811\u4e2d\u3002 7.RenderObject- gt;Constraints\u63cf\u8ff0\u5b50wiget\u80fd\u591f\u8bfb\u53d6\u7684\u6570\u636e\uff0c\u4e0d\u63cf\u8ff0\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u548c\u6781\u5750\u6807 2.\u52a8\u6001\u6570\u636e: 1.buildOwner:\u4ece`RenderView`\u5f00\u59cb\u8ba1\u7b97\u6574\u4e2aUI\u6811\u4e2d\u663e\u793a\u7684\u662f\u90a3\u4e00\u90e8\u5206\u5df2\u7ecf\u662f\u54ea\u4e00\u90e8\u5206\u662f\u9700\u8981\u66f4\u65b0\uff0c\u4fdd\u5b58\u76f8\u5173\u7684`List lt;Element gt;`\u5bf9\u8c61 2.[PipelineOwner](../flutterdev/FlutterWidgetinit/#pipeline):\u6bcf\u4e00\u4e2a`Element`\u4e2d\u90fd\u4f1a\u6709\u4e00\u4e2a`RenderObject`\uff0c\u4e3b\u8981\u4f7f\u7528\u6765\u5904\u7406\u6e32\u67d3\u5f15\u64ce\u5728FlutterUI\u5c42\u7684\u903b\u8f91\u6570\u636e,\u4e0a\u4e00\u6b65\u5df2\u7ecf\u628a\u9700\u8981\u66f4\u65b0\u7684\u6570\u636e\u6dfb\u52a0\u5230`List lt;RenderObject gt;` 3.\u8c03\u7528`RenderView`\u7684`compositeFrame`\u65b9\u6cd5\u628a\u573a\u666f\u6570\u636e\u4f20\u9012\u5230\u7cfb\u7edf\u6e32\u67d3\u5f15\u64ce RenderObject\u548cElement\u5173\u7cfb \u901a\u8fc7\u8c03\u7528runApp\u4e2d attachRootWidget \u628a Element \u548c RenderObject \u8fdb\u884c\u5173\u8054 RenderObjectToWidgetAdapter \u662f Widget \u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u4e3b\u8981\u5b9e\u73b0\u4e24\u4e2a\u65b9\u6cd5: 1.`createElement` 2.`createRenderObject` createElement \u4e3b\u8981\u7684\u529f\u80fd\u662f\u5bf9 Widget \u8fdb\u884c\u7ba1\u7406\uff0c Element \u662fWidget\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61,Elment\u6709\u4e0d\u540c\u7684\u5b50\u7c7b\u578b createRenderObject \u4e3b\u8981\u529f\u80fd\u662f\u4ea7\u751f RenderObject \u7684\u5bf9\u8c61\uff0c\u4e3b\u8981\u529f\u80fd\u662f\u5b8c\u6210\u5750\u6807\u7cfb\u7edf\u7684\u6784\u5efa\uff0c\u5bf9 Element \u63d0\u4f9b\u914d\u7f6e\u53c2\u6570\uff0c\u5b9e\u73b0\u7c7b\u662f RenderBox \u6bcf\u4e00\u4e2a Element \u5bf9\u5e94\u4e00\u4e2a RenderObject \u5bf9\u8c61\uff0c RenderObject \u4f5c\u4e3a Element \u7684\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u4f7f\u7528 RenderObjectToWidgetAdapter \u7684\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u51b2\u90a3\u91cc\u6765\u7684\uff1f renderView : WidgetsBinding \u7ee7\u627f RendererBinding\uff0c\u5728 RendererBinding \u7684 initInstances \u65b9\u6cd5\u4e2d\u521d\u59cb\u5316 renderView ,\u7cfb\u7edf surface ,\u6210\u5458\u53d8\u91cf RenderBox \u662f\u6574\u4e2a\u7ed8\u56fe\u7684 Root \u9876\u5c42 RootRenderObjectElement ,\u53ea\u7528\u9876\u5c42\u5bf9\u8c61\u4f7f\u7528 BuildOwner RenderObjectToWidgetAdapter \u7c7b\u4f5c\u4e3aFlutter\u7cfb\u7edf\u9876\u5c42\u7684UI\uff0c\u4f5c\u4e3a\u7528\u6237UI\u548cFlutter\u6846\u67b6\u5c42\u7684\u8054\u5408\u70b9 \u5728 WidgetsBinding \u4e2d\u8c03\u7528 attachRootWidget \u8fdb\u884c\u6e32\u67d3\u5bf9\u8c61\u548cElement\u5bf9\u8c61\u8fdb\u884c\u5173\u8054, RenderView \u6210\u4e3a RootRenderObjectElement \u7684\u6210\u5458\u53d8\u91cf,\u6e32\u67d3\u5bf9\u8c61\u548cElement\u5bf9\u8c61\u8fdb\u884c\u5173\u8054\uff0c\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0UI attachRootWidget \u5b8c\u6210\u4e09\u4ef6\u4e8b: RenderObjectToWidgetAdapter: \u5173\u8054renderView\u548crootWidget \u5173\u8054PipelineOwner \u5173\u8054BuildOwner void attachRootWidget ( Widget rootWidget ) { _renderViewElement = RenderObjectToWidgetAdapter RenderBox ( container: renderView , debugShortDescription: [root] , child: rootWidget , ). attachToRenderTree ( buildOwner , renderViewElement ); } renderView\u5bf9\u8c61 renderView\u5bf9\u8c61\u662f\u5728 RendererBinding \u4e2d\u8c03\u7528 initRenderView \u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c RenderView \u96c6\u6210 RenderObject \u5b9e\u73b0 RenderObjectWithChildMixin RenderBox:\u662f\u771f\u6b63\u7684\u6e32\u67d3\u5bf9\u8c61 RenderObject: 1.\u4e3b\u8981\u662f\u4fdd\u5b58RenderBox\u7684\u6570\u636e\u5b9e\u9645\u6570\u636e\u548cchild\u7684Constraints\u5173\u7cfb\uff0c\u540c\u65f6\u4fdd\u5b58\u5bf9RenderBox\u64cd\u4f5c\u7684\u63a5\u53e3 2.\u4fdd\u5b58\u548cChild\u76f8\u5173\u5173\u8054\u7684\u6570\u636eParentData /// Creates a [RenderView] object to be the root of the /// [RenderObject] rendering tree, and initializes it so that it /// will be rendered when the engine is next ready to display a /// frame. /// /// Called automatically when the binding is created. void initRenderView () { assert ( renderView == null ); renderView = RenderView ( configuration: createViewConfiguration (), window: window ); renderView . scheduleInitialFrame (); } \u901a\u8fc7\u4e0a\u9762\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u5df2\u7ecf\u628a\u6e32\u67d3\u5bf9\u8c61\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u5e76\u4e14\u5173\u8054\u81ea\u5df1\u5230PipelineOwner\u5bf9\u8c61\u4e2d\uff0c\u8be6\u7ec6\u7684\u4fe1\u606f\u5728\u540e\u7eed\u4ecb\u7ecd(owner._nodesNeedingLayout.add(this);) BuildOwner\uff1a widgets\u6846\u67b6\u7684manager\u7c7b\u3002\u6b64\u7c7b\u8ddf\u8e2a\u9700\u8981\u91cd\u5efa\u7684\u5c0f\u90e8\u4ef6\uff0c\u5e76\u5904\u7406\u5176\u4ed6\u4efb\u52a1\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5e94\u7528\u4e8e\u5c0f\u90e8\u4ef6\u6811\uff0c\u4f8b\u5982\u7ba1\u7406\u975e\u6d3b\u52a8\u5143\u7d20\u5217\u51fa\u6811\u5e76\u5728\u5fc5\u8981\u65f6\u89e6\u53d1\u201c\u91cd\u65b0\u7ec4\u5408\u201d\u547d\u4ee4\u8c03\u8bd5\u65f6\u70ed\u91cd\u65b0\u52a0\u8f7d\u3002main build owner\u901a\u5e38\u7531[widgetsbinding]\u62e5\u6709\uff0c\u5e76\u4e14\u662f\u4e0ebuild/layout/paint\u7ba1\u9053\u3002\u53ef\u4ee5\u751f\u6210\u5176\u4ed6\u751f\u6210\u6240\u6709\u8005\u6765\u7ba1\u7406\u5c4f\u5e55\u5916\u5c0f\u90e8\u4ef6\u6811\u3002\u82e5\u8981\u5c06\u751f\u6210\u6240\u6709\u8005\u5206\u914d\u7ed9\u6811\uff0c\u8bf7\u4f7f\u7528\u7684\u6839\u5143\u7d20\u4e0a\u7684[rootrenderobjectelement.assignowner]\u65b9\u6cd5\u3002 BuildOwner: \u4e3b\u8981\u662f\u67e5\u627ePipelineOwner\u4e2d\u8bb0\u5f55\u7684\u90a3\u4e9b\u9700\u8981\u6539\u53d8\u7684\u6e32\u67d3\u5bf9\u8c61\u8fdb\u884c\u6e32\u67d3\uff0c \u67e5\u627e\u6709\u54ea\u4e9b Element \u662f\u6c61\u67d3\u4e86\uff0c\u9700\u8981\u8fdb\u884c\u4ece\u65b0\u5e03\u5c40\u548c\u7ed8\u5236\u7684 \u8fdb\u884c\u63d0\u53d6======================= reassemble\uff1a \u4f7f\u6839\u5728\u7ed9\u5b9a[element]\u7684\u6574\u4e2a\u5b50\u6811\u5b8c\u5168\u91cd\u5efa\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5df2\u66f4\u6539\u5e76\u6b63\u5728\u70ed\u91cd\u65b0\u52a0\u8f7d\uff0c\u4ee5\u4f7f\u5c0f\u90e8\u4ef6\u6811\u83b7\u53d6\u4efb\u4f55\u66f4\u6539\u4e86\u5b9e\u73b0\u3002\u8fd9\u5f88\u6602\u8d35\uff0c\u9664\u975e\u5728\u5f00\u53d1\u671f\u95f4\uff0c\u5426\u5219\u4e0d\u5e94\u8be5\u8c03\u7528\u5b83\u3002 RendererBinding\u7684initInstances\u65b9\u6cd5\u4e2d\u8c03\u7528 drawFrame buildScope\uff1a \u67e5\u627e\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u533a\u57df\u7684Element,\u786e\u5b9a\u54ea\u4e9b\u5143\u7d20\u662f\u8981\u8fdb\u884c\u5904\u7406\uff0c\u753b\u5e03\u662f\u4e00\u4e2a\u6ca1\u6709\u8fb9\u754c\u7684\u533a\u57df\uff0c\u6240\u4ee5\u5728\u5728\u7ed8\u5236\u4e4b\u524d\u662f\u9700\u8981\u8fdb\u884c\u786e\u8ba4\u54ea\u4e9b\u533a\u57df\u662f\u9700\u8981\u8fdb\u884c\u5904\u7406\u7684 void drawFrame () { ..... try { if ( renderViewElement != null ) ///\u5f00\u59cb\u8ba1\u7b97\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u5e27\u7684\u8303\u56f4 buildOwner . buildScope ( renderViewElement ); super . drawFrame (); buildOwner . finalizeTree (); } finally { \u3002\u3002\u3002\u3002\u3002\u3002 } ....... } \u521d\u59cb\u5316 Widget \u4e0a\u9762\u4ecb\u7ecd\u4e86\u521d\u59cb\u5316\u7cfb\u7edf\u6846\u67b6\u6210\u7684\u6e32\u67d3\u5bf9\u8c61 renderView ,\u548c\u8bb0\u5f55Widget\u53d8\u5316\u4fe1\u606f\u7684 PipelineOwner ,\u771f\u6b63\u6267\u884c\u6d4b\u91cf\u3001\u5e03\u5c40\u3001\u7ed8\u5236\u3001\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u5e76\u4e14\u5df2\u7ecf\u521d\u59cb\u5316\u4e0d\u540c\u7684BaseBind\u5bf9\u8c61\u7684\u5b50\u7c7b\uff0c\u5206\u89e3\u4e86Window\u5bf9\u8c61\u7684\u4e8b\u4ef6 RenderObjectToWidgetAdapter.attachToRenderTree \u5bf9Element\u8fdb\u884c\u521b\u5efa \u5c06\u8fd9\u4e2aWidget\u8fdb\u884c\u586b\u5145\uff0c\u5e76\u5b9e\u9645\u5c06\u7ed3\u679c[renderobject]\u8bbe\u7f6e\u4e3a[\u5bb9\u5668]\u7684\u5b50\u7ea7\u3002\u5982\u679celement\u4e3a\u7a7a\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u5426\u5219\uff0c\u7ed9\u5b9a\u5143\u7d20\u5c06\u6709\u4e00\u4e2a\u8ba1\u5212\u597d\u7684\u66f4\u65b0\u4ee5\u5207\u6362\u5230\u6b64\u5c0f\u90e8\u4ef6\u3002\u7531[runapp]\u7528\u4e8e\u5f15\u5bfc\u5e94\u7528\u7a0b\u5e8f\u3002 Only one [buildScope] can be active at a time. RenderObjectToWidgetElement T attachToRenderTree ( BuildOwner owner , [ RenderObjectToWidgetElement T element ]) { if ( element == null ) { owner . lockState (() { element = createElement (); assert ( element != null ); element . assignOwner ( owner ); }); owner . buildScope ( element , () { element . mount ( null , null ); }); } else { element . _newWidget = this ; element . markNeedsBuild (); } return element ; } @ override String toStringShort () = debugShortDescription ?? super . toStringShort (); } \u6e32\u67d3RenderObject\u5230RenderObjectToWidgetElement \u5728\u4e0a\u4e00\u6b65\u4e2d\u8c03\u7528 mount \u65b9\u6cd5\u8fdb\u884c\u9759\u6001\u6570\u636e\u7684\u5904\u7406\u64cd\u4f5c \u6838\u5fc3\u6b65\u9aa4:\u4e3b\u8981\u662f\u5728\u6811\u4e2d\u4f7f\u7528\uff0c\u904d\u5386\u6574\u68f5\u6811\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u5904\u7406 \u521d\u59cb\u5316Element \u5728\u7ed1\u5b9a\u6e32\u67d3\u5bf9\u8c61\u548c\u8ddfElement\u4e4b\u540e\u8fdb\u884c\uff0c\u5f00\u59cb\u521d\u59cb\u5316Element\u5bf9\u8c61 RenderObjectToWidgetElement T attachToRenderTree ( BuildOwner owner , [ RenderObjectToWidgetElement T element ]) { if ( element == null ) { ///\u9876\u7ea7\u539f\u751f\u51fa\u624b\u52a8\u8c03\u7528createment(); RenderObjectToWidgetElement owner . lockState (() { element = createElement (); assert ( element != null ); element . assignOwner ( owner ); }); owner . buildScope ( element , () { element . mount ( null , null ); ///\u5f00\u59cb\u904d\u5386\u6811\u5904\u7406\u6bcf\u4e00\u4e2aWidget }); } else { element . _newWidget = this ; element . markNeedsBuild (); } return element ; } \u662f\u5426\u521b\u5efa\u8282\u70b9\u7684\u6838\u5fc3\u7b97\u6cd5: /// The following table summarizes the above: /// /// | | **newWidget == null** | **newWidget != null** | /// | :-----------------: | :--------------------- | :---------------------- | /// | **child == null** | Returns null. | Returns new [Element]. | /// | **child != null** | Old child is removed, returns null. | Old child updated if possible, returns child or new [Element]. | Element updateChild ( Element child , Widget newWidget , dynamic newSlot ) { assert (() { if ( newWidget != null newWidget . key is GlobalKey ) { final GlobalKey key = newWidget . key ; key . _debugReserveFor ( this ); } return true ; }()); if ( newWidget == null ) { if ( child != null ) deactivateChild ( child ); return null ; } if ( child != null ) { if ( child . widget == newWidget ) { if ( child . slot != newSlot ) updateSlotForChild ( child , newSlot ); return child ; } if ( Widget . canUpdate ( child . widget , newWidget )) { if ( child . slot != newSlot ) updateSlotForChild ( child , newSlot ); child . update ( newWidget ); assert ( child . widget == newWidget ); assert (() { child . owner . _debugElementWasRebuilt ( child ); return true ; }()); return child ; } deactivateChild ( child ); assert ( child . _parent == null ); } return inflateWidget ( newWidget , newSlot ); } inflateWidget \u771f\u6b63\u521b\u5efaElement\u7684\u5730\u65b9 //\u4e3a\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u521b\u5efa\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u4e3a\u7ed9\u5b9a\u69fd\u4e2d\u7684\u5143\u7d20\u3002\u6b64\u65b9\u6cd5\u901a\u5e38\u7531[updatechild]\u8c03\u7528\uff0c\u4f46\u53ef\u4ee5\u8c03\u7528\u76f4\u63a5\u901a\u8fc7\u9700\u8981\u5bf9\u521b\u5efa\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u63a7\u5236\u7684\u5b50\u7c7b\u5143\u7d20\u3002 \u5982\u679c\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u6709\u4e00\u4e2a\u5168\u5c40\u952e\u5e76\u4e14\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\u5177\u6709\u5177\u6709\u8be5\u5168\u5c40\u952e\u7684\u5c0f\u90e8\u4ef6\uff0c\u6b64\u51fd\u6570\u5c06\u91cd\u7528\u8be5\u5143\u7d20\u53ef\u80fd\u4ece\u6811\u4e0a\u7684\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u5ac1\u63a5\u6216\u91cd\u65b0\u6fc0\u6d3b(it from the list of inactive elements\uff09\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u5143\u7d20\u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u5143\u7d20\u5df2\u7ecf\u88ab\u88c5\u5165\u5c06\u5904\u4e8e\u6d3b\u52a8\u751f\u547d\u5468\u671f\u72b6\u6001\u3002\u6ce8:\u4ee5\u4e0a\u662f\u5bf9UI\u67b6\u6784\u4e2d\u4f7f\u7528\u5230\u7684\u903b\u8f91\u7ee7\u7eed\u5206\u6790\uff0c\u4e3b\u8981\u662f\u628a\u6574\u4e2aUI\u6846\u67b6\u7684\u6570\u636e\u8868\u793a\u548c\u5173\u8054\u8fdb\u884c\u62c6\u5206\u548c\u7ec4\u5408\uff0c\u80fd\u591f\u63d0\u4f9bUI\u53d8\u5316\u662f\u6570\u636e\u7684\u8ddf\u8e2a\u548c\u8bb0\u5f55(\u9759\u6001\u6570\u636e\u4fdd\u5b58\u903b\u8f91) final Element newChild = newWidget.createElement(); \u904d\u5386\u6811\uff0c\u4e3a\u6bcf\u4e00\u4e2aWidget\u751f\u6210\u5b9e\u4f8b\u5bf9\u8c61 Element ,\u8c03\u7528 mount \u65b9\u6cd5\u628a Elment \u6dfb\u52a0\u5230\u6811\u4e2d @ protected Element inflateWidget ( Widget newWidget , dynamic newSlot ) { assert ( newWidget != null ); final Key key = newWidget . key ; if ( key is GlobalKey ) { final Element newChild = _retakeInactiveElement ( key , newWidget ); if ( newChild != null ) { assert ( newChild . _parent == null ); assert (() { _debugCheckForCycles ( newChild ); return true ; }()); newChild . _activateWithParent ( this , newSlot ); final Element updatedChild = updateChild ( newChild , newWidget , newSlot ); assert ( newChild == updatedChild ); return updatedChild ; } } final Element newChild = newWidget . createElement (); assert (() { _debugCheckForCycles ( newChild ); return true ; }()); newChild . mount ( this , newSlot ); assert ( newChild . _debugLifecycleState == _ElementLifecycle . active ); return newChild ; } \u7ed8\u5236\u7b2c\u4e00\u5e27 \u89e6\u53d1\u7b2c\u4e00\u5e27\u5c3d\u5feb\u6267\u884c\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u5f15\u64ce\u8bf7\u6c42\u5e27\u4ee5\u54cd\u5e94\u7cfb\u7edf\u201cvsync\u201d\u4fe1\u53f7\u3002\u8fd9\u5728\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u671f\u95f4\u4f7f\u7528\uff0c\u4ee5\u4fbf\u7b2c\u4e00\u4e2a\u5e27\uff08\u5373\u53ef\u80fd\u5f88\u8d35\uff09\u5f97\u5230\u4e00\u4e9b\u989d\u5916\u7684\u6beb\u79d2\u6765\u8fd0\u884c\u3002\u9501\u5b9a\u4e8b\u4ef6\u8c03\u5ea6\uff0c\u76f4\u5230\u8c03\u5ea6\u7684\u5e27\u5b8c\u6210\u3002 \u5982\u679c\u5df2\u7ecf\u7528[scheduleFrame]\u8ba1\u5212\u4e86\u4e00\u4e2a\u5e27\uff0c\u6216\u8005[scheduleForcedFrame]\uff0c\u6b64\u8c03\u7528\u53ef\u80fd\u4f1a\u5ef6\u8fdf\u8be5\u5e27\u3002 \u5982\u679c\u4efb\u4f55\u8ba1\u5212\u7684\u5e27\u5df2\u7ecf\u5f00\u59cb\uff0c\u6216\u8005\u5982\u679c\u53e6\u4e00\u4e2a\u5df2\u7ecf\u8c03\u7528\u4e86[schedulewarmupframe]\uff0c\u6b64\u8c03\u7528\u5c06\u88ab\u5ffd\u7565\u3002prefer[scheduleframe]\u5728\u6b63\u5e38\u64cd\u4f5c\u4e2d\u66f4\u65b0\u663e\u793a\u3002 \u8c03\u7528 scheduleFrame \u89e6\u53d1window\u5bf9\u8c61\u5904\u7406\u7b2c\u4e00\u5e27\u6570\u636e window.scheduleFrame(); ,\u5c06\u4f1a\u89e6\u53d1 window.onBeginFrame ,\u5f00\u59cb\u6267\u884c\uff0c SchedulerBinding \u8d1f\u8d23\u5904\u7406window\u5bf9\u8c61\u7684frame\u56de\u8c03\u4e8b\u4ef6 void scheduleWarmUpFrame () { if ( _warmUpFrame || schedulerPhase != SchedulerPhase . idle ) return ; _warmUpFrame = true ; Timeline . startSync ( Warm-up frame ); final bool hadScheduledFrame = _hasScheduledFrame ; Timer . run (() { assert ( _warmUpFrame ); handleBeginFrame ( null ); }); Timer . run (() { assert ( _warmUpFrame ); handleDrawFrame (); resetEpoch (); _warmUpFrame = false ; if ( hadScheduledFrame ) scheduleFrame (); }); lockEvents (() async { await endOfFrame ; Timeline . finishSync (); }); } \u5728 RendererBinding \u521d\u59cb\u5316 initInstances \u65f6\uff0c addPersistentFrameCallback \u6dfb\u52a0\u5904\u7406\u4e00\u5e27\u7684\u56de\u8c03\u51fd\u6570 _handlePersistentFrameCallback ,\u4e00\u4e0b\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u4e0a\u4e00\u6b65\u4e2d\u8c03\u7528 scheduleFrame() \u89e6\u53d1 window.onDrawFrame \u56de\u8c03\u51fd\u6570\u6267\u884c void _handlePersistentFrameCallback ( Duration timeStamp ) { drawFrame (); } Pipeline pipeline \u7ba1\u9053\u6240\u6709\u8005\u7ba1\u7406\u5448\u73b0\u7ba1\u9053\u3002\u7ba1\u9053\u6240\u6709\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u9a71\u52a8\u5448\u73b0\u7ba1\u9053\u5e76\u5b58\u50a8\u5df2\u8bf7\u6c42\u8bbf\u95ee\u7684\u6e32\u67d3\u5bf9\u8c61\u7684\u72b6\u6001\u5728\u7ba1\u9053\u7684\u6bcf\u4e2a\u9636\u6bb5\u3002\u8981\u5237\u65b0\u7ba1\u9053\uff0c\u8bf7\u8c03\u7528\u4ee5\u4e0b\u547d\u4ee4\u51fd\u6570\u987a\u5e8f\uff1a 1.[flushlayout]\u66f4\u65b0\u4efb\u4f55\u9700\u8981\u8ba1\u7b97\u5176\u5e03\u5c40\u3002\u5728\u6b64\u9636\u6bb5\u4e2d\uff0c\u6bcf\u4e2a\u6e32\u67d3\u7684\u5927\u5c0f\u548c\u4f4d\u7f6e\u8ba1\u7b97\u5bf9\u8c61\u3002\u6e32\u67d3\u5bf9\u8c61\u53ef\u80fd\u4f1a\u5f04\u810f\u5176\u7ed8\u753b\u6216\u6b64\u9636\u6bb5\u7684\u5408\u6210\u72b6\u6001\u3002 2.[flushcompositingbits]\u66f4\u65b0\u4efb\u4f55\u5df2\u810f\u7684\u6e32\u67d3\u5bf9\u8c61\u5408\u6210\u4f4d\u3002\u5728\u6b64\u9636\u6bb5\u4e2d\uff0c\u6bcf\u4e2a\u6e32\u67d3\u5bf9\u8c61\u90fd\u5c06\u5b66\u4e60\u5b83\u7684\u4efb\u4f55\u5b50\u7ea7\u90fd\u9700\u8981\u5408\u6210\u3002\u6b64\u4fe1\u606f\u7528\u4e8e\u9009\u62e9\u5982\u4f55\u5b9e\u73b0\u89c6\u89c9\u6548\u679c\u65f6\u7684\u7ed8\u5236\u9636\u6bb5\uff0c\u4f8b\u5982\u526a\u8f91\u3002\u5982\u679c\u6e32\u67d3\u5bf9\u8c61\u6709\u5408\u6210\u5b50\u5bf9\u8c61\uff0c\u5219\u9700\u8981\u4f7f\u7528[\u5c42]\u521b\u5efa\u526a\u8f91\u4ee5\u4fbf\u526a\u8f91\u5e94\u7528\u4e8ecomposited child\uff08\u5c06\u88ab\u7ed8\u5236\u5230\u5b83\u81ea\u5df1\u7684[layer]\uff09\u3002 3.[flushpaint]\u8bbf\u95ee\u4efb\u4f55\u9700\u8981\u7ed8\u5236\u7684\u6e32\u67d3\u5bf9\u8c61\u3002\u5728\u6b64\u671f\u95f4\u9636\u6bb5\uff0c\u6e32\u67d3\u5bf9\u8c61\u6709\u673a\u4f1a\u5c06\u7ed8\u5236\u547d\u4ee4\u8bb0\u5f55\u5230[PictureLayer]\u548c\u6784\u9020\u5176\u4ed6\u5408\u6210\u7684[Layer]s\u3002 4\u3002\u6700\u540e\uff0c\u5982\u679c\u542f\u7528\u4e86\u8bed\u4e49\uff0c[flushssemantics]\u5c06\u7f16\u8bd1\u5448\u73b0\u5bf9\u8c61\u7684\u8bed\u4e49\u3002\u6b64\u8bed\u4e49\u4fe1\u606f\u7531\u63d0\u9ad8\u6e32\u67d3\u6811\u53ef\u8bbf\u95ee\u6027\u7684\u8f85\u52a9\u6280\u672f\u3002[renderBinding]\u4fdd\u5b58\u6e32\u67d3\u5bf9\u8c61\u7684\u7ba1\u9053\u6240\u6709\u8005\u5728\u5c4f\u5e55\u4e0a\u53ef\u89c1\u3002\u60a8\u53ef\u4ee5\u521b\u5efa\u5176\u4ed6\u7ba1\u9053\u6240\u6709\u8005\u6765\u7ba1\u7406off-screen\u5bf9\u8c61\uff0c\u5b83\u53ef\u4ee5\u72ec\u7acb\u4e8e\u5c4f\u5e55\u4e0a\u7684\u6e32\u67d3\u5bf9\u8c61\u3002 pipeline\u662f\u5728\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u8c03\u7528\u7684\uff1f\uff1f void runApp ( Widget app ) { WidgetsFlutterBinding . ensureInitialized () .. attachRootWidget ( app ) .. scheduleWarmUpFrame (); } \u6b64\u65b9\u6cd5\u7531[handleDrawFrame]\u8c03\u7528\uff0c\u5b83\u672c\u8eab\u88ab\u8c03\u7528\u5728\u5e03\u5c40\u548c\u7ed8\u5236\u6846\u67b6\u65f6\u7531\u5f15\u64ce\u81ea\u52a8\u6267\u884c\u3002\u6bcf\u4e2a\u5e27\u7531\u4ee5\u4e0b\u9636\u6bb5\u7ec4\u6210\uff1a 1.\u52a8\u753b\u9636\u6bb5\uff1a\u6ce8\u518c\u7684[handlebeginframe]\u65b9\u6cd5with[window.onbeginframe]\uff0c\u8c03\u7528\u6240\u6709\u4e34\u65f6\u5e27\u56de\u8c03\u6309\u6ce8\u518c\u987a\u5e8f\u5411[scheduleFrameCallback]\u6ce8\u518c\u3002\u8fd9\u4e2a\u5305\u542b\u6b63\u5728\u9a71\u52a8\u7684\u6240\u6709\u5b9e\u4f8bobjects\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709\u6d3b\u52a8\u7684[animation]\u5bf9\u8c61\u70b9\u3002 2.Microtasks\uff1a\u5728[handlebeginframe]\u8fd4\u56de\u540e\uff0c\u4efb\u4f55\u7531\u4e34\u65f6\u5e27\u56de\u8c03\u5b89\u6392\u7684\u8fd0\u884c\u3002\u8fd9\u901a\u5e38\u5305\u62ec[ticker]\u548c[animationcontroller]\u7684\u671f\u8d27\u56de\u8c03\u5b8c\u6210\u6b64\u5e27\u3002\u5728[handlebeginframe]\u4e4b\u540e\uff0c[handledrawframe]\uff0c\u6ce8\u518c\u4e8e\u8c03\u7528\u4e86[window.onDrawFrame]\uff0c\u5b83\u8c03\u7528\u6240\u6709\u7684\u6301\u4e45\u5e27callbacks\uff0c\u5176\u4e2d\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u65b9\u6cd5\uff0c[drawFrame]\uff0c\u5b83 3.\u5e03\u5c40\u9636\u6bb5\uff1a\u7cfb\u7edf\u4e2d\u6240\u6709\u810f\u7684[renderobject]\u90fd\u88ab\u653e\u7f6eout\uff08\u53c2\u89c1[renderObject.performlayout]\uff09\u3002\u53c2\u89c1[renderobject.markneedslayout]\u6709\u5173\u5c06\u5bf9\u8c61\u6807\u8bb0\u4e3a\u810f\u7684\u5e03\u5c40\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 4.\u5408\u6210\u4f4d\u9636\u6bb5\uff1a\u4efb\u4f55\u810f\u6587\u4ef6\u4e0a\u7684\u5408\u6210\u4f4d[renderObject]\u5bf9\u8c61\u5df2\u66f4\u65b0\u3002\u6e56[renderObject.markneedscompositingbitsupdate]\u3002 5.\u7ed8\u5236\u9636\u6bb5\uff1a\u7cfb\u7edf\u4e2d\u6240\u6709\u810f\u7684[renderobject]\u90fd\u662f\u91cd\u65b0\u7ed8\u5236\uff08\u53c2\u89c1[renderobject.paint]\uff09\u3002\u8fd9\u5c06\u751f\u6210[\u5c42]\u6811\u3002\u6e56[renderbject.markneedspaint]\u4e86\u89e3\u6709\u5173\u6807\u8bb0\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u6cb9\u6f06\u810f\u4e86\u3002 6.\u5408\u6210\u9636\u6bb5\uff1a\u56fe\u5c42\u6811\u53d8\u6210\u4e00\u4e2a\u573a\u666f\u53d1\u9001\u5230GPU\u30027\u3002\u8bed\u4e49\u9636\u6bb5\uff1a\u7cfb\u7edf\u4e2d\u6240\u6709\u810f\u7684[renderobject]\u90fd\u6709\u5b83\u4eec\u7684\u8bed\u4e49\u5df2\u66f4\u65b0\uff08\u8bf7\u53c2\u89c1[renderobject.semanticsannotator]\uff09\u3002\u8fd9\u4e2a\u751f\u6210[semanticsnode]\u6811\u3002\u6e56[renderbject.markneedssemanticsupdate]\u4e86\u89e3\u6709\u5173\u6807\u8bb0\u8bed\u4e49\u7684\u810f\u5bf9\u8c61\u3002\u6709\u5173\u6b65\u9aa43-7\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1[PipelineOwner]\u3002 8.\u5b9a\u7a3f\u9636\u6bb5\uff1a\u5728[DrawFrame]\u8fd4\u56de\u540e\uff0c[HandleDrawFrame]\u7136\u540e\u8c03\u7528\u540e\u5e27\u56de\u8c03\uff08\u4f7f\u7528[addPostFrameCallback]\u6ce8\u518c\uff09\u3002\u4e00\u4e9b\u7ed1\u5b9a\uff08\u4f8b\u5982\uff0c[widgetsbinding]\uff09\u4e3a\u6b64\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u6b65\u9aa4list\uff08\u4f8b\u5982\uff0c\u8bf7\u53c2\u89c1[widgetsbinding.drawframe]\uff09\u3002 @ protected void drawFrame () { assert ( renderView != null ); pipelineOwner . flushLayout (); pipelineOwner . flushCompositingBits (); pipelineOwner . flushPaint (); renderView . compositeFrame (); // this sends the bits to the GPU pipelineOwner . flushSemantics (); // this also sends the semantics to the OS. } flushLayout BuildOwner\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u628a\u9700\u8981\u4f1a\u5728\u7684 RenderObject \u5bf9\u8c61\u67e5\u627e\u51fa\u6765\u4fdd\u5b58\u5728 _nodesNeedingLayout \u5217\u8868\u4e2d\uff0c\u901a\u8fc7\u6811\u7684\u6df1\u5ea6\u6765\u8fdb\u884c\u6392\u5e8f\u904d\u5386\uff0c\u8c03\u7528 _layoutWithoutResize \u65b9\u6cd5\u8fdb\u884c\u5e03\u5c40\u5927\u5c0f\u7684\u6539\u53d8\uff0c\u540c\u65f6\u628a\u9700\u8981\u7ed8\u5236\u7684 RenderObject \u6dfb\u52a0\u5230 _nodesNeedingPaint \u96c6\u5408\u4e2d\u4fbf\u4e8e\u4e0b\u4e00\u4e2a\u9636\u6bb5\u8fdb\u884c\u7ed8\u5236\uff0c\u6539\u53d8 _needsPaint \u4e3atrue void flushLayout () { .... try { // TODO(ianh): assert that we re not allowing previously dirty nodes to redirty themselves while ( _nodesNeedingLayout . isNotEmpty ) { final List RenderObject dirtyNodes = _nodesNeedingLayout ; _nodesNeedingLayout = RenderObject []; for ( RenderObject node in dirtyNodes .. sort (( RenderObject a , RenderObject b ) = a . depth - b . depth )) { if ( node . _needsLayout node . owner == this ) node . _layoutWithoutResize (); } } } finally { ... } } flushCompositingBits \u4e0a\u4e00\u6b65\u4e2d\u628a\u76f8\u5173\u7684\u4f4d\u7f6e\u5927\u5c0f\u786e\u8ba4\u597d\u4e4b\u540e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u63a7\u4ef6\u6709\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u9700\u8981\u8fdb\u884c\u5408\u5e76,\u5982\u4f55\u8c03\u7528 markNeedsPaint \u51c6\u5907\u540e\u7eed\u9700\u8981\u6c47\u603b\u7684\u5185\u5bb9 void flushCompositingBits () { if ( ! kReleaseMode ) { Timeline . startSync ( Compositing bits ); } _nodesNeedingCompositingBitsUpdate . sort (( RenderObject a , RenderObject b ) = a . depth - b . depth ); for ( RenderObject node in _nodesNeedingCompositingBitsUpdate ) { if ( node . _needsCompositingBitsUpdate node . owner == this ) node . _updateCompositingBits (); } _nodesNeedingCompositingBitsUpdate . clear (); if ( ! kReleaseMode ) { Timeline . finishSync (); } } flushPaint \u66f4\u65b0\u6240\u6709\u6e32\u67d3\u5bf9\u8c61\u7684\u663e\u793a\u5217\u8868\u3002\u6b64\u51fd\u6570\u662f\u6e32\u67d3\u7ba1\u9053\u7684\u6838\u5fc3\u9636\u6bb5\u4e4b\u4e00\u3002\u5728\u5e03\u5c40\u4e4b\u540e\u548c\u91cd\u65b0\u653e\u7f6e\u573a\u666f\u4e4b\u524d\u8fdb\u884c\u7ed8\u5236\uff0c\u4ee5\u4fbf\u573a\u666f\u4e0e\u6bcf\u4e2a\u6e32\u67d3\u5bf9\u8c61\u7684\u6700\u65b0\u663e\u793a\u5217\u8868\u5408\u6210\u3002\u6709\u5173\u5982\u4f55\u4f7f\u7528\u6b64\u51fd\u6570\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1[RenderBinding]\u3002 \u901a\u8fc7\u5e03\u5c40\u548c\u5408\u6210\u4e24\u6b65\u7684\u8ba1\u7b97\u64cd\u4f5c\uff0c\u5df2\u7ecf\u628a\u9700\u8981\u6c47\u603b\u7684\u6570\u636e\u8ba1\u7b97\u51fa\u6765\uff0c\u63d0\u4f9b\u7ed9\u753b\u7b14\u5bf9\u8c61\u628a RenderObject \u5bf9\u8c61\u7ed8\u5236\u5728 layer \u4e0a\uff0cWindow\u5bf9\u8c61\u4e2d render(Scene scene) \u5c31\u662f\u5728\u4e3a\u6b64\u51fd\u6570\u51c6\u5907\u6570\u636e void flushPaint () { ..... try { final List RenderObject dirtyNodes = _nodesNeedingPaint ; _nodesNeedingPaint = RenderObject []; // Sort the dirty nodes in reverse order (deepest first). for ( RenderObject node in dirtyNodes .. sort (( RenderObject a , RenderObject b ) = b . depth - a . depth )) { assert ( node . _layer != null ); if ( node . _needsPaint node . owner == this ) { if ( node . _layer . attached ) { ///\u6b64\u6b65\u9aa4\u662f\u6c47\u603b\u7684\u8be6\u7ec6\u8fc7\u7a0b\uff0c\u53d1\u5230\u540e\u9762\u5728\u8fdb\u884c\u89e3\u6790 PaintingContext . repaintCompositedChild ( node ); } else { node . _skippedPaintingOnLayer (); } } } assert ( _nodesNeedingPaint . isEmpty ); } finally { ...... } } renderView.compositeFrame() \u4e0a\u4e00\u6b65\u4e2d\u5df2\u7ecf\u628a\u9700\u8981\u6c47\u603b\u7684 RenderObject \u8fdb\u884c\u4e86\u7ed8\u5236\uff0c\u6bcf\u4e00\u4e2a RenderObject \u4e2d\u90fd\u6709\u4e00\u4e2a ContainerLayer \u5bf9\u8c61\uff0c\u4f5c\u4e3a\u6bcf\u4e00\u4e2a\u6e32\u67d3\u5bf9\u8c61\u7684 Layer ,\u73b0\u5728\u9700\u8981\u5904\u7406\u7684\u662f\u5728Flutter\u5df2\u7ecf\u505a\u597d\u4e86\u903b\u8f91\u64cd\u4f5c\uff0c\u9700\u8981\u628aDart\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6e32\u67d3\u5f15\u64ce\u80fd\u591f\u8bc6\u522b\u7684\u5bf9\u8c61: Window\u5bf9\u8c61\u4e2d render(Scene scene) \u5c31\u662f\u5728\u4e3a\u6b64\u51fd\u6570\u51c6\u5907\u6570\u636e\uff0c\u901a\u8fc7Navtive\u8c03\u7528\u628a\u6570\u636e\u4f20\u9012\u5230\u5e95\u5c42\u7ed8\u5236 1.\u4f7f\u7528SceneBuilder\u5bf9\u8c61\u6765\u521b\u5efa\u573a\u666f 2.\u628a RenderObject \u5bf9\u8c61\u4e2d\u6570\u636e\u53d6\u51fa\u6765\u6784\u5efaScene\u7684\u539f\u59cb\u6570\u636e 3.\u8c03\u7528 _window.render(scene); \u5b9e\u73b0\u771f\u6b63\u7684\u6570\u636e\u4f20\u9012\u5230\u6e32\u67d3\u5f15\u64ce /// Uploads the composited layer tree to the engine. /// /// Actually causes the output of the rendering pipeline to appear on screen. void compositeFrame () { try { final ui . SceneBuilder builder = ui . SceneBuilder (); final ui . Scene scene = layer . buildScene ( builder ); if ( automaticSystemUiAdjustment ) _updateSystemChrome (); _window . render ( scene ); scene . dispose (); assert (() { if ( debugRepaintRainbowEnabled || debugRepaintTextRainbowEnabled ) debugCurrentRepaintColor = debugCurrentRepaintColor . withHue (( debugCurrentRepaintColor . hue + 2.0 ) % 360.0 ); return true ; }()); } finally { } } \u5982\u4f55\u8ba1\u7b97\u6e32\u67d3\u5bf9\u8c61\u7684\u6446\u653e\u4f4d\u7f6e\u548c\u81ea\u5b9a\u4e49\u63a7\u4ef6 \u8ba1\u7b97\u6b64\u6e32\u67d3\u5bf9\u8c61\u7684\u5e03\u5c40\u3002\u6b64\u65b9\u6cd5\u662f\u7236\u63a7\u4ef6\u8981\u6c42\u5b50\u63a7\u4ef6\u6267\u884c\u7684\u4e3b\u8981\u5165\u53e3\u70b9\u66f4\u65b0\u4ed6\u4eec\u7684\u5e03\u5c40\u4fe1\u606f\u3002\u7236\u5bf9\u8c61\u4f20\u9012\u7ea6\u675f\u5bf9\u8c61\u5b83\u901a\u77e5\u5b50\u7ea7\u54ea\u4e9b\u5e03\u5c40\u662f\u5141\u8bb8\u7684\u3002\u8fd9\u5b50\u63a7\u4ef6\u662f\u5fc5\u987b\u9075\u5b88\u7ed9\u5b9a\u7684\u7ea6\u675f\u3002\u5982\u679c\u7236\u7ea7\u8bfb\u53d6\u5b50\u7ea7\u5e03\u5c40\u671f\u95f4\u8ba1\u7b97\u7684\u4fe1\u606f\uff0c\u5219\u201cparentUseSSize\u201d\u7684\u7236\u7ea7\u5fc5\u987b\u4f20\u9012true\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7236\u6bcd\u5c06\uff1a\u53ea\u8981\u5b50\u9879\u88ab\u6807\u8bb0\u4e3a\u9700\u8981\u5e03\u5c40\uff0c\u5c31\u88ab\u6807\u8bb0\u4e3a\u9700\u8981\u5e03\u5c40\u56e0\u4e3a\u7236\u7ea7\u7684\u5e03\u5c40\u4fe1\u606f\u4f9d\u8d56\u4e8e\u5b50\u7ea7\u7684\u5e03\u5c40\u4fe1\u606f\u3002\u5982\u679c\u7236\u9879\u4f7f\u7528\u9ed8\u8ba4\u503c\uff08false\uff09\u201cparentUseSSize\u201d\uff0c\u5b50\u9879\u53ef\u4ee5\u66f4\u6539\u5176\u5e03\u5c40\u4fe1\u606f\uff08\u6839\u636e\u7ed9\u5b9a\u7684\u7ea6\u675f\uff09\u800c\u4e0d\u901a\u77e5\u7236\u7ea7\u3002\u5b50\u7c7b\u4e0d\u5e94\u76f4\u63a5\u91cd\u5199[Layout]\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u5e94\u8be5\u91cd\u5199[PerformResize]\u548c/\u6216[performLayout]\u3002delegates\u5c06\u5b9e\u9645\u5de5\u4f5c\u59d4\u6258\u7ed9[performResize]\u548c[performLayout]\u3002\u7236\u7ea7\u7684[Performance Layout]\u65b9\u6cd5\u5e94\u8c03\u7528\u5176\u6240\u6709\u65e0\u6761\u4ef6\u7684\u5b50\u9879\u3002\u8fd9\u662f[\u5e03\u5c40]\u65b9\u6cd5\u7684\u8d23\u4efb\u5728\u6b64\u5904\u5b9e\u73b0\uff09\u5982\u679c\u5b50\u9879\u4e0d\u9700\u8981\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u5219\u63d0\u524d\u8fd4\u56de\u66f4\u65b0\u5176\u5e03\u5c40\u4fe1\u606f\u3002 flushLayout \u8c03\u7528 node._layoutWithoutResize(); \u8fdb\u884c\u6e32\u67d3\u5bf9\u8c61\u7684\u4f4d\u7f6e\u8ba1\u7b97 RenderView \u4e2d\u7684 performLayout \u8fdb\u884clayout\u8fdb\u884c\u5904\u7406 @ override void performLayout () { assert ( _rootTransform != null ); _size = configuration . size ; assert ( _size . isFinite ); if ( child != null ) child . layout ( BoxConstraints . tight ( _size )); } \u603b\u7ed3 1.\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\u6211\u4eec\u77e5\u9053\uff0cWidget\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u6267\u884c\u6267\u884c\u56db\u4e2a\u6b65\u9aa4\u5c31\u53ef\u4ee5\u663e\u793a\u3002FlutterUI\u6846\u67b6\u4e2d\u5bf9Widow\u7c7b\u8fdb\u884c\u62c6\u5206\uff0c\u5bf9\u4e0d\u540c\u7684\u56de\u8c03\u4e8b\u4ef6\u8fdb\u884c\u4e0d\u540c\u7684mixin\u7c7b\u6765\u8fdb\u884c\u5904\u7406 2.\u901a\u8fc7runApp\u628a\u5f00\u53d1\u7684Widget\u548c\u7cfb\u7edf\u6846\u67b6\u5c42\u5173\u8054\uff1a1.Element\u548cRenderObject\u5bf9\u8c61\u8fdb\u884c\u7ed1\u5b9a\u30022.\u89e6\u53d1\u7cfb\u7edf\u7ed8\u5236\u4e00\u5e27 3.\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u5b9e\u9645\u529f\u80fd BindingBase GestureBinding, ServicesBinding, SchedulerBinding, PaintingBinding, SemanticsBinding, RendererBinding, WidgetsBinding 4.\u901a\u8fc7 RenderObjectToWidgetAdapter \u5bf9\u8c61\u6765\u8fdb\u884cElement\u3001RenderObject\u5bf9\u8c61\u8fdb\u884c\u5173\u8054\uff0c\u4e3b\u8981\u662f\u5904\u7406Widget\u7684\u6570\u636e\u548cRenderView\u4e2d\u7684\u6570\u636e 5.Element\u7ba1\u7406Widget\u6570\u636e 6.RenderObject\u9762\u5411Flutter\u5f15\u64ce\u63a5\u53e3\uff0c\u63d0\u4f9b\u7ed8\u5236UI\u6570\u636e\u7684Layters 7.BuildContext\u63d0\u4f9b\u4e86Widget\u4e2d\u8bbf\u95eeRenderObject\u5bf9\u8c61\u7684\u63a5\u53e3 8.BuildOwer\u4e3b\u8981\u662f\u53d8\u91cfElement\u67e5\u627e\u51fa\u90a3\u4e9bElement\u662f\u9700\u8981\u91cd\u65b0\u8fdb\u884c\u7ed8\u5236\u7684 9.Pipeline\u63d2\u5ea7RenderObject\u5bf9\u8c61\uff0c\u5904\u7406\u90a3\u4e9b\u4e8b\u6e32\u67d3\u5bf9\u8c61\u662f\u9700\u8981\u5728Layer\u8fdb\u884cLayout\u3001\u586b\u5145\u3001\u7ed8\u5236\u7684 10.\u8c03\u7528RenderView\u4e2d\u7684\u65b9\u6cd5\uff0c\u628a\u751f\u6210\u7684\u6570\u636e\u8c03\u7528window.render(scene)\u4f20\u9012\u5230\u6e32\u67d3\u5f15\u64ce 11.RenderObject\u662f\u5982\u4f55\u6446\u653e\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u7684 \u81ea\u5b9a\u4e49\u63a7\u4ef6","title":"FlutterUI\u6846\u67b6\u7ed8\u5236\u8fc7\u7a0b"},{"location":"android/flutterdev/FlutterWidgetinit/#flutter-widget","text":"","title":"Flutter Widget\u521d\u59cb\u5316"},{"location":"android/flutterdev/FlutterWidgetinit/#_1","text":"\u5728\u5206\u6790FlutterUI\u6846\u67b6\u4e4b\u524d\uff0c\u5148\u6765\u5206\u6790\u4e00\u4e0bFlutter\u5f15\u64ce\u662f\u600e\u4e48\u7528\u6700\u5c11\u6b65\u9aa4\u628a\u4e00\u5e27\u7ed8\u5236\u5728\u5c4f\u5e55\u4e0a\u7684","title":"\u5f15\u64ce\u7ed8\u5236\u539f\u7406"},{"location":"android/flutterdev/FlutterWidgetinit/#_2","text":"1.Flutter\u542f\u52a8\u65f6\u8c03\u7528scheduleFrame()\u4f1a\u89e6\u53d1ui.window.onBeginFrame()\u56de\u8c03\u65b9\u6cd5\u8c03\u7528 2.sceneBuilder \u751f\u6210\u573a\u666f 3.\u6570\u636e\u56de\u4f20\u5230\u6e32\u67d3\u5f15\u64ce:ui.window.render(scene); 4.\u624b\u52bf\u56de\u8c03\u4e8b\u4ef6:ui.window.onPointerDataPacket = handlePointerDataPacket;\uff0c\u901a\u8fc7\u624b\u52bf\u4e8b\u4ef6\u6765\u89e6\u53d1\u4e0d\u65ad\u7684\u8c03\u7528\u7b2c\u4e09\u6b65\u9aa4\u4e2d\u7684\u65b9\u6cd5 5.\u5237\u65b0\u4e00\u5e27:ui.window.scheduleFrame(); \u901a\u8fc7\u4e0a\u9762\u7684\u4e09\u4e2a\u6b65\u9aa4\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u5e27\u4e00\u5e27\u7684\u7ed8\u5236\u7684\u5c4f\u5e55\u4e0a\uff0c\u4e3b\u8981\u7684\u4e00\u4e2a\u5185\u5bb9\u662f\u5982\u4f55\u7ba1\u7406 Scene \u5bf9\u8c61\u7684\u6570\u636e\u53d8\u5316\u5904\u7406\u903b\u8f91\uff0c\u4e0d\u65ad\u7684\u66f4\u65b0\u6570\u636e\u56de\u4f20\u5230\u6e32\u67d3\u5f15\u64ce\u8fdb\u884c\u8ba1\u7b97","title":"\u5927\u8c61\u88c5\u8fdb\u51b0\u7bb1\u91cc"},{"location":"android/flutterdev/FlutterWidgetinit/#demo","text":"","title":"\u5b98\u65b9Demo"},{"location":"android/flutterdev/FlutterWidgetinit/#demo_1","text":"ui . Picture paint ( ui . Rect paintBounds ) { final ui . PictureRecorder recorder = ui . PictureRecorder (); final ui . Canvas canvas = ui . Canvas ( recorder , paintBounds ); final ui . Size size = paintBounds . size ; canvas . drawCircle ( size . center ( ui . Offset . zero ), size . shortestSide * 0.45 , ui . Paint ().. color = color , ); return recorder . endRecording (); } ui . Scene composite ( ui . Picture picture , ui . Rect paintBounds ) { final double devicePixelRatio = ui . window . devicePixelRatio ; final Float64List deviceTransform = Float64List ( 16 ) ..[ 0 ] = devicePixelRatio ..[ 5 ] = devicePixelRatio ..[ 10 ] = 1.0 ..[ 15 ] = 1.0 ; final ui . SceneBuilder sceneBuilder = ui . SceneBuilder () .. pushTransform ( deviceTransform ) .. addPicture ( ui . Offset . zero , picture ) .. pop (); return sceneBuilder . build (); } void beginFrame ( Duration timeStamp ) { final ui . Rect paintBounds = ui . Offset . zero ( ui . window . physicalSize / ui . window . devicePixelRatio ); final ui . Picture picture = paint ( paintBounds ); final ui . Scene scene = composite ( picture , paintBounds ); ui . window . render ( scene ); } void handlePointerDataPacket ( ui . PointerDataPacket packet ) { for ( ui . PointerData datum in packet . data ) { if ( datum . change == ui . PointerChange . down ) { color = const ui . Color ( 0xFF0000FF ); ui . window . scheduleFrame (); } else if ( datum . change == ui . PointerChange . up ) { color = const ui . Color ( 0xFF00FF00 ); ui . window . scheduleFrame (); } } } void main () { color = const ui . Color ( 0xFF00FF00 ); // The engine calls onBeginFrame whenever it wants us to produce a frame. ui . window . onBeginFrame = beginFrame ; // The engine calls onPointerDataPacket whenever it had updated information // about the pointers directed at our app. ui . window . onPointerDataPacket = handlePointerDataPacket ; // Here we kick off the whole process by asking the engine to schedule a new // frame. The engine will eventually call onBeginFrame when it is time for us // to actually produce the frame. ui . window . scheduleFrame (); }","title":"\u5b98\u65b9Demo \u6e90\u7801"},{"location":"android/flutterdev/FlutterWidgetinit/#flutter","text":"","title":"Flutter\u67b6\u6784"},{"location":"android/flutterdev/FlutterWidgetinit/#_3","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u77e5\u9053Flutter\u5f15\u64ce\u5bf9UI\u5c42\u7684\u7ed8\u5236\uff0c\u6700\u5173\u5fc3\u7684\u662f: 1.\u8f93\u51fa\u7684\u6e32\u67d3\u5bf9\u8c61 2.\u6e32\u67d3\u5bf9\u8c61\u5982\u4f55\u6539\u53d8 3.\u5982\u4f55\u7ba1\u7406\u6e32\u67d3\u5bf9\u8c61\u7684\u751f\u6210 4.\u5982\u4f55\u7ba1\u7406\u6811\u4e2d\u5bf9\u8c61\u7684\u53d8\u5316","title":"\u6838\u5fc3\u95ee\u9898\u70b9"},{"location":"android/flutterdev/FlutterWidgetinit/#_4","text":"Flutter \u5c42UI\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u662f\u5728\u5165\u53e3\u6587\u4ef6\u4e2d\u8c03\u7528 runApp \u628a\u5e94\u7528Widget\u548c\u7cfb\u7edf\u7684\u6e32\u67d3\u5f15\u64ce\u8fdb\u884c\u5173\u8054 void runApp ( Widget app ) { WidgetsFlutterBinding . ensureInitialized () .. attachRootWidget ( app ) .. scheduleWarmUpFrame (); } \u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86Window\u4e8b\u4ef6\u662f\u5982\u4f55\u5206\u89e3\u5230\u4e0d\u540c\u7684\"BaseBind\"\u5bf9\u8c61\u7684\u5b50\u7c7b\u4e0a\uff0c\u5e76\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c\u7ee7\u7eed\u5206\u6790\u7528\u6237\u5c42\u7684widget\u5982\u4f55\u548c\u7cfb\u7edf\u6210\u7684Window\u6846\u67b6\u8fdb\u884c\u5173\u8054\u7684\u3002 attachRootWidget \u5b8c\u6210\u4e86RenderObject\u548cElement\u8fdb\u884c\u7ed1\u5b9a\uff0c\u540c\u65f6\u8c03\u7528 BuilderOwer \u6765\u5bf9\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u533a\u57df\u548c\u90a3\u4e9b\u9700\u8981\u8fdb\u884c\u91cd\u65b0\u7ed8\u5236\u7684 Widget \u8ba1\u7b97\u3002 scheduleWarmUpFrame \u6240\u6709\u7684\u6570\u636e\u51c6\u5907\u597d\u4e86\u4e4b\u540e\uff0c\u9700\u8981\u628a\u4e00\u5e27\u7684\u6570\u636e\u4f20\u9012\u5230\u7cfb\u7edfFlutterEngine\u4e2d\u7ee7\u7eed\u6e32\u67d3\u51fa\u6765\u53d1\u5c55\u5c4f\u5e55\u4e0a\u3002 pipeline \u662f\u5bf9\u5df2\u7ecf\u8ba1\u7b97\u597d\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\u63d0\u4ea4\u5230FluuterEngine\u4e0a\u8fdb\u884c\u6e32\u67d3 \u4ee5\u4e0a\u903b\u8f91\u4e3b\u8981\u505a\u4e86\u4e24\u4e2a\u64cd\u4f5c: \u751f\u6210\u9759\u6001\u6570\u636e\u7684\u5173\u8054\u5bf9\u8c61:(\u53ea\u662f\u4fdd\u5b58\u4e00\u4e0b\u903b\u8f91\u6570\u636e) 1:RenderView:\u5bf9\u5e94\u7cfb\u7edf\u5c42\u6e32\u67d3\u6846\u67b6\u7684Surface\u5bf9\u8c61\u7684\u6570\u636e\u62bd\u8c61 2.Element: Widget\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0cWidget\u4fdd\u5b58\u4e86\u63a7\u5236\u81ea\u8eab\u7684\u6570\u636e\u7ed3\u6784\u7c7b\u578b\uff0cElement\u5bf9\u8c61\u662f\u5bf9\u662fWidget\u7684\u4e00\u4e2a\u62bd\u8c61\u8868\u793a\uff0c\u7528\u5728\u544a\u8bc9BuilderOwer\u5982\u4f55\u914d\u7f6eWidget\uff0cElement\u7684\u751f\u547d\u5468\u671f_ElementLifecycle {initial,active,inactive,defunct,},\u8c03\u7528`attachRenderObject`\u628a\u6e32\u67d3\u5bf9\u8c61\u6302\u8f7d\u5230\u6e32\u67d3\u6811\u4e2d 3.RenderObject:\u901a\u8fc7\u5b50\u7c7b`RenderBox`\u5bf9Element\u8fdb\u884c\u7b1b\u5361\u5c14\u6216\u8005\u6781\u5750\u6807\u8fdb\u884c\u903b\u8f91\u5e03\u5c40\u7684\u5750\u6807\u7cfb\uff0c\u63d0\u4f9b\u7ed8\u56fe\u5c42\u7684Layer 4.BuildContext:\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u6237\u5728Widget\u8bbf\u95ee`RenderObject`\u7684\u63a5\u53e3\u7c7b 5.RenderObjectToWidgetAdapter\uff1a`RootRenderObjectElement`\u548c`RenderView`\u7ba1\u7406\u5728\u4e00\u8d77\uff0c\u6839`RootRenderObjectElement`\u6301\u6709`RenderView`\u5bf9\u8c61\uff0c\u90a3\u4e48\u5728Element\u548cRenderObject\u5bf9\u8c61\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u6574\u4f53\uff0c\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0\u6570\u636e 6.ParentData\uff1a\u7528\u6765\u5728`RenderObject`\u4e2d\u5bf9\u4fdd\u5b58\u6570\u636e\uff0cWidget\u662f\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\uff0c\u5728Widget\u6539\u53d8\u7684\u65f6\u5019\uff0c\u6307\u5b9aUI\u8fdb\u884c\u66f4\u65b0\uff0c\u628a\u6570\u636e\u4fdd\u5b58\u5728`RenderObject`\u4e2d\uff0crebuild\u4e4b\u540e`RenderObject`\u5bf9\u8c61\u8fd8\u5b58\u5728\uff0c\u9664\u975e\u4fdd\u5b58\u6570\u636e\u7684\u7236\u8282\u70b9\u4e0d\u79fb\u9664\u6784\u5efa\u6811\u4e2d\u3002 7.RenderObject- gt;Constraints\u63cf\u8ff0\u5b50wiget\u80fd\u591f\u8bfb\u53d6\u7684\u6570\u636e\uff0c\u4e0d\u63cf\u8ff0\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u548c\u6781\u5750\u6807 2.\u52a8\u6001\u6570\u636e: 1.buildOwner:\u4ece`RenderView`\u5f00\u59cb\u8ba1\u7b97\u6574\u4e2aUI\u6811\u4e2d\u663e\u793a\u7684\u662f\u90a3\u4e00\u90e8\u5206\u5df2\u7ecf\u662f\u54ea\u4e00\u90e8\u5206\u662f\u9700\u8981\u66f4\u65b0\uff0c\u4fdd\u5b58\u76f8\u5173\u7684`List lt;Element gt;`\u5bf9\u8c61 2.[PipelineOwner](../flutterdev/FlutterWidgetinit/#pipeline):\u6bcf\u4e00\u4e2a`Element`\u4e2d\u90fd\u4f1a\u6709\u4e00\u4e2a`RenderObject`\uff0c\u4e3b\u8981\u4f7f\u7528\u6765\u5904\u7406\u6e32\u67d3\u5f15\u64ce\u5728FlutterUI\u5c42\u7684\u903b\u8f91\u6570\u636e,\u4e0a\u4e00\u6b65\u5df2\u7ecf\u628a\u9700\u8981\u66f4\u65b0\u7684\u6570\u636e\u6dfb\u52a0\u5230`List lt;RenderObject gt;` 3.\u8c03\u7528`RenderView`\u7684`compositeFrame`\u65b9\u6cd5\u628a\u573a\u666f\u6570\u636e\u4f20\u9012\u5230\u7cfb\u7edf\u6e32\u67d3\u5f15\u64ce","title":"\u8f93\u51fa\u7684\u6e32\u67d3\u5bf9\u8c61"},{"location":"android/flutterdev/FlutterWidgetinit/#renderobjectelement","text":"\u901a\u8fc7\u8c03\u7528runApp\u4e2d attachRootWidget \u628a Element \u548c RenderObject \u8fdb\u884c\u5173\u8054 RenderObjectToWidgetAdapter \u662f Widget \u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u4e3b\u8981\u5b9e\u73b0\u4e24\u4e2a\u65b9\u6cd5: 1.`createElement` 2.`createRenderObject` createElement \u4e3b\u8981\u7684\u529f\u80fd\u662f\u5bf9 Widget \u8fdb\u884c\u7ba1\u7406\uff0c Element \u662fWidget\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61,Elment\u6709\u4e0d\u540c\u7684\u5b50\u7c7b\u578b createRenderObject \u4e3b\u8981\u529f\u80fd\u662f\u4ea7\u751f RenderObject \u7684\u5bf9\u8c61\uff0c\u4e3b\u8981\u529f\u80fd\u662f\u5b8c\u6210\u5750\u6807\u7cfb\u7edf\u7684\u6784\u5efa\uff0c\u5bf9 Element \u63d0\u4f9b\u914d\u7f6e\u53c2\u6570\uff0c\u5b9e\u73b0\u7c7b\u662f RenderBox \u6bcf\u4e00\u4e2a Element \u5bf9\u5e94\u4e00\u4e2a RenderObject \u5bf9\u8c61\uff0c RenderObject \u4f5c\u4e3a Element \u7684\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u4f7f\u7528","title":"RenderObject\u548cElement\u5173\u7cfb"},{"location":"android/flutterdev/FlutterWidgetinit/#renderobjecttowidgetadapter","text":"renderView : WidgetsBinding \u7ee7\u627f RendererBinding\uff0c\u5728 RendererBinding \u7684 initInstances \u65b9\u6cd5\u4e2d\u521d\u59cb\u5316 renderView ,\u7cfb\u7edf surface ,\u6210\u5458\u53d8\u91cf RenderBox \u662f\u6574\u4e2a\u7ed8\u56fe\u7684 Root \u9876\u5c42 RootRenderObjectElement ,\u53ea\u7528\u9876\u5c42\u5bf9\u8c61\u4f7f\u7528 BuildOwner RenderObjectToWidgetAdapter \u7c7b\u4f5c\u4e3aFlutter\u7cfb\u7edf\u9876\u5c42\u7684UI\uff0c\u4f5c\u4e3a\u7528\u6237UI\u548cFlutter\u6846\u67b6\u5c42\u7684\u8054\u5408\u70b9 \u5728 WidgetsBinding \u4e2d\u8c03\u7528 attachRootWidget \u8fdb\u884c\u6e32\u67d3\u5bf9\u8c61\u548cElement\u5bf9\u8c61\u8fdb\u884c\u5173\u8054, RenderView \u6210\u4e3a RootRenderObjectElement \u7684\u6210\u5458\u53d8\u91cf,\u6e32\u67d3\u5bf9\u8c61\u548cElement\u5bf9\u8c61\u8fdb\u884c\u5173\u8054\uff0c\u53ef\u4ee5\u540c\u6b65\u66f4\u65b0UI attachRootWidget \u5b8c\u6210\u4e09\u4ef6\u4e8b: RenderObjectToWidgetAdapter: \u5173\u8054renderView\u548crootWidget \u5173\u8054PipelineOwner \u5173\u8054BuildOwner void attachRootWidget ( Widget rootWidget ) { _renderViewElement = RenderObjectToWidgetAdapter RenderBox ( container: renderView , debugShortDescription: [root] , child: rootWidget , ). attachToRenderTree ( buildOwner , renderViewElement ); }","title":"RenderObjectToWidgetAdapter\u7684\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u51b2\u90a3\u91cc\u6765\u7684\uff1f"},{"location":"android/flutterdev/FlutterWidgetinit/#renderview","text":"renderView\u5bf9\u8c61\u662f\u5728 RendererBinding \u4e2d\u8c03\u7528 initRenderView \u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c RenderView \u96c6\u6210 RenderObject \u5b9e\u73b0 RenderObjectWithChildMixin RenderBox:\u662f\u771f\u6b63\u7684\u6e32\u67d3\u5bf9\u8c61 RenderObject: 1.\u4e3b\u8981\u662f\u4fdd\u5b58RenderBox\u7684\u6570\u636e\u5b9e\u9645\u6570\u636e\u548cchild\u7684Constraints\u5173\u7cfb\uff0c\u540c\u65f6\u4fdd\u5b58\u5bf9RenderBox\u64cd\u4f5c\u7684\u63a5\u53e3 2.\u4fdd\u5b58\u548cChild\u76f8\u5173\u5173\u8054\u7684\u6570\u636eParentData /// Creates a [RenderView] object to be the root of the /// [RenderObject] rendering tree, and initializes it so that it /// will be rendered when the engine is next ready to display a /// frame. /// /// Called automatically when the binding is created. void initRenderView () { assert ( renderView == null ); renderView = RenderView ( configuration: createViewConfiguration (), window: window ); renderView . scheduleInitialFrame (); } \u901a\u8fc7\u4e0a\u9762\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u5df2\u7ecf\u628a\u6e32\u67d3\u5bf9\u8c61\u521d\u59cb\u5316\u5b8c\u6210\uff0c\u5e76\u4e14\u5173\u8054\u81ea\u5df1\u5230PipelineOwner\u5bf9\u8c61\u4e2d\uff0c\u8be6\u7ec6\u7684\u4fe1\u606f\u5728\u540e\u7eed\u4ecb\u7ecd(owner._nodesNeedingLayout.add(this);)","title":"renderView\u5bf9\u8c61"},{"location":"android/flutterdev/FlutterWidgetinit/#buildowner","text":"widgets\u6846\u67b6\u7684manager\u7c7b\u3002\u6b64\u7c7b\u8ddf\u8e2a\u9700\u8981\u91cd\u5efa\u7684\u5c0f\u90e8\u4ef6\uff0c\u5e76\u5904\u7406\u5176\u4ed6\u4efb\u52a1\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5e94\u7528\u4e8e\u5c0f\u90e8\u4ef6\u6811\uff0c\u4f8b\u5982\u7ba1\u7406\u975e\u6d3b\u52a8\u5143\u7d20\u5217\u51fa\u6811\u5e76\u5728\u5fc5\u8981\u65f6\u89e6\u53d1\u201c\u91cd\u65b0\u7ec4\u5408\u201d\u547d\u4ee4\u8c03\u8bd5\u65f6\u70ed\u91cd\u65b0\u52a0\u8f7d\u3002main build owner\u901a\u5e38\u7531[widgetsbinding]\u62e5\u6709\uff0c\u5e76\u4e14\u662f\u4e0ebuild/layout/paint\u7ba1\u9053\u3002\u53ef\u4ee5\u751f\u6210\u5176\u4ed6\u751f\u6210\u6240\u6709\u8005\u6765\u7ba1\u7406\u5c4f\u5e55\u5916\u5c0f\u90e8\u4ef6\u6811\u3002\u82e5\u8981\u5c06\u751f\u6210\u6240\u6709\u8005\u5206\u914d\u7ed9\u6811\uff0c\u8bf7\u4f7f\u7528\u7684\u6839\u5143\u7d20\u4e0a\u7684[rootrenderobjectelement.assignowner]\u65b9\u6cd5\u3002 BuildOwner: \u4e3b\u8981\u662f\u67e5\u627ePipelineOwner\u4e2d\u8bb0\u5f55\u7684\u90a3\u4e9b\u9700\u8981\u6539\u53d8\u7684\u6e32\u67d3\u5bf9\u8c61\u8fdb\u884c\u6e32\u67d3\uff0c \u67e5\u627e\u6709\u54ea\u4e9b Element \u662f\u6c61\u67d3\u4e86\uff0c\u9700\u8981\u8fdb\u884c\u4ece\u65b0\u5e03\u5c40\u548c\u7ed8\u5236\u7684 \u8fdb\u884c\u63d0\u53d6=======================","title":"BuildOwner\uff1a"},{"location":"android/flutterdev/FlutterWidgetinit/#reassemble","text":"\u4f7f\u6839\u5728\u7ed9\u5b9a[element]\u7684\u6574\u4e2a\u5b50\u6811\u5b8c\u5168\u91cd\u5efa\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5df2\u66f4\u6539\u5e76\u6b63\u5728\u70ed\u91cd\u65b0\u52a0\u8f7d\uff0c\u4ee5\u4f7f\u5c0f\u90e8\u4ef6\u6811\u83b7\u53d6\u4efb\u4f55\u66f4\u6539\u4e86\u5b9e\u73b0\u3002\u8fd9\u5f88\u6602\u8d35\uff0c\u9664\u975e\u5728\u5f00\u53d1\u671f\u95f4\uff0c\u5426\u5219\u4e0d\u5e94\u8be5\u8c03\u7528\u5b83\u3002 RendererBinding\u7684initInstances\u65b9\u6cd5\u4e2d\u8c03\u7528 drawFrame","title":"reassemble\uff1a"},{"location":"android/flutterdev/FlutterWidgetinit/#buildscope","text":"\u67e5\u627e\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u533a\u57df\u7684Element,\u786e\u5b9a\u54ea\u4e9b\u5143\u7d20\u662f\u8981\u8fdb\u884c\u5904\u7406\uff0c\u753b\u5e03\u662f\u4e00\u4e2a\u6ca1\u6709\u8fb9\u754c\u7684\u533a\u57df\uff0c\u6240\u4ee5\u5728\u5728\u7ed8\u5236\u4e4b\u524d\u662f\u9700\u8981\u8fdb\u884c\u786e\u8ba4\u54ea\u4e9b\u533a\u57df\u662f\u9700\u8981\u8fdb\u884c\u5904\u7406\u7684 void drawFrame () { ..... try { if ( renderViewElement != null ) ///\u5f00\u59cb\u8ba1\u7b97\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u4e00\u5e27\u7684\u8303\u56f4 buildOwner . buildScope ( renderViewElement ); super . drawFrame (); buildOwner . finalizeTree (); } finally { \u3002\u3002\u3002\u3002\u3002\u3002 } ....... }","title":"buildScope\uff1a"},{"location":"android/flutterdev/FlutterWidgetinit/#widget","text":"\u4e0a\u9762\u4ecb\u7ecd\u4e86\u521d\u59cb\u5316\u7cfb\u7edf\u6846\u67b6\u6210\u7684\u6e32\u67d3\u5bf9\u8c61 renderView ,\u548c\u8bb0\u5f55Widget\u53d8\u5316\u4fe1\u606f\u7684 PipelineOwner ,\u771f\u6b63\u6267\u884c\u6d4b\u91cf\u3001\u5e03\u5c40\u3001\u7ed8\u5236\u3001\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u5e76\u4e14\u5df2\u7ecf\u521d\u59cb\u5316\u4e0d\u540c\u7684BaseBind\u5bf9\u8c61\u7684\u5b50\u7c7b\uff0c\u5206\u89e3\u4e86Window\u5bf9\u8c61\u7684\u4e8b\u4ef6 RenderObjectToWidgetAdapter.attachToRenderTree \u5bf9Element\u8fdb\u884c\u521b\u5efa \u5c06\u8fd9\u4e2aWidget\u8fdb\u884c\u586b\u5145\uff0c\u5e76\u5b9e\u9645\u5c06\u7ed3\u679c[renderobject]\u8bbe\u7f6e\u4e3a[\u5bb9\u5668]\u7684\u5b50\u7ea7\u3002\u5982\u679celement\u4e3a\u7a7a\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u5143\u7d20\u3002\u5426\u5219\uff0c\u7ed9\u5b9a\u5143\u7d20\u5c06\u6709\u4e00\u4e2a\u8ba1\u5212\u597d\u7684\u66f4\u65b0\u4ee5\u5207\u6362\u5230\u6b64\u5c0f\u90e8\u4ef6\u3002\u7531[runapp]\u7528\u4e8e\u5f15\u5bfc\u5e94\u7528\u7a0b\u5e8f\u3002 Only one [buildScope] can be active at a time. RenderObjectToWidgetElement T attachToRenderTree ( BuildOwner owner , [ RenderObjectToWidgetElement T element ]) { if ( element == null ) { owner . lockState (() { element = createElement (); assert ( element != null ); element . assignOwner ( owner ); }); owner . buildScope ( element , () { element . mount ( null , null ); }); } else { element . _newWidget = this ; element . markNeedsBuild (); } return element ; } @ override String toStringShort () = debugShortDescription ?? super . toStringShort (); } \u6e32\u67d3RenderObject\u5230RenderObjectToWidgetElement \u5728\u4e0a\u4e00\u6b65\u4e2d\u8c03\u7528 mount \u65b9\u6cd5\u8fdb\u884c\u9759\u6001\u6570\u636e\u7684\u5904\u7406\u64cd\u4f5c \u6838\u5fc3\u6b65\u9aa4:\u4e3b\u8981\u662f\u5728\u6811\u4e2d\u4f7f\u7528\uff0c\u904d\u5386\u6574\u68f5\u6811\u5bf9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u5904\u7406","title":"\u521d\u59cb\u5316Widget"},{"location":"android/flutterdev/FlutterWidgetinit/#element","text":"\u5728\u7ed1\u5b9a\u6e32\u67d3\u5bf9\u8c61\u548c\u8ddfElement\u4e4b\u540e\u8fdb\u884c\uff0c\u5f00\u59cb\u521d\u59cb\u5316Element\u5bf9\u8c61 RenderObjectToWidgetElement T attachToRenderTree ( BuildOwner owner , [ RenderObjectToWidgetElement T element ]) { if ( element == null ) { ///\u9876\u7ea7\u539f\u751f\u51fa\u624b\u52a8\u8c03\u7528createment(); RenderObjectToWidgetElement owner . lockState (() { element = createElement (); assert ( element != null ); element . assignOwner ( owner ); }); owner . buildScope ( element , () { element . mount ( null , null ); ///\u5f00\u59cb\u904d\u5386\u6811\u5904\u7406\u6bcf\u4e00\u4e2aWidget }); } else { element . _newWidget = this ; element . markNeedsBuild (); } return element ; }","title":"\u521d\u59cb\u5316Element"},{"location":"android/flutterdev/FlutterWidgetinit/#_5","text":"/// The following table summarizes the above: /// /// | | **newWidget == null** | **newWidget != null** | /// | :-----------------: | :--------------------- | :---------------------- | /// | **child == null** | Returns null. | Returns new [Element]. | /// | **child != null** | Old child is removed, returns null. | Old child updated if possible, returns child or new [Element]. | Element updateChild ( Element child , Widget newWidget , dynamic newSlot ) { assert (() { if ( newWidget != null newWidget . key is GlobalKey ) { final GlobalKey key = newWidget . key ; key . _debugReserveFor ( this ); } return true ; }()); if ( newWidget == null ) { if ( child != null ) deactivateChild ( child ); return null ; } if ( child != null ) { if ( child . widget == newWidget ) { if ( child . slot != newSlot ) updateSlotForChild ( child , newSlot ); return child ; } if ( Widget . canUpdate ( child . widget , newWidget )) { if ( child . slot != newSlot ) updateSlotForChild ( child , newSlot ); child . update ( newWidget ); assert ( child . widget == newWidget ); assert (() { child . owner . _debugElementWasRebuilt ( child ); return true ; }()); return child ; } deactivateChild ( child ); assert ( child . _parent == null ); } return inflateWidget ( newWidget , newSlot ); }","title":"\u662f\u5426\u521b\u5efa\u8282\u70b9\u7684\u6838\u5fc3\u7b97\u6cd5:"},{"location":"android/flutterdev/FlutterWidgetinit/#inflatewidget-element","text":"//\u4e3a\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u521b\u5efa\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u4e3a\u7ed9\u5b9a\u69fd\u4e2d\u7684\u5143\u7d20\u3002\u6b64\u65b9\u6cd5\u901a\u5e38\u7531[updatechild]\u8c03\u7528\uff0c\u4f46\u53ef\u4ee5\u8c03\u7528\u76f4\u63a5\u901a\u8fc7\u9700\u8981\u5bf9\u521b\u5efa\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u63a7\u5236\u7684\u5b50\u7c7b\u5143\u7d20\u3002 \u5982\u679c\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u6709\u4e00\u4e2a\u5168\u5c40\u952e\u5e76\u4e14\u5df2\u7ecf\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\u5177\u6709\u5177\u6709\u8be5\u5168\u5c40\u952e\u7684\u5c0f\u90e8\u4ef6\uff0c\u6b64\u51fd\u6570\u5c06\u91cd\u7528\u8be5\u5143\u7d20\u53ef\u80fd\u4ece\u6811\u4e0a\u7684\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u5ac1\u63a5\u6216\u91cd\u65b0\u6fc0\u6d3b(it from the list of inactive elements\uff09\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u5143\u7d20\u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u5143\u7d20\u5df2\u7ecf\u88ab\u88c5\u5165\u5c06\u5904\u4e8e\u6d3b\u52a8\u751f\u547d\u5468\u671f\u72b6\u6001\u3002\u6ce8:\u4ee5\u4e0a\u662f\u5bf9UI\u67b6\u6784\u4e2d\u4f7f\u7528\u5230\u7684\u903b\u8f91\u7ee7\u7eed\u5206\u6790\uff0c\u4e3b\u8981\u662f\u628a\u6574\u4e2aUI\u6846\u67b6\u7684\u6570\u636e\u8868\u793a\u548c\u5173\u8054\u8fdb\u884c\u62c6\u5206\u548c\u7ec4\u5408\uff0c\u80fd\u591f\u63d0\u4f9bUI\u53d8\u5316\u662f\u6570\u636e\u7684\u8ddf\u8e2a\u548c\u8bb0\u5f55(\u9759\u6001\u6570\u636e\u4fdd\u5b58\u903b\u8f91) final Element newChild = newWidget.createElement(); \u904d\u5386\u6811\uff0c\u4e3a\u6bcf\u4e00\u4e2aWidget\u751f\u6210\u5b9e\u4f8b\u5bf9\u8c61 Element ,\u8c03\u7528 mount \u65b9\u6cd5\u628a Elment \u6dfb\u52a0\u5230\u6811\u4e2d @ protected Element inflateWidget ( Widget newWidget , dynamic newSlot ) { assert ( newWidget != null ); final Key key = newWidget . key ; if ( key is GlobalKey ) { final Element newChild = _retakeInactiveElement ( key , newWidget ); if ( newChild != null ) { assert ( newChild . _parent == null ); assert (() { _debugCheckForCycles ( newChild ); return true ; }()); newChild . _activateWithParent ( this , newSlot ); final Element updatedChild = updateChild ( newChild , newWidget , newSlot ); assert ( newChild == updatedChild ); return updatedChild ; } } final Element newChild = newWidget . createElement (); assert (() { _debugCheckForCycles ( newChild ); return true ; }()); newChild . mount ( this , newSlot ); assert ( newChild . _debugLifecycleState == _ElementLifecycle . active ); return newChild ; }","title":"inflateWidget \u771f\u6b63\u521b\u5efaElement\u7684\u5730\u65b9"},{"location":"android/flutterdev/FlutterWidgetinit/#_6","text":"\u89e6\u53d1\u7b2c\u4e00\u5e27\u5c3d\u5feb\u6267\u884c\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u5f15\u64ce\u8bf7\u6c42\u5e27\u4ee5\u54cd\u5e94\u7cfb\u7edf\u201cvsync\u201d\u4fe1\u53f7\u3002\u8fd9\u5728\u5e94\u7528\u7a0b\u5e8f\u542f\u52a8\u671f\u95f4\u4f7f\u7528\uff0c\u4ee5\u4fbf\u7b2c\u4e00\u4e2a\u5e27\uff08\u5373\u53ef\u80fd\u5f88\u8d35\uff09\u5f97\u5230\u4e00\u4e9b\u989d\u5916\u7684\u6beb\u79d2\u6765\u8fd0\u884c\u3002\u9501\u5b9a\u4e8b\u4ef6\u8c03\u5ea6\uff0c\u76f4\u5230\u8c03\u5ea6\u7684\u5e27\u5b8c\u6210\u3002 \u5982\u679c\u5df2\u7ecf\u7528[scheduleFrame]\u8ba1\u5212\u4e86\u4e00\u4e2a\u5e27\uff0c\u6216\u8005[scheduleForcedFrame]\uff0c\u6b64\u8c03\u7528\u53ef\u80fd\u4f1a\u5ef6\u8fdf\u8be5\u5e27\u3002 \u5982\u679c\u4efb\u4f55\u8ba1\u5212\u7684\u5e27\u5df2\u7ecf\u5f00\u59cb\uff0c\u6216\u8005\u5982\u679c\u53e6\u4e00\u4e2a\u5df2\u7ecf\u8c03\u7528\u4e86[schedulewarmupframe]\uff0c\u6b64\u8c03\u7528\u5c06\u88ab\u5ffd\u7565\u3002prefer[scheduleframe]\u5728\u6b63\u5e38\u64cd\u4f5c\u4e2d\u66f4\u65b0\u663e\u793a\u3002 \u8c03\u7528 scheduleFrame \u89e6\u53d1window\u5bf9\u8c61\u5904\u7406\u7b2c\u4e00\u5e27\u6570\u636e window.scheduleFrame(); ,\u5c06\u4f1a\u89e6\u53d1 window.onBeginFrame ,\u5f00\u59cb\u6267\u884c\uff0c SchedulerBinding \u8d1f\u8d23\u5904\u7406window\u5bf9\u8c61\u7684frame\u56de\u8c03\u4e8b\u4ef6 void scheduleWarmUpFrame () { if ( _warmUpFrame || schedulerPhase != SchedulerPhase . idle ) return ; _warmUpFrame = true ; Timeline . startSync ( Warm-up frame ); final bool hadScheduledFrame = _hasScheduledFrame ; Timer . run (() { assert ( _warmUpFrame ); handleBeginFrame ( null ); }); Timer . run (() { assert ( _warmUpFrame ); handleDrawFrame (); resetEpoch (); _warmUpFrame = false ; if ( hadScheduledFrame ) scheduleFrame (); }); lockEvents (() async { await endOfFrame ; Timeline . finishSync (); }); } \u5728 RendererBinding \u521d\u59cb\u5316 initInstances \u65f6\uff0c addPersistentFrameCallback \u6dfb\u52a0\u5904\u7406\u4e00\u5e27\u7684\u56de\u8c03\u51fd\u6570 _handlePersistentFrameCallback ,\u4e00\u4e0b\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u4e0a\u4e00\u6b65\u4e2d\u8c03\u7528 scheduleFrame() \u89e6\u53d1 window.onDrawFrame \u56de\u8c03\u51fd\u6570\u6267\u884c void _handlePersistentFrameCallback ( Duration timeStamp ) { drawFrame (); }","title":"\u7ed8\u5236\u7b2c\u4e00\u5e27"},{"location":"android/flutterdev/FlutterWidgetinit/#pipeline","text":"","title":"Pipeline"},{"location":"android/flutterdev/FlutterWidgetinit/#pipeline_1","text":"\u7ba1\u9053\u6240\u6709\u8005\u7ba1\u7406\u5448\u73b0\u7ba1\u9053\u3002\u7ba1\u9053\u6240\u6709\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u9a71\u52a8\u5448\u73b0\u7ba1\u9053\u5e76\u5b58\u50a8\u5df2\u8bf7\u6c42\u8bbf\u95ee\u7684\u6e32\u67d3\u5bf9\u8c61\u7684\u72b6\u6001\u5728\u7ba1\u9053\u7684\u6bcf\u4e2a\u9636\u6bb5\u3002\u8981\u5237\u65b0\u7ba1\u9053\uff0c\u8bf7\u8c03\u7528\u4ee5\u4e0b\u547d\u4ee4\u51fd\u6570\u987a\u5e8f\uff1a 1.[flushlayout]\u66f4\u65b0\u4efb\u4f55\u9700\u8981\u8ba1\u7b97\u5176\u5e03\u5c40\u3002\u5728\u6b64\u9636\u6bb5\u4e2d\uff0c\u6bcf\u4e2a\u6e32\u67d3\u7684\u5927\u5c0f\u548c\u4f4d\u7f6e\u8ba1\u7b97\u5bf9\u8c61\u3002\u6e32\u67d3\u5bf9\u8c61\u53ef\u80fd\u4f1a\u5f04\u810f\u5176\u7ed8\u753b\u6216\u6b64\u9636\u6bb5\u7684\u5408\u6210\u72b6\u6001\u3002 2.[flushcompositingbits]\u66f4\u65b0\u4efb\u4f55\u5df2\u810f\u7684\u6e32\u67d3\u5bf9\u8c61\u5408\u6210\u4f4d\u3002\u5728\u6b64\u9636\u6bb5\u4e2d\uff0c\u6bcf\u4e2a\u6e32\u67d3\u5bf9\u8c61\u90fd\u5c06\u5b66\u4e60\u5b83\u7684\u4efb\u4f55\u5b50\u7ea7\u90fd\u9700\u8981\u5408\u6210\u3002\u6b64\u4fe1\u606f\u7528\u4e8e\u9009\u62e9\u5982\u4f55\u5b9e\u73b0\u89c6\u89c9\u6548\u679c\u65f6\u7684\u7ed8\u5236\u9636\u6bb5\uff0c\u4f8b\u5982\u526a\u8f91\u3002\u5982\u679c\u6e32\u67d3\u5bf9\u8c61\u6709\u5408\u6210\u5b50\u5bf9\u8c61\uff0c\u5219\u9700\u8981\u4f7f\u7528[\u5c42]\u521b\u5efa\u526a\u8f91\u4ee5\u4fbf\u526a\u8f91\u5e94\u7528\u4e8ecomposited child\uff08\u5c06\u88ab\u7ed8\u5236\u5230\u5b83\u81ea\u5df1\u7684[layer]\uff09\u3002 3.[flushpaint]\u8bbf\u95ee\u4efb\u4f55\u9700\u8981\u7ed8\u5236\u7684\u6e32\u67d3\u5bf9\u8c61\u3002\u5728\u6b64\u671f\u95f4\u9636\u6bb5\uff0c\u6e32\u67d3\u5bf9\u8c61\u6709\u673a\u4f1a\u5c06\u7ed8\u5236\u547d\u4ee4\u8bb0\u5f55\u5230[PictureLayer]\u548c\u6784\u9020\u5176\u4ed6\u5408\u6210\u7684[Layer]s\u3002 4\u3002\u6700\u540e\uff0c\u5982\u679c\u542f\u7528\u4e86\u8bed\u4e49\uff0c[flushssemantics]\u5c06\u7f16\u8bd1\u5448\u73b0\u5bf9\u8c61\u7684\u8bed\u4e49\u3002\u6b64\u8bed\u4e49\u4fe1\u606f\u7531\u63d0\u9ad8\u6e32\u67d3\u6811\u53ef\u8bbf\u95ee\u6027\u7684\u8f85\u52a9\u6280\u672f\u3002[renderBinding]\u4fdd\u5b58\u6e32\u67d3\u5bf9\u8c61\u7684\u7ba1\u9053\u6240\u6709\u8005\u5728\u5c4f\u5e55\u4e0a\u53ef\u89c1\u3002\u60a8\u53ef\u4ee5\u521b\u5efa\u5176\u4ed6\u7ba1\u9053\u6240\u6709\u8005\u6765\u7ba1\u7406off-screen\u5bf9\u8c61\uff0c\u5b83\u53ef\u4ee5\u72ec\u7acb\u4e8e\u5c4f\u5e55\u4e0a\u7684\u6e32\u67d3\u5bf9\u8c61\u3002 pipeline\u662f\u5728\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u8c03\u7528\u7684\uff1f\uff1f void runApp ( Widget app ) { WidgetsFlutterBinding . ensureInitialized () .. attachRootWidget ( app ) .. scheduleWarmUpFrame (); } \u6b64\u65b9\u6cd5\u7531[handleDrawFrame]\u8c03\u7528\uff0c\u5b83\u672c\u8eab\u88ab\u8c03\u7528\u5728\u5e03\u5c40\u548c\u7ed8\u5236\u6846\u67b6\u65f6\u7531\u5f15\u64ce\u81ea\u52a8\u6267\u884c\u3002\u6bcf\u4e2a\u5e27\u7531\u4ee5\u4e0b\u9636\u6bb5\u7ec4\u6210\uff1a 1.\u52a8\u753b\u9636\u6bb5\uff1a\u6ce8\u518c\u7684[handlebeginframe]\u65b9\u6cd5with[window.onbeginframe]\uff0c\u8c03\u7528\u6240\u6709\u4e34\u65f6\u5e27\u56de\u8c03\u6309\u6ce8\u518c\u987a\u5e8f\u5411[scheduleFrameCallback]\u6ce8\u518c\u3002\u8fd9\u4e2a\u5305\u542b\u6b63\u5728\u9a71\u52a8\u7684\u6240\u6709\u5b9e\u4f8bobjects\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709\u6d3b\u52a8\u7684[animation]\u5bf9\u8c61\u70b9\u3002 2.Microtasks\uff1a\u5728[handlebeginframe]\u8fd4\u56de\u540e\uff0c\u4efb\u4f55\u7531\u4e34\u65f6\u5e27\u56de\u8c03\u5b89\u6392\u7684\u8fd0\u884c\u3002\u8fd9\u901a\u5e38\u5305\u62ec[ticker]\u548c[animationcontroller]\u7684\u671f\u8d27\u56de\u8c03\u5b8c\u6210\u6b64\u5e27\u3002\u5728[handlebeginframe]\u4e4b\u540e\uff0c[handledrawframe]\uff0c\u6ce8\u518c\u4e8e\u8c03\u7528\u4e86[window.onDrawFrame]\uff0c\u5b83\u8c03\u7528\u6240\u6709\u7684\u6301\u4e45\u5e27callbacks\uff0c\u5176\u4e2d\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u4e2a\u65b9\u6cd5\uff0c[drawFrame]\uff0c\u5b83 3.\u5e03\u5c40\u9636\u6bb5\uff1a\u7cfb\u7edf\u4e2d\u6240\u6709\u810f\u7684[renderobject]\u90fd\u88ab\u653e\u7f6eout\uff08\u53c2\u89c1[renderObject.performlayout]\uff09\u3002\u53c2\u89c1[renderobject.markneedslayout]\u6709\u5173\u5c06\u5bf9\u8c61\u6807\u8bb0\u4e3a\u810f\u7684\u5e03\u5c40\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 4.\u5408\u6210\u4f4d\u9636\u6bb5\uff1a\u4efb\u4f55\u810f\u6587\u4ef6\u4e0a\u7684\u5408\u6210\u4f4d[renderObject]\u5bf9\u8c61\u5df2\u66f4\u65b0\u3002\u6e56[renderObject.markneedscompositingbitsupdate]\u3002 5.\u7ed8\u5236\u9636\u6bb5\uff1a\u7cfb\u7edf\u4e2d\u6240\u6709\u810f\u7684[renderobject]\u90fd\u662f\u91cd\u65b0\u7ed8\u5236\uff08\u53c2\u89c1[renderobject.paint]\uff09\u3002\u8fd9\u5c06\u751f\u6210[\u5c42]\u6811\u3002\u6e56[renderbject.markneedspaint]\u4e86\u89e3\u6709\u5173\u6807\u8bb0\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u6cb9\u6f06\u810f\u4e86\u3002 6.\u5408\u6210\u9636\u6bb5\uff1a\u56fe\u5c42\u6811\u53d8\u6210\u4e00\u4e2a\u573a\u666f\u53d1\u9001\u5230GPU\u30027\u3002\u8bed\u4e49\u9636\u6bb5\uff1a\u7cfb\u7edf\u4e2d\u6240\u6709\u810f\u7684[renderobject]\u90fd\u6709\u5b83\u4eec\u7684\u8bed\u4e49\u5df2\u66f4\u65b0\uff08\u8bf7\u53c2\u89c1[renderobject.semanticsannotator]\uff09\u3002\u8fd9\u4e2a\u751f\u6210[semanticsnode]\u6811\u3002\u6e56[renderbject.markneedssemanticsupdate]\u4e86\u89e3\u6709\u5173\u6807\u8bb0\u8bed\u4e49\u7684\u810f\u5bf9\u8c61\u3002\u6709\u5173\u6b65\u9aa43-7\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1[PipelineOwner]\u3002 8.\u5b9a\u7a3f\u9636\u6bb5\uff1a\u5728[DrawFrame]\u8fd4\u56de\u540e\uff0c[HandleDrawFrame]\u7136\u540e\u8c03\u7528\u540e\u5e27\u56de\u8c03\uff08\u4f7f\u7528[addPostFrameCallback]\u6ce8\u518c\uff09\u3002\u4e00\u4e9b\u7ed1\u5b9a\uff08\u4f8b\u5982\uff0c[widgetsbinding]\uff09\u4e3a\u6b64\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u6b65\u9aa4list\uff08\u4f8b\u5982\uff0c\u8bf7\u53c2\u89c1[widgetsbinding.drawframe]\uff09\u3002 @ protected void drawFrame () { assert ( renderView != null ); pipelineOwner . flushLayout (); pipelineOwner . flushCompositingBits (); pipelineOwner . flushPaint (); renderView . compositeFrame (); // this sends the bits to the GPU pipelineOwner . flushSemantics (); // this also sends the semantics to the OS. }","title":"pipeline"},{"location":"android/flutterdev/FlutterWidgetinit/#flushlayout","text":"BuildOwner\u5728\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\u628a\u9700\u8981\u4f1a\u5728\u7684 RenderObject \u5bf9\u8c61\u67e5\u627e\u51fa\u6765\u4fdd\u5b58\u5728 _nodesNeedingLayout \u5217\u8868\u4e2d\uff0c\u901a\u8fc7\u6811\u7684\u6df1\u5ea6\u6765\u8fdb\u884c\u6392\u5e8f\u904d\u5386\uff0c\u8c03\u7528 _layoutWithoutResize \u65b9\u6cd5\u8fdb\u884c\u5e03\u5c40\u5927\u5c0f\u7684\u6539\u53d8\uff0c\u540c\u65f6\u628a\u9700\u8981\u7ed8\u5236\u7684 RenderObject \u6dfb\u52a0\u5230 _nodesNeedingPaint \u96c6\u5408\u4e2d\u4fbf\u4e8e\u4e0b\u4e00\u4e2a\u9636\u6bb5\u8fdb\u884c\u7ed8\u5236\uff0c\u6539\u53d8 _needsPaint \u4e3atrue void flushLayout () { .... try { // TODO(ianh): assert that we re not allowing previously dirty nodes to redirty themselves while ( _nodesNeedingLayout . isNotEmpty ) { final List RenderObject dirtyNodes = _nodesNeedingLayout ; _nodesNeedingLayout = RenderObject []; for ( RenderObject node in dirtyNodes .. sort (( RenderObject a , RenderObject b ) = a . depth - b . depth )) { if ( node . _needsLayout node . owner == this ) node . _layoutWithoutResize (); } } } finally { ... } }","title":"flushLayout"},{"location":"android/flutterdev/FlutterWidgetinit/#flushcompositingbits","text":"\u4e0a\u4e00\u6b65\u4e2d\u628a\u76f8\u5173\u7684\u4f4d\u7f6e\u5927\u5c0f\u786e\u8ba4\u597d\u4e4b\u540e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u63a7\u4ef6\u6709\u91cd\u53e0\u7684\u90e8\u5206\uff0c\u9700\u8981\u8fdb\u884c\u5408\u5e76,\u5982\u4f55\u8c03\u7528 markNeedsPaint \u51c6\u5907\u540e\u7eed\u9700\u8981\u6c47\u603b\u7684\u5185\u5bb9 void flushCompositingBits () { if ( ! kReleaseMode ) { Timeline . startSync ( Compositing bits ); } _nodesNeedingCompositingBitsUpdate . sort (( RenderObject a , RenderObject b ) = a . depth - b . depth ); for ( RenderObject node in _nodesNeedingCompositingBitsUpdate ) { if ( node . _needsCompositingBitsUpdate node . owner == this ) node . _updateCompositingBits (); } _nodesNeedingCompositingBitsUpdate . clear (); if ( ! kReleaseMode ) { Timeline . finishSync (); } }","title":"flushCompositingBits"},{"location":"android/flutterdev/FlutterWidgetinit/#flushpaint","text":"\u66f4\u65b0\u6240\u6709\u6e32\u67d3\u5bf9\u8c61\u7684\u663e\u793a\u5217\u8868\u3002\u6b64\u51fd\u6570\u662f\u6e32\u67d3\u7ba1\u9053\u7684\u6838\u5fc3\u9636\u6bb5\u4e4b\u4e00\u3002\u5728\u5e03\u5c40\u4e4b\u540e\u548c\u91cd\u65b0\u653e\u7f6e\u573a\u666f\u4e4b\u524d\u8fdb\u884c\u7ed8\u5236\uff0c\u4ee5\u4fbf\u573a\u666f\u4e0e\u6bcf\u4e2a\u6e32\u67d3\u5bf9\u8c61\u7684\u6700\u65b0\u663e\u793a\u5217\u8868\u5408\u6210\u3002\u6709\u5173\u5982\u4f55\u4f7f\u7528\u6b64\u51fd\u6570\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1[RenderBinding]\u3002 \u901a\u8fc7\u5e03\u5c40\u548c\u5408\u6210\u4e24\u6b65\u7684\u8ba1\u7b97\u64cd\u4f5c\uff0c\u5df2\u7ecf\u628a\u9700\u8981\u6c47\u603b\u7684\u6570\u636e\u8ba1\u7b97\u51fa\u6765\uff0c\u63d0\u4f9b\u7ed9\u753b\u7b14\u5bf9\u8c61\u628a RenderObject \u5bf9\u8c61\u7ed8\u5236\u5728 layer \u4e0a\uff0cWindow\u5bf9\u8c61\u4e2d render(Scene scene) \u5c31\u662f\u5728\u4e3a\u6b64\u51fd\u6570\u51c6\u5907\u6570\u636e void flushPaint () { ..... try { final List RenderObject dirtyNodes = _nodesNeedingPaint ; _nodesNeedingPaint = RenderObject []; // Sort the dirty nodes in reverse order (deepest first). for ( RenderObject node in dirtyNodes .. sort (( RenderObject a , RenderObject b ) = b . depth - a . depth )) { assert ( node . _layer != null ); if ( node . _needsPaint node . owner == this ) { if ( node . _layer . attached ) { ///\u6b64\u6b65\u9aa4\u662f\u6c47\u603b\u7684\u8be6\u7ec6\u8fc7\u7a0b\uff0c\u53d1\u5230\u540e\u9762\u5728\u8fdb\u884c\u89e3\u6790 PaintingContext . repaintCompositedChild ( node ); } else { node . _skippedPaintingOnLayer (); } } } assert ( _nodesNeedingPaint . isEmpty ); } finally { ...... } }","title":"flushPaint"},{"location":"android/flutterdev/FlutterWidgetinit/#renderviewcompositeframe","text":"\u4e0a\u4e00\u6b65\u4e2d\u5df2\u7ecf\u628a\u9700\u8981\u6c47\u603b\u7684 RenderObject \u8fdb\u884c\u4e86\u7ed8\u5236\uff0c\u6bcf\u4e00\u4e2a RenderObject \u4e2d\u90fd\u6709\u4e00\u4e2a ContainerLayer \u5bf9\u8c61\uff0c\u4f5c\u4e3a\u6bcf\u4e00\u4e2a\u6e32\u67d3\u5bf9\u8c61\u7684 Layer ,\u73b0\u5728\u9700\u8981\u5904\u7406\u7684\u662f\u5728Flutter\u5df2\u7ecf\u505a\u597d\u4e86\u903b\u8f91\u64cd\u4f5c\uff0c\u9700\u8981\u628aDart\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6e32\u67d3\u5f15\u64ce\u80fd\u591f\u8bc6\u522b\u7684\u5bf9\u8c61: Window\u5bf9\u8c61\u4e2d render(Scene scene) \u5c31\u662f\u5728\u4e3a\u6b64\u51fd\u6570\u51c6\u5907\u6570\u636e\uff0c\u901a\u8fc7Navtive\u8c03\u7528\u628a\u6570\u636e\u4f20\u9012\u5230\u5e95\u5c42\u7ed8\u5236 1.\u4f7f\u7528SceneBuilder\u5bf9\u8c61\u6765\u521b\u5efa\u573a\u666f 2.\u628a RenderObject \u5bf9\u8c61\u4e2d\u6570\u636e\u53d6\u51fa\u6765\u6784\u5efaScene\u7684\u539f\u59cb\u6570\u636e 3.\u8c03\u7528 _window.render(scene); \u5b9e\u73b0\u771f\u6b63\u7684\u6570\u636e\u4f20\u9012\u5230\u6e32\u67d3\u5f15\u64ce /// Uploads the composited layer tree to the engine. /// /// Actually causes the output of the rendering pipeline to appear on screen. void compositeFrame () { try { final ui . SceneBuilder builder = ui . SceneBuilder (); final ui . Scene scene = layer . buildScene ( builder ); if ( automaticSystemUiAdjustment ) _updateSystemChrome (); _window . render ( scene ); scene . dispose (); assert (() { if ( debugRepaintRainbowEnabled || debugRepaintTextRainbowEnabled ) debugCurrentRepaintColor = debugCurrentRepaintColor . withHue (( debugCurrentRepaintColor . hue + 2.0 ) % 360.0 ); return true ; }()); } finally { } }","title":"renderView.compositeFrame()"},{"location":"android/flutterdev/FlutterWidgetinit/#_7","text":"\u8ba1\u7b97\u6b64\u6e32\u67d3\u5bf9\u8c61\u7684\u5e03\u5c40\u3002\u6b64\u65b9\u6cd5\u662f\u7236\u63a7\u4ef6\u8981\u6c42\u5b50\u63a7\u4ef6\u6267\u884c\u7684\u4e3b\u8981\u5165\u53e3\u70b9\u66f4\u65b0\u4ed6\u4eec\u7684\u5e03\u5c40\u4fe1\u606f\u3002\u7236\u5bf9\u8c61\u4f20\u9012\u7ea6\u675f\u5bf9\u8c61\u5b83\u901a\u77e5\u5b50\u7ea7\u54ea\u4e9b\u5e03\u5c40\u662f\u5141\u8bb8\u7684\u3002\u8fd9\u5b50\u63a7\u4ef6\u662f\u5fc5\u987b\u9075\u5b88\u7ed9\u5b9a\u7684\u7ea6\u675f\u3002\u5982\u679c\u7236\u7ea7\u8bfb\u53d6\u5b50\u7ea7\u5e03\u5c40\u671f\u95f4\u8ba1\u7b97\u7684\u4fe1\u606f\uff0c\u5219\u201cparentUseSSize\u201d\u7684\u7236\u7ea7\u5fc5\u987b\u4f20\u9012true\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7236\u6bcd\u5c06\uff1a\u53ea\u8981\u5b50\u9879\u88ab\u6807\u8bb0\u4e3a\u9700\u8981\u5e03\u5c40\uff0c\u5c31\u88ab\u6807\u8bb0\u4e3a\u9700\u8981\u5e03\u5c40\u56e0\u4e3a\u7236\u7ea7\u7684\u5e03\u5c40\u4fe1\u606f\u4f9d\u8d56\u4e8e\u5b50\u7ea7\u7684\u5e03\u5c40\u4fe1\u606f\u3002\u5982\u679c\u7236\u9879\u4f7f\u7528\u9ed8\u8ba4\u503c\uff08false\uff09\u201cparentUseSSize\u201d\uff0c\u5b50\u9879\u53ef\u4ee5\u66f4\u6539\u5176\u5e03\u5c40\u4fe1\u606f\uff08\u6839\u636e\u7ed9\u5b9a\u7684\u7ea6\u675f\uff09\u800c\u4e0d\u901a\u77e5\u7236\u7ea7\u3002\u5b50\u7c7b\u4e0d\u5e94\u76f4\u63a5\u91cd\u5199[Layout]\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u5e94\u8be5\u91cd\u5199[PerformResize]\u548c/\u6216[performLayout]\u3002delegates\u5c06\u5b9e\u9645\u5de5\u4f5c\u59d4\u6258\u7ed9[performResize]\u548c[performLayout]\u3002\u7236\u7ea7\u7684[Performance Layout]\u65b9\u6cd5\u5e94\u8c03\u7528\u5176\u6240\u6709\u65e0\u6761\u4ef6\u7684\u5b50\u9879\u3002\u8fd9\u662f[\u5e03\u5c40]\u65b9\u6cd5\u7684\u8d23\u4efb\u5728\u6b64\u5904\u5b9e\u73b0\uff09\u5982\u679c\u5b50\u9879\u4e0d\u9700\u8981\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u5219\u63d0\u524d\u8fd4\u56de\u66f4\u65b0\u5176\u5e03\u5c40\u4fe1\u606f\u3002 flushLayout \u8c03\u7528 node._layoutWithoutResize(); \u8fdb\u884c\u6e32\u67d3\u5bf9\u8c61\u7684\u4f4d\u7f6e\u8ba1\u7b97 RenderView \u4e2d\u7684 performLayout \u8fdb\u884clayout\u8fdb\u884c\u5904\u7406 @ override void performLayout () { assert ( _rootTransform != null ); _size = configuration . size ; assert ( _size . isFinite ); if ( child != null ) child . layout ( BoxConstraints . tight ( _size )); }","title":"\u5982\u4f55\u8ba1\u7b97\u6e32\u67d3\u5bf9\u8c61\u7684\u6446\u653e\u4f4d\u7f6e\u548c\u81ea\u5b9a\u4e49\u63a7\u4ef6"},{"location":"android/flutterdev/FlutterWidgetinit/#_8","text":"1.\u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\u6211\u4eec\u77e5\u9053\uff0cWidget\u51fa\u73b0\u5728\u5c4f\u5e55\u4e0a\u6267\u884c\u6267\u884c\u56db\u4e2a\u6b65\u9aa4\u5c31\u53ef\u4ee5\u663e\u793a\u3002FlutterUI\u6846\u67b6\u4e2d\u5bf9Widow\u7c7b\u8fdb\u884c\u62c6\u5206\uff0c\u5bf9\u4e0d\u540c\u7684\u56de\u8c03\u4e8b\u4ef6\u8fdb\u884c\u4e0d\u540c\u7684mixin\u7c7b\u6765\u8fdb\u884c\u5904\u7406 2.\u901a\u8fc7runApp\u628a\u5f00\u53d1\u7684Widget\u548c\u7cfb\u7edf\u6846\u67b6\u5c42\u5173\u8054\uff1a1.Element\u548cRenderObject\u5bf9\u8c61\u8fdb\u884c\u7ed1\u5b9a\u30022.\u89e6\u53d1\u7cfb\u7edf\u7ed8\u5236\u4e00\u5e27 3.\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u5b9e\u9645\u529f\u80fd BindingBase GestureBinding, ServicesBinding, SchedulerBinding, PaintingBinding, SemanticsBinding, RendererBinding, WidgetsBinding 4.\u901a\u8fc7 RenderObjectToWidgetAdapter \u5bf9\u8c61\u6765\u8fdb\u884cElement\u3001RenderObject\u5bf9\u8c61\u8fdb\u884c\u5173\u8054\uff0c\u4e3b\u8981\u662f\u5904\u7406Widget\u7684\u6570\u636e\u548cRenderView\u4e2d\u7684\u6570\u636e 5.Element\u7ba1\u7406Widget\u6570\u636e 6.RenderObject\u9762\u5411Flutter\u5f15\u64ce\u63a5\u53e3\uff0c\u63d0\u4f9b\u7ed8\u5236UI\u6570\u636e\u7684Layters 7.BuildContext\u63d0\u4f9b\u4e86Widget\u4e2d\u8bbf\u95eeRenderObject\u5bf9\u8c61\u7684\u63a5\u53e3 8.BuildOwer\u4e3b\u8981\u662f\u53d8\u91cfElement\u67e5\u627e\u51fa\u90a3\u4e9bElement\u662f\u9700\u8981\u91cd\u65b0\u8fdb\u884c\u7ed8\u5236\u7684 9.Pipeline\u63d2\u5ea7RenderObject\u5bf9\u8c61\uff0c\u5904\u7406\u90a3\u4e9b\u4e8b\u6e32\u67d3\u5bf9\u8c61\u662f\u9700\u8981\u5728Layer\u8fdb\u884cLayout\u3001\u586b\u5145\u3001\u7ed8\u5236\u7684 10.\u8c03\u7528RenderView\u4e2d\u7684\u65b9\u6cd5\uff0c\u628a\u751f\u6210\u7684\u6570\u636e\u8c03\u7528window.render(scene)\u4f20\u9012\u5230\u6e32\u67d3\u5f15\u64ce 11.RenderObject\u662f\u5982\u4f55\u6446\u653e\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\u7684 \u81ea\u5b9a\u4e49\u63a7\u4ef6","title":"\u603b\u7ed3"},{"location":"android/flutterdev/Flutterdeployment/","text":"Android IOS\u6253\u5305\u53d1\u5e03 \u6982\u8981 \u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u6539\u53d8\u4e16\u754c\uff0c\u4e30\u5bcc\u4eba\u4eec\u7684\u751f\u6d3b\uff0c\u5e76\u4f7f\u50cf\u60a8\u8fd9\u6837\u7684\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u524d\u6240\u672a\u6709\u5730\u8fdb\u884c\u521b\u65b0\u3002\u7ed3\u679c\uff0cApp Store\u5df2\u6210\u957f\u4e3a\u4e00\u4e2a\u6fc0\u52a8\u4eba\u5fc3\u4e14\u5145\u6ee1\u6d3b\u529b\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u4e3a\u6570\u767e\u4e07\u5f00\u53d1\u4eba\u5458\u548c\u8d85\u8fc710\u4ebf\u7528\u6237\u6240\u7528\u3002\u65e0\u8bba\u60a8\u662f\u7b2c\u4e00\u6b21\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7a0b\u5e8f\u5458\u7ec4\u6210\u7684\u5e9e\u5927\u56e2\u961f\uff0c\u6211\u4eec\u90fd\u4e3a\u60a8\u6b63\u5728\u4e3aApp Store\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u800c\u611f\u5230\u5174\u594b\uff0c\u5e76\u5e0c\u671b\u5e2e\u52a9\u60a8\u4e86\u89e3\u6211\u4eec\u7684\u6307\u5357\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u786e\u4fe1\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u5feb\u901f\u901a\u8fc7\u5ba1\u6838\u8fc7\u7a0b\u3002 \u4ecb\u7ecd \u5e94\u7528\u5e02\u573a\u7684\u6307\u5bfc\u539f\u5219\u5f88\u7b80\u5355-\u6211\u4eec\u5e0c\u671b\u4e3a\u7528\u6237\u63d0\u4f9b\u83b7\u53d6\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u4f53\u9a8c\uff0c\u5e76\u4e3a\u6240\u6709\u5f00\u53d1\u4eba\u5458\u53d6\u5f97\u6210\u529f\u63d0\u4f9b\u5de8\u5927\u7684\u673a\u4f1a\u3002\u6211\u4eec\u901a\u8fc7\u63d0\u4f9b\u9ad8\u5ea6\u7b56\u5212\u7684\u5e94\u7528\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u7ecf\u8fc7\u4e13\u5bb6\u5ba1\u67e5\uff0c\u7f16\u8f91\u56e2\u961f\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u6bcf\u5929\u53d1\u73b0\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u5176\u4ed6\u6240\u6709\u65b9\u9762\uff0c\u59cb\u7ec8\u90fd\u6709\u5f00\u653e\u7684Internet\u3002\u5982\u679c\u5e94\u7528\u5e02\u573a\u6a21\u578b\u548c\u6307\u5357\u4e0d\u9002\u5408\u60a8\u7684\u5e94\u7528\u6216\u4e1a\u52a1\u6784\u60f3\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u63d0\u4f9bSafari\u6765\u63d0\u4f9b\u51fa\u8272\u7684Web\u4f53\u9a8c\u3002 \u5728\u4ee5\u4e0b\u9875\u9762\u4e0a\uff0c\u60a8\u4f1a\u53d1\u73b0\u6211\u4eec\u7684\u6700\u65b0\u6307\u5357\u5206\u4e3a\u4e94\u4e2a\u6e05\u6670\u7684\u90e8\u5206\uff1a\u5b89\u5168\uff0c\u6027\u80fd\uff0c\u4e1a\u52a1\uff0c\u8bbe\u8ba1\u548c\u6cd5\u5f8b\u3002\u5e94\u7528\u5e02\u573a\u603b\u662f\u5728\u4e0d\u65ad\u53d8\u5316\u548c\u6539\u8fdb\uff0c\u4ee5\u9002\u5e94\u6211\u4eec\u5ba2\u6237\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u9700\u6c42\u3002\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5e94\u8be5\u8fdb\u884c\u66f4\u6539\u548c\u6539\u8fdb\uff0c\u4ee5\u4fbf\u4fdd\u7559\u5728\u5e94\u7528\u5e02\u573a\u4e2d\u3002 1.\u5b89\u5168 2.\u6027\u80fd 3.\u4e1a\u52a1 4.\u8bbe\u8ba1 5.\u6cd5\u5f8b\u6cd5\u89c4(\u4e0d\u540c\u56fd\u5bb6\u548c\u5730\u533a) \u786e\u4fdd \u6d4b\u8bd5\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u5d29\u6e83\u548c\u9519\u8bef \u786e\u4fdd\u6240\u6709\u5e94\u7528\u4fe1\u606f\u548c\u5143\u6570\u636e\u5b8c\u6574\u4e14\u51c6\u786e \u66f4\u65b0\u60a8\u7684\u8054\u7cfb\u4fe1\u606f\uff0c\u4ee5\u9632App Review\u9700\u8981\u4e0e\u60a8\u8054\u7cfb \u63d0\u4f9b\u6709\u6548\u7684\u6f14\u793a\u5e10\u6237\u548c\u767b\u5f55\u4fe1\u606f\uff0c\u4ee5\u53ca\u67e5\u770b\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u7684\u4efb\u4f55\u5176\u4ed6\u786c\u4ef6\u6216\u8d44\u6e90\uff08\u4f8b\u5982\uff0c\u767b\u5f55\u51ed\u636e\u6216\u793a\u4f8bQR\u7801\uff09 \u542f\u7528\u540e\u7aef\u670d\u52a1\uff0c\u4ee5\u4fbf\u5b83\u4eec\u5728\u5ba1\u6838\u671f\u95f4\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u5e76\u53ef\u4ee5\u8bbf\u95ee \u5728App Review\u6ce8\u91ca\u4e2d\u5305\u62ec\u5bf9\u975e\u663e\u800c\u6613\u89c1\u529f\u80fd\u548c\u5e94\u7528\u5185\u8d2d\u4e70\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u5e76\u5728\u9002\u5f53\u65f6\u5305\u62ec\u652f\u6301\u6587\u6863\u3002 UI\u6846\u67b6:UIKit\u6846\u67b6\u63d0\u4f9b\u4e86\u6784\u5efa\u7528\u4e8eiOS\u548ctvOS\u7684\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6838\u5fc3\u5bf9\u8c61\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u60a8\u7684\u5185\u5bb9\uff0c\u4e0e\u8be5\u5185\u5bb9\u8fdb\u884c\u4ea4\u4e92\u4ee5\u53ca\u7ba1\u7406\u4e0e\u7cfb\u7edf\u7684\u4ea4\u4e92\u3002\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u4e8eUIKit\u7684\u57fa\u672c\u884c\u4e3a\uff0c\u800cUIKit\u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u884c\u4e3a\u4ee5\u7b26\u5408\u60a8\u7684\u7279\u5b9a\u9700\u6c42\u3002 Xcode\u9879\u76ee\u6587\u4ef6\u7ed3\u6784:\u5728\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0cXcode\u4f1a\u7f16\u8bd1\u60a8\u7684\u6e90\u6587\u4ef6\u5e76\u4e3a\u60a8\u7684\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\u3002\u5e94\u7528\u7a0b\u5e8f\u6346\u7ed1\u5305\u662f\u4e00\u4e2a\u7ed3\u6784\u5316\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u4e0e\u8be5\u5e94\u7528\u7a0b\u5e8f\u5173\u8054\u7684\u4ee3\u7801\u548c\u8d44\u6e90\u3002\u8d44\u6e90\u5305\u62ec\u652f\u6301\u60a8\u7684\u4ee3\u7801\u7684\u56fe\u50cf\u8d44\u4ea7\uff0c\u60c5\u8282\u63d0\u8981\u6587\u4ef6\uff0c\u5b57\u7b26\u4e32\u6587\u4ef6\u548c\u5e94\u7528\u7a0b\u5e8f\u5143\u6570\u636e\u3002\u5e94\u7528\u7a0b\u5e8f\u6346\u7ed1\u5305\u7684\u7ed3\u6784\u5f88\u91cd\u8981\uff0c\u4f46\u662fXcode\u77e5\u9053\u60a8\u7684\u8d44\u6e90\u9700\u8981\u5b58\u653e\u5728\u54ea\u91cc\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u5fc5\u62c5\u5fc3\u3002 IOS\u6253\u5305 \u6211\u4eec\u4f1a\u5ba1\u67e5\u63d0\u4ea4\u7ed9AppStore\u7684\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\uff0c\u4ee5\u786e\u5b9a\u5b83\u4eec\u662f\u5426\u53ef\u9760\uff0c\u662f\u5426\u8fbe\u5230\u9884\u671f\u6548\u679c\u4ee5\u53ca\u662f\u5426\u6ca1\u6709\u4ee4\u4eba\u53cd\u611f\u7684\u6750\u6599\u3002\u5728\u8ba1\u5212\u548c\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f7f\u7528\u8fd9\u4e9b\u51c6\u5219\u548c\u8d44\u6e90\u3002 1.\u89c4\u5212\u548c\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f 2.\u662f\u5426\u5230\u8fbe\u9884\u671f 3.\u662f\u5426\u53ef\u9760 4.\u662f\u5426\u6709\u8ba9\u4eba\u53d1\u7684\u5185\u5bb9 5.\u63d0\u4ea4\u5e94\u7528\u5e02\u573a \u68c0\u67e5\u60a8\u7684\u5e94\u7528\u662f\u5426\u9075\u5faa\u5176\u4ed6\u6587\u6863\u4e2d\u7684\u6307\u5bfc \u53d1\u5c55\u65b9\u9488 \u5e94\u7528\u7a0b\u5f0f\u8bbe\u8ba1\u6307\u5357 App Extension\u7f16\u7a0b\u6307\u5357 iOS\u6570\u636e\u5b58\u50a8\u51c6\u5219 macOS\u6587\u4ef6\u7cfb\u7edf\u6587\u6863 Safari\u5e94\u7528\u7a0b\u5e8f\u6269\u5c55 App Store Connect\u5e2e\u52a9 \u8bbe\u8ba1\u51c6\u5219 \u4eba\u673a\u754c\u9762\u51c6\u5219 \u54c1\u724c\u4e0e\u884c\u9500\u51c6\u5219 \u8425\u9500\u8d44\u6e90\u548c\u8eab\u4efd\u51c6\u5219 Apple Pay\u8eab\u4efd\u51c6\u5219 \u6dfb\u52a0\u5230Apple\u7535\u5b50\u94b1\u5305\u6307\u5357 \u4f7f\u7528\u82f9\u679c\u5546\u6807\u548c\u7248\u6743\u7684\u51c6\u5219 \u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u6570\u636e\u7edf\u8ba1 Xcode Help Apple Developer Program \u6d4b\u8bd5 \u6570\u636e\u7edf\u8ba1 \u8861\u91cfiOS\uff0cmacOS\u548ctvOS\u4e0a\u7684\u5e94\u7528\u7684\u7528\u6237\u53c2\u4e0e\u5ea6\uff0c\u8425\u9500\u6d3b\u52a8\uff0c\u83b7\u5229\u7b49\u3002 Access App Analytic App Store\u6765\u6e90 \u501f\u52a9App Analytics\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6709\u591a\u5c11\u7528\u6237\u5728\u641c\u7d22\u6216\u6d4f\u89c8App Store\u65f6\u53d1\u73b0\u4e86\u60a8\u7684\u5e94\u7528\uff08\u5305\u62ec\u5728iOS\u4e0a\u70b9\u51fb\u9002\u7528\u4e8e\u60a8\u7684\u5e94\u7528\u7684Search Ads\uff09\u4ee5\u4e86\u89e3\u60a8\u7684\u8425\u9500\u548c\u5143\u6570\u636e\u5982\u4f55\u5f71\u54cd\u4e0b\u8f7d\u3002 \u5e94\u7528\u5f15\u8350\u6765\u6e90 App Analytics\u4f1a\u7edf\u8ba1\u4ece\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u94fe\u63a5\u8bbf\u95eeiOS\u6216tvOS\u4e0a\u60a8\u5e94\u7528\u7a0b\u5e8f\u4ea7\u54c1\u9875\u9762\u7684\u7528\u6237\u3002\u901a\u8fc7\u5173\u6ce8\u53ef\u5e26\u6765\u6700\u591aApp Store\u5370\u8c61\uff0c\u4e0b\u8f7d\u548c\u8d26\u5355\u7684\u5e94\u7528\u6765\u4f18\u5316\u60a8\u7684\u8425\u9500\u6d3b\u52a8\u3002 \u7f51\u7edc\u63a8\u8350\u4eba \u94fe\u63a5\u5230\u5e94\u7528\u7a0b\u5e8f\u4ea7\u54c1\u9875\u9762\u7684\u535a\u5ba2\uff0c\u7f51\u7ad9\u548c\u5176\u4ed6\u5728\u7ebf\u8d44\u6e90\u5bf9\u4e8e\u901a\u8fc7\u53e3\u7891\u8425\u9500\u548cPR\u6765\u5438\u5f15\u7528\u6237\u81f3\u5173\u91cd\u8981\u3002\u501f\u52a9App Analytics\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u54ea\u4e9b\u6709\u673a\u8425\u9500\u6e20\u9053\u4e3a\u60a8\u7684\u5e94\u7528\u5e26\u6765\u4e86\u6700\u9ad8\u7684\u6d41\u91cf\uff0c\u4e0b\u8f7d\u91cf\uff0c\u4f7f\u7528\u91cf\u548c\u6536\u5165\u3002 App Store\u5c55\u793a\u6b21\u6570 \u67e5\u770b\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u5728App Store\u4e0a\u6d4f\u89c8\u4e86\u591a\u5c11\u6b21\uff0c\u5305\u62ec\u5728\u641c\u7d22\u7ed3\u679c\uff0c\u7cbe\u9009\uff0c\u70ed\u95e8\u56fe\u8868\u548cApp Store\u4ea7\u54c1\u9875\u9762\u4e2d\u3002\u501f\u52a9App Store\u5c55\u793a\u6b21\u6570\uff0c\u60a8\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7528\u6237\u70b9\u51fb\u6d4f\u89c8\u60a8\u7684\u5e94\u7528\u7684\u9891\u7387\uff0c\u800c\u65e0\u9700\u67e5\u770b\u5728App Store\u4e0a\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002 \u7528\u6237\u53c2\u4e0e\u5ea6 App Analytics\u63d0\u4f9b\u4e86\u7528\u6237\u53c2\u4e0e\u5ea6\u6307\u6807\uff0c\u5305\u62ec\u4f1a\u8bdd\u6570\uff0c\u6d3b\u52a8\u8bbe\u5907\u4ee5\u53caiOS\u548ctvOS\u4e0a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u4fdd\u7559\u65f6\u95f4\u3002\u501f\u52a9\u8fd9\u4e9b\u6307\u6807\uff0c\u60a8\u53ef\u4ee5\u8bc4\u4f30\u4ea7\u54c1\u66f4\u6539\u7684\u5f71\u54cd\uff08\u4f8b\u5982\u4fee\u6539\u521d\u59cb\u7684\u5165\u804c\u4f53\u9a8c\uff09\uff0c\u4ee5\u67e5\u770b\u54ea\u4e9b\u66f4\u6539\u53ef\u4ee5\u6539\u5584\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u4e92\u52a8\u3002 \u5220\u9664\u65b0 \u67e5\u770b\u6709\u591a\u5c11\u7528\u6237\u4ece\u8fd0\u884ciOS 12.3\u6216\u66f4\u9ad8\u7248\u672c\u7684\u8bbe\u5907\u4e0a\u5220\u9664\u4e86\u60a8\u7684\u5e94\u7528\u3002\u6d4b\u91cf\u201c\u5e94\u7528\u7a0b\u5e8f\u5220\u9664\u201d\uff0c\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u7528\u6237\u5bf9\u5e94\u7528\u7a0b\u5e8f\u66f4\u6539\uff08\u4f8b\u5982\u5185\u5bb9\u66f4\u65b0\uff0c\u4ef7\u683c\u8c03\u6574\u6216\u5d29\u6e83\uff09\u7684\u53cd\u5e94\u3002\u6309\u6765\u6e90\u6216\u7528\u6237\u7ec4\u6bd4\u8f83\u201c\u5e94\u7528\u5220\u9664\u201d\uff0c\u4ee5\u67e5\u770b\u54ea\u4e9b\u7c7b\u578b\u7684\u7528\u6237\u66f4\u6709\u53ef\u80fd\u5378\u8f7d\u60a8\u7684\u5e94\u7528\u3002 \u8425\u9500\u6d3b\u52a8 App Analytics\u53ef\u8ba9\u60a8\u8bc4\u4f30\u60a8\u7684\u8425\u9500\u5de5\u4f5c\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6700\u6709\u6548\u7684\u5e7f\u544a\u7cfb\u5217\u3002\u4e3a\u6bcf\u4e2a\u8425\u9500\u6d3b\u52a8\u521b\u5efa\u552f\u4e00\u7684\u94fe\u63a5\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e9b\u6d3b\u52a8\u5e26\u6765\u4e86\u6700\u591a\u7684\u4e0b\u8f7d\u91cf\u548c\u6bcf\u4e2a\u7528\u6237\u7684\u5e73\u5747\u652f\u51fa\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528StoreKit API\u8ddf\u8e2a\u5e7f\u544a\u7cfb\u5217\u3002 App Store\u4ea7\u54c1\u9875\u9762 \u51fa\u8272\u7684\u4ea7\u54c1\u9875\u9762\u53ef\u4ee5\u5438\u5f15\u53d7\u4f17\u7684\u6ce8\u610f\u529b\uff0c\u4f20\u8fbe\u60a8\u7684\u5e94\u7528\u4ef7\u503c\uff0c\u5e76\u8bf4\u670d\u7528\u6237\u4e0b\u8f7d\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e0b\u8f7d\u6b21\u6570\u4e0e\u4ea7\u54c1\u9875\u9762\u6d4f\u89c8\u91cf\u76f8\u5173\u8054\u6765\u8ba1\u7b97\u4ea7\u54c1\u9875\u9762\u7684\u6548\u679c\u3002 \u4ed8\u8d39\u7528\u6237 App Analytics\u6839\u636eApple ID\uff08\u800c\u4e0d\u662f\u8bbe\u5907\u7c7b\u578b\uff09\u5bf9\u7528\u6237\u8fdb\u884c\u8ba1\u6570\uff0c\u4ece\u800c\u4f7f\u60a8\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u4e86\u89e3\u4ed8\u8d39\u7528\u6237\u6570\u636e\u3002\u67e5\u770b\u60a8\u4e00\u5929\u6709\u591a\u5c11\u4ed8\u8d39\u7528\u6237\uff0c\u4ee5\u8bc4\u4f30\u60a8\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u662f\u5426\u4f1a\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u5185\u7684\u652f\u51fa\u3002\u60a8\u8fd8\u53ef\u4ee5\u6309\u6765\u6e90\u8fc7\u6ee4\uff0c\u4ee5\u67e5\u770b\u7528\u6237\u662f\u5426\u6765\u81ea\u7279\u5b9a\u7684\u5e7f\u544a\u7cfb\u5217\u6216\u7f51\u7ad9\u3002 \u5d29\u6e83 \u627e\u51fa\u60a8\u7684\u5e94\u7528\u6bcf\u5929\u5728iOS\u6216tvOS\u4e0a\u5d29\u6e83\u7684\u6b21\u6570\u3002\u60a8\u53ef\u4ee5\u6309\u5e73\u53f0\uff0c\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\u548c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u7b5b\u9009\u5d29\u6e83\u6570\u636e\uff0c\u4ee5\u67e5\u660e\u539f\u56e0\uff0c\u5e2e\u52a9\u60a8\u4e3a\u7528\u6237\u521b\u9020\u66f4\u597d\u7684\u4f53\u9a8c\u3002 \u6309\u4e0b\u8f7d\u65e5\u671f\u5206\u7c7b \u53ea\u6709Apple\u53ef\u4ee5\u63d0\u4f9bApple ID\u9996\u6b21\u4eceApp Store\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684\u65e5\u671f\u3002\u60a8\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7684\u8d2d\u4e70\u65e5\u671f\u8fc7\u6ee4\u7528\u6237\u7ec4\uff0c\u4ee5\u5728\u6bd4\u8f83\u548c\u5206\u6790\u7528\u6237\u884c\u4e3a\u65f6\u5f62\u6210\u66f4\u5b8c\u6574\u7684\u56fe\u7247\u3002 \u82f9\u679c\u7535\u89c6\u6570\u636e \u8bc4\u4f30\u60a8\u7684tvOS\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u53c2\u4e0e\u5ea6\u548c\u83b7\u5229\u3002\u9664\u4e86\u67e5\u770b\u4ea7\u54c1\u9875\u9762\u6d4f\u89c8\u91cf\uff0c\u4e0b\u8f7d\u91cf\u548c\u53c2\u4e0e\u5ea6\u65b9\u9762\u7684\u6570\u636e\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u67e5\u770b\u901a\u8fc7\u8425\u9500\u6d3b\u52a8\u83b7\u5f97\u7684iOS\u7528\u6237\u5728Apple TV\u4e0a\u6253\u5f00\u4e86\u540c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002*\u60a8\u8fd8\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2atvOS\u5e94\u7528\u7a0b\u5e8f\u4e2d\u63a8\u5e7ftvOS\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u5e7f\u544a\u7cfb\u5217\u94fe\u63a5\u8ddf\u8e2a\u7ed3\u679c\u3002 App Store Connect \u4f7f\u7528\u5165\u95e8 App Store Connect \u4f7f\u7528\u5165\u95e8 \u6dfb\u52a0\u3001\u7f16\u8f91\u548c\u5220\u9664\u7528\u6237 \u7ba1\u7406 App \u548c\u7248\u672c \u6dfb\u52a0 App \u56fe\u6807\u3001App \u9884\u89c8\u548c\u622a\u5c4f \u7ba1\u7406\u6784\u5efa\u7248\u672c \u6d4b\u8bd5 Beta \u7248\u672c \u5728 App Store \u4e0a\u53d1\u884c \u7ef4\u62a4\u60a8\u7684 App \u8861\u91cf App \u8868\u73b0 \u7ba1\u7406\u534f\u8bae\u3001\u7a0e\u52a1\u548c\u94f6\u884c\u4e1a\u52a1 \u83b7\u5f97\u4ed8\u6b3e \u914d\u7f6e App Store \u529f\u80fd \u63d0\u4f9b App \u5185\u8d2d\u4e70\u9879\u76ee \u53c2\u8003 Android \u6253\u5305 \u6d4b\u8bd5\u3001\u90e8\u7f72\u3001\u7b7e\u540d\u3001\u5206\u53d1 Android \u7f16\u8bd1\u7cfb\u7edf \u4f1a\u7f16\u8bd1\u5e94\u7528\u8d44\u6e90\u548c\u6e90\u4ee3\u7801 \uff0c\u7136\u540e\u5c06\u5b83\u4eec\u6253\u5305\u6210\u53ef\u4f9b\u60a8\u6d4b\u8bd5\u3001\u90e8\u7f72\u3001\u7b7e\u7f72\u548c\u5206\u53d1\u7684 APK\u3002Android Studio \u4f7f\u7528\u9ad8\u7ea7\u7f16\u8bd1\u5de5\u5177\u5305 Gradle \u6765 \u81ea\u52a8\u6267\u884c\u548c\u7ba1\u7406\u7f16\u8bd1\u6d41\u7a0b \uff0c\u540c\u65f6\u4e5f\u5141\u8bb8\u60a8\u5b9a\u4e49\u7075\u6d3b\u7684 \u81ea\u5b9a\u4e49\u7f16\u8bd1\u914d\u7f6e \u3002\u6bcf\u4e2a\u7f16\u8bd1\u914d\u7f6e\u5747\u53ef\u5b9a\u4e49\u81ea\u5df1\u7684\u4e00\u7ec4\u4ee3\u7801\u548c\u8d44\u6e90\uff0c\u540c\u65f6\u91cd\u7528\u6240\u6709\u5e94\u7528\u7248\u672c\u5171\u7528\u7684\u90e8\u5206\u3002Android Plugin for Gradle \u4e0e\u8be5\u7f16\u8bd1\u5de5\u5177\u5305\u4e00\u8d77\u4f7f\u7528\uff0c\u5171\u540c\u63d0\u4f9b\u4e13\u7528\u4e8e\u7f16\u8bd1\u548c\u6d4b\u8bd5 Android \u5e94\u7528\u7684\u6d41\u7a0b\u548c\u53ef\u914d\u7f6e\u8bbe\u7f6e\u3002 \u7f16\u8bd1\u7cfb\u7edf: Gradle jetpack ) \u5982\u4f55\u81ea\u52a8\u6267\u884c\u3001\u5982\u4f55\u7ba1\u7406\u6253\u5305\u6d41\u7a0b\u3001\u5982\u4f55\u914d\u7f6e\u81ea\u5b9a\u4e49\u7f16\u8bd1\u914d\u7f6e \u4f7f\u7528\u547d\u4ee4\u884c\u6253\u5305 \u751f\u6210\u7f16\u8bd1\u62a5\u544a ./gradlew --profile --offline --rerun-tasks assemblefreeDebug \u67e5\u770bCPU\u67b6\u6784\u4fe1\u606f: \u67e5\u770bAndroid\u8bbe\u5907\u7684CPU\u67b6\u6784\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u6765\u5b8c\u6210\uff1a 1\u3001adb shell 2\u3001cat /proc/cpuinfo AndroidCPU\u5176\u4e2d\u67b6\u6784 \u6253\u5305\u6d41\u7a0b \u5178\u578b Android \u5e94\u7528\u6a21\u5757\u7684\u7f16\u8bd1\u6d41\u7a0b\uff08\u5982\u56fe 1 \u6240\u793a\uff09\u6309\u7167\u4ee5\u4e0b\u5e38\u89c4\u6b65\u9aa4\u6267\u884c\uff1a \u7f16\u8bd1\u5668\u5c06\u60a8\u7684\u6e90\u4ee3\u7801\u8f6c\u6362\u6210 DEX \u6587\u4ef6\uff08Dalvik \u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 Android \u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5b57\u8282\u7801\uff09\uff0c\u5e76\u5c06\u5176\u4ed6\u6240\u6709\u5185\u5bb9\u8f6c\u6362\u6210\u7f16\u8bd1\u7684\u8d44\u6e90\u3002 APK \u6253\u5305\u5668\u5c06 DEX \u6587\u4ef6\u548c\u7f16\u8bd1\u7684\u8d44\u6e90\u7ec4\u5408\u6210\u5355\u4e2a APK\u3002\u4e0d\u8fc7\uff0c\u5fc5\u987b\u5148\u4e3a APK \u7b7e\u540d\uff0c\u7136\u540e\u624d\u80fd\u5c06\u5e94\u7528\u5b89\u88c5\u5e76\u90e8\u7f72\u5230 Android \u8bbe\u5907\u4e0a\u3002 APK \u6253\u5305\u5668\u4f7f\u7528\u8c03\u8bd5\u6216\u53d1\u5e03\u5bc6\u94a5\u5e93\u4e3a APK \u7b7e\u540d\uff1a \u5982\u679c\u60a8\u7f16\u8bd1\u7684\u662f\u5e94\u7528\u8c03\u8bd5\u7248\u672c\uff08\u5373\u4e13\u7528\u4e8e\u6d4b\u8bd5\u548c\u5206\u6790\u7684\u5e94\u7528\uff09\uff0c\u6253\u5305\u5668\u4f1a\u4f7f\u7528\u8c03\u8bd5\u5bc6\u94a5\u5e93\u4e3a\u5e94\u7528\u7b7e\u540d\u3002Android Studio \u81ea\u52a8\u4f7f\u7528\u8c03\u8bd5\u5bc6\u94a5\u5e93\u914d\u7f6e\u65b0\u9879\u76ee\u3002 \u5982\u679c\u60a8\u7f16\u8bd1\u7684\u662f\u6253\u7b97\u5411\u5916\u53d1\u5e03\u7684\u5e94\u7528\u53d1\u5e03\u7248\u672c\uff0c\u6253\u5305\u5668\u4f1a\u4f7f\u7528\u53d1\u5e03\u5bc6\u94a5\u5e93\u4e3a\u5e94\u7528\u7b7e\u540d\u3002\u8981\u521b\u5efa\u53d1\u5e03\u5bc6\u94a5\u5e93\uff0c\u8bf7\u53c2\u9605\u5728 Android Studio \u4e2d\u4e3a\u5e94\u7528\u7b7e\u540d\u3002 \u5728\u751f\u6210\u6700\u7ec8 APK \u4e4b\u524d\uff0c\u6253\u5305\u5668\u4f1a\u4f7f\u7528 zipalign \u5de5\u5177\u5bf9\u5e94\u7528\u8fdb\u884c\u4f18\u5316\uff0c\u51cf\u5c11\u5176\u5728\u8bbe\u5907\u4e0a\u8fd0\u884c\u65f6\u5360\u7528\u7684\u5185\u5b58\u3002 \u7f16\u8bd1\u6d41\u7a0b\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u83b7\u5f97\u53ef\u7528\u4e8e\u90e8\u7f72\u548c\u6d4b\u8bd5\u7684\u8c03\u8bd5 APK\uff0c\u6216\u8005\u53ef\u7528\u4e8e\u53d1\u5e03\u7ed9\u5916\u90e8\u7528\u6237\u7684\u53d1\u5e03 APK\u3002 Android Android Jetpack \u4f7f\u7528\u5165\u95e8 Android\u6253\u5305 JKS \u5bc6\u94a5\u5e93\u4f7f\u7528\u4e13\u7528\u683c\u5f0f\u3002\u5efa\u8bae\u4f7f\u7528 \"keytool -importkeystore -srckeystore ./key.jks -destkeystore ./key.jks -deststoretype pkcs12\" \u8fc1\u79fb\u5230\u884c\u4e1a\u6807\u51c6\u683c\u5f0f PKCS12\u3002 Jetpack \u5305\u542b\u4e00\u7cfb\u5217 Android \u5e93\uff0c\u5b83\u4eec\u90fd\u91c7\u7528\u6700\u4f73\u505a\u6cd5\u5e76\u5728 Android \u5e94\u7528\u4e2d\u63d0\u4f9b\u5411\u540e\u517c\u5bb9\u6027\u3002 Jetpack \u5e94\u7528\u67b6\u6784\u6307\u5357\u6982\u8ff0\u4e86\u6784\u5efa Android \u5e94\u7528\u65f6\u8981\u8003\u8651\u7684\u6700\u4f73\u505a\u6cd5\u548c\u63a8\u8350\u67b6\u6784\u3002 \u4e0b\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u59cb\u4f7f\u7528 Jetpack \u7ec4\u4ef6\u3002 Android Jetpack \u4f7f\u7528\u5165\u95e8 Android Jetpack\u7ec4\u4ef6\u5217\u8868 Android Jetpack is a set of components, tools and guidance to make great Android apps. They bring together the existing Support Library and Architecture Components and arrange them into four categories: Android Sunflower\u5f00\u53d1\u6e90\u7801\u9879\u76ee GithHub\u6e90\u7801\u9879\u76ee\u4ee3\u7801 AndroidStudioMaven\u4ed3\u5e93\u7684\u4f7f\u7528 Google Maven Android Studio \u4f7f\u7528Maven\u4ed3\u5e93 Guide to Public Maven Repositories Android KTX \u662f\u4e00\u7ec4 Kotlin \u6269\u5c55\u7a0b\u5e8f\uff0c\u5c5e\u4e8e Android Jetpack \u7cfb\u5217\u3002\u5b83\u4f18\u5316\u4e86\u4f9b Kotlin \u4f7f\u7528\u7684 Jetpack \u548c Android \u5e73\u53f0 API\u3002Android KTX \u65e8\u5728\u8ba9\u60a8\u5229\u7528 Kotlin \u8bed\u8a00\u529f\u80fd\uff08\u4f8b\u5982\u6269\u5c55\u51fd\u6570/\u5c5e\u6027\u3001lambda\u3001\u547d\u540d\u53c2\u6570\u548c\u53c2\u6570\u9ed8\u8ba4\u503c\uff09\uff0c\u4ee5\u66f4\u7b80\u6d01\u3001\u66f4\u6109\u60a6\u3001\u66f4\u60ef\u7528\u7684\u65b9\u5f0f\u4f7f\u7528 Kotlin \u8fdb\u884c Android \u5f00\u53d1\u3002Android KTX \u4e0d\u4f1a\u5411\u73b0\u6709\u7684 Android API \u6dfb\u52a0\u4efb\u4f55\u65b0\u529f\u80fd\u3002 \u8981\u8be6\u7ec6\u4e86\u89e3 Android KTX\uff0c\u8bf7\u89c2\u770b\u6211\u4eec\u7684 DevBytes \u89c6\u9891 \u3002 AndroidX \u6982\u8ff0 AndroidX \u662f Android \u56e2\u961f\u7528\u4e8e\u5728 Jetpack \u4e2d\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u6253\u5305\u548c\u53d1\u5e03\u5e93\u4ee5\u53ca\u5bf9\u5176\u8fdb\u884c\u7248\u672c\u63a7\u5236\u7684\u5f00\u6e90\u9879\u76ee\u3002 AndroidX \u5bf9\u539f\u59cb Android \u652f\u6301\u5e93\u8fdb\u884c\u4e86\u91cd\u5927\u6539\u8fdb\u3002\u4e0e\u652f\u6301\u5e93\u4e00\u6837\uff0cAndroidX \u4e0e Android \u64cd\u4f5c\u7cfb\u7edf\u5206\u5f00\u63d0\u4f9b\uff0c\u5e76\u4e0e\u5404\u4e2a Android \u7248\u672c\u5411\u540e\u517c\u5bb9\u3002AndroidX \u5b8c\u5168\u53d6\u4ee3\u4e86\u652f\u6301\u5e93\uff0c\u4e0d\u4ec5\u63d0\u4f9b\u540c\u7b49\u7684\u529f\u80fd\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86\u65b0\u7684\u5e93\u3002\u6b64\u5916\uff0cAndroidX \u8fd8\u5305\u62ec\u4ee5\u4e0b\u529f\u80fd\uff1a AndroidX \u4e2d\u7684\u6240\u6709\u8f6f\u4ef6\u5305\u90fd\u4f7f\u7528\u4e00\u81f4\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u5b57\u7b26\u4e32 androidx \u5f00\u5934\u3002\u652f\u6301\u5e93\u8f6f\u4ef6\u5305\u5df2\u6620\u5c04\u5230\u5bf9\u5e94\u7684 androidx.* \u8f6f\u4ef6\u5305\u3002\u6709\u5173\u6240\u6709\u65e7\u7c7b\u5230\u65b0\u7c7b\u4ee5\u53ca\u65e7\u7f16\u8bd1\u5de5\u4ef6\u5230\u65b0\u7f16\u8bd1\u5de5\u4ef6\u7684\u5b8c\u6574\u6620\u5c04\uff0c\u8bf7\u53c2\u9605\u8f6f\u4ef6\u5305\u91cd\u6784\u9875\u9762\u3002 \u4e0e\u652f\u6301\u5e93\u4e0d\u540c\uff0cAndroidX \u8f6f\u4ef6\u5305\u4f1a\u5355\u72ec\u7ef4\u62a4\u548c\u66f4\u65b0\u3002androidx \u8f6f\u4ef6\u5305\u4f7f\u7528\u4e25\u683c\u7684\u8bed\u4e49\u7248\u672c\u63a7\u5236\uff0c\u4ece\u7248\u672c 1.0.0 \u5f00\u59cb\u3002\u60a8\u53ef\u4ee5\u5355\u72ec\u66f4\u65b0\u9879\u76ee\u4e2d\u7684 AndroidX \u5e93\u3002 \u6240\u6709\u65b0\u652f\u6301\u5e93\u7684\u5f00\u53d1\u5de5\u4f5c\u90fd\u5c06\u5728 AndroidX \u5e93\u4e2d\u8fdb\u884c\u3002\u8fd9\u5305\u62ec\u7ef4\u62a4\u539f\u59cb\u652f\u6301\u5e93\u5de5\u4ef6\u548c\u5f15\u5165\u65b0\u7684 Jetpack \u7ec4\u4ef6\u3002 AndroidX \u6982\u89c8 \u8fc1\u79fb\u5230AndroidX AndroidX\u5305\u5217\u8868 AndroidX\u5f00\u53d1blog Android \u67b6\u6784\u8bbe\u8ba1 1.\u901a\u8fc7\u6a21\u578b\u9a71\u52a8\u754c\u9762 \u6301\u4e45\u6027\u662f\u7406\u60f3\u4e4b\u9009\uff0c\u539f\u56e0\u5982\u4e0b\uff1a \u5982\u679c Android \u64cd\u4f5c\u7cfb\u7edf\u9500\u6bc1\u5e94\u7528\u4ee5\u91ca\u653e\u8d44\u6e90\uff0c\u7528\u6237\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002 \u5f53\u7f51\u7edc\u8fde\u63a5\u4e0d\u7a33\u5b9a\u6216\u4e0d\u53ef\u7528\u65f6\uff0c\u5e94\u7528\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u3002 2.\u5206\u79bb\u5173\u6ce8\u70b9 \u5206\u79bb\u5173\u6ce8\u70b9 \u5e94\u7528\u67b6\u6784\u6307\u5357 Android\u67b6\u6784\u7ec4\u4ef6 \u914d\u7f6e\u7f16\u8bd1\u7248\u672c \u4f18\u5316\u7f16\u8bd1\u7684\u4ee3\u7801 1.\u914d\u7f6eGradle\u4f9d\u8d56\u5e93\u7684\u4fe1\u606f 2.\u914d\u7f6eGradle\u4f9d\u8d56\u7684\u90a3\u4e9b\u5de5\u7a0b 3.\u914d\u7f6eGradle\u4f7f\u7528\u7684\u73af\u5883\u53d8\u91cf\u548c\u9ed8\u8ba4\u914d\u7f6e 4.\u914d\u7f6eGradle\u7f16\u8bd1\u662f\u4f7f\u7528\u7684\u63a7\u5236Gradle\u7684\u914d\u7f6e\u53d8\u91cf 5.\u914d\u7f6eGradle\u4f7f\u7528SDK\u73af\u5883\u53d8\u91cf\u7684\u4f4d\u7f6e \u6d4b\u8bd5\u3001\u90e8\u7f72\u3001\u7b7e\u7f72\u548c\u5206\u53d1\u7684 APK \u81ea\u5b9a\u4e49\u7f16\u8bd1\u914d\u7f6e \u7f16\u8bd1\u7248\u672c\u7c7b\u578b \u6b63\u5f0f\u7248\u7c7b\u578b \u7f16\u8bd1\u53d8\u4f53 \u6e05\u5355\u6761\u76ee \u4f9d\u8d56\u9879 \u7b7e\u540d ProGuard \u591a APK \u652f\u6301 \u7f16\u8bd1\u914d\u7f6e\u6587\u4ef6 Gradle \u8bbe\u7f6e\u6587\u4ef6:settings.gradle \u6587\u4ef6\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u7528\u4e8e\u6307\u793a Gradle \u5728\u7f16\u8bd1\u5e94\u7528\u65f6\u5e94\u5c06\u54ea\u4e9b\u6a21\u5757\u5305\u542b\u5728\u5185 \u9876\u7ea7\u7f16\u8bd1\u6587\u4ef6:\u9876\u7ea7 build.gradle \u6587\u4ef6\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u7528\u4e8e\u5b9a\u4e49\u9002\u7528\u4e8e\u9879\u76ee\u4e2d\u6240\u6709\u6a21\u5757\u7684\u7f16\u8bd1\u914d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9876\u7ea7\u7f16\u8bd1\u6587\u4ef6\u4f7f\u7528 buildscript \u4ee3\u7801\u5757\u6765\u5b9a\u4e49\u9879\u76ee\u4e2d\u6240\u6709\u6a21\u5757\u5171\u7528\u7684\u4ee3\u7801\u5e93\u548c\u4f9d\u8d56\u9879\u3002\u4ee5\u4e0b\u4ee3\u7801\u793a\u4f8b\u63cf\u8ff0\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u548c DSL \u5143\u7d20\u53ef\u5728\u65b0\u5efa\u9879\u76ee\u540e\u7684\u9876\u7ea7 build.gradle \u6587\u4ef6\u4e2d\u627e\u5230\u3002 shrinking, using minifyEnabled, and specifies the Proguard settings file Gradle \u5c5e\u6027\u6587\u4ef6 Gradle \u8fd8\u5305\u542b\u4e24\u4e2a\u5c5e\u6027\u6587\u4ef6\uff0c\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u53ef\u7528\u4e8e\u6307\u5b9a Gradle \u7f16\u8bd1\u5de5\u5177\u5305\u672c\u8eab\u7684\u8bbe\u7f6e\uff1a gradle.properties:\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u914d\u7f6e\u9879\u76ee\u8303\u56f4\u7684 Gradle \u8bbe\u7f6e\uff0c\u5982 Gradle \u5b88\u62a4\u8fdb\u7a0b\u7684\u6700\u5927\u5806\u5927\u5c0f\u3002\u5982\u9700\u4e86\u89e3\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u7f16\u8bd1\u73af\u5883\u3002 local.properties:\u914d\u7f6e\u7f16\u8bd1\u7cfb\u7edf\u7684\u672c\u5730\u73af\u5883\u5c5e\u6027\uff0c\u5982 SDK \u5b89\u88c5\u8def\u5f84\u3002\u7531\u4e8e\u6b64\u6587\u4ef6\u7684\u5185\u5bb9\u7531 Android Studio \u81ea\u52a8\u751f\u6210\u5e76\u4e14\u4e13\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u8005\u73af\u5883\uff0c\u56e0\u6b64\u60a8\u4e0d\u5e94\u624b\u52a8\u4fee\u6539\u6b64\u6587\u4ef6\u6216\u5c06\u5176\u68c0\u5165\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002 AndroidStudio\u4e0d\u540c\u6a21\u5757\u914d\u7f6e \u542f\u7528\u79bb\u7ebf\u6a21\u5f0f \u5982\u679c\u7f51\u7edc\u8fde\u63a5\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u90a3\u4e48\u5728 Gradle \u5c1d\u8bd5\u4f7f\u7528\u7f51\u7edc\u8d44\u6e90\u89e3\u6790\u4f9d\u8d56\u9879\u65f6\uff0c\u7f16\u8bd1\u65f6\u95f4\u53ef\u80fd\u4f1a\u5ef6\u957f\u3002\u60a8\u53ef\u4ee5\u6307\u793a Gradle \u4ec5\u4f7f\u7528\u5df2\u7f13\u5b58\u5230\u672c\u5730\u7684\u5de5\u4ef6\uff0c\u4ece\u800c\u907f\u514d\u4f7f\u7528\u7f51\u7edc\u8d44\u6e90\u3002 \u8981\u5728\u4f7f\u7528 Android Studio \u7f16\u8bd1\u9879\u76ee\u65f6\u79bb\u7ebf\u4f7f\u7528 Gradle\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u4f9d\u6b21\u70b9\u51fb File Settings\uff08\u5728 Mac \u4e0a\uff0c\u5219\u4f9d\u6b21\u70b9\u51fb Android Studio Preferences\uff09\uff0c\u6253\u5f00 Preferences \u7a97\u53e3\u3002 \u5728\u5de6\u4fa7\u7a97\u683c\u4e2d\uff0c\u4f9d\u6b21\u70b9\u51fb Build, Execution, Deployment Gradle\u3002 \u52fe\u9009 Offline work \u590d\u9009\u6846\u3002 \u70b9\u51fb Apply \u6216 OK\u3002 \u5982\u679c\u60a8\u6b63\u5728\u901a\u8fc7\u547d\u4ee4\u884c\u7f16\u8bd1\uff0c\u8bf7\u4f20\u9012 --offline \u9009\u9879\u3002 Instant Run\uff1a \u6253\u5f00 Settings \u6216 Preferences \u5bf9\u8bdd\u6846\u3002 \u4f9d\u6b21\u8f6c\u5230 Build, Execution, Deployment Instant Run\u3002 \u786e\u4fdd\u52fe\u9009 Enable Instant Run\u3002 Android Runtime (ART) \u548c Dalvik \u6027\u80fd\u5206\u6790 \u5982\u679c\u5e94\u7528\u54cd\u5e94\u901f\u5ea6\u6162\u3001\u52a8\u753b\u64ad\u653e\u4e0d\u6d41\u7545\u3001\u5361\u987f\u3001\u5d29\u6e83\u6216\u6781\u5176\u8017\u7535\uff0c\u5219\u8868\u793a\u5176\u6027\u80fd\u5dee \u5206\u6790\u5e94\u7528\u6027\u80fd","title":"FlutterAndroid&IOS\u6253\u5305"},{"location":"android/flutterdev/Flutterdeployment/#androidios","text":"","title":"Android&amp;IOS\u6253\u5305\u53d1\u5e03"},{"location":"android/flutterdev/Flutterdeployment/#_1","text":"\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u6539\u53d8\u4e16\u754c\uff0c\u4e30\u5bcc\u4eba\u4eec\u7684\u751f\u6d3b\uff0c\u5e76\u4f7f\u50cf\u60a8\u8fd9\u6837\u7684\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u524d\u6240\u672a\u6709\u5730\u8fdb\u884c\u521b\u65b0\u3002\u7ed3\u679c\uff0cApp Store\u5df2\u6210\u957f\u4e3a\u4e00\u4e2a\u6fc0\u52a8\u4eba\u5fc3\u4e14\u5145\u6ee1\u6d3b\u529b\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u4e3a\u6570\u767e\u4e07\u5f00\u53d1\u4eba\u5458\u548c\u8d85\u8fc710\u4ebf\u7528\u6237\u6240\u7528\u3002\u65e0\u8bba\u60a8\u662f\u7b2c\u4e00\u6b21\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7a0b\u5e8f\u5458\u7ec4\u6210\u7684\u5e9e\u5927\u56e2\u961f\uff0c\u6211\u4eec\u90fd\u4e3a\u60a8\u6b63\u5728\u4e3aApp Store\u521b\u5efa\u5e94\u7528\u7a0b\u5e8f\u800c\u611f\u5230\u5174\u594b\uff0c\u5e76\u5e0c\u671b\u5e2e\u52a9\u60a8\u4e86\u89e3\u6211\u4eec\u7684\u6307\u5357\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u786e\u4fe1\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u5feb\u901f\u901a\u8fc7\u5ba1\u6838\u8fc7\u7a0b\u3002","title":"\u6982\u8981"},{"location":"android/flutterdev/Flutterdeployment/#_2","text":"\u5e94\u7528\u5e02\u573a\u7684\u6307\u5bfc\u539f\u5219\u5f88\u7b80\u5355-\u6211\u4eec\u5e0c\u671b\u4e3a\u7528\u6237\u63d0\u4f9b\u83b7\u53d6\u5e94\u7528\u7a0b\u5e8f\u7684\u5b89\u5168\u4f53\u9a8c\uff0c\u5e76\u4e3a\u6240\u6709\u5f00\u53d1\u4eba\u5458\u53d6\u5f97\u6210\u529f\u63d0\u4f9b\u5de8\u5927\u7684\u673a\u4f1a\u3002\u6211\u4eec\u901a\u8fc7\u63d0\u4f9b\u9ad8\u5ea6\u7b56\u5212\u7684\u5e94\u7528\u6765\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u7ecf\u8fc7\u4e13\u5bb6\u5ba1\u67e5\uff0c\u7f16\u8f91\u56e2\u961f\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u6bcf\u5929\u53d1\u73b0\u65b0\u5e94\u7528\u7a0b\u5e8f\u3002\u5bf9\u4e8e\u5176\u4ed6\u6240\u6709\u65b9\u9762\uff0c\u59cb\u7ec8\u90fd\u6709\u5f00\u653e\u7684Internet\u3002\u5982\u679c\u5e94\u7528\u5e02\u573a\u6a21\u578b\u548c\u6307\u5357\u4e0d\u9002\u5408\u60a8\u7684\u5e94\u7528\u6216\u4e1a\u52a1\u6784\u60f3\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u63d0\u4f9bSafari\u6765\u63d0\u4f9b\u51fa\u8272\u7684Web\u4f53\u9a8c\u3002 \u5728\u4ee5\u4e0b\u9875\u9762\u4e0a\uff0c\u60a8\u4f1a\u53d1\u73b0\u6211\u4eec\u7684\u6700\u65b0\u6307\u5357\u5206\u4e3a\u4e94\u4e2a\u6e05\u6670\u7684\u90e8\u5206\uff1a\u5b89\u5168\uff0c\u6027\u80fd\uff0c\u4e1a\u52a1\uff0c\u8bbe\u8ba1\u548c\u6cd5\u5f8b\u3002\u5e94\u7528\u5e02\u573a\u603b\u662f\u5728\u4e0d\u65ad\u53d8\u5316\u548c\u6539\u8fdb\uff0c\u4ee5\u9002\u5e94\u6211\u4eec\u5ba2\u6237\u548c\u6211\u4eec\u4ea7\u54c1\u7684\u9700\u6c42\u3002\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5e94\u8be5\u8fdb\u884c\u66f4\u6539\u548c\u6539\u8fdb\uff0c\u4ee5\u4fbf\u4fdd\u7559\u5728\u5e94\u7528\u5e02\u573a\u4e2d\u3002 1.\u5b89\u5168 2.\u6027\u80fd 3.\u4e1a\u52a1 4.\u8bbe\u8ba1 5.\u6cd5\u5f8b\u6cd5\u89c4(\u4e0d\u540c\u56fd\u5bb6\u548c\u5730\u533a)","title":"\u4ecb\u7ecd"},{"location":"android/flutterdev/Flutterdeployment/#_3","text":"\u6d4b\u8bd5\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u5d29\u6e83\u548c\u9519\u8bef \u786e\u4fdd\u6240\u6709\u5e94\u7528\u4fe1\u606f\u548c\u5143\u6570\u636e\u5b8c\u6574\u4e14\u51c6\u786e \u66f4\u65b0\u60a8\u7684\u8054\u7cfb\u4fe1\u606f\uff0c\u4ee5\u9632App Review\u9700\u8981\u4e0e\u60a8\u8054\u7cfb \u63d0\u4f9b\u6709\u6548\u7684\u6f14\u793a\u5e10\u6237\u548c\u767b\u5f55\u4fe1\u606f\uff0c\u4ee5\u53ca\u67e5\u770b\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u9700\u8981\u7684\u4efb\u4f55\u5176\u4ed6\u786c\u4ef6\u6216\u8d44\u6e90\uff08\u4f8b\u5982\uff0c\u767b\u5f55\u51ed\u636e\u6216\u793a\u4f8bQR\u7801\uff09 \u542f\u7528\u540e\u7aef\u670d\u52a1\uff0c\u4ee5\u4fbf\u5b83\u4eec\u5728\u5ba1\u6838\u671f\u95f4\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u5e76\u53ef\u4ee5\u8bbf\u95ee \u5728App Review\u6ce8\u91ca\u4e2d\u5305\u62ec\u5bf9\u975e\u663e\u800c\u6613\u89c1\u529f\u80fd\u548c\u5e94\u7528\u5185\u8d2d\u4e70\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u5e76\u5728\u9002\u5f53\u65f6\u5305\u62ec\u652f\u6301\u6587\u6863\u3002 UI\u6846\u67b6:UIKit\u6846\u67b6\u63d0\u4f9b\u4e86\u6784\u5efa\u7528\u4e8eiOS\u548ctvOS\u7684\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u6838\u5fc3\u5bf9\u8c61\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u60a8\u7684\u5185\u5bb9\uff0c\u4e0e\u8be5\u5185\u5bb9\u8fdb\u884c\u4ea4\u4e92\u4ee5\u53ca\u7ba1\u7406\u4e0e\u7cfb\u7edf\u7684\u4ea4\u4e92\u3002\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u4e8eUIKit\u7684\u57fa\u672c\u884c\u4e3a\uff0c\u800cUIKit\u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u5f0f\u6765\u81ea\u5b9a\u4e49\u884c\u4e3a\u4ee5\u7b26\u5408\u60a8\u7684\u7279\u5b9a\u9700\u6c42\u3002 Xcode\u9879\u76ee\u6587\u4ef6\u7ed3\u6784:\u5728\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0cXcode\u4f1a\u7f16\u8bd1\u60a8\u7684\u6e90\u6587\u4ef6\u5e76\u4e3a\u60a8\u7684\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\u3002\u5e94\u7528\u7a0b\u5e8f\u6346\u7ed1\u5305\u662f\u4e00\u4e2a\u7ed3\u6784\u5316\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u4e0e\u8be5\u5e94\u7528\u7a0b\u5e8f\u5173\u8054\u7684\u4ee3\u7801\u548c\u8d44\u6e90\u3002\u8d44\u6e90\u5305\u62ec\u652f\u6301\u60a8\u7684\u4ee3\u7801\u7684\u56fe\u50cf\u8d44\u4ea7\uff0c\u60c5\u8282\u63d0\u8981\u6587\u4ef6\uff0c\u5b57\u7b26\u4e32\u6587\u4ef6\u548c\u5e94\u7528\u7a0b\u5e8f\u5143\u6570\u636e\u3002\u5e94\u7528\u7a0b\u5e8f\u6346\u7ed1\u5305\u7684\u7ed3\u6784\u5f88\u91cd\u8981\uff0c\u4f46\u662fXcode\u77e5\u9053\u60a8\u7684\u8d44\u6e90\u9700\u8981\u5b58\u653e\u5728\u54ea\u91cc\uff0c\u6240\u4ee5\u6682\u65f6\u4e0d\u5fc5\u62c5\u5fc3\u3002","title":"\u786e\u4fdd"},{"location":"android/flutterdev/Flutterdeployment/#ios","text":"\u6211\u4eec\u4f1a\u5ba1\u67e5\u63d0\u4ea4\u7ed9AppStore\u7684\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\uff0c\u4ee5\u786e\u5b9a\u5b83\u4eec\u662f\u5426\u53ef\u9760\uff0c\u662f\u5426\u8fbe\u5230\u9884\u671f\u6548\u679c\u4ee5\u53ca\u662f\u5426\u6ca1\u6709\u4ee4\u4eba\u53cd\u611f\u7684\u6750\u6599\u3002\u5728\u8ba1\u5212\u548c\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f7f\u7528\u8fd9\u4e9b\u51c6\u5219\u548c\u8d44\u6e90\u3002 1.\u89c4\u5212\u548c\u5f00\u53d1\u5e94\u7528\u7a0b\u5e8f 2.\u662f\u5426\u5230\u8fbe\u9884\u671f 3.\u662f\u5426\u53ef\u9760 4.\u662f\u5426\u6709\u8ba9\u4eba\u53d1\u7684\u5185\u5bb9 5.\u63d0\u4ea4\u5e94\u7528\u5e02\u573a","title":"IOS\u6253\u5305"},{"location":"android/flutterdev/Flutterdeployment/#_4","text":"\u53d1\u5c55\u65b9\u9488 \u5e94\u7528\u7a0b\u5f0f\u8bbe\u8ba1\u6307\u5357 App Extension\u7f16\u7a0b\u6307\u5357 iOS\u6570\u636e\u5b58\u50a8\u51c6\u5219 macOS\u6587\u4ef6\u7cfb\u7edf\u6587\u6863 Safari\u5e94\u7528\u7a0b\u5e8f\u6269\u5c55 App Store Connect\u5e2e\u52a9 \u8bbe\u8ba1\u51c6\u5219 \u4eba\u673a\u754c\u9762\u51c6\u5219 \u54c1\u724c\u4e0e\u884c\u9500\u51c6\u5219 \u8425\u9500\u8d44\u6e90\u548c\u8eab\u4efd\u51c6\u5219 Apple Pay\u8eab\u4efd\u51c6\u5219 \u6dfb\u52a0\u5230Apple\u7535\u5b50\u94b1\u5305\u6307\u5357 \u4f7f\u7528\u82f9\u679c\u5546\u6807\u548c\u7248\u6743\u7684\u51c6\u5219","title":"\u68c0\u67e5\u60a8\u7684\u5e94\u7528\u662f\u5426\u9075\u5faa\u5176\u4ed6\u6587\u6863\u4e2d\u7684\u6307\u5bfc"},{"location":"android/flutterdev/Flutterdeployment/#_5","text":"Xcode Help Apple Developer Program \u6d4b\u8bd5","title":"\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u6570\u636e\u7edf\u8ba1"},{"location":"android/flutterdev/Flutterdeployment/#_6","text":"\u8861\u91cfiOS\uff0cmacOS\u548ctvOS\u4e0a\u7684\u5e94\u7528\u7684\u7528\u6237\u53c2\u4e0e\u5ea6\uff0c\u8425\u9500\u6d3b\u52a8\uff0c\u83b7\u5229\u7b49\u3002 Access App Analytic App Store\u6765\u6e90 \u501f\u52a9App Analytics\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u6709\u591a\u5c11\u7528\u6237\u5728\u641c\u7d22\u6216\u6d4f\u89c8App Store\u65f6\u53d1\u73b0\u4e86\u60a8\u7684\u5e94\u7528\uff08\u5305\u62ec\u5728iOS\u4e0a\u70b9\u51fb\u9002\u7528\u4e8e\u60a8\u7684\u5e94\u7528\u7684Search Ads\uff09\u4ee5\u4e86\u89e3\u60a8\u7684\u8425\u9500\u548c\u5143\u6570\u636e\u5982\u4f55\u5f71\u54cd\u4e0b\u8f7d\u3002 \u5e94\u7528\u5f15\u8350\u6765\u6e90 App Analytics\u4f1a\u7edf\u8ba1\u4ece\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u94fe\u63a5\u8bbf\u95eeiOS\u6216tvOS\u4e0a\u60a8\u5e94\u7528\u7a0b\u5e8f\u4ea7\u54c1\u9875\u9762\u7684\u7528\u6237\u3002\u901a\u8fc7\u5173\u6ce8\u53ef\u5e26\u6765\u6700\u591aApp Store\u5370\u8c61\uff0c\u4e0b\u8f7d\u548c\u8d26\u5355\u7684\u5e94\u7528\u6765\u4f18\u5316\u60a8\u7684\u8425\u9500\u6d3b\u52a8\u3002 \u7f51\u7edc\u63a8\u8350\u4eba \u94fe\u63a5\u5230\u5e94\u7528\u7a0b\u5e8f\u4ea7\u54c1\u9875\u9762\u7684\u535a\u5ba2\uff0c\u7f51\u7ad9\u548c\u5176\u4ed6\u5728\u7ebf\u8d44\u6e90\u5bf9\u4e8e\u901a\u8fc7\u53e3\u7891\u8425\u9500\u548cPR\u6765\u5438\u5f15\u7528\u6237\u81f3\u5173\u91cd\u8981\u3002\u501f\u52a9App Analytics\uff0c\u60a8\u53ef\u4ee5\u67e5\u770b\u54ea\u4e9b\u6709\u673a\u8425\u9500\u6e20\u9053\u4e3a\u60a8\u7684\u5e94\u7528\u5e26\u6765\u4e86\u6700\u9ad8\u7684\u6d41\u91cf\uff0c\u4e0b\u8f7d\u91cf\uff0c\u4f7f\u7528\u91cf\u548c\u6536\u5165\u3002 App Store\u5c55\u793a\u6b21\u6570 \u67e5\u770b\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u5728App Store\u4e0a\u6d4f\u89c8\u4e86\u591a\u5c11\u6b21\uff0c\u5305\u62ec\u5728\u641c\u7d22\u7ed3\u679c\uff0c\u7cbe\u9009\uff0c\u70ed\u95e8\u56fe\u8868\u548cApp Store\u4ea7\u54c1\u9875\u9762\u4e2d\u3002\u501f\u52a9App Store\u5c55\u793a\u6b21\u6570\uff0c\u60a8\u53ef\u4ee5\u8ba1\u7b97\u51fa\u7528\u6237\u70b9\u51fb\u6d4f\u89c8\u60a8\u7684\u5e94\u7528\u7684\u9891\u7387\uff0c\u800c\u65e0\u9700\u67e5\u770b\u5728App Store\u4e0a\u7684\u4efb\u4f55\u4f4d\u7f6e\u3002 \u7528\u6237\u53c2\u4e0e\u5ea6 App Analytics\u63d0\u4f9b\u4e86\u7528\u6237\u53c2\u4e0e\u5ea6\u6307\u6807\uff0c\u5305\u62ec\u4f1a\u8bdd\u6570\uff0c\u6d3b\u52a8\u8bbe\u5907\u4ee5\u53caiOS\u548ctvOS\u4e0a\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u4fdd\u7559\u65f6\u95f4\u3002\u501f\u52a9\u8fd9\u4e9b\u6307\u6807\uff0c\u60a8\u53ef\u4ee5\u8bc4\u4f30\u4ea7\u54c1\u66f4\u6539\u7684\u5f71\u54cd\uff08\u4f8b\u5982\u4fee\u6539\u521d\u59cb\u7684\u5165\u804c\u4f53\u9a8c\uff09\uff0c\u4ee5\u67e5\u770b\u54ea\u4e9b\u66f4\u6539\u53ef\u4ee5\u6539\u5584\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u4e92\u52a8\u3002 \u5220\u9664\u65b0 \u67e5\u770b\u6709\u591a\u5c11\u7528\u6237\u4ece\u8fd0\u884ciOS 12.3\u6216\u66f4\u9ad8\u7248\u672c\u7684\u8bbe\u5907\u4e0a\u5220\u9664\u4e86\u60a8\u7684\u5e94\u7528\u3002\u6d4b\u91cf\u201c\u5e94\u7528\u7a0b\u5e8f\u5220\u9664\u201d\uff0c\u4ee5\u66f4\u597d\u5730\u4e86\u89e3\u7528\u6237\u5bf9\u5e94\u7528\u7a0b\u5e8f\u66f4\u6539\uff08\u4f8b\u5982\u5185\u5bb9\u66f4\u65b0\uff0c\u4ef7\u683c\u8c03\u6574\u6216\u5d29\u6e83\uff09\u7684\u53cd\u5e94\u3002\u6309\u6765\u6e90\u6216\u7528\u6237\u7ec4\u6bd4\u8f83\u201c\u5e94\u7528\u5220\u9664\u201d\uff0c\u4ee5\u67e5\u770b\u54ea\u4e9b\u7c7b\u578b\u7684\u7528\u6237\u66f4\u6709\u53ef\u80fd\u5378\u8f7d\u60a8\u7684\u5e94\u7528\u3002 \u8425\u9500\u6d3b\u52a8 App Analytics\u53ef\u8ba9\u60a8\u8bc4\u4f30\u60a8\u7684\u8425\u9500\u5de5\u4f5c\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6700\u6709\u6548\u7684\u5e7f\u544a\u7cfb\u5217\u3002\u4e3a\u6bcf\u4e2a\u8425\u9500\u6d3b\u52a8\u521b\u5efa\u552f\u4e00\u7684\u94fe\u63a5\uff0c\u4ee5\u4e86\u89e3\u54ea\u4e9b\u6d3b\u52a8\u5e26\u6765\u4e86\u6700\u591a\u7684\u4e0b\u8f7d\u91cf\u548c\u6bcf\u4e2a\u7528\u6237\u7684\u5e73\u5747\u652f\u51fa\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528StoreKit API\u8ddf\u8e2a\u5e7f\u544a\u7cfb\u5217\u3002 App Store\u4ea7\u54c1\u9875\u9762 \u51fa\u8272\u7684\u4ea7\u54c1\u9875\u9762\u53ef\u4ee5\u5438\u5f15\u53d7\u4f17\u7684\u6ce8\u610f\u529b\uff0c\u4f20\u8fbe\u60a8\u7684\u5e94\u7528\u4ef7\u503c\uff0c\u5e76\u8bf4\u670d\u7528\u6237\u4e0b\u8f7d\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e0b\u8f7d\u6b21\u6570\u4e0e\u4ea7\u54c1\u9875\u9762\u6d4f\u89c8\u91cf\u76f8\u5173\u8054\u6765\u8ba1\u7b97\u4ea7\u54c1\u9875\u9762\u7684\u6548\u679c\u3002 \u4ed8\u8d39\u7528\u6237 App Analytics\u6839\u636eApple ID\uff08\u800c\u4e0d\u662f\u8bbe\u5907\u7c7b\u578b\uff09\u5bf9\u7528\u6237\u8fdb\u884c\u8ba1\u6570\uff0c\u4ece\u800c\u4f7f\u60a8\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u4e86\u89e3\u4ed8\u8d39\u7528\u6237\u6570\u636e\u3002\u67e5\u770b\u60a8\u4e00\u5929\u6709\u591a\u5c11\u4ed8\u8d39\u7528\u6237\uff0c\u4ee5\u8bc4\u4f30\u60a8\u6240\u505a\u7684\u4efb\u4f55\u66f4\u6539\u662f\u5426\u4f1a\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u5185\u7684\u652f\u51fa\u3002\u60a8\u8fd8\u53ef\u4ee5\u6309\u6765\u6e90\u8fc7\u6ee4\uff0c\u4ee5\u67e5\u770b\u7528\u6237\u662f\u5426\u6765\u81ea\u7279\u5b9a\u7684\u5e7f\u544a\u7cfb\u5217\u6216\u7f51\u7ad9\u3002 \u5d29\u6e83 \u627e\u51fa\u60a8\u7684\u5e94\u7528\u6bcf\u5929\u5728iOS\u6216tvOS\u4e0a\u5d29\u6e83\u7684\u6b21\u6570\u3002\u60a8\u53ef\u4ee5\u6309\u5e73\u53f0\uff0c\u5e94\u7528\u7a0b\u5e8f\u7248\u672c\u548c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u7b5b\u9009\u5d29\u6e83\u6570\u636e\uff0c\u4ee5\u67e5\u660e\u539f\u56e0\uff0c\u5e2e\u52a9\u60a8\u4e3a\u7528\u6237\u521b\u9020\u66f4\u597d\u7684\u4f53\u9a8c\u3002 \u6309\u4e0b\u8f7d\u65e5\u671f\u5206\u7c7b \u53ea\u6709Apple\u53ef\u4ee5\u63d0\u4f9bApple ID\u9996\u6b21\u4eceApp Store\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684\u65e5\u671f\u3002\u60a8\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7684\u8d2d\u4e70\u65e5\u671f\u8fc7\u6ee4\u7528\u6237\u7ec4\uff0c\u4ee5\u5728\u6bd4\u8f83\u548c\u5206\u6790\u7528\u6237\u884c\u4e3a\u65f6\u5f62\u6210\u66f4\u5b8c\u6574\u7684\u56fe\u7247\u3002 \u82f9\u679c\u7535\u89c6\u6570\u636e \u8bc4\u4f30\u60a8\u7684tvOS\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u53c2\u4e0e\u5ea6\u548c\u83b7\u5229\u3002\u9664\u4e86\u67e5\u770b\u4ea7\u54c1\u9875\u9762\u6d4f\u89c8\u91cf\uff0c\u4e0b\u8f7d\u91cf\u548c\u53c2\u4e0e\u5ea6\u65b9\u9762\u7684\u6570\u636e\u5916\uff0c\u60a8\u8fd8\u53ef\u4ee5\u67e5\u770b\u901a\u8fc7\u8425\u9500\u6d3b\u52a8\u83b7\u5f97\u7684iOS\u7528\u6237\u5728Apple TV\u4e0a\u6253\u5f00\u4e86\u540c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002*\u60a8\u8fd8\u53ef\u4ee5\u5728\u53e6\u4e00\u4e2atvOS\u5e94\u7528\u7a0b\u5e8f\u4e2d\u63a8\u5e7ftvOS\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u5e7f\u544a\u7cfb\u5217\u94fe\u63a5\u8ddf\u8e2a\u7ed3\u679c\u3002","title":"\u6570\u636e\u7edf\u8ba1"},{"location":"android/flutterdev/Flutterdeployment/#app-store-connect","text":"App Store Connect \u4f7f\u7528\u5165\u95e8 \u6dfb\u52a0\u3001\u7f16\u8f91\u548c\u5220\u9664\u7528\u6237 \u7ba1\u7406 App \u548c\u7248\u672c \u6dfb\u52a0 App \u56fe\u6807\u3001App \u9884\u89c8\u548c\u622a\u5c4f \u7ba1\u7406\u6784\u5efa\u7248\u672c \u6d4b\u8bd5 Beta \u7248\u672c \u5728 App Store \u4e0a\u53d1\u884c \u7ef4\u62a4\u60a8\u7684 App \u8861\u91cf App \u8868\u73b0 \u7ba1\u7406\u534f\u8bae\u3001\u7a0e\u52a1\u548c\u94f6\u884c\u4e1a\u52a1 \u83b7\u5f97\u4ed8\u6b3e \u914d\u7f6e App Store \u529f\u80fd \u63d0\u4f9b App \u5185\u8d2d\u4e70\u9879\u76ee \u53c2\u8003","title":"App Store Connect \u4f7f\u7528\u5165\u95e8"},{"location":"android/flutterdev/Flutterdeployment/#android","text":"","title":"Android \u6253\u5305"},{"location":"android/flutterdev/Flutterdeployment/#_7","text":"Android \u7f16\u8bd1\u7cfb\u7edf \u4f1a\u7f16\u8bd1\u5e94\u7528\u8d44\u6e90\u548c\u6e90\u4ee3\u7801 \uff0c\u7136\u540e\u5c06\u5b83\u4eec\u6253\u5305\u6210\u53ef\u4f9b\u60a8\u6d4b\u8bd5\u3001\u90e8\u7f72\u3001\u7b7e\u7f72\u548c\u5206\u53d1\u7684 APK\u3002Android Studio \u4f7f\u7528\u9ad8\u7ea7\u7f16\u8bd1\u5de5\u5177\u5305 Gradle \u6765 \u81ea\u52a8\u6267\u884c\u548c\u7ba1\u7406\u7f16\u8bd1\u6d41\u7a0b \uff0c\u540c\u65f6\u4e5f\u5141\u8bb8\u60a8\u5b9a\u4e49\u7075\u6d3b\u7684 \u81ea\u5b9a\u4e49\u7f16\u8bd1\u914d\u7f6e \u3002\u6bcf\u4e2a\u7f16\u8bd1\u914d\u7f6e\u5747\u53ef\u5b9a\u4e49\u81ea\u5df1\u7684\u4e00\u7ec4\u4ee3\u7801\u548c\u8d44\u6e90\uff0c\u540c\u65f6\u91cd\u7528\u6240\u6709\u5e94\u7528\u7248\u672c\u5171\u7528\u7684\u90e8\u5206\u3002Android Plugin for Gradle \u4e0e\u8be5\u7f16\u8bd1\u5de5\u5177\u5305\u4e00\u8d77\u4f7f\u7528\uff0c\u5171\u540c\u63d0\u4f9b\u4e13\u7528\u4e8e\u7f16\u8bd1\u548c\u6d4b\u8bd5 Android \u5e94\u7528\u7684\u6d41\u7a0b\u548c\u53ef\u914d\u7f6e\u8bbe\u7f6e\u3002","title":"\u6d4b\u8bd5\u3001\u90e8\u7f72\u3001\u7b7e\u540d\u3001\u5206\u53d1"},{"location":"android/flutterdev/Flutterdeployment/#_8","text":"Gradle jetpack ) \u5982\u4f55\u81ea\u52a8\u6267\u884c\u3001\u5982\u4f55\u7ba1\u7406\u6253\u5305\u6d41\u7a0b\u3001\u5982\u4f55\u914d\u7f6e\u81ea\u5b9a\u4e49\u7f16\u8bd1\u914d\u7f6e \u4f7f\u7528\u547d\u4ee4\u884c\u6253\u5305 \u751f\u6210\u7f16\u8bd1\u62a5\u544a ./gradlew --profile --offline --rerun-tasks assemblefreeDebug \u67e5\u770bCPU\u67b6\u6784\u4fe1\u606f: \u67e5\u770bAndroid\u8bbe\u5907\u7684CPU\u67b6\u6784\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u6765\u5b8c\u6210\uff1a 1\u3001adb shell 2\u3001cat /proc/cpuinfo AndroidCPU\u5176\u4e2d\u67b6\u6784","title":"\u7f16\u8bd1\u7cfb\u7edf:"},{"location":"android/flutterdev/Flutterdeployment/#_9","text":"\u5178\u578b Android \u5e94\u7528\u6a21\u5757\u7684\u7f16\u8bd1\u6d41\u7a0b\uff08\u5982\u56fe 1 \u6240\u793a\uff09\u6309\u7167\u4ee5\u4e0b\u5e38\u89c4\u6b65\u9aa4\u6267\u884c\uff1a \u7f16\u8bd1\u5668\u5c06\u60a8\u7684\u6e90\u4ee3\u7801\u8f6c\u6362\u6210 DEX \u6587\u4ef6\uff08Dalvik \u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 Android \u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5b57\u8282\u7801\uff09\uff0c\u5e76\u5c06\u5176\u4ed6\u6240\u6709\u5185\u5bb9\u8f6c\u6362\u6210\u7f16\u8bd1\u7684\u8d44\u6e90\u3002 APK \u6253\u5305\u5668\u5c06 DEX \u6587\u4ef6\u548c\u7f16\u8bd1\u7684\u8d44\u6e90\u7ec4\u5408\u6210\u5355\u4e2a APK\u3002\u4e0d\u8fc7\uff0c\u5fc5\u987b\u5148\u4e3a APK \u7b7e\u540d\uff0c\u7136\u540e\u624d\u80fd\u5c06\u5e94\u7528\u5b89\u88c5\u5e76\u90e8\u7f72\u5230 Android \u8bbe\u5907\u4e0a\u3002 APK \u6253\u5305\u5668\u4f7f\u7528\u8c03\u8bd5\u6216\u53d1\u5e03\u5bc6\u94a5\u5e93\u4e3a APK \u7b7e\u540d\uff1a \u5982\u679c\u60a8\u7f16\u8bd1\u7684\u662f\u5e94\u7528\u8c03\u8bd5\u7248\u672c\uff08\u5373\u4e13\u7528\u4e8e\u6d4b\u8bd5\u548c\u5206\u6790\u7684\u5e94\u7528\uff09\uff0c\u6253\u5305\u5668\u4f1a\u4f7f\u7528\u8c03\u8bd5\u5bc6\u94a5\u5e93\u4e3a\u5e94\u7528\u7b7e\u540d\u3002Android Studio \u81ea\u52a8\u4f7f\u7528\u8c03\u8bd5\u5bc6\u94a5\u5e93\u914d\u7f6e\u65b0\u9879\u76ee\u3002 \u5982\u679c\u60a8\u7f16\u8bd1\u7684\u662f\u6253\u7b97\u5411\u5916\u53d1\u5e03\u7684\u5e94\u7528\u53d1\u5e03\u7248\u672c\uff0c\u6253\u5305\u5668\u4f1a\u4f7f\u7528\u53d1\u5e03\u5bc6\u94a5\u5e93\u4e3a\u5e94\u7528\u7b7e\u540d\u3002\u8981\u521b\u5efa\u53d1\u5e03\u5bc6\u94a5\u5e93\uff0c\u8bf7\u53c2\u9605\u5728 Android Studio \u4e2d\u4e3a\u5e94\u7528\u7b7e\u540d\u3002 \u5728\u751f\u6210\u6700\u7ec8 APK \u4e4b\u524d\uff0c\u6253\u5305\u5668\u4f1a\u4f7f\u7528 zipalign \u5de5\u5177\u5bf9\u5e94\u7528\u8fdb\u884c\u4f18\u5316\uff0c\u51cf\u5c11\u5176\u5728\u8bbe\u5907\u4e0a\u8fd0\u884c\u65f6\u5360\u7528\u7684\u5185\u5b58\u3002 \u7f16\u8bd1\u6d41\u7a0b\u7ed3\u675f\u65f6\uff0c\u60a8\u5c06\u83b7\u5f97\u53ef\u7528\u4e8e\u90e8\u7f72\u548c\u6d4b\u8bd5\u7684\u8c03\u8bd5 APK\uff0c\u6216\u8005\u53ef\u7528\u4e8e\u53d1\u5e03\u7ed9\u5916\u90e8\u7528\u6237\u7684\u53d1\u5e03 APK\u3002","title":"\u6253\u5305\u6d41\u7a0b"},{"location":"android/flutterdev/Flutterdeployment/#android-android-jetpack","text":"","title":"Android Android Jetpack \u4f7f\u7528\u5165\u95e8"},{"location":"android/flutterdev/Flutterdeployment/#android_1","text":"JKS \u5bc6\u94a5\u5e93\u4f7f\u7528\u4e13\u7528\u683c\u5f0f\u3002\u5efa\u8bae\u4f7f\u7528 \"keytool -importkeystore -srckeystore ./key.jks -destkeystore ./key.jks -deststoretype pkcs12\" \u8fc1\u79fb\u5230\u884c\u4e1a\u6807\u51c6\u683c\u5f0f PKCS12\u3002 Jetpack \u5305\u542b\u4e00\u7cfb\u5217 Android \u5e93\uff0c\u5b83\u4eec\u90fd\u91c7\u7528\u6700\u4f73\u505a\u6cd5\u5e76\u5728 Android \u5e94\u7528\u4e2d\u63d0\u4f9b\u5411\u540e\u517c\u5bb9\u6027\u3002 Jetpack \u5e94\u7528\u67b6\u6784\u6307\u5357\u6982\u8ff0\u4e86\u6784\u5efa Android \u5e94\u7528\u65f6\u8981\u8003\u8651\u7684\u6700\u4f73\u505a\u6cd5\u548c\u63a8\u8350\u67b6\u6784\u3002 \u4e0b\u6587\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u59cb\u4f7f\u7528 Jetpack \u7ec4\u4ef6\u3002 Android Jetpack \u4f7f\u7528\u5165\u95e8 Android Jetpack\u7ec4\u4ef6\u5217\u8868 Android Jetpack is a set of components, tools and guidance to make great Android apps. They bring together the existing Support Library and Architecture Components and arrange them into four categories: Android Sunflower\u5f00\u53d1\u6e90\u7801\u9879\u76ee GithHub\u6e90\u7801\u9879\u76ee\u4ee3\u7801","title":"Android\u6253\u5305"},{"location":"android/flutterdev/Flutterdeployment/#androidstudiomaven","text":"Google Maven Android Studio \u4f7f\u7528Maven\u4ed3\u5e93 Guide to Public Maven Repositories Android KTX \u662f\u4e00\u7ec4 Kotlin \u6269\u5c55\u7a0b\u5e8f\uff0c\u5c5e\u4e8e Android Jetpack \u7cfb\u5217\u3002\u5b83\u4f18\u5316\u4e86\u4f9b Kotlin \u4f7f\u7528\u7684 Jetpack \u548c Android \u5e73\u53f0 API\u3002Android KTX \u65e8\u5728\u8ba9\u60a8\u5229\u7528 Kotlin \u8bed\u8a00\u529f\u80fd\uff08\u4f8b\u5982\u6269\u5c55\u51fd\u6570/\u5c5e\u6027\u3001lambda\u3001\u547d\u540d\u53c2\u6570\u548c\u53c2\u6570\u9ed8\u8ba4\u503c\uff09\uff0c\u4ee5\u66f4\u7b80\u6d01\u3001\u66f4\u6109\u60a6\u3001\u66f4\u60ef\u7528\u7684\u65b9\u5f0f\u4f7f\u7528 Kotlin \u8fdb\u884c Android \u5f00\u53d1\u3002Android KTX \u4e0d\u4f1a\u5411\u73b0\u6709\u7684 Android API \u6dfb\u52a0\u4efb\u4f55\u65b0\u529f\u80fd\u3002 \u8981\u8be6\u7ec6\u4e86\u89e3 Android KTX\uff0c\u8bf7\u89c2\u770b\u6211\u4eec\u7684 DevBytes \u89c6\u9891 \u3002","title":"AndroidStudioMaven\u4ed3\u5e93\u7684\u4f7f\u7528"},{"location":"android/flutterdev/Flutterdeployment/#androidx","text":"AndroidX \u662f Android \u56e2\u961f\u7528\u4e8e\u5728 Jetpack \u4e2d\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u6253\u5305\u548c\u53d1\u5e03\u5e93\u4ee5\u53ca\u5bf9\u5176\u8fdb\u884c\u7248\u672c\u63a7\u5236\u7684\u5f00\u6e90\u9879\u76ee\u3002 AndroidX \u5bf9\u539f\u59cb Android \u652f\u6301\u5e93\u8fdb\u884c\u4e86\u91cd\u5927\u6539\u8fdb\u3002\u4e0e\u652f\u6301\u5e93\u4e00\u6837\uff0cAndroidX \u4e0e Android \u64cd\u4f5c\u7cfb\u7edf\u5206\u5f00\u63d0\u4f9b\uff0c\u5e76\u4e0e\u5404\u4e2a Android \u7248\u672c\u5411\u540e\u517c\u5bb9\u3002AndroidX \u5b8c\u5168\u53d6\u4ee3\u4e86\u652f\u6301\u5e93\uff0c\u4e0d\u4ec5\u63d0\u4f9b\u540c\u7b49\u7684\u529f\u80fd\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86\u65b0\u7684\u5e93\u3002\u6b64\u5916\uff0cAndroidX \u8fd8\u5305\u62ec\u4ee5\u4e0b\u529f\u80fd\uff1a AndroidX \u4e2d\u7684\u6240\u6709\u8f6f\u4ef6\u5305\u90fd\u4f7f\u7528\u4e00\u81f4\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u4ee5\u5b57\u7b26\u4e32 androidx \u5f00\u5934\u3002\u652f\u6301\u5e93\u8f6f\u4ef6\u5305\u5df2\u6620\u5c04\u5230\u5bf9\u5e94\u7684 androidx.* \u8f6f\u4ef6\u5305\u3002\u6709\u5173\u6240\u6709\u65e7\u7c7b\u5230\u65b0\u7c7b\u4ee5\u53ca\u65e7\u7f16\u8bd1\u5de5\u4ef6\u5230\u65b0\u7f16\u8bd1\u5de5\u4ef6\u7684\u5b8c\u6574\u6620\u5c04\uff0c\u8bf7\u53c2\u9605\u8f6f\u4ef6\u5305\u91cd\u6784\u9875\u9762\u3002 \u4e0e\u652f\u6301\u5e93\u4e0d\u540c\uff0cAndroidX \u8f6f\u4ef6\u5305\u4f1a\u5355\u72ec\u7ef4\u62a4\u548c\u66f4\u65b0\u3002androidx \u8f6f\u4ef6\u5305\u4f7f\u7528\u4e25\u683c\u7684\u8bed\u4e49\u7248\u672c\u63a7\u5236\uff0c\u4ece\u7248\u672c 1.0.0 \u5f00\u59cb\u3002\u60a8\u53ef\u4ee5\u5355\u72ec\u66f4\u65b0\u9879\u76ee\u4e2d\u7684 AndroidX \u5e93\u3002 \u6240\u6709\u65b0\u652f\u6301\u5e93\u7684\u5f00\u53d1\u5de5\u4f5c\u90fd\u5c06\u5728 AndroidX \u5e93\u4e2d\u8fdb\u884c\u3002\u8fd9\u5305\u62ec\u7ef4\u62a4\u539f\u59cb\u652f\u6301\u5e93\u5de5\u4ef6\u548c\u5f15\u5165\u65b0\u7684 Jetpack \u7ec4\u4ef6\u3002 AndroidX \u6982\u89c8 \u8fc1\u79fb\u5230AndroidX AndroidX\u5305\u5217\u8868 AndroidX\u5f00\u53d1blog","title":"AndroidX \u6982\u8ff0"},{"location":"android/flutterdev/Flutterdeployment/#android_2","text":"1.\u901a\u8fc7\u6a21\u578b\u9a71\u52a8\u754c\u9762 \u6301\u4e45\u6027\u662f\u7406\u60f3\u4e4b\u9009\uff0c\u539f\u56e0\u5982\u4e0b\uff1a \u5982\u679c Android \u64cd\u4f5c\u7cfb\u7edf\u9500\u6bc1\u5e94\u7528\u4ee5\u91ca\u653e\u8d44\u6e90\uff0c\u7528\u6237\u4e0d\u4f1a\u4e22\u5931\u6570\u636e\u3002 \u5f53\u7f51\u7edc\u8fde\u63a5\u4e0d\u7a33\u5b9a\u6216\u4e0d\u53ef\u7528\u65f6\uff0c\u5e94\u7528\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u3002 2.\u5206\u79bb\u5173\u6ce8\u70b9 \u5206\u79bb\u5173\u6ce8\u70b9 \u5e94\u7528\u67b6\u6784\u6307\u5357 Android\u67b6\u6784\u7ec4\u4ef6","title":"Android \u67b6\u6784\u8bbe\u8ba1"},{"location":"android/flutterdev/Flutterdeployment/#_10","text":"\u4f18\u5316\u7f16\u8bd1\u7684\u4ee3\u7801 1.\u914d\u7f6eGradle\u4f9d\u8d56\u5e93\u7684\u4fe1\u606f 2.\u914d\u7f6eGradle\u4f9d\u8d56\u7684\u90a3\u4e9b\u5de5\u7a0b 3.\u914d\u7f6eGradle\u4f7f\u7528\u7684\u73af\u5883\u53d8\u91cf\u548c\u9ed8\u8ba4\u914d\u7f6e 4.\u914d\u7f6eGradle\u7f16\u8bd1\u662f\u4f7f\u7528\u7684\u63a7\u5236Gradle\u7684\u914d\u7f6e\u53d8\u91cf 5.\u914d\u7f6eGradle\u4f7f\u7528SDK\u73af\u5883\u53d8\u91cf\u7684\u4f4d\u7f6e \u6d4b\u8bd5\u3001\u90e8\u7f72\u3001\u7b7e\u7f72\u548c\u5206\u53d1\u7684 APK \u81ea\u5b9a\u4e49\u7f16\u8bd1\u914d\u7f6e \u7f16\u8bd1\u7248\u672c\u7c7b\u578b \u6b63\u5f0f\u7248\u7c7b\u578b \u7f16\u8bd1\u53d8\u4f53 \u6e05\u5355\u6761\u76ee \u4f9d\u8d56\u9879 \u7b7e\u540d ProGuard \u591a APK \u652f\u6301 \u7f16\u8bd1\u914d\u7f6e\u6587\u4ef6 Gradle \u8bbe\u7f6e\u6587\u4ef6:settings.gradle \u6587\u4ef6\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u7528\u4e8e\u6307\u793a Gradle \u5728\u7f16\u8bd1\u5e94\u7528\u65f6\u5e94\u5c06\u54ea\u4e9b\u6a21\u5757\u5305\u542b\u5728\u5185 \u9876\u7ea7\u7f16\u8bd1\u6587\u4ef6:\u9876\u7ea7 build.gradle \u6587\u4ef6\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u7528\u4e8e\u5b9a\u4e49\u9002\u7528\u4e8e\u9879\u76ee\u4e2d\u6240\u6709\u6a21\u5757\u7684\u7f16\u8bd1\u914d\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9876\u7ea7\u7f16\u8bd1\u6587\u4ef6\u4f7f\u7528 buildscript \u4ee3\u7801\u5757\u6765\u5b9a\u4e49\u9879\u76ee\u4e2d\u6240\u6709\u6a21\u5757\u5171\u7528\u7684\u4ee3\u7801\u5e93\u548c\u4f9d\u8d56\u9879\u3002\u4ee5\u4e0b\u4ee3\u7801\u793a\u4f8b\u63cf\u8ff0\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u548c DSL \u5143\u7d20\u53ef\u5728\u65b0\u5efa\u9879\u76ee\u540e\u7684\u9876\u7ea7 build.gradle \u6587\u4ef6\u4e2d\u627e\u5230\u3002 shrinking, using minifyEnabled, and specifies the Proguard settings file Gradle \u5c5e\u6027\u6587\u4ef6 Gradle \u8fd8\u5305\u542b\u4e24\u4e2a\u5c5e\u6027\u6587\u4ef6\uff0c\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u53ef\u7528\u4e8e\u6307\u5b9a Gradle \u7f16\u8bd1\u5de5\u5177\u5305\u672c\u8eab\u7684\u8bbe\u7f6e\uff1a gradle.properties:\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u914d\u7f6e\u9879\u76ee\u8303\u56f4\u7684 Gradle \u8bbe\u7f6e\uff0c\u5982 Gradle \u5b88\u62a4\u8fdb\u7a0b\u7684\u6700\u5927\u5806\u5927\u5c0f\u3002\u5982\u9700\u4e86\u89e3\u8be6\u60c5\uff0c\u8bf7\u53c2\u9605\u7f16\u8bd1\u73af\u5883\u3002 local.properties:\u914d\u7f6e\u7f16\u8bd1\u7cfb\u7edf\u7684\u672c\u5730\u73af\u5883\u5c5e\u6027\uff0c\u5982 SDK \u5b89\u88c5\u8def\u5f84\u3002\u7531\u4e8e\u6b64\u6587\u4ef6\u7684\u5185\u5bb9\u7531 Android Studio \u81ea\u52a8\u751f\u6210\u5e76\u4e14\u4e13\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u8005\u73af\u5883\uff0c\u56e0\u6b64\u60a8\u4e0d\u5e94\u624b\u52a8\u4fee\u6539\u6b64\u6587\u4ef6\u6216\u5c06\u5176\u68c0\u5165\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002 AndroidStudio\u4e0d\u540c\u6a21\u5757\u914d\u7f6e \u542f\u7528\u79bb\u7ebf\u6a21\u5f0f \u5982\u679c\u7f51\u7edc\u8fde\u63a5\u901f\u5ea6\u6bd4\u8f83\u6162\uff0c\u90a3\u4e48\u5728 Gradle \u5c1d\u8bd5\u4f7f\u7528\u7f51\u7edc\u8d44\u6e90\u89e3\u6790\u4f9d\u8d56\u9879\u65f6\uff0c\u7f16\u8bd1\u65f6\u95f4\u53ef\u80fd\u4f1a\u5ef6\u957f\u3002\u60a8\u53ef\u4ee5\u6307\u793a Gradle \u4ec5\u4f7f\u7528\u5df2\u7f13\u5b58\u5230\u672c\u5730\u7684\u5de5\u4ef6\uff0c\u4ece\u800c\u907f\u514d\u4f7f\u7528\u7f51\u7edc\u8d44\u6e90\u3002 \u8981\u5728\u4f7f\u7528 Android Studio \u7f16\u8bd1\u9879\u76ee\u65f6\u79bb\u7ebf\u4f7f\u7528 Gradle\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u4f9d\u6b21\u70b9\u51fb File Settings\uff08\u5728 Mac \u4e0a\uff0c\u5219\u4f9d\u6b21\u70b9\u51fb Android Studio Preferences\uff09\uff0c\u6253\u5f00 Preferences \u7a97\u53e3\u3002 \u5728\u5de6\u4fa7\u7a97\u683c\u4e2d\uff0c\u4f9d\u6b21\u70b9\u51fb Build, Execution, Deployment Gradle\u3002 \u52fe\u9009 Offline work \u590d\u9009\u6846\u3002 \u70b9\u51fb Apply \u6216 OK\u3002 \u5982\u679c\u60a8\u6b63\u5728\u901a\u8fc7\u547d\u4ee4\u884c\u7f16\u8bd1\uff0c\u8bf7\u4f20\u9012 --offline \u9009\u9879\u3002 Instant Run\uff1a \u6253\u5f00 Settings \u6216 Preferences \u5bf9\u8bdd\u6846\u3002 \u4f9d\u6b21\u8f6c\u5230 Build, Execution, Deployment Instant Run\u3002 \u786e\u4fdd\u52fe\u9009 Enable Instant Run\u3002 Android Runtime (ART) \u548c Dalvik","title":"\u914d\u7f6e\u7f16\u8bd1\u7248\u672c"},{"location":"android/flutterdev/Flutterdeployment/#_11","text":"\u5982\u679c\u5e94\u7528\u54cd\u5e94\u901f\u5ea6\u6162\u3001\u52a8\u753b\u64ad\u653e\u4e0d\u6d41\u7545\u3001\u5361\u987f\u3001\u5d29\u6e83\u6216\u6781\u5176\u8017\u7535\uff0c\u5219\u8868\u793a\u5176\u6027\u80fd\u5dee \u5206\u6790\u5e94\u7528\u6027\u80fd","title":"\u6027\u80fd\u5206\u6790"},{"location":"android/flutterdev/applifecyclestate/","text":"Flutter \u751f\u547d\u5468\u671f\u7684\u8c03\u7528 WidgetsBindingObserver AppLifecycleState // Copyright 2016 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. import package:flutter/widgets.dart ; class LifecycleWatcher extends StatefulWidget { const LifecycleWatcher ({ Key key }) : super ( key: key ); @ override _LifecycleWatcherState createState () = _LifecycleWatcherState (); } class _LifecycleWatcherState extends State LifecycleWatcher with WidgetsBindingObserver { AppLifecycleState _lastLifecycleState ; @ override void initState () { super . initState (); WidgetsBinding . instance . addObserver ( this ); } @ override void dispose () { WidgetsBinding . instance . removeObserver ( this ); super . dispose (); } @ override void didChangeAppLifecycleState ( AppLifecycleState state ) { setState (() { _lastLifecycleState = state ; }); } @ override Future bool didPopRoute () { // TODO: implement didPopRoute return super . didPopRoute (); } @ override Future bool didPushRoute ( String route ) { // TODO: implement didPushRoute return super . didPushRoute ( route ); } @ override void didChangeAccessibilityFeatures () { // TODO: implement didChangeAccessibilityFeatures super . didChangeAccessibilityFeatures (); } @ override Widget build ( BuildContext context ) { if ( _lastLifecycleState == null ) return const Text ( This widget has not observed any lifecycle changes. ); return Text ( The most recent lifecycle state this widget observed was: $ _lastLifecycleState . ); } } void main () { runApp ( const Directionality ( textDirection: TextDirection . ltr , child: Center ( child: LifecycleWatcher (), ), ), ); } State \u751f\u547d\u5468\u671f(\u5177\u4f53\u4f7f\u7528\u573a\u666f) initState \u521d\u59cb\u5316\u662f\u6ce8\u518c ChangeNotifier Stream build didUpdateWidget Widget\u66f4\u65b0\u4e4b\u540e\u8c03\u7528 didChangeDependencies BuildContext.inheritFromWidgetOfExactType \u8bbf\u95ee\u7ba1\u7406\u7684\u6570\u636e dispose Widge\u5df2\u7ecf\u9500\u6bc1\u4e4b\u540e\uff0c\u8fdb\u884c\u6e05\u7406\u5de5\u4f5c","title":"Flutter\u751f\u547d\u5468\u671f\u7ba1\u7406"},{"location":"android/flutterdev/applifecyclestate/#flutter","text":"WidgetsBindingObserver AppLifecycleState // Copyright 2016 The Chromium Authors. All rights reserved. // Use of this source code is governed by a BSD-style license that can be // found in the LICENSE file. import package:flutter/widgets.dart ; class LifecycleWatcher extends StatefulWidget { const LifecycleWatcher ({ Key key }) : super ( key: key ); @ override _LifecycleWatcherState createState () = _LifecycleWatcherState (); } class _LifecycleWatcherState extends State LifecycleWatcher with WidgetsBindingObserver { AppLifecycleState _lastLifecycleState ; @ override void initState () { super . initState (); WidgetsBinding . instance . addObserver ( this ); } @ override void dispose () { WidgetsBinding . instance . removeObserver ( this ); super . dispose (); } @ override void didChangeAppLifecycleState ( AppLifecycleState state ) { setState (() { _lastLifecycleState = state ; }); } @ override Future bool didPopRoute () { // TODO: implement didPopRoute return super . didPopRoute (); } @ override Future bool didPushRoute ( String route ) { // TODO: implement didPushRoute return super . didPushRoute ( route ); } @ override void didChangeAccessibilityFeatures () { // TODO: implement didChangeAccessibilityFeatures super . didChangeAccessibilityFeatures (); } @ override Widget build ( BuildContext context ) { if ( _lastLifecycleState == null ) return const Text ( This widget has not observed any lifecycle changes. ); return Text ( The most recent lifecycle state this widget observed was: $ _lastLifecycleState . ); } } void main () { runApp ( const Directionality ( textDirection: TextDirection . ltr , child: Center ( child: LifecycleWatcher (), ), ), ); }","title":"Flutter \u751f\u547d\u5468\u671f\u7684\u8c03\u7528"},{"location":"android/flutterdev/applifecyclestate/#state","text":"initState \u521d\u59cb\u5316\u662f\u6ce8\u518c ChangeNotifier Stream build didUpdateWidget Widget\u66f4\u65b0\u4e4b\u540e\u8c03\u7528 didChangeDependencies BuildContext.inheritFromWidgetOfExactType \u8bbf\u95ee\u7ba1\u7406\u7684\u6570\u636e dispose Widge\u5df2\u7ecf\u9500\u6bc1\u4e4b\u540e\uff0c\u8fdb\u884c\u6e05\u7406\u5de5\u4f5c","title":"State \u751f\u547d\u5468\u671f(\u5177\u4f53\u4f7f\u7528\u573a\u666f)"},{"location":"android/flutterdev/assertGet/","text":"\u8d44\u6e90\u6587\u4ef6\u83b7\u53d6\u67e5\u627e AssetBundle","title":"\u8d44\u6e90\u6587\u4ef6\u83b7\u53d6\u67e5\u627e"},{"location":"android/flutterdev/assertGet/#_1","text":"AssetBundle","title":"\u8d44\u6e90\u6587\u4ef6\u83b7\u53d6\u67e5\u627e"},{"location":"android/flutterdev/customWidget/","text":"\u81ea\u5b9a\u4e49\u63a7\u4ef6Widget initState didChangeDependencies build didUpdateWidget build \u63a7\u4ef6\u6446\u653e\u7ec6\u8282\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\uff1f\uff1f\uff1f \u63cf\u8ff0\u4e86\u4e00\u4e2a[element]\u7684\u914d\u7f6e\u3002widgets\u662fflutr\u6846\u67b6\u4e2d\u7684\u4e2d\u5fc3\u7c7b\u5c42\u6b21\u7ed3\u6784\u3002\u5c0f\u90e8\u4ef6\u662f\u7528\u6237\u754c\u9762\u7684\u4e00\u90e8\u5206\u7684\u4e0d\u53ef\u53d8\u63cf\u8ff0\u3002\u5c0f\u90e8\u4ef6\u53ef\u4ee5\u662f\u5df2\u81a8\u80c0\u4e3a\u5143\u7d20\uff0c\u7528\u4e8e\u7ba1\u7406\u5e95\u5c42\u5448\u73b0\u6811\u3002\u5c0f\u90e8\u4ef6\u672c\u8eab\u6ca1\u6709\u53ef\u53d8\u72b6\u6001\uff08\u5b83\u4eec\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u5fc5\u987b\u662ffinal\uff09\u3002\u5982\u679c\u5e0c\u671b\u5c06\u53ef\u53d8\u72b6\u6001\u4e0e\u5c0f\u90e8\u4ef6\u5173\u8054\uff0c\u8bf7\u8003\u8651\u4f7f\u7528[statefulwidget]\uff0c\u5b83\u521b\u5efa\u4e00\u4e2a[\u72b6\u6001]\u5bf9\u8c61\uff08\u901a\u8fc7[statefulWidget.createState]\uff09\u5f53\u5b83\u88ab\u81a8\u80c0\u6210\u4e00\u4e2a\u5143\u7d20\u65f6\u878d\u5165\u5230\u6811\u4e2d\u3002\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u53ef\u4ee5\u5305\u542b\u5728\u6811\u4e2d\u96f6\u6b21\u6216\u591a\u6b21\u3002\u7279\u522b\u5730\uff1a \u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u53ef\u4ee5\u591a\u6b21\u653e\u7f6e\u5728\u6811\u4e2d\u3002\u6bcf\u6b21\u4e00\u4e2a\u5c0f\u90e8\u4ef6\u653e\u7f6e\u5728\u6811\u4e2d\uff0c\u5b83\u88ab\u81a8\u80c0\u4e3a\u591a\u6b21\u5408\u5e76\u5230\u6811\u4e2d\u7684\u5c0f\u90e8\u4ef6\u5c06\u88ab\u81a8\u80c0\u591a\u6b21\u3002[key]\u5c5e\u6027\u63a7\u5236\u4e00\u4e2a\u5c0f\u90e8\u4ef6\u5982\u4f55\u66ff\u6362/\u6811\u3002\u5982\u679c\u4e24\u4e2a\u5c0f\u90e8\u4ef6\u7684[RuntimeType]\u548c[Key]\u5c5e\u6027\u662f[operator==]\uff0c\u7136\u540e\u65b0\u7684\u5c0f\u90e8\u4ef6\u66ff\u6362\u65e7\u7684\u5c0f\u90e8\u4ef6\u66f4\u65b0\u5e95\u5c42\u5143\u7d20\uff08\u5373\uff0c\u4f7f\u7528new widget\uff09\u3002\u5426\u5219\uff0c\u5c06\u4ece\u6811\u4e2d\u5220\u9664\u65e7\u5143\u7d20widget\u88ab\u6269\u5c55\u6210\u4e00\u4e2a\u5143\u7d20\uff0c\u65b0\u5143\u7d20\u88ab\u63d2\u5165\u5230\u6811\u3002 widget: PreferredSizeWidget:widgets\u7684\u63a5\u53e3\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u8be5widget\u5e0c\u671b\u7684\u5927\u5c0f\u5982\u679c\u5b83\u662f\u65e0\u7ea6\u675f\u7684\u3002\u6709\u4e00\u4e9b\u60c5\u51b5\uff0c\u7279\u522b\u662f[appbar]\u548c[tabbar]\uff0c\u5728\u8fd9\u91ccwidget\u4e0d\u9700\u8981\u9650\u5236\u81ea\u5df1\u7684\u5927\u5c0f\uff0c\u4f46\u662f\u9700\u8981\u516c\u5f00\u9996\u9009\u6216\u201c\u9ed8\u8ba4\u201d\u5927\u5c0f\u3002\u4f8b\u5982\u4e00\u4e2a\u4e3b\u8981\u7684[\u811a\u624b\u67b6]\u5c06\u5176app bar\u9ad8\u5ea6\u8bbe\u7f6e\u4e3aapp bar\u7684\u9996\u9009\u9ad8\u5ea6\u52a0\u4e0a\u7cfb\u7edf\u72b6\u6001\u680f\u7684\u9ad8\u5ea6\u3002\u4f7f\u7528[PreferredSize]\u4e3a\u4efb\u610f\u5c0f\u90e8\u4ef6\u63d0\u4f9b\u9996\u9009\u5927\u5c0f\u3002 FlexibleSpaceBar AppBar StatefulWidget: ProxyWidget: RenderObjectWidget: RenderObjectToWidgetAdapter Table SliverWithKeepAliveWidget ConstrainedLayoutBuilder ListWheelViewport SingleChildRenderObjectWidget LeafRenderObjectWidget MultiChildRenderObjectWidget StatelessWidget Element: RenderObjectElement SliverMultiBoxAdaptorElement ListWheelElement LeafRenderObjectElement MultiChildRenderObjectElement SingleChildRenderObjectElement RootRenderObjectElement ComponentElement ProxyElement InheritedElement InheritedModelElement StatefulElement StatelessElement RenderObject: RenderBox RenderView RenderAbstractViewport RenderSliver ContainerRenderObjectMixin RenderObjectWithChildMixin \u5904\u7406\u73af\u5883\u53d8\u91cf \u5e73\u53f0\u76f8\u5173 Platform system_chrome","title":"\u81ea\u5b9a\u4e49Widget"},{"location":"android/flutterdev/customWidget/#widget","text":"initState didChangeDependencies build didUpdateWidget build \u63a7\u4ef6\u6446\u653e\u7ec6\u8282\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\uff1f\uff1f\uff1f \u63cf\u8ff0\u4e86\u4e00\u4e2a[element]\u7684\u914d\u7f6e\u3002widgets\u662fflutr\u6846\u67b6\u4e2d\u7684\u4e2d\u5fc3\u7c7b\u5c42\u6b21\u7ed3\u6784\u3002\u5c0f\u90e8\u4ef6\u662f\u7528\u6237\u754c\u9762\u7684\u4e00\u90e8\u5206\u7684\u4e0d\u53ef\u53d8\u63cf\u8ff0\u3002\u5c0f\u90e8\u4ef6\u53ef\u4ee5\u662f\u5df2\u81a8\u80c0\u4e3a\u5143\u7d20\uff0c\u7528\u4e8e\u7ba1\u7406\u5e95\u5c42\u5448\u73b0\u6811\u3002\u5c0f\u90e8\u4ef6\u672c\u8eab\u6ca1\u6709\u53ef\u53d8\u72b6\u6001\uff08\u5b83\u4eec\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u5fc5\u987b\u662ffinal\uff09\u3002\u5982\u679c\u5e0c\u671b\u5c06\u53ef\u53d8\u72b6\u6001\u4e0e\u5c0f\u90e8\u4ef6\u5173\u8054\uff0c\u8bf7\u8003\u8651\u4f7f\u7528[statefulwidget]\uff0c\u5b83\u521b\u5efa\u4e00\u4e2a[\u72b6\u6001]\u5bf9\u8c61\uff08\u901a\u8fc7[statefulWidget.createState]\uff09\u5f53\u5b83\u88ab\u81a8\u80c0\u6210\u4e00\u4e2a\u5143\u7d20\u65f6\u878d\u5165\u5230\u6811\u4e2d\u3002\u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u53ef\u4ee5\u5305\u542b\u5728\u6811\u4e2d\u96f6\u6b21\u6216\u591a\u6b21\u3002\u7279\u522b\u5730\uff1a \u7ed9\u5b9a\u7684\u5c0f\u90e8\u4ef6\u53ef\u4ee5\u591a\u6b21\u653e\u7f6e\u5728\u6811\u4e2d\u3002\u6bcf\u6b21\u4e00\u4e2a\u5c0f\u90e8\u4ef6\u653e\u7f6e\u5728\u6811\u4e2d\uff0c\u5b83\u88ab\u81a8\u80c0\u4e3a\u591a\u6b21\u5408\u5e76\u5230\u6811\u4e2d\u7684\u5c0f\u90e8\u4ef6\u5c06\u88ab\u81a8\u80c0\u591a\u6b21\u3002[key]\u5c5e\u6027\u63a7\u5236\u4e00\u4e2a\u5c0f\u90e8\u4ef6\u5982\u4f55\u66ff\u6362/\u6811\u3002\u5982\u679c\u4e24\u4e2a\u5c0f\u90e8\u4ef6\u7684[RuntimeType]\u548c[Key]\u5c5e\u6027\u662f[operator==]\uff0c\u7136\u540e\u65b0\u7684\u5c0f\u90e8\u4ef6\u66ff\u6362\u65e7\u7684\u5c0f\u90e8\u4ef6\u66f4\u65b0\u5e95\u5c42\u5143\u7d20\uff08\u5373\uff0c\u4f7f\u7528new widget\uff09\u3002\u5426\u5219\uff0c\u5c06\u4ece\u6811\u4e2d\u5220\u9664\u65e7\u5143\u7d20widget\u88ab\u6269\u5c55\u6210\u4e00\u4e2a\u5143\u7d20\uff0c\u65b0\u5143\u7d20\u88ab\u63d2\u5165\u5230\u6811\u3002 widget: PreferredSizeWidget:widgets\u7684\u63a5\u53e3\uff0c\u5b83\u53ef\u4ee5\u8fd4\u56de\u8be5widget\u5e0c\u671b\u7684\u5927\u5c0f\u5982\u679c\u5b83\u662f\u65e0\u7ea6\u675f\u7684\u3002\u6709\u4e00\u4e9b\u60c5\u51b5\uff0c\u7279\u522b\u662f[appbar]\u548c[tabbar]\uff0c\u5728\u8fd9\u91ccwidget\u4e0d\u9700\u8981\u9650\u5236\u81ea\u5df1\u7684\u5927\u5c0f\uff0c\u4f46\u662f\u9700\u8981\u516c\u5f00\u9996\u9009\u6216\u201c\u9ed8\u8ba4\u201d\u5927\u5c0f\u3002\u4f8b\u5982\u4e00\u4e2a\u4e3b\u8981\u7684[\u811a\u624b\u67b6]\u5c06\u5176app bar\u9ad8\u5ea6\u8bbe\u7f6e\u4e3aapp bar\u7684\u9996\u9009\u9ad8\u5ea6\u52a0\u4e0a\u7cfb\u7edf\u72b6\u6001\u680f\u7684\u9ad8\u5ea6\u3002\u4f7f\u7528[PreferredSize]\u4e3a\u4efb\u610f\u5c0f\u90e8\u4ef6\u63d0\u4f9b\u9996\u9009\u5927\u5c0f\u3002 FlexibleSpaceBar AppBar StatefulWidget: ProxyWidget: RenderObjectWidget: RenderObjectToWidgetAdapter Table SliverWithKeepAliveWidget ConstrainedLayoutBuilder ListWheelViewport SingleChildRenderObjectWidget LeafRenderObjectWidget MultiChildRenderObjectWidget StatelessWidget Element: RenderObjectElement SliverMultiBoxAdaptorElement ListWheelElement LeafRenderObjectElement MultiChildRenderObjectElement SingleChildRenderObjectElement RootRenderObjectElement ComponentElement ProxyElement InheritedElement InheritedModelElement StatefulElement StatelessElement RenderObject: RenderBox RenderView RenderAbstractViewport RenderSliver ContainerRenderObjectMixin RenderObjectWithChildMixin","title":"\u81ea\u5b9a\u4e49\u63a7\u4ef6Widget"},{"location":"android/flutterdev/customWidget/#_1","text":"","title":"\u5904\u7406\u73af\u5883\u53d8\u91cf"},{"location":"android/flutterdev/customWidget/#_2","text":"Platform system_chrome","title":"\u5e73\u53f0\u76f8\u5173"},{"location":"android/flutterdev/dartbase/","text":"\u5e38\u4f7f\u7528\u7684\u5e93 material-library design widgetLib Google\u5b57\u4f53\u5e93 FlutterUI\u5217\u8868 \u5927\u5382Appdemo Flutter\u5f00\u6e90\u5217\u8868 Flutter\u6e90\u4ee3\u7801\u4e0b\u8f7d\u5730\u5740 Flutter2019\u67b6\u6784 Flutter\u53d1\u5e03\u5230Githbuio \u9879\u76ee\u4e2d\u53ef\u7528UI \u9879\u76ee\u4e2d\u53ef\u7528UI \u5c4f\u5e55\u9002\u914d \u9002\u914d\u4e0d\u540c\u7684\u5c4f\u5e55 \u673a\u5668\u5b66\u4e60Flutter Flutter\u96c6\u6210\u673a\u5668\u5b66\u4e60 \u5b9e\u65f6\u56fe\u50cf\u68c0\u6d4b Flutter\u72b6\u6001\u5904\u7406 \u53ef\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u524d\u7aef\uff0c\u5728\u5b66\u4e60 Flutter \u7684\u8fc7\u7a0b\u4e2d\uff0c\u603b\u611f\u89c9\u975e\u5e38\u975e\u5e38\u76f8\u4f3c React Native\uff0c\u751a\u81f3\u4e8e\uff0c\u5176\u4e2d\u8fd8\u662f\u6709state\u7684\u6982\u5ff5 setState\uff0c\u6240\u4ee5\u5728 Flutter \u4e2d\uff0c\u4e5f\u5f53\u7136\u4f1a\u5b58\u5728\u975e\u5e38\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982 redux \u3001RxDart \u8fd8\u6709 Scoped Model\u7b49\u89e3\u51b3\u65b9\u6848\u3002\u4eca\u5929\uff0c\u6211\u4eec\u4e3b\u8981\u4ecb\u7ecd\u4e0b\u5e38\u7528\u7684\u4e24\u79cd State \u7ba1\u7406\u89e3\u51b3\u65b9\u6848\uff1aredux\u3001scoped model\u3002 scoped_model \u652f\u6301\u5728\u5b50View\u4e2d\u80fd\u591f\u83b7\u53d6fuView\u7684\u903b\u8f91 scoped_model\u72b6\u6001\u5904\u7406\u76f8\u5173\u7684\u903b\u8f91 \u5bf9\u5e73\u53f0\u7684\u64cd\u4f5c * Information about the environment in which the current program is running. * * Platform provides information such as the operating system, * the hostname of the computer, the value of environment variables, * the path to the running program, * and so on. platform.dart foundation \u5f02\u6b65\u5904\u7406 // ------------------------------------------------------------------- // Controller for creating and adding events to a stream. // Type of a stream controller s `onListen`, `onPause` and `onResume` callbacks. // ------------------------------------------------------------------- \u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898: How to create constructors Different ways to specify parameters When and how to create getters and setters How Dart handles privacy How to create factories How functional programming works in Dart Other core Dart concepts \u4e3a\u4ec0\u4e48Flutter\u4f7f\u7528Dart Why Flutter Uses Dart \u5f00\u53d1\u8d44\u6e90 \u65b9\u6cd5\u7ea7\u8054 Dart\u5982\u4f55\u5b9e\u73b0\u591a\u7ebf\u7a0b Note: All Dart code runs in the context of an isolate that owns all of the memory that the Dart code uses. While Dart code is executing, no other code in the same isolate can run. If you want multiple parts of Dart code to run concurrently, you can run them in separate isolates. (Web apps use workers instead of isolates.) Multiple isolates run at the same time, usually each on its own CPU core. Isolates don\u2019t share memory, and the only way they can interact is by sending messages to each other. For more information, see the documentation for isolates or web workers. Asynchrony support, a section in the language tour. API reference documentation for futures , isolates , and web workers . Flutter\u5982\u4f55\u8bbe\u7f6e\u663e\u793a\u65b9\u5411\uff1f The MyAppBar widget creates a Container with a height of 56 device-independent pixels with an internal padding of 8 pixels Theme.of(context).primaryColor; \u5904\u7406APP\u6837\u5f0f\u76f8\u5173\u7684\u6570\u636e \u8c03\u8bd5\u5de5\u5177 \u4f18\u5316\u3001\u4f18\u5316\u5de5\u5177\u7684\u4f7f\u7528 \u51fd\u6570\u5f0f\u7f16\u7a0b first coding 1.\u5b9a\u4e49\u7c7b 2.\u5b9a\u4e49\u79c1\u6709\u53d8\u91cf 3.\u5b9a\u4e49get\u3001set\u65b9\u6cd5 4.toString\u7684\u4f7f\u7528 5.\u6784\u9020\u65b9\u6cd5\u7684\u4f7f\u7528 6.\u5b9a\u4e49\u53ea\u8bfb\u3001\u53ea\u5199\u7684\u53d8\u91cf 7.Dart doesn't support overloading constructors and handles this situation differentl 8.\u53ef\u9009\u7684\u540d\u5b57\u53c2\u6570 class Bicycle{ int cadence; int _speed = 10; int get speed = gt; this._speed; int gear; Bicycle(int cadence,int gear){ this.cadence = cadence; this.gear = gear; } void applyBrake(int decrement){ this._speed -= decrement; } void speedUp(int increment){ _speed += increment; } @override String toString() = gt; Bicycle:$_speed mph ; } void main(){ var bike = Bicycle(2,1); print(bike); } \u53ef\u9009\u53c2\u6570 1.\u53c2\u6570\u4f7f\u7528\u540d\u5b57 import dart:math ; class Rectangle { int width; int height; Point origin; Rectangle({this.origin = const Point(0, 0), this.width = 0, this.height = 0}); @override String toString() = gt; Origin: (${origin.x}, ${origin.y}), width: $width, height: $height ; } main() { print(Rectangle(origin: const Point(10, 20), width: 100, height: 200)); print(Rectangle(origin: const Point(10, 10))); print(Rectangle(width: 200)); print(Rectangle()); }","title":"\u5e38\u4f7f\u7528\u7684\u5e93"},{"location":"android/flutterdev/dartbase/#_1","text":"material-library design widgetLib Google\u5b57\u4f53\u5e93 FlutterUI\u5217\u8868 \u5927\u5382Appdemo Flutter\u5f00\u6e90\u5217\u8868 Flutter\u6e90\u4ee3\u7801\u4e0b\u8f7d\u5730\u5740 Flutter2019\u67b6\u6784 Flutter\u53d1\u5e03\u5230Githbuio","title":"\u5e38\u4f7f\u7528\u7684\u5e93"},{"location":"android/flutterdev/dartbase/#ui","text":"\u9879\u76ee\u4e2d\u53ef\u7528UI","title":"\u9879\u76ee\u4e2d\u53ef\u7528UI"},{"location":"android/flutterdev/dartbase/#_2","text":"\u9002\u914d\u4e0d\u540c\u7684\u5c4f\u5e55","title":"\u5c4f\u5e55\u9002\u914d"},{"location":"android/flutterdev/dartbase/#flutter","text":"Flutter\u96c6\u6210\u673a\u5668\u5b66\u4e60 \u5b9e\u65f6\u56fe\u50cf\u68c0\u6d4b","title":"\u673a\u5668\u5b66\u4e60Flutter"},{"location":"android/flutterdev/dartbase/#flutter_1","text":"\u53ef\u80fd\u4f5c\u4e3a\u4e00\u4e2a\u524d\u7aef\uff0c\u5728\u5b66\u4e60 Flutter \u7684\u8fc7\u7a0b\u4e2d\uff0c\u603b\u611f\u89c9\u975e\u5e38\u975e\u5e38\u76f8\u4f3c React Native\uff0c\u751a\u81f3\u4e8e\uff0c\u5176\u4e2d\u8fd8\u662f\u6709state\u7684\u6982\u5ff5 setState\uff0c\u6240\u4ee5\u5728 Flutter \u4e2d\uff0c\u4e5f\u5f53\u7136\u4f1a\u5b58\u5728\u975e\u5e38\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6bd4\u5982 redux \u3001RxDart \u8fd8\u6709 Scoped Model\u7b49\u89e3\u51b3\u65b9\u6848\u3002\u4eca\u5929\uff0c\u6211\u4eec\u4e3b\u8981\u4ecb\u7ecd\u4e0b\u5e38\u7528\u7684\u4e24\u79cd State \u7ba1\u7406\u89e3\u51b3\u65b9\u6848\uff1aredux\u3001scoped model\u3002 scoped_model \u652f\u6301\u5728\u5b50View\u4e2d\u80fd\u591f\u83b7\u53d6fuView\u7684\u903b\u8f91 scoped_model\u72b6\u6001\u5904\u7406\u76f8\u5173\u7684\u903b\u8f91","title":"Flutter\u72b6\u6001\u5904\u7406"},{"location":"android/flutterdev/dartbase/#_3","text":"* Information about the environment in which the current program is running. * * Platform provides information such as the operating system, * the hostname of the computer, the value of environment variables, * the path to the running program, * and so on. platform.dart foundation","title":"\u5bf9\u5e73\u53f0\u7684\u64cd\u4f5c"},{"location":"android/flutterdev/dartbase/#_4","text":"// ------------------------------------------------------------------- // Controller for creating and adding events to a stream. // Type of a stream controller s `onListen`, `onPause` and `onResume` callbacks. // -------------------------------------------------------------------","title":"\u5f02\u6b65\u5904\u7406"},{"location":"android/flutterdev/dartbase/#_5","text":"How to create constructors Different ways to specify parameters When and how to create getters and setters How Dart handles privacy How to create factories How functional programming works in Dart Other core Dart concepts","title":"\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898:"},{"location":"android/flutterdev/dartbase/#flutterdart","text":"Why Flutter Uses Dart","title":"\u4e3a\u4ec0\u4e48Flutter\u4f7f\u7528Dart"},{"location":"android/flutterdev/dartbase/#_6","text":"","title":"\u5f00\u53d1\u8d44\u6e90"},{"location":"android/flutterdev/dartbase/#_7","text":"","title":"\u65b9\u6cd5\u7ea7\u8054"},{"location":"android/flutterdev/dartbase/#dart","text":"Note: All Dart code runs in the context of an isolate that owns all of the memory that the Dart code uses. While Dart code is executing, no other code in the same isolate can run. If you want multiple parts of Dart code to run concurrently, you can run them in separate isolates. (Web apps use workers instead of isolates.) Multiple isolates run at the same time, usually each on its own CPU core. Isolates don\u2019t share memory, and the only way they can interact is by sending messages to each other. For more information, see the documentation for isolates or web workers. Asynchrony support, a section in the language tour. API reference documentation for futures , isolates , and web workers . Flutter\u5982\u4f55\u8bbe\u7f6e\u663e\u793a\u65b9\u5411\uff1f The MyAppBar widget creates a Container with a height of 56 device-independent pixels with an internal padding of 8 pixels Theme.of(context).primaryColor; \u5904\u7406APP\u6837\u5f0f\u76f8\u5173\u7684\u6570\u636e","title":"Dart\u5982\u4f55\u5b9e\u73b0\u591a\u7ebf\u7a0b"},{"location":"android/flutterdev/dartbase/#_8","text":"","title":"\u8c03\u8bd5\u5de5\u5177"},{"location":"android/flutterdev/dartbase/#_9","text":"","title":"\u4f18\u5316\u3001\u4f18\u5316\u5de5\u5177\u7684\u4f7f\u7528"},{"location":"android/flutterdev/dartbase/#_10","text":"","title":"\u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"android/flutterdev/dartbase/#first-coding","text":"1.\u5b9a\u4e49\u7c7b 2.\u5b9a\u4e49\u79c1\u6709\u53d8\u91cf 3.\u5b9a\u4e49get\u3001set\u65b9\u6cd5 4.toString\u7684\u4f7f\u7528 5.\u6784\u9020\u65b9\u6cd5\u7684\u4f7f\u7528 6.\u5b9a\u4e49\u53ea\u8bfb\u3001\u53ea\u5199\u7684\u53d8\u91cf 7.Dart doesn't support overloading constructors and handles this situation differentl 8.\u53ef\u9009\u7684\u540d\u5b57\u53c2\u6570 class Bicycle{ int cadence; int _speed = 10; int get speed = gt; this._speed; int gear; Bicycle(int cadence,int gear){ this.cadence = cadence; this.gear = gear; } void applyBrake(int decrement){ this._speed -= decrement; } void speedUp(int increment){ _speed += increment; } @override String toString() = gt; Bicycle:$_speed mph ; } void main(){ var bike = Bicycle(2,1); print(bike); }","title":"first coding"},{"location":"android/flutterdev/dartbase/#_11","text":"1.\u53c2\u6570\u4f7f\u7528\u540d\u5b57 import dart:math ; class Rectangle { int width; int height; Point origin; Rectangle({this.origin = const Point(0, 0), this.width = 0, this.height = 0}); @override String toString() = gt; Origin: (${origin.x}, ${origin.y}), width: $width, height: $height ; } main() { print(Rectangle(origin: const Point(10, 20), width: 100, height: 200)); print(Rectangle(origin: const Point(10, 10))); print(Rectangle(width: 200)); print(Rectangle()); }","title":"\u53ef\u9009\u53c2\u6570"},{"location":"android/flutterdev/flutterImageProvider/","text":"Flutter \u52a0\u8f7d\u56fe\u7247 ImageCache \u7528\u4e8e\u7f13\u5b58\u56fe\u50cf\u7684\u7c7b\u3002\u5b9e\u73b0\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u7f13\u5b58\uff0c\u6700\u591a1000\u4e2a\u56fe\u50cf\uff0c\u6700\u591a100\u4e2a\u56fe\u50cfMB\u3002\u6700\u5927\u5c3a\u5bf8\u53ef\u4ee5\u4f7f\u7528[_kDefaultSize]\u8c03\u6574[_kDefaultSizeBytes]\u3002\u6b63\u5728\u4f7f\u7528\u7684\u56fe\u50cf\uff08\u5373application\u901a\u8fc7[imagestream]\u5bf9\u8c61\u4fdd\u5b58\u5f15\u7528\uff0c[imagestreamcompleter]\u5bf9\u8c61\uff0c[imageinfo]\u5bf9\u8c61\uff0c\u6216\u539f\u59cb[dart:ui.image]objects\uff09\u53ef\u80fd\u4ece\u7f13\u5b58\u4e2d\u6536\u56de\uff08\u56e0\u6b64\u9700\u8981\u4ece\u5982\u679c\u5728[putifabsent]\u65b9\u6cd5\u4e2d\u5f15\u7528\u4e86\u7f51\u7edc\uff0c\u4f46\u662f\u53ea\u8981\u5e94\u7528\u7a0b\u5e8f\u5728\u4f7f\u7528\u4f4d\uff0c\u4f4d\u5c31\u4e00\u76f4\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u3002[putifabsent]\u65b9\u6cd5\u662f\u7f13\u5b58API\u7684\u4e3b\u8981\u5165\u53e3\u70b9\u3002\u5b83\u8fd4\u56de\u7ed9\u5b9a\u952e\u4ee5\u524d\u7f13\u5b58\u7684[ImageStreamCompleter]\uff0c\u5982\u679cavailable\uff1b\u5982\u679c\u4e0d\u53ef\u7528\uff0c\u5219\u9996\u5148\u8c03\u7528\u7ed9\u5b9a\u7684\u56de\u8c03\u6765\u83b7\u53d6\u5b83\u3002\u5728\u4efb\u4e00case\uff0c\u952e\u79fb\u5230\u201c\u6700\u8fd1\u4f7f\u7528\u7684\u201d\u4f4d\u7f6e\u3002 \u901a\u5e38\u8fd9\u4e2a\u7c7b\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528\u7684\u3002[ImageProvider]\u7c7b\u53ca\u5176\u5b50\u7c7b\u81ea\u52a8\u5904\u7406\u56fe\u50cf\u7684\u7f13\u5b58\u3002\u6b64\u7f13\u5b58\u7684\u5171\u4eab\u5b9e\u4f8b\u7531[PrimutBut\u7ed1\u5b9a]\u4fdd\u7559\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7[painting]\u5e93\u4e2d\u7684[imagecache]\u9876\u7ea7\u5c5e\u6027\u83b7\u53d6\u3002 \u9ed8\u8ba4\u5927\u5c0f const int _kDefaultSize = 1000; const int _kDefaultSizeBytes = 100 20; // 100 MiB Flutter \u7ee7\u627f\u5173\u7cfb \u53ef\u4ee5\u770b\u5230Image\u7684\u6846\u67b6\u7ed3\u6784\u8fd8\u662f\u6709\u70b9\u513f\u590d\u6742\u7684\uff0c\u5728\u4f60\u53ea\u8c03\u7528\u4e00\u884c\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u5b9eFlutter\u4e3a\u4f60\u505a\u4e86\u5f88\u591a\u5de5\u4f5c\u3002 \u521d\u6b65\u68b3\u7406\u4e0b\u6bcf\u4e2a\u7c7b\u6982\u5ff5\uff1a StatefulWidget\u5c31\u662f\u6709\u72b6\u6001\u7684Widget\uff0c\u662f\u5c55\u793a\u5728\u9875\u9762\u4e0a\u7684\u5143\u7d20\u3002 Image\u7ee7\u627f\u4e8eStatefulWidget\uff0c\u662f\u6765\u663e\u793a\u548c\u52a0\u8f7d\u56fe\u7247\u3002 State\u63a7\u5236\u7740StatefulWidget\u72b6\u6001\u6539\u53d8\u7684\u751f\u547d\u5468\u671f\uff0c\u5f53Widget\u88ab\u521b\u5efa\u3001Widget\u914d\u7f6e\u4fe1\u606f\u6539\u53d8\u6216\u8005Widget\u88ab\u9500\u6bc1\u7b49\u7b49\uff0cState\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u4f1a\u88ab\u8c03\u7528\u3002 _ImageState\u7ee7\u627f\u4e8eState\uff0c\u5904\u7406State\u751f\u547d\u5468\u671f\u53d8\u5316\u4ee5\u53ca\u751f\u6210Widget\u3002 ImageProvider\u63d0\u4f9b\u52a0\u8f7d\u56fe\u7247\u7684\u5165\u53e3\uff0c\u4e0d\u540c\u7684\u56fe\u7247\u8d44\u6e90\u52a0\u8f7d\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u53ea\u8981\u91cd\u5199\u5176load\u65b9\u6cd5\u5373\u53ef\u3002\u540c\u6837\uff0c\u7f13\u5b58\u56fe\u7247\u7684key\u503c\u4e5f\u6709\u5176\u751f\u6210\u3002 NetWorkImage\u8d1f\u8d23\u4e0b\u8f7d\u7f51\u7edc\u56fe\u7247\u7684\uff0c\u5c06\u4e0b\u8f7d\u5b8c\u6210\u7684\u56fe\u7247\u8f6c\u5316\u6210ui.Codec\u5bf9\u8c61\u4ea4\u7ed9ImageStreamCompleter\u53bb\u5904\u7406\u89e3\u6790\u3002 ImageStreamCompleter\u5c31\u662f\u9010\u5e27\u89e3\u6790\u56fe\u7247\u7684\u3002 ImageStream\u662f\u5904\u7406Image Resource\u7684\uff0cImageState\u901a\u8fc7ImageStream\u4e0eImageStreamCompleter\u5efa\u7acb\u8054\u7cfb\u3002ImageStream\u91cc\u4e5f\u5b58\u50a8\u7740\u56fe\u7247\u52a0\u8f7d\u5b8c\u6bd5\u7684\u76d1\u542c\u56de\u8c03\u3002 MultiFrameImageStreamCompleter\u5c31\u662f\u591a\u5e27\u56fe\u7247\u89e3\u6790\u5668\u3002 \u6e90\u7801\u5206\u6790 \u6e90\u7801\u5206\u6790 \u6211\u4eec\u770b\u4e0bImage.network\u90fd\u505a\u4e86\u4ec0\u4e48\uff1a class Image extends StatefulWidget { Image . network ( String src , { Key key , double scale = 1.0 , this . width , this . height , this . color , this . colorBlendMode , this . fit , this . alignment = Alignment . center , this . repeat = ImageRepeat . noRepeat , this . centerSlice , this . matchTextDirection = false , this . gaplessPlayback = false , Map String , String headers , }) : image = new NetworkImage ( src , scale: scale , headers: headers ), assert ( alignment != null ), assert ( repeat != null ), assert ( matchTextDirection != null ), super ( key: key ); ...... Image\u662f\u4e00\u4e2aStatefulWidget\u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u770b\u5b83\u7684State\u5bf9\u8c61\uff1a class _ImageState extends State Image { ImageStream _imageStream ; ImageInfo _imageInfo ; bool _isListeningToStream = false ; } class ImageStream extends Diagnosticable { ImageStreamCompleter get completer = _completer ; ImageStreamCompleter _completer ; List ImageListener _listeners ; /// Assigns a particular [ImageStreamCompleter] to this [ImageStream]. void setCompleter ( ImageStreamCompleter value ) { assert ( _completer == null ); _completer = value ; print ( setCompleter::: + ( _listeners == null ). toString ()); if ( _listeners != null ) { final List ImageListener initialListeners = _listeners ; _listeners = null ; initialListeners . forEach ( _completer . addListener ); } } /// Adds a listener callback that is called whenever a new concrete [ImageInfo] void addListener ( ImageListener listener ) { if ( _completer != null ) return _completer . addListener ( listener ); _listeners ??= ImageListener []; _listeners . add ( listener ); } /// Stop listening for new concrete [ImageInfo] objects. void removeListener ( ImageListener listener ) { if ( _completer != null ) return _completer . removeListener ( listener ); assert ( _listeners != null ); _listeners . remove ( listener ); } } \u6211\u4eec\u5bf9_ImageState\u7684\u4e24\u4e2a\u5c5e\u6027\u5bf9\u8c61\u89e3\u91ca\u4e00\u4e0b\uff1a ImageStream ImageStream\u662f\u5904\u7406Image Resource\u7684\uff0cImageStream\u91cc\u5b58\u50a8\u7740\u56fe\u7247\u52a0\u8f7d\u5b8c\u6bd5\u7684\u76d1\u542c\u56de\u8c03\uff0cImageStreamCompleter\u4e5f\u662f\u5176\u6210\u5458\uff0c\u8fd9\u6837ImageStream\u5c06\u56fe\u7247\u7684\u89e3\u6790\u6d41\u7a0b\u4ea4\u7ed9\u4e86ImageStreamCompleter\u53bb\u5904\u7406\u3002 ImageInfo\u5305\u542b\u4e86Image\u7684\u6570\u636e\u6e90\u4fe1\u606f\uff1awidth\u548cheight\u4ee5\u53caui.Image\u3002 \u5c06ImageInfo\u91cc\u7684ui.Image\u8bbe\u7f6e\u7ed9RawImage\u5c31\u53ef\u4ee5\u5c55\u793a\u4e86\u3002RawImage\u5c31\u662f\u6211\u4eec\u771f\u6b63\u6e32\u67d3\u7684\u5bf9\u8c61\uff0c\u662f\u663e\u793aui.Image\u7684\u4e00\u4e2a\u63a7\u4ef6\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u770b\u5230\u3002 \u6211\u4eec\u77e5\u9053State\u7684\u751f\u547d\u5468\u671f\uff0c\u9996\u5148State\u7684initState\u6267\u884c\uff0c\u7136\u540edidChangeDependencies\u4f1a\u6267\u884c\uff0c\u6211\u4eec\u770b\u5230ImageState\u91cc\u6ca1\u6709\u91cd\u5199\u7236\u7c7b\u7684initState\uff0c\u90a3\u6211\u4eec\u770b\u5176didChangeDependencies()\uff1a @ override void didChangeDependencies () { _resolveImage (); if ( TickerMode . of ( context )) _listenToStream (); else _stopListeningToStream (); super . didChangeDependencies (); } _resolveImage\u65b9\u6cd5\u89e3\u6790 \u6211\u4eec\u770b\u5230\u9996\u5148\u8c03\u7528\u4e86resolveImage()\uff0c\u6211\u4eec\u770b\u4e0bresolveImage\u65b9\u6cd5\uff1a void _resolveImage () { final ImageStream newStream = widget . image . resolve ( createLocalImageConfiguration ( context , size: widget . width != null widget . height != null ? new Size ( widget . width , widget . height ) : null )); assert ( newStream != null ); _updateSourceStream ( newStream ); } \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5904\u7406\u56fe\u7247\u7684\u5165\u53e3\u3002widget.image\u8fd9\u4e2a\u5c31\u662f\u4e0a\u9762\u7684\u521b\u5efa\u7684NetworkImage\u5bf9\u8c61\uff0c\u662f\u4e2aImageProvider\u5bf9\u8c61\uff0c\u8c03\u7528\u5b83\u7684resolve\u5e76\u4e14\u4f20\u8fdb\u53bb\u9ed8\u8ba4\u7684ImageConfiguration\u3002 \u6211\u4eec\u770b\u4e0bresolve\u65b9\u6cd5\uff0c\u53d1\u73b0NetworkImage\u6ca1\u6709\uff0c\u679c\u4e0d\u5176\u7136\uff0c\u6211\u4eec\u5728\u5176\u7236\u7c7bImageProvider\u627e\u5230\u4e86\uff1a ImageStream resolve ( ImageConfiguration configuration ) { assert ( configuration != null ); final ImageStream stream = new ImageStream (); T obtainedKey ; obtainKey ( configuration ). then void (( T key ) { obtainedKey = key ; stream . setCompleter ( PaintingBinding . instance . imageCache . putIfAbsent ( key , () = load ( key ))); }). catchError ( ( dynamic exception , StackTrace stack ) async { FlutterError . reportError ( new FlutterErrorDetails ( exception: exception , stack: stack , library : services library , context: while resolving an image , silent: true , // could be a network error or whatnot informationCollector: ( StringBuffer information ) { information . writeln ( Image provider: $ this ); information . writeln ( Image configuration: $ configuration ); if ( obtainedKey != null ) information . writeln ( Image key: $ obtainedKey ); } )); return null ; } ); return stream ; } \u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u65b9\u6cd5\u521b\u5efa\u4e86ImageStream\u5e76\u8fd4\u56de\uff0c\u8c03\u7528obtainKey\u8fd4\u56de\u4e00\u4e2a\u643a\u5e26NetworkImage\u7684future\uff0c\u4ee5\u540e\u4f1a\u4f5c\u4e3a\u7f13\u5b58\u7684key\u4f7f\u7528\uff0c\u5e76\u4e14\u8c03\u7528ImageStream\u7684setCompleter\u7684\u65b9\u6cd5\uff1a void setCompleter ( ImageStreamCompleter value ) { assert ( _completer == null ); _completer = value ; if ( _listeners != null ) { final List ImageListener initialListeners = _listeners ; _listeners = null ; initialListeners . forEach ( _completer . addListener ); } } \u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u7ed9ImageStream\u8bbe\u7f6e\u4e00\u4e2aImageStreamCompleter\u5bf9\u8c61\uff0c\u6bcf\u4e00\u4e2aImageStream\u5bf9\u8c61\u53ea\u80fd\u8bbe\u7f6e\u4e00\u6b21\uff0cImageStreamCompleter\u662f\u4e3a\u4e86\u8f85\u52a9ImageStream\u89e3\u6790\u548c\u7ba1\u7406Image\u56fe\u7247\u5e27\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u662f\u5426\u6709\u521d\u59cb\u5316\u76d1\u542c\u5668\uff0c\u53ef\u4ee5\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u56de\u8c03\u5de5\u4f5c\u3002 \u6211\u4eec\u7ee7\u7eed\u770b\u4e0bPaintingBinding.instance.imageCache.putIfAbsent\u65b9\u6cd5\uff1a ImageStreamCompleter putIfAbsent ( Object key , ImageStreamCompleter loader ()) { assert ( key != null ); assert ( loader != null ); ImageStreamCompleter result = _pendingImages [ key ]; // Nothing needs to be done because the image hasn t loaded yet. if ( result != null ) return result ; // Remove the provider from the list so that we can move it to the // recently used position below. final _CachedImage image = _cache . remove ( key ); if ( image != null ) { _cache [ key ] = image ; return image . completer ; } result = loader (); void listener ( ImageInfo info , bool syncCall ) { // Images that fail to load don t contribute to cache size. final int imageSize = info . image == null ? 0 : info . image . height * info . image . width * 4 ; final _CachedImage image = new _CachedImage ( result , imageSize ); _currentSizeBytes += imageSize ; _pendingImages . remove ( key ); _cache [ key ] = image ; result . removeListener ( listener ); _checkCacheSize (); } if ( maximumSize 0 maximumSizeBytes 0 ) { _pendingImages [ key ] = result ; result . addListener ( listener ); } return result ; } \u8fd9\u4e2a\u662fFlutter\u9ed8\u8ba4\u63d0\u4f9b\u7684\u5185\u5b58\u7f13\u5b58api\u7684\u5165\u53e3\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u5148\u901a\u8fc7key\u83b7\u53d6\u4e4b\u524d\u7684ImageStreamCompleter\u5bf9\u8c61\uff0c\u8fd9\u4e2akey\u5c31\u662fNetworkImage\u5bf9\u8c61\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u91cd\u5199obtainKey\u65b9\u6cd5\u81ea\u5b9a\u4e49key\uff0c\u5982\u679c\u5b58\u5728\u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u6267\u884cload\u65b9\u6cd5\u52a0\u8f7dImageStreamCompleter\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u653e\u5230\u9996\u4f4d\uff08\u6700\u5c11\u6700\u8fd1\u4f7f\u7528\u7b97\u6cd5\uff09\u3002 \u4e5f\u5c31\u662f\u8bf4ImageProvider\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5185\u5b58\u7f13\u5b58\uff1a\u9ed8\u8ba4\u7f13\u5b58\u56fe\u7247\u7684\u6700\u5927\u4e2a\u6570\u662f1000\uff0c\u9ed8\u8ba4\u7f13\u5b58\u56fe\u7247\u7684\u6700\u5927\u7a7a\u95f4\u662f10MiB\u3002 \u7b2c\u4e00\u6b21\u52a0\u8f7d\u56fe\u7247\u80af\u5b9a\u662f\u6ca1\u6709\u7f13\u5b58\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u770b\u4e0bloader\u65b9\u6cd5\uff0c\u6211\u4eec\u770b\u5230ImageProvider\u662f\u7a7a\u65b9\u6cd5\uff0c\u6211\u4eec\u53bb\u770bNetWorkImage\uff0c\u6309\u7167\u6211\u4eec\u7684\u9884\u671f\u786e\u5b9e\u5728\u8fd9\u91cc\uff1a @ override ImageStreamCompleter load ( NetworkImage key ) { return new MultiFrameImageStreamCompleter ( codec: _loadAsync ( key ), scale: key . scale , informationCollector: ( StringBuffer information ) { information . writeln ( Image provider: $ this ); information . write ( Image key: $ key ); } ); } //\u7f51\u7edc\u8bf7\u6c42\u52a0\u8f7d\u56fe\u7247\u7684\u65b9\u6cd5 Future ui . Codec _loadAsync ( NetworkImage key ) async { assert ( key == this ); final Uri resolved = Uri . base . resolve ( key . url ); final HttpClientRequest request = await _httpClient . getUrl ( resolved ); headers ? . forEach (( String name , String value ) { request . headers . add ( name , value ); }); final HttpClientResponse response = await request . close (); if ( response . statusCode != HttpStatus . ok ) throw new Exception ( HTTP request failed, statusCode: ${ response ? . statusCode } , $ resolved ); final Uint8List bytes = await consolidateHttpClientResponseBytes ( response ); if ( bytes . lengthInBytes == 0 ) throw new Exception ( NetworkImage is an empty file: $ resolved ); return await ui . instantiateImageCodec ( bytes ); } \u8fd9\u4e2a\u65b9\u6cd5\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aMultiFrameImageStreamCompleter\u5bf9\u8c61\uff0c\u6839\u636e\u540d\u5b57\u6211\u4eec\u4e5f\u80fd\u77e5\u9053\u5b83\u7ee7\u627f\u4e8eImageStreamCompleter\u3002\u8fd8\u8bb0\u5f97ImageStreamCompleter\u662f\u505a\u4ec0\u4e48\u7684\u5417\uff0c\u5c31\u662f\u8f85\u52a9ImageStream\u7ba1\u7406\u89e3\u6790Image\u7684\u3002 \u53c2\u6570\u89e3\u6790\uff1a _loadAsync()\u662f\u8bf7\u6c42\u7f51\u7edc\u52a0\u8f7d\u56fe\u7247\u7684\u65b9\u6cd5 scale\u662f\u7f29\u653e\u7cfb\u6570 informationCollector\u662f\u4fe1\u606f\u6536\u96c6\u5bf9\u8c61\u7684\uff0c\u63d0\u4f9b\u9519\u8bef\u6216\u8005\u5176\u4ed6\u65e5\u5fd7\u7528 MultiFrameImageStreamCompleter\u662f\u591a\u5e27\u7684\u56fe\u7247\u5904\u7406\u52a0\u8f7d\u5668\uff0c\u6211\u4eec\u77e5\u9053Flutter\u7684Image\u652f\u6301\u52a0\u8f7dgif\uff0c\u901a\u8fc7MultiFrameImageStreamCompleter\u53ef\u4ee5\u5bf9gif\u6587\u4ef6\u8fdb\u884c\u89e3\u6790\uff1a MultiFrameImageStreamCompleter ({ @ required Future ui . Codec codec , @ required double scale , InformationCollector informationCollector }) : assert ( codec != null ), _informationCollector = informationCollector , _scale = scale , _framesEmitted = 0 , _timer = null { codec . then void ( _handleCodecReady , onError: ( dynamic error , StackTrace stack ) { FlutterError . reportError ( new FlutterErrorDetails ( exception: error , stack: stack , library : services , context: resolving an image codec , informationCollector: informationCollector , silent: true , )); }); } ui.Codec _codec; final double _scale; final InformationCollector _informationCollector; ui.FrameInfo _nextFrame; \u6211\u4eec\u770b\u5230MultiFrameImageStreamCompleter\u62ff\u5230loadAsync\u8fd4\u56de\u7684codec\u6570\u636e\u5bf9\u8c61,\u901a\u8fc7handleCodecReady\u6765\u5904\u7406\u6570\u636e\uff0c\u7136\u540e\u4f1a\u8c03\u7528_decodeNextFrameAndSchedule\u65b9\u6cd5\uff1a Future Null _decodeNextFrameAndSchedule () async { try { _nextFrame = await _codec . getNextFrame (); } catch ( exception , stack ) { FlutterError . reportError ( new FlutterErrorDetails ( exception: exception , stack: stack , library : services , context: resolving an image frame , informationCollector: _informationCollector , silent: true , )); return ; } if ( _codec . frameCount == 1 ) { // This is not an animated image, just return it and don t schedule more // frames. _emitFrame ( new ImageInfo ( image: _nextFrame . image , scale: _scale )); return ; } SchedulerBinding . instance . scheduleFrameCallback ( _handleAppFrame ); } \u901a\u8fc7codec.getNextFrame()\u53bb\u62ff\u4e0b\u4e00\u5e27\uff0c\u5bf9\u4e8e\u9759\u6001\u7684\u56fe\u7247frameCount\u662f1\uff0c\u76f4\u63a5\u7528ImageInfo\u7ec4\u88c5image\uff0c\u4ea4\u7ed9emitFrame\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u4f1a\u8c03\u7528setImage\uff0c\u5982\u4e0b\uff1a @ protected void setImage ( ImageInfo image ) { _current = image ; if ( _listeners . isEmpty ) return ; final List ImageListener localListeners = new List ImageListener . from ( _listeners ); for ( ImageListener listener in localListeners ) { try { listener ( image , false ); } catch ( exception , stack ) { _handleImageError ( by an image listener , exception , stack ); } } } setImage\u65b9\u6cd5\u5c31\u662f\u8bbe\u7f6e\u5f53\u524d\u7684ImageInfo\u5e76\u68c0\u67e5\u76d1\u542c\u5668\u5217\u8868\uff0c\u901a\u77e5\u76d1\u542c\u5668\u56fe\u7247\u5df2\u7ecf\u52a0\u8f7d\u5b8c\u6bd5\u53ef\u4ee5\u5237\u65b0UI\u4e86\u3002 \u5bf9\u4e8e\u52a8\u56fe\u6765\u8bf4\u5c31\u662f\u5c31\u662f\u4ea4\u7ed9SchedulerBinding\u9010\u5e27\u7684\u53bb\u8c03\u7528setImage\uff0c\u901a\u77e5UI\u5237\u65b0\uff0c\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u67e5\u770b\u4e0b\u3002 \u81f3\u6b64resolveImage\u8c03\u7528\u6d41\u7a0b\u6211\u4eec\u7b97\u662f\u8bb2\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u770blistenToStream\u3002 _listenToStream\u65b9\u6cd5\u89e3\u6790 \u6211\u4eec\u7ee7\u7eed\u5206\u6790didChangeDependencies\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u4f1a\u5224\u65adTickerMode.of(context)\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u9ed8\u8ba4\u662ftrue\uff0c\u548cAnimationConrol\u6709\u5173\uff0c\u540e\u7eed\u53ef\u4ee5\u6df1\u5165\u7814\u7a76\u3002\u7136\u540e\u8c03\u7528_listenToStream()\u3002 \u6211\u4eec\u770b\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\uff1a void _listenToStream () { if ( _isListeningToStream ) return ; _imageStream . addListener ( _handleImageChanged ); _isListeningToStream = true ; } \u8fd9\u4e2a\u5c31\u662f\u6dfb\u52a0\u56fe\u7247\u52a0\u8f7d\u5b8c\u6bd5\u7684\u56de\u8c03\u5668\u3002\u8fd8\u8bb0\u5f97\u5417\uff0c\u5f53\u56fe\u7247\u52a0\u8f7d\u5e76\u89e3\u6790\u5b8c\u6bd5\u7684\u65f6\u5019\uff0cMultiFrameImageStreamCompleter\u7684setImage\u65b9\u6cd5\u4f1a\u8c03\u7528\u8fd9\u91cc\u4f20\u8fc7\u53bb\u7684\u56de\u8c03\u65b9\u6cd5\u3002\u6211\u4eec\u770b\u4e0b\u8fd9\u91cc\u56de\u8c03\u65b9\u6cd5\u91cc\u505a\u4e86\u4ec0\u4e48\uff1a void _handleImageChanged ( ImageInfo imageInfo , bool synchronousCall ) { setState (() { _imageInfo = imageInfo ; }); } \u5f88\u663e\u7136\u5c31\u662f\u62ff\u5230\u4e0a\u5c42\u4f20\u8fc7\u6765ImageInfo\uff0c\u8c03\u7528setState\u66f4\u65b0UI \u6211\u4eec\u770b\u4e0bbuild\u65b9\u6cd5\uff1a Widget build ( BuildContext context ) { return new RawImage ( image: _imageInfo ? . image , width: widget . width , height: widget . height , scale: _imageInfo ? . scale ?? 1.0 , color: widget . color , colorBlendMode: widget . colorBlendMode , fit: widget . fit , alignment: widget . alignment , repeat: widget . repeat , centerSlice: widget . centerSlice , matchTextDirection: widget . matchTextDirection , ); } \u5c31\u662f\u7528imageInfo\u548cwidget\u7684\u4fe1\u606f\u6765\u5c01\u88c5RawImage\uff0cRawImage\u662fRenderObjectWidget\u5bf9\u8c61\uff0c\u662f\u5e94\u7528\u7a0b\u5e8f\u771f\u6b63\u6e32\u67d3\u7684\u5bf9\u8c61\uff0c\u5c06\u54b1\u4eec\u7684\u56fe\u7247\u663e\u793a\u5230\u754c\u9762\u4e0a\u3002 \u603b\u7ed3 \u68b3\u7406\u4e0b\u6d41\u7a0b\uff1a \u4ece\u5165\u53e3\u5f00\u59cb\uff0cImage\u662f\u7ee7\u627f\u4e8eStatefulWidget\uff0c\u5b83\u4e3a\u54b1\u4eec\u5b9e\u73b0\u597d\u4e86State\uff1a_ImageState,\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5df2\u7ecf\u5b9e\u4f8b\u5316\u7684NetWorkImage\u5bf9\u8c61\uff0c\u5b83\u662f\u7ee7\u627f\u4e8eImageProvider\u5bf9\u8c61\u7684\u3002 ImageState\u521b\u5efa\u5b8c\u4e4b\u540e\uff0cImageState\u901a\u8fc7\u8c03\u7528resolveImage()\uff0cresolveImage()\u53c8\u4f1a\u8c03\u7528ImageProvider\u7684resolve()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aImageStream\u5bf9\u8c61\u3002_ImageState\u4e5f\u6ce8\u518c\u4e86\u76d1\u542c\u5668\u7ed9ImageStream\uff0c\u5f53\u56fe\u7247\u4e0b\u8f7d\u5b8c\u6bd5\u540e\u4f1a\u6267\u884c\u56de\u8c03\u65b9\u6cd5\u3002 \u7136\u540e\u5728ImageProvider\u7684resolve()\u65b9\u6cd5\u91cc\u4e0d\u4ec5\u521b\u5efa\u4e86ImageStream\u8fd8\u8bbe\u7f6e\u4e86ImageStream\u7684setComplete\u65b9\u6cd5\u53bb\u8bbe\u7f6eImageStreamCompleter\uff0c\u5728\u8fd9\u91cc\u53bb\u5224\u65ad\u662f\u5426\u6709\u7f13\u5b58\uff0c\u6ca1\u6709\u7f13\u5b58\u5c31\u8c03\u7528load\u65b9\u6cd5\u53bb\u521b\u5efaImageStreamCompleter\u5e76\u4e14\u6dfb\u52a0\u76d1\u542c\u5668\u4e3a\u4e86\u6267\u884c\u52a0\u8f7d\u5b8c\u56fe\u7247\u4e4b\u540e\u7684\u7f13\u5b58\u5de5\u4f5c\u3002ImageStreamCompleter\u662f\u4e3a\u4e86\u89e3\u6790\u5df2\u7ecf\u52a0\u8f7d\u5b8c\u6210\u7684Image\u7684\u3002 NetWorkImage\u5b9e\u73b0\u4e86ImageProvider\u7684load\u65b9\u6cd5\uff0c\u662f\u771f\u6b63\u4e0b\u8f7d\u56fe\u7247\u7684\u5730\u65b9\uff0c\u521b\u5efa\u4e86MultiFrameImageStreamCompleter\u5bf9\u8c61\uff0c\u5e76\u4e14\u8c03\u7528_loadAsync\u53bb\u4e0b\u8f7d\u56fe\u7247\u3002\u5f53\u56fe\u7247\u4e0b\u8f7d\u5b8c\u6210\u540e\u5c31\u8c03\u7528UI\u7684\u56de\u8c03\u65b9\u6cd5\uff0c\u901a\u77e5UI\u5237\u65b0\u3002 \u6700\u540e \u81f3\u6b64\uff0c\u5bf9Image.network\u7684\u6e90\u7801\u5206\u6790\u5230\u8fd9\u91cc\u4e5f\u7ed3\u675f\u4e86\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8fd4\u56de\u53bb\u770b\u4e0bImage\u7684\u7ed3\u6784\u56fe\u4e86\u3002\u600e\u4e48\u6837\uff0c\u5206\u6790\u5b8c\u4e4b\u540e\u662f\u4e0d\u662f\u5bf9Flutter\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u7684\u6d41\u7a0b\u5df2\u7ecf\u5f88\u4e86\u89e3\u4e86\uff0c\u4e5f\u627e\u5230\u4e86Flutter\u7f13\u5b58\u7684\u7a81\u7834\u53e3\uff0cFlutter\u81ea\u8eab\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5185\u5b58\u7f13\u5b58\uff08\u867d\u7136\u4e0d\u592a\u5b8c\u7f8e\uff09\uff0c\u63a5\u4e0b\u6765\u4f60\u5c31\u53ef\u4ee5\u6dfb\u52a0\u4f60\u7684\u786c\u76d8\u7f13\u5b58\u6216\u8005\u5b9a\u5236\u4f60\u7684\u56fe\u7247\u6846\u67b6\u4e86\u3002","title":"Flutter\u56fe\u7247\u52a0\u8f7d"},{"location":"android/flutterdev/flutterImageProvider/#flutter","text":"","title":"Flutter \u52a0\u8f7d\u56fe\u7247"},{"location":"android/flutterdev/flutterImageProvider/#imagecache","text":"\u7528\u4e8e\u7f13\u5b58\u56fe\u50cf\u7684\u7c7b\u3002\u5b9e\u73b0\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u7f13\u5b58\uff0c\u6700\u591a1000\u4e2a\u56fe\u50cf\uff0c\u6700\u591a100\u4e2a\u56fe\u50cfMB\u3002\u6700\u5927\u5c3a\u5bf8\u53ef\u4ee5\u4f7f\u7528[_kDefaultSize]\u8c03\u6574[_kDefaultSizeBytes]\u3002\u6b63\u5728\u4f7f\u7528\u7684\u56fe\u50cf\uff08\u5373application\u901a\u8fc7[imagestream]\u5bf9\u8c61\u4fdd\u5b58\u5f15\u7528\uff0c[imagestreamcompleter]\u5bf9\u8c61\uff0c[imageinfo]\u5bf9\u8c61\uff0c\u6216\u539f\u59cb[dart:ui.image]objects\uff09\u53ef\u80fd\u4ece\u7f13\u5b58\u4e2d\u6536\u56de\uff08\u56e0\u6b64\u9700\u8981\u4ece\u5982\u679c\u5728[putifabsent]\u65b9\u6cd5\u4e2d\u5f15\u7528\u4e86\u7f51\u7edc\uff0c\u4f46\u662f\u53ea\u8981\u5e94\u7528\u7a0b\u5e8f\u5728\u4f7f\u7528\u4f4d\uff0c\u4f4d\u5c31\u4e00\u76f4\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u3002[putifabsent]\u65b9\u6cd5\u662f\u7f13\u5b58API\u7684\u4e3b\u8981\u5165\u53e3\u70b9\u3002\u5b83\u8fd4\u56de\u7ed9\u5b9a\u952e\u4ee5\u524d\u7f13\u5b58\u7684[ImageStreamCompleter]\uff0c\u5982\u679cavailable\uff1b\u5982\u679c\u4e0d\u53ef\u7528\uff0c\u5219\u9996\u5148\u8c03\u7528\u7ed9\u5b9a\u7684\u56de\u8c03\u6765\u83b7\u53d6\u5b83\u3002\u5728\u4efb\u4e00case\uff0c\u952e\u79fb\u5230\u201c\u6700\u8fd1\u4f7f\u7528\u7684\u201d\u4f4d\u7f6e\u3002 \u901a\u5e38\u8fd9\u4e2a\u7c7b\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528\u7684\u3002[ImageProvider]\u7c7b\u53ca\u5176\u5b50\u7c7b\u81ea\u52a8\u5904\u7406\u56fe\u50cf\u7684\u7f13\u5b58\u3002\u6b64\u7f13\u5b58\u7684\u5171\u4eab\u5b9e\u4f8b\u7531[PrimutBut\u7ed1\u5b9a]\u4fdd\u7559\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7[painting]\u5e93\u4e2d\u7684[imagecache]\u9876\u7ea7\u5c5e\u6027\u83b7\u53d6\u3002","title":"ImageCache"},{"location":"android/flutterdev/flutterImageProvider/#_1","text":"const int _kDefaultSize = 1000; const int _kDefaultSizeBytes = 100 20; // 100 MiB","title":"\u9ed8\u8ba4\u5927\u5c0f"},{"location":"android/flutterdev/flutterImageProvider/#flutter_1","text":"\u53ef\u4ee5\u770b\u5230Image\u7684\u6846\u67b6\u7ed3\u6784\u8fd8\u662f\u6709\u70b9\u513f\u590d\u6742\u7684\uff0c\u5728\u4f60\u53ea\u8c03\u7528\u4e00\u884c\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u5b9eFlutter\u4e3a\u4f60\u505a\u4e86\u5f88\u591a\u5de5\u4f5c\u3002 \u521d\u6b65\u68b3\u7406\u4e0b\u6bcf\u4e2a\u7c7b\u6982\u5ff5\uff1a StatefulWidget\u5c31\u662f\u6709\u72b6\u6001\u7684Widget\uff0c\u662f\u5c55\u793a\u5728\u9875\u9762\u4e0a\u7684\u5143\u7d20\u3002 Image\u7ee7\u627f\u4e8eStatefulWidget\uff0c\u662f\u6765\u663e\u793a\u548c\u52a0\u8f7d\u56fe\u7247\u3002 State\u63a7\u5236\u7740StatefulWidget\u72b6\u6001\u6539\u53d8\u7684\u751f\u547d\u5468\u671f\uff0c\u5f53Widget\u88ab\u521b\u5efa\u3001Widget\u914d\u7f6e\u4fe1\u606f\u6539\u53d8\u6216\u8005Widget\u88ab\u9500\u6bc1\u7b49\u7b49\uff0cState\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u4f1a\u88ab\u8c03\u7528\u3002 _ImageState\u7ee7\u627f\u4e8eState\uff0c\u5904\u7406State\u751f\u547d\u5468\u671f\u53d8\u5316\u4ee5\u53ca\u751f\u6210Widget\u3002 ImageProvider\u63d0\u4f9b\u52a0\u8f7d\u56fe\u7247\u7684\u5165\u53e3\uff0c\u4e0d\u540c\u7684\u56fe\u7247\u8d44\u6e90\u52a0\u8f7d\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u53ea\u8981\u91cd\u5199\u5176load\u65b9\u6cd5\u5373\u53ef\u3002\u540c\u6837\uff0c\u7f13\u5b58\u56fe\u7247\u7684key\u503c\u4e5f\u6709\u5176\u751f\u6210\u3002 NetWorkImage\u8d1f\u8d23\u4e0b\u8f7d\u7f51\u7edc\u56fe\u7247\u7684\uff0c\u5c06\u4e0b\u8f7d\u5b8c\u6210\u7684\u56fe\u7247\u8f6c\u5316\u6210ui.Codec\u5bf9\u8c61\u4ea4\u7ed9ImageStreamCompleter\u53bb\u5904\u7406\u89e3\u6790\u3002 ImageStreamCompleter\u5c31\u662f\u9010\u5e27\u89e3\u6790\u56fe\u7247\u7684\u3002 ImageStream\u662f\u5904\u7406Image Resource\u7684\uff0cImageState\u901a\u8fc7ImageStream\u4e0eImageStreamCompleter\u5efa\u7acb\u8054\u7cfb\u3002ImageStream\u91cc\u4e5f\u5b58\u50a8\u7740\u56fe\u7247\u52a0\u8f7d\u5b8c\u6bd5\u7684\u76d1\u542c\u56de\u8c03\u3002 MultiFrameImageStreamCompleter\u5c31\u662f\u591a\u5e27\u56fe\u7247\u89e3\u6790\u5668\u3002","title":"Flutter \u7ee7\u627f\u5173\u7cfb"},{"location":"android/flutterdev/flutterImageProvider/#_2","text":"\u6e90\u7801\u5206\u6790 \u6211\u4eec\u770b\u4e0bImage.network\u90fd\u505a\u4e86\u4ec0\u4e48\uff1a class Image extends StatefulWidget { Image . network ( String src , { Key key , double scale = 1.0 , this . width , this . height , this . color , this . colorBlendMode , this . fit , this . alignment = Alignment . center , this . repeat = ImageRepeat . noRepeat , this . centerSlice , this . matchTextDirection = false , this . gaplessPlayback = false , Map String , String headers , }) : image = new NetworkImage ( src , scale: scale , headers: headers ), assert ( alignment != null ), assert ( repeat != null ), assert ( matchTextDirection != null ), super ( key: key ); ...... Image\u662f\u4e00\u4e2aStatefulWidget\u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u770b\u5b83\u7684State\u5bf9\u8c61\uff1a class _ImageState extends State Image { ImageStream _imageStream ; ImageInfo _imageInfo ; bool _isListeningToStream = false ; } class ImageStream extends Diagnosticable { ImageStreamCompleter get completer = _completer ; ImageStreamCompleter _completer ; List ImageListener _listeners ; /// Assigns a particular [ImageStreamCompleter] to this [ImageStream]. void setCompleter ( ImageStreamCompleter value ) { assert ( _completer == null ); _completer = value ; print ( setCompleter::: + ( _listeners == null ). toString ()); if ( _listeners != null ) { final List ImageListener initialListeners = _listeners ; _listeners = null ; initialListeners . forEach ( _completer . addListener ); } } /// Adds a listener callback that is called whenever a new concrete [ImageInfo] void addListener ( ImageListener listener ) { if ( _completer != null ) return _completer . addListener ( listener ); _listeners ??= ImageListener []; _listeners . add ( listener ); } /// Stop listening for new concrete [ImageInfo] objects. void removeListener ( ImageListener listener ) { if ( _completer != null ) return _completer . removeListener ( listener ); assert ( _listeners != null ); _listeners . remove ( listener ); } } \u6211\u4eec\u5bf9_ImageState\u7684\u4e24\u4e2a\u5c5e\u6027\u5bf9\u8c61\u89e3\u91ca\u4e00\u4e0b\uff1a","title":"\u6e90\u7801\u5206\u6790"},{"location":"android/flutterdev/flutterImageProvider/#imagestream","text":"ImageStream\u662f\u5904\u7406Image Resource\u7684\uff0cImageStream\u91cc\u5b58\u50a8\u7740\u56fe\u7247\u52a0\u8f7d\u5b8c\u6bd5\u7684\u76d1\u542c\u56de\u8c03\uff0cImageStreamCompleter\u4e5f\u662f\u5176\u6210\u5458\uff0c\u8fd9\u6837ImageStream\u5c06\u56fe\u7247\u7684\u89e3\u6790\u6d41\u7a0b\u4ea4\u7ed9\u4e86ImageStreamCompleter\u53bb\u5904\u7406\u3002 ImageInfo\u5305\u542b\u4e86Image\u7684\u6570\u636e\u6e90\u4fe1\u606f\uff1awidth\u548cheight\u4ee5\u53caui.Image\u3002 \u5c06ImageInfo\u91cc\u7684ui.Image\u8bbe\u7f6e\u7ed9RawImage\u5c31\u53ef\u4ee5\u5c55\u793a\u4e86\u3002RawImage\u5c31\u662f\u6211\u4eec\u771f\u6b63\u6e32\u67d3\u7684\u5bf9\u8c61\uff0c\u662f\u663e\u793aui.Image\u7684\u4e00\u4e2a\u63a7\u4ef6\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u770b\u5230\u3002 \u6211\u4eec\u77e5\u9053State\u7684\u751f\u547d\u5468\u671f\uff0c\u9996\u5148State\u7684initState\u6267\u884c\uff0c\u7136\u540edidChangeDependencies\u4f1a\u6267\u884c\uff0c\u6211\u4eec\u770b\u5230ImageState\u91cc\u6ca1\u6709\u91cd\u5199\u7236\u7c7b\u7684initState\uff0c\u90a3\u6211\u4eec\u770b\u5176didChangeDependencies()\uff1a @ override void didChangeDependencies () { _resolveImage (); if ( TickerMode . of ( context )) _listenToStream (); else _stopListeningToStream (); super . didChangeDependencies (); }","title":"ImageStream"},{"location":"android/flutterdev/flutterImageProvider/#_resolveimage","text":"\u6211\u4eec\u770b\u5230\u9996\u5148\u8c03\u7528\u4e86resolveImage()\uff0c\u6211\u4eec\u770b\u4e0bresolveImage\u65b9\u6cd5\uff1a void _resolveImage () { final ImageStream newStream = widget . image . resolve ( createLocalImageConfiguration ( context , size: widget . width != null widget . height != null ? new Size ( widget . width , widget . height ) : null )); assert ( newStream != null ); _updateSourceStream ( newStream ); } \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5904\u7406\u56fe\u7247\u7684\u5165\u53e3\u3002widget.image\u8fd9\u4e2a\u5c31\u662f\u4e0a\u9762\u7684\u521b\u5efa\u7684NetworkImage\u5bf9\u8c61\uff0c\u662f\u4e2aImageProvider\u5bf9\u8c61\uff0c\u8c03\u7528\u5b83\u7684resolve\u5e76\u4e14\u4f20\u8fdb\u53bb\u9ed8\u8ba4\u7684ImageConfiguration\u3002 \u6211\u4eec\u770b\u4e0bresolve\u65b9\u6cd5\uff0c\u53d1\u73b0NetworkImage\u6ca1\u6709\uff0c\u679c\u4e0d\u5176\u7136\uff0c\u6211\u4eec\u5728\u5176\u7236\u7c7bImageProvider\u627e\u5230\u4e86\uff1a ImageStream resolve ( ImageConfiguration configuration ) { assert ( configuration != null ); final ImageStream stream = new ImageStream (); T obtainedKey ; obtainKey ( configuration ). then void (( T key ) { obtainedKey = key ; stream . setCompleter ( PaintingBinding . instance . imageCache . putIfAbsent ( key , () = load ( key ))); }). catchError ( ( dynamic exception , StackTrace stack ) async { FlutterError . reportError ( new FlutterErrorDetails ( exception: exception , stack: stack , library : services library , context: while resolving an image , silent: true , // could be a network error or whatnot informationCollector: ( StringBuffer information ) { information . writeln ( Image provider: $ this ); information . writeln ( Image configuration: $ configuration ); if ( obtainedKey != null ) information . writeln ( Image key: $ obtainedKey ); } )); return null ; } ); return stream ; } \u6211\u4eec\u770b\u5230\u8fd9\u4e2a\u65b9\u6cd5\u521b\u5efa\u4e86ImageStream\u5e76\u8fd4\u56de\uff0c\u8c03\u7528obtainKey\u8fd4\u56de\u4e00\u4e2a\u643a\u5e26NetworkImage\u7684future\uff0c\u4ee5\u540e\u4f1a\u4f5c\u4e3a\u7f13\u5b58\u7684key\u4f7f\u7528\uff0c\u5e76\u4e14\u8c03\u7528ImageStream\u7684setCompleter\u7684\u65b9\u6cd5\uff1a void setCompleter ( ImageStreamCompleter value ) { assert ( _completer == null ); _completer = value ; if ( _listeners != null ) { final List ImageListener initialListeners = _listeners ; _listeners = null ; initialListeners . forEach ( _completer . addListener ); } } \u8fd9\u4e2a\u65b9\u6cd5\u5c31\u662f\u7ed9ImageStream\u8bbe\u7f6e\u4e00\u4e2aImageStreamCompleter\u5bf9\u8c61\uff0c\u6bcf\u4e00\u4e2aImageStream\u5bf9\u8c61\u53ea\u80fd\u8bbe\u7f6e\u4e00\u6b21\uff0cImageStreamCompleter\u662f\u4e3a\u4e86\u8f85\u52a9ImageStream\u89e3\u6790\u548c\u7ba1\u7406Image\u56fe\u7247\u5e27\u7684\uff0c\u5e76\u4e14\u5224\u65ad\u662f\u5426\u6709\u521d\u59cb\u5316\u76d1\u542c\u5668\uff0c\u53ef\u4ee5\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u56de\u8c03\u5de5\u4f5c\u3002 \u6211\u4eec\u7ee7\u7eed\u770b\u4e0bPaintingBinding.instance.imageCache.putIfAbsent\u65b9\u6cd5\uff1a ImageStreamCompleter putIfAbsent ( Object key , ImageStreamCompleter loader ()) { assert ( key != null ); assert ( loader != null ); ImageStreamCompleter result = _pendingImages [ key ]; // Nothing needs to be done because the image hasn t loaded yet. if ( result != null ) return result ; // Remove the provider from the list so that we can move it to the // recently used position below. final _CachedImage image = _cache . remove ( key ); if ( image != null ) { _cache [ key ] = image ; return image . completer ; } result = loader (); void listener ( ImageInfo info , bool syncCall ) { // Images that fail to load don t contribute to cache size. final int imageSize = info . image == null ? 0 : info . image . height * info . image . width * 4 ; final _CachedImage image = new _CachedImage ( result , imageSize ); _currentSizeBytes += imageSize ; _pendingImages . remove ( key ); _cache [ key ] = image ; result . removeListener ( listener ); _checkCacheSize (); } if ( maximumSize 0 maximumSizeBytes 0 ) { _pendingImages [ key ] = result ; result . addListener ( listener ); } return result ; } \u8fd9\u4e2a\u662fFlutter\u9ed8\u8ba4\u63d0\u4f9b\u7684\u5185\u5b58\u7f13\u5b58api\u7684\u5165\u53e3\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u5148\u901a\u8fc7key\u83b7\u53d6\u4e4b\u524d\u7684ImageStreamCompleter\u5bf9\u8c61\uff0c\u8fd9\u4e2akey\u5c31\u662fNetworkImage\u5bf9\u8c61\uff0c\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u91cd\u5199obtainKey\u65b9\u6cd5\u81ea\u5b9a\u4e49key\uff0c\u5982\u679c\u5b58\u5728\u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u6267\u884cload\u65b9\u6cd5\u52a0\u8f7dImageStreamCompleter\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u653e\u5230\u9996\u4f4d\uff08\u6700\u5c11\u6700\u8fd1\u4f7f\u7528\u7b97\u6cd5\uff09\u3002 \u4e5f\u5c31\u662f\u8bf4ImageProvider\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5185\u5b58\u7f13\u5b58\uff1a\u9ed8\u8ba4\u7f13\u5b58\u56fe\u7247\u7684\u6700\u5927\u4e2a\u6570\u662f1000\uff0c\u9ed8\u8ba4\u7f13\u5b58\u56fe\u7247\u7684\u6700\u5927\u7a7a\u95f4\u662f10MiB\u3002 \u7b2c\u4e00\u6b21\u52a0\u8f7d\u56fe\u7247\u80af\u5b9a\u662f\u6ca1\u6709\u7f13\u5b58\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u770b\u4e0bloader\u65b9\u6cd5\uff0c\u6211\u4eec\u770b\u5230ImageProvider\u662f\u7a7a\u65b9\u6cd5\uff0c\u6211\u4eec\u53bb\u770bNetWorkImage\uff0c\u6309\u7167\u6211\u4eec\u7684\u9884\u671f\u786e\u5b9e\u5728\u8fd9\u91cc\uff1a @ override ImageStreamCompleter load ( NetworkImage key ) { return new MultiFrameImageStreamCompleter ( codec: _loadAsync ( key ), scale: key . scale , informationCollector: ( StringBuffer information ) { information . writeln ( Image provider: $ this ); information . write ( Image key: $ key ); } ); } //\u7f51\u7edc\u8bf7\u6c42\u52a0\u8f7d\u56fe\u7247\u7684\u65b9\u6cd5 Future ui . Codec _loadAsync ( NetworkImage key ) async { assert ( key == this ); final Uri resolved = Uri . base . resolve ( key . url ); final HttpClientRequest request = await _httpClient . getUrl ( resolved ); headers ? . forEach (( String name , String value ) { request . headers . add ( name , value ); }); final HttpClientResponse response = await request . close (); if ( response . statusCode != HttpStatus . ok ) throw new Exception ( HTTP request failed, statusCode: ${ response ? . statusCode } , $ resolved ); final Uint8List bytes = await consolidateHttpClientResponseBytes ( response ); if ( bytes . lengthInBytes == 0 ) throw new Exception ( NetworkImage is an empty file: $ resolved ); return await ui . instantiateImageCodec ( bytes ); } \u8fd9\u4e2a\u65b9\u6cd5\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aMultiFrameImageStreamCompleter\u5bf9\u8c61\uff0c\u6839\u636e\u540d\u5b57\u6211\u4eec\u4e5f\u80fd\u77e5\u9053\u5b83\u7ee7\u627f\u4e8eImageStreamCompleter\u3002\u8fd8\u8bb0\u5f97ImageStreamCompleter\u662f\u505a\u4ec0\u4e48\u7684\u5417\uff0c\u5c31\u662f\u8f85\u52a9ImageStream\u7ba1\u7406\u89e3\u6790Image\u7684\u3002 \u53c2\u6570\u89e3\u6790\uff1a","title":"_resolveImage\u65b9\u6cd5\u89e3\u6790"},{"location":"android/flutterdev/flutterImageProvider/#_loadasync","text":"scale\u662f\u7f29\u653e\u7cfb\u6570 informationCollector\u662f\u4fe1\u606f\u6536\u96c6\u5bf9\u8c61\u7684\uff0c\u63d0\u4f9b\u9519\u8bef\u6216\u8005\u5176\u4ed6\u65e5\u5fd7\u7528 MultiFrameImageStreamCompleter\u662f\u591a\u5e27\u7684\u56fe\u7247\u5904\u7406\u52a0\u8f7d\u5668\uff0c\u6211\u4eec\u77e5\u9053Flutter\u7684Image\u652f\u6301\u52a0\u8f7dgif\uff0c\u901a\u8fc7MultiFrameImageStreamCompleter\u53ef\u4ee5\u5bf9gif\u6587\u4ef6\u8fdb\u884c\u89e3\u6790\uff1a MultiFrameImageStreamCompleter ({ @ required Future ui . Codec codec , @ required double scale , InformationCollector informationCollector }) : assert ( codec != null ), _informationCollector = informationCollector , _scale = scale , _framesEmitted = 0 , _timer = null { codec . then void ( _handleCodecReady , onError: ( dynamic error , StackTrace stack ) { FlutterError . reportError ( new FlutterErrorDetails ( exception: error , stack: stack , library : services , context: resolving an image codec , informationCollector: informationCollector , silent: true , )); }); } ui.Codec _codec; final double _scale; final InformationCollector _informationCollector; ui.FrameInfo _nextFrame; \u6211\u4eec\u770b\u5230MultiFrameImageStreamCompleter\u62ff\u5230loadAsync\u8fd4\u56de\u7684codec\u6570\u636e\u5bf9\u8c61,\u901a\u8fc7handleCodecReady\u6765\u5904\u7406\u6570\u636e\uff0c\u7136\u540e\u4f1a\u8c03\u7528_decodeNextFrameAndSchedule\u65b9\u6cd5\uff1a Future Null _decodeNextFrameAndSchedule () async { try { _nextFrame = await _codec . getNextFrame (); } catch ( exception , stack ) { FlutterError . reportError ( new FlutterErrorDetails ( exception: exception , stack: stack , library : services , context: resolving an image frame , informationCollector: _informationCollector , silent: true , )); return ; } if ( _codec . frameCount == 1 ) { // This is not an animated image, just return it and don t schedule more // frames. _emitFrame ( new ImageInfo ( image: _nextFrame . image , scale: _scale )); return ; } SchedulerBinding . instance . scheduleFrameCallback ( _handleAppFrame ); } \u901a\u8fc7codec.getNextFrame()\u53bb\u62ff\u4e0b\u4e00\u5e27\uff0c\u5bf9\u4e8e\u9759\u6001\u7684\u56fe\u7247frameCount\u662f1\uff0c\u76f4\u63a5\u7528ImageInfo\u7ec4\u88c5image\uff0c\u4ea4\u7ed9emitFrame\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u4f1a\u8c03\u7528setImage\uff0c\u5982\u4e0b\uff1a @ protected void setImage ( ImageInfo image ) { _current = image ; if ( _listeners . isEmpty ) return ; final List ImageListener localListeners = new List ImageListener . from ( _listeners ); for ( ImageListener listener in localListeners ) { try { listener ( image , false ); } catch ( exception , stack ) { _handleImageError ( by an image listener , exception , stack ); } } } setImage\u65b9\u6cd5\u5c31\u662f\u8bbe\u7f6e\u5f53\u524d\u7684ImageInfo\u5e76\u68c0\u67e5\u76d1\u542c\u5668\u5217\u8868\uff0c\u901a\u77e5\u76d1\u542c\u5668\u56fe\u7247\u5df2\u7ecf\u52a0\u8f7d\u5b8c\u6bd5\u53ef\u4ee5\u5237\u65b0UI\u4e86\u3002 \u5bf9\u4e8e\u52a8\u56fe\u6765\u8bf4\u5c31\u662f\u5c31\u662f\u4ea4\u7ed9SchedulerBinding\u9010\u5e27\u7684\u53bb\u8c03\u7528setImage\uff0c\u901a\u77e5UI\u5237\u65b0\uff0c\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u81ea\u884c\u67e5\u770b\u4e0b\u3002 \u81f3\u6b64resolveImage\u8c03\u7528\u6d41\u7a0b\u6211\u4eec\u7b97\u662f\u8bb2\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u770blistenToStream\u3002","title":"_loadAsync()\u662f\u8bf7\u6c42\u7f51\u7edc\u52a0\u8f7d\u56fe\u7247\u7684\u65b9\u6cd5"},{"location":"android/flutterdev/flutterImageProvider/#_listentostream","text":"\u6211\u4eec\u7ee7\u7eed\u5206\u6790didChangeDependencies\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u4f1a\u5224\u65adTickerMode.of(context)\u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u9ed8\u8ba4\u662ftrue\uff0c\u548cAnimationConrol\u6709\u5173\uff0c\u540e\u7eed\u53ef\u4ee5\u6df1\u5165\u7814\u7a76\u3002\u7136\u540e\u8c03\u7528_listenToStream()\u3002 \u6211\u4eec\u770b\u4e0b\u8fd9\u4e2a\u65b9\u6cd5\uff1a void _listenToStream () { if ( _isListeningToStream ) return ; _imageStream . addListener ( _handleImageChanged ); _isListeningToStream = true ; } \u8fd9\u4e2a\u5c31\u662f\u6dfb\u52a0\u56fe\u7247\u52a0\u8f7d\u5b8c\u6bd5\u7684\u56de\u8c03\u5668\u3002\u8fd8\u8bb0\u5f97\u5417\uff0c\u5f53\u56fe\u7247\u52a0\u8f7d\u5e76\u89e3\u6790\u5b8c\u6bd5\u7684\u65f6\u5019\uff0cMultiFrameImageStreamCompleter\u7684setImage\u65b9\u6cd5\u4f1a\u8c03\u7528\u8fd9\u91cc\u4f20\u8fc7\u53bb\u7684\u56de\u8c03\u65b9\u6cd5\u3002\u6211\u4eec\u770b\u4e0b\u8fd9\u91cc\u56de\u8c03\u65b9\u6cd5\u91cc\u505a\u4e86\u4ec0\u4e48\uff1a void _handleImageChanged ( ImageInfo imageInfo , bool synchronousCall ) { setState (() { _imageInfo = imageInfo ; }); } \u5f88\u663e\u7136\u5c31\u662f\u62ff\u5230\u4e0a\u5c42\u4f20\u8fc7\u6765ImageInfo\uff0c\u8c03\u7528setState\u66f4\u65b0UI \u6211\u4eec\u770b\u4e0bbuild\u65b9\u6cd5\uff1a Widget build ( BuildContext context ) { return new RawImage ( image: _imageInfo ? . image , width: widget . width , height: widget . height , scale: _imageInfo ? . scale ?? 1.0 , color: widget . color , colorBlendMode: widget . colorBlendMode , fit: widget . fit , alignment: widget . alignment , repeat: widget . repeat , centerSlice: widget . centerSlice , matchTextDirection: widget . matchTextDirection , ); } \u5c31\u662f\u7528imageInfo\u548cwidget\u7684\u4fe1\u606f\u6765\u5c01\u88c5RawImage\uff0cRawImage\u662fRenderObjectWidget\u5bf9\u8c61\uff0c\u662f\u5e94\u7528\u7a0b\u5e8f\u771f\u6b63\u6e32\u67d3\u7684\u5bf9\u8c61\uff0c\u5c06\u54b1\u4eec\u7684\u56fe\u7247\u663e\u793a\u5230\u754c\u9762\u4e0a\u3002","title":"_listenToStream\u65b9\u6cd5\u89e3\u6790"},{"location":"android/flutterdev/flutterImageProvider/#_3","text":"\u68b3\u7406\u4e0b\u6d41\u7a0b\uff1a \u4ece\u5165\u53e3\u5f00\u59cb\uff0cImage\u662f\u7ee7\u627f\u4e8eStatefulWidget\uff0c\u5b83\u4e3a\u54b1\u4eec\u5b9e\u73b0\u597d\u4e86State\uff1a_ImageState,\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5df2\u7ecf\u5b9e\u4f8b\u5316\u7684NetWorkImage\u5bf9\u8c61\uff0c\u5b83\u662f\u7ee7\u627f\u4e8eImageProvider\u5bf9\u8c61\u7684\u3002 ImageState\u521b\u5efa\u5b8c\u4e4b\u540e\uff0cImageState\u901a\u8fc7\u8c03\u7528resolveImage()\uff0cresolveImage()\u53c8\u4f1a\u8c03\u7528ImageProvider\u7684resolve()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aImageStream\u5bf9\u8c61\u3002_ImageState\u4e5f\u6ce8\u518c\u4e86\u76d1\u542c\u5668\u7ed9ImageStream\uff0c\u5f53\u56fe\u7247\u4e0b\u8f7d\u5b8c\u6bd5\u540e\u4f1a\u6267\u884c\u56de\u8c03\u65b9\u6cd5\u3002 \u7136\u540e\u5728ImageProvider\u7684resolve()\u65b9\u6cd5\u91cc\u4e0d\u4ec5\u521b\u5efa\u4e86ImageStream\u8fd8\u8bbe\u7f6e\u4e86ImageStream\u7684setComplete\u65b9\u6cd5\u53bb\u8bbe\u7f6eImageStreamCompleter\uff0c\u5728\u8fd9\u91cc\u53bb\u5224\u65ad\u662f\u5426\u6709\u7f13\u5b58\uff0c\u6ca1\u6709\u7f13\u5b58\u5c31\u8c03\u7528load\u65b9\u6cd5\u53bb\u521b\u5efaImageStreamCompleter\u5e76\u4e14\u6dfb\u52a0\u76d1\u542c\u5668\u4e3a\u4e86\u6267\u884c\u52a0\u8f7d\u5b8c\u56fe\u7247\u4e4b\u540e\u7684\u7f13\u5b58\u5de5\u4f5c\u3002ImageStreamCompleter\u662f\u4e3a\u4e86\u89e3\u6790\u5df2\u7ecf\u52a0\u8f7d\u5b8c\u6210\u7684Image\u7684\u3002 NetWorkImage\u5b9e\u73b0\u4e86ImageProvider\u7684load\u65b9\u6cd5\uff0c\u662f\u771f\u6b63\u4e0b\u8f7d\u56fe\u7247\u7684\u5730\u65b9\uff0c\u521b\u5efa\u4e86MultiFrameImageStreamCompleter\u5bf9\u8c61\uff0c\u5e76\u4e14\u8c03\u7528_loadAsync\u53bb\u4e0b\u8f7d\u56fe\u7247\u3002\u5f53\u56fe\u7247\u4e0b\u8f7d\u5b8c\u6210\u540e\u5c31\u8c03\u7528UI\u7684\u56de\u8c03\u65b9\u6cd5\uff0c\u901a\u77e5UI\u5237\u65b0\u3002","title":"\u603b\u7ed3"},{"location":"android/flutterdev/flutterImageProvider/#_4","text":"\u81f3\u6b64\uff0c\u5bf9Image.network\u7684\u6e90\u7801\u5206\u6790\u5230\u8fd9\u91cc\u4e5f\u7ed3\u675f\u4e86\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8fd4\u56de\u53bb\u770b\u4e0bImage\u7684\u7ed3\u6784\u56fe\u4e86\u3002\u600e\u4e48\u6837\uff0c\u5206\u6790\u5b8c\u4e4b\u540e\u662f\u4e0d\u662f\u5bf9Flutter\u52a0\u8f7d\u7f51\u7edc\u56fe\u7247\u7684\u6d41\u7a0b\u5df2\u7ecf\u5f88\u4e86\u89e3\u4e86\uff0c\u4e5f\u627e\u5230\u4e86Flutter\u7f13\u5b58\u7684\u7a81\u7834\u53e3\uff0cFlutter\u81ea\u8eab\u5df2\u7ecf\u63d0\u4f9b\u4e86\u5185\u5b58\u7f13\u5b58\uff08\u867d\u7136\u4e0d\u592a\u5b8c\u7f8e\uff09\uff0c\u63a5\u4e0b\u6765\u4f60\u5c31\u53ef\u4ee5\u6dfb\u52a0\u4f60\u7684\u786c\u76d8\u7f13\u5b58\u6216\u8005\u5b9a\u5236\u4f60\u7684\u56fe\u7247\u6846\u67b6\u4e86\u3002","title":"\u6700\u540e"},{"location":"android/flutterdev/flutterNavigator/","text":"Flutter \u5bfc\u822a \u6982\u8ff0 \u5728\u5b89\u5353\u4e2d\u4e00\u4e2aroute\u5bf9\u5e94\u4e00\u4e2aActivity\uff0c\u5728IOS\u4e2d\u4e00\u4e2aRoute\u5bf9\u5e94\u4e00\u4e2aViewController, \u5728Flutter\u4e2d\u4e00\u4e2aroute\u5bf9\u5e94\u4e00\u4e2aWidget \u5728\u4e24\u4e2a\u754c\u9762\u63a5\u5bfc\u822a\u4f7f\u7528 Navigator Navigator.push(). Navigator.pop(). Android IOS\u542f\u52a8\u8c03\u7528\u8def\u7531\u4f20\u9012\u53c2\u6570 /// See also: /// /// * [Navigator], a widget that handles routing. /// * [SystemChannels.navigation], which handles subsequent navigation /// requests from the embedder. String get defaultRouteName = _defaultRouteName (); String _defaultRouteName () native Window_defaultRouteName ; \u5728App\u7a0b\u5e8f\u542f\u52a8\u65f6\u8c03\u7528\u8def\u7531\u529f\u80fd\u548c\u4f20\u9012\u53c2\u6570 \u6ca1\u6709\u6307\u5b9a\u8def\u7531\uff0c\u7f3a\u7701\u7406\u7531\u662f / Android public class AnotherActivity extends FlutterActivity { @Override public FlutterView createFlutterView ( Context context ) { WindowManager . LayoutParams matchParent = new WindowManager . LayoutParams (- 1 , - 1 ); FlutterNativeView nativeView = this . createFlutterNativeView (); FlutterView flutterView = new FlutterView ( this , ( AttributeSet ) null , nativeView ); flutterView . setInitialRoute ( /route1 ); flutterView . setLayoutParams ( matchParent ); this . setContentView ( flutterView ); return flutterView ; } } void main () = runApp ( InitPage ()); class InitPage extends StatelessWidget { var temp = window . defaultRouteName ; @ override Widget build ( BuildContext context ) { print ( Flutter routes $ temp ); return MaterialApp ( title: Flutter Demo , theme: ThemeData ( primarySwatch: Colors . blue , ), initialRoute: / , routes: { / : ( context ) { print ( show times ); DefaultPage (); }, /route1 : ( context ) { print ( show route1 ); MyApp (); }, /route2 : ( context ) = DefaultPage (), }, ); } } iOS /// /// On iOS, calling /// FlutterViewController.setInitialRoute /// will set this value. The value must be set sufficiently early, i.e. before /// the [runApp] call is executed in Dart, for this to have any effect on the /// framework. The application:didFinishLaunchingWithOptions: method is a /// suitable time to set this value. /// Navigator \u6838\u5fc3\u903b\u8f91 \u521d\u59cb\u5316\u8fc7\u7a0b 1.`_WidgetsAppState`build\u65b9\u6cd5\u4e2d\u5bf9Navigator\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u5224\u65ad\u5f53\u524d\u7684\u9ed8\u8ba4\u8def\u7531\u548c` window.defaultRouteName`\u662f\u5426\u4e00\u81f4\uff0c\u4f18\u5148\u4f7f\u7528`WidgetsBinding.instance.window.defaultRouteName` 2.\u8c03\u7528`_onGenerateRoute`\u521d\u59cb\u5316\u4f20\u5165\u7684\u8def\u7531\u4fe1\u606f 3.\u5904\u7406`_onUnknownRoute`\u672a\u77e5\u8def\u7531\u4fe1\u606f 4.\u51fa\u8def`NavigatorObserver`\u5bfc\u822a\u89c2\u5bdf\u8005\u5bf9\u8c61 5.\u4f7f\u7528`OverlayEntry`\u5b9e\u4f53\u7ba1\u7406\u5bfc\u822a\u987a\u5e8f\uff0c`_initialOverlayEntries = lt;OverlayEntry gt;[];` 6.\u4f7f\u7528`Listener`\u6765\u5bf9\u9f20\u6807\u4e8b\u4ef6\u8fdb\u884c\u76d1\u542c\u7ba1\u7406 7.\u4f7f\u7528`AbsorbPointer`\u62e6\u622a\u4e8b\u4ef6\uff0c\u662f\u5426\u53ef\u4ee5\u4f20\u5165\u5b50\u6811\u4e2d 8.\u4f7f\u7528`FocusScope`\u7ba1\u7406\u76f8\u5173\u7684\u7126\u70b9\u4e8b\u4ef6 9.`Overlay`\u5185\u90e8\u4f7f\u7528`Stack`\u63a7\u4ef6\u5bf9\u5bfc\u822a\u4e2d\u7684Widget\u8fdb\u884cUI\u6c47\u603b\u6446\u653e\u7684\u4f4d\u7f6e\u8fdb\u884c\u5904\u7406 10.`Route`\u4e2d\u4fdd\u5b58 10.1\uff1aNavigatorState 10.2\uff1aRouteSettings 10.3\uff1aconst lt;OverlayEntry gt;[]; Navogator\u521d\u59cb\u5316\u8fc7\u7a0b WidgetsApp \u5bf9Widget\u505a\u4e86\u4e00\u4e2a\u9876\u5c42\u5c01\u88c5 1.Navigator 2.Localizations 3.DefaultTextStyle 4.MediaQuery \u5728WidgetsAppBuilder\u4e2d\u5b9e\u4f8b\u5316 Navigator \u521d\u59cb\u5316Flutter\u5c42\u7684\u903b\u8f91 @ override Widget build ( BuildContext context ) { Widget navigator ; if ( _navigator != null ) { navigator = Navigator ( key: _navigator , // If window.defaultRouteName isn t / , we should assume it was set // intentionally via `setInitialRoute`, and should override whatever // is in [widget.initialRoute]. initialRoute: WidgetsBinding . instance . window . defaultRouteName != Navigator . defaultRouteName ? WidgetsBinding . instance . window . defaultRouteName : widget . initialRoute ?? WidgetsBinding . instance . window . defaultRouteName , onGenerateRoute: _onGenerateRoute , onUnknownRoute: _onUnknownRoute , observers: widget . navigatorObservers , ); } MaterialApp \u7684build\u51fd\u6570\u4e2d\u5bf9 WidgetsApp \u8fdb\u884c\u5c01\u88c5 @ override Widget build ( BuildContext context ) { Widget result = WidgetsApp ( key: GlobalObjectKey ( this ), navigatorKey: widget . navigatorKey , navigatorObservers: _navigatorObservers , pageRouteBuilder: T ( RouteSettings settings , WidgetBuilder builder ) = MaterialPageRoute T ( settings: settings , builder: builder ), home: widget . home , routes: widget . routes , initialRoute: widget . initialRoute , onGenerateRoute: widget . onGenerateRoute , onUnknownRoute: widget . onUnknownRoute , builder: ( BuildContext context , Widget child ) { // Use a light theme, dark theme, or fallback theme. ThemeData theme ; final ui . Brightness platformBrightness = MediaQuery . platformBrightnessOf ( context ); if ( platformBrightness == ui . Brightness . dark widget . darkTheme != null ) { theme = widget . darkTheme ; } else if ( widget . theme != null ) { theme = widget . theme ; } else { theme = ThemeData . fallback (); } return AnimatedTheme ( data: theme , isMaterialAppTheme: true , child: widget . builder != null ? Builder ( builder: ( BuildContext context ) { return widget . builder ( context , child ); }, ) : child , ); }, ); Navigator\u6e90\u7801\u89e3\u6790 Navigator\u6784\u9020\u51fd\u6570 \u5728 MaterialApp \u7684\u6784\u9020\u51fd\u6570\u4e2d\u4f20\u5165\u76f8\u5173\u7684\u8def\u7531\u6784\u9020\u53c2\u6570\uff0c\u5728 build Navigator \u4e2d\u7ec4\u8981\u7684\u7c7b: NavigatorObserver\uff1a\u4e00\u4e2a\u501f\u53e3\u3001\u5bfc\u822a\u5207\u6362\u662f\u80fd\u591f\u76d1\u542c\u5bfc\u822a\u5207\u6362\u7684\u52a8\u4f5c\uff0c\u5728\u5207\u6362\u7684\u65f6\u5019\u5904\u7406\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91 RouteSettings:\u9875\u9762\u95f4\u8fdb\u884c\u5bfc\u822a\u662f\u5bf9\u6570\u636e\u7684\u4e00\u4e2a\u5c01\u88c5 OverlayState:State\u5bf9\u8c61\uff0c\u6784\u5efa\u6709\u72b6\u6001\u7684Widget\uff0c\u4f7f\u7528`Stack`\u5bf9`List lt;OverlayEntry gt;`\u4e2d\u7684Widget\u8fdb\u884c\u6392\u5e8f\u548c\u7ed8\u5236 Route\uff1a\u7ba1\u7406Widget\u7684\u903b\u8f91\u987a\u5e8f\u548c\u76f8\u5173\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u548c\u6bcf\u4e2aOverlayEntry FocusScopeNode: OverlayEntry\uff1a\u5bf9\u6bcf\u4e00\u4e2aWiget\u8fdb\u884c\u5c01\u88c5\u548c\u7ba1\u7406\uff0c\u8fdb\u884cWidget\u903b\u8f91\u6392\u5e8f\u548c\u6570\u636e\u4fdd\u5b58\uff0c`List lt;OverlayEntry gt;` TickerProviderStateMixin \u8def\u7531\u53c2\u6570\u4f20\u8f93\u7684\u7c7b\u578b:(\u80fd\u591f\u4f20\u9012\u81ea\u5b9a\u4e49\u7c7b\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u4f20\u8f93\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e) String int Object Map class Navigator extends StatefulWidget { /// Creates a widget that maintains a stack-based history of child widgets. /// The [onGenerateRoute] argument must not be null. const Navigator ({ Key key , this . initialRoute , @ required this . onGenerateRoute , this . onUnknownRoute , this . observers = const NavigatorObserver [], }) : assert ( onGenerateRoute != null ), super ( key: key ); final String initialRoute ; final RouteFactory onGenerateRoute ; final RouteFactory onUnknownRoute ; final List NavigatorObserver observers ; static const String defaultRouteName = / ; static NavigatorState of ( BuildContext context , { bool rootNavigator = false , bool nullOk = false , }) { final NavigatorState navigator = rootNavigator ? context . rootAncestorStateOfType ( const TypeMatcher NavigatorState ()) : context . ancestorStateOfType ( const TypeMatcher NavigatorState ()); assert (() { if ( navigator == null ! nullOk ) { throw FlutterError ( Navigator operation requested with a context that does not include a Navigator. \\n The context used to push or pop routes from the Navigator must be that of a widget that is a descendant of a Navigator widget. ); } return true ; }()); return navigator ; } @ override NavigatorState createState () = NavigatorState (); } NavigatorState\u6838\u5fc3\u903b\u8f91: 1.\u5b9a\u4e49`_history = lt;Route lt;dynamic gt; gt;[];`\u5bf9\u8def\u7531\u5668\u8fdb\u884c\u7ba1\u7406 2.\u5b9a\u4e49`_initialOverlayEntries = lt;OverlayEntry gt;[];`\u4fdd\u5b58\u6bcf\u4e00\u4e2aWidget\u9875\u9762\u5bf9\u8c61\uff0c\u7ba1\u7406`Widget`\u5728`Stack`\u4e2d\u7684\u4f4d\u7f6e 3.\u521d\u59cb\u5316`NavigatorObserver`\u5bf9\u8c61 4.\u5904\u7406\u521d\u59cb\u5316\u8def\u7531`initialRouteName` 5.\u6784\u5efa`_routeNamed`\u5bf9\u8c61 6.\u5904\u7406\u5728`Navigator`\u4e0a\u4f7f\u7528\u7684\u70b9\u51fb\u3001\u624b\u52bf\u3001\u7126\u70b9\u8fdb\u884c\u5904\u7406 6.1 `Listener`\u5904\u7406\u9f20\u6807\u4e8b\u4ef6 6.2 `AbsorbPointer`\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u62e6\u622a 6.3 `FocusScope`\u7126\u70b9\u5904\u7406 6.4 `Overlay`\u5c01\u88c5`Stack`\u5bf9`OverlayEntry`\u4e2d\u5bf9\u5e94\u7684Widget\u8fdb\u884c\u6e32\u67d3 @ override class NavigatorState extends State Navigator with TickerProviderStateMixin { final GlobalKey OverlayState _overlayKey = GlobalKey OverlayState (); final List Route dynamic _history = Route dynamic []; final Set Route dynamic _poppedRoutes = Route dynamic {}; final FocusScopeNode focusScopeNode = FocusScopeNode ( debugLabel: Navigator Scope ); final List OverlayEntry _initialOverlayEntries = OverlayEntry []; @ override void initState () { super . initState (); ///\u521d\u59cb\u5316\u89c2\u5bdf\u8005\u5bf9\u8c61 for ( NavigatorObserver observer in widget . observers ) { assert ( observer . navigator == null ); observer . _navigator = this ; } ///\u5904\u7406\u521d\u59cb\u5316\u8def\u7531 String initialRouteName = widget . initialRoute ?? Navigator . defaultRouteName ; if ( initialRouteName . startsWith ( / ) initialRouteName . length 1 ) { initialRouteName = initialRouteName . substring ( 1 ); // strip leading / assert ( Navigator . defaultRouteName == / ); final List String plannedInitialRouteNames = String [ Navigator . defaultRouteName , ]; final List Route dynamic plannedInitialRoutes = Route dynamic [ _routeNamed dynamic ( Navigator . defaultRouteName , allowNull: true , arguments: null ), ]; final List String routeParts = initialRouteName . split ( / ); if ( initialRouteName . isNotEmpty ) { String routeName = ; for ( String part in routeParts ) { routeName += / $ part ; plannedInitialRouteNames . add ( routeName ); plannedInitialRoutes . add ( _routeNamed dynamic ( routeName , allowNull: true , arguments: null )); } } ...... for ( Route dynamic route in _history ) _initialOverlayEntries . addAll ( route . overlayEntries ); } OverlayState get overlay = _overlayKey . currentState ; OverlayEntry get _currentOverlayEntry { for ( Route dynamic route in _history . reversed ) { if ( route . overlayEntries . isNotEmpty ) return route . overlayEntries . last ; } return null ; } ///\u6784\u5efa\u8def\u7531\u5bf9\u8c61 Route T _routeNamed T ( String name , { @ required Object arguments , bool allowNull = false }) { assert ( ! _debugLocked ); assert ( name != null ); final RouteSettings settings = RouteSettings ( name: name , isInitialRoute: _history . isEmpty , arguments: arguments , ); Route T route = widget . onGenerateRoute ( settings ); if ( route == null ! allowNull ) { assert (() { if ( widget . onUnknownRoute == null ) { throw FlutterError ( If a Navigator has no onUnknownRoute, then its onGenerateRoute must never return null. \\n When trying to build the route $ name , onGenerateRoute returned null, but there was no onUnknownRoute callback specified. \\n The Navigator was: \\n $ this ); } return true ; }()); route = widget . onUnknownRoute ( settings ); assert (() { if ( route == null ) { throw FlutterError ( A Navigator \\ s onUnknownRoute returned null. \\n When trying to build the route $ name , both onGenerateRoute and onUnknownRoute returned null. The onUnknownRoute callback should never return null. \\n The Navigator was: \\n $ this ); } return true ; }()); } return route ; } @ override Widget build ( BuildContext context ) { assert ( ! _debugLocked ); assert ( _history . isNotEmpty ); ///\u5904\u7406\u9f20\u6807\u4e8b\u4ef6 return Listener ( onPointerDown: _handlePointerDown , onPointerUp: _handlePointerUpOrCancel , onPointerCancel: _handlePointerUpOrCancel , ///\u6d88\u8d39\u6389\u5b50\u6811\u4e2d\u7684\u4e8b\u4ef6\uff0c\u4e0d\u8ba9\u5b50\u8282\u70b9\u5904\u7406\u4e8b\u4ef6 child: AbsorbPointer ( absorbing: false , // it s mutated directly by _cancelActivePointers above child: FocusScope ( node: focusScopeNode , autofocus: true , child: Overlay ( key: _overlayKey , initialEntries: _initialOverlayEntries , ), ), ), ); } } push Pop 1.\u901a\u8fc7 Navigator.of(context).pushNamed T (routeName, arguments: arguments); \u5728Widget\u6811\u4e2d\u67e5\u627e NavigatorState @ optionalTypeArgs static Future T pushNamed T extends Object ( BuildContext context , String routeName , { Object arguments , }) { ///\u6838\u5fc3\u4ee3\u7801 return Navigator . of ( context ). pushNamed T ( routeName , arguments: arguments ); } 2.\u8c03\u7528 Route \u4e2d\u7684 install \u51fa\u7684\u8def\u7531\u4fe1\u606f\u548c RouteSettings \u53c2\u6570\u5230Route\u4e2d\uff0c Route \u901a\u8fc7\u5168\u5c40\u7684 final GlobalKey OverlayState _overlayKey = GlobalKey OverlayState (); \u67e5\u627e\u5230\u5728 NavigatorState build \u4e2d\u6784\u5efa\u7684 Overlay \u4ece\u800c\u628a\u6570\u636e\u4f20\u5165 OverlayState \u4e2d\u7684 List OverlayEntry @ optionalTypeArgs Future T push T extends Object ( Route T route ) { final Route dynamic oldRoute = _history . isNotEmpty ? _history . last : null ; route . _navigator = this ; /* \u8c03\u7528Route\u65b9\u6cd5 */ route . install ( _currentOverlayEntry ); _history . add ( route ); route . didPush (); route . didChangeNext ( null ); if ( oldRoute != null ) { oldRoute . didChangeNext ( route ); route . didChangePrevious ( oldRoute ); } for ( NavigatorObserver observer in widget . observers ) observer . didPush ( route , oldRoute ); assert (() { _debugLocked = false ; return true ; }()); _afterNavigation ( route ); return route . popped ; } 3.\u8c03\u7528 OverlayState insertAll \u65b9\u6cd5\uff0c\u6dfb\u52a0\u8def\u7531\u4fe1\u606f\u5230 List OverlayEntry \u5217\u8868\u4e2d\uff0c\u8c03\u7528 setState \u65b9\u6cd5\u5c31\u89e6\u53d1 Widget build \u65b9\u6cd5\u91cd\u5efa\uff0c\u91cd\u65b0\u7ed8\u5236\u6574\u68f5 Widget \u6811\uff0c\u6700\u7ec8\u8c03\u7528 _Theatre RenderObjectWidget void insertAll ( Iterable OverlayEntry entries , { OverlayEntry below , OverlayEntry above }) { if ( entries . isEmpty ) return ; for ( OverlayEntry entry in entries ) { assert ( entry . _overlay == null ); entry . _overlay = this ; } setState (() { _entries . insertAll ( _insertionIndex ( below , above ), entries ); }); } \u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e4b\u95f4\u4f7f\u7528\u4e0d\u540c\u7684\u52a8\u753b \u76d1\u542cScheduler\u751f\u547d\u5468\u671f\u53d8\u5316 if ( SchedulerBinding . instance . schedulerPhase == SchedulerPhase . persistentCallbacks ) { SchedulerBinding . instance . addPostFrameCallback (( Duration duration ) { overlay . _remove ( this ); }); }","title":"FlutterNavigator"},{"location":"android/flutterdev/flutterNavigator/#flutter","text":"","title":"Flutter \u5bfc\u822a"},{"location":"android/flutterdev/flutterNavigator/#_1","text":"\u5728\u5b89\u5353\u4e2d\u4e00\u4e2aroute\u5bf9\u5e94\u4e00\u4e2aActivity\uff0c\u5728IOS\u4e2d\u4e00\u4e2aRoute\u5bf9\u5e94\u4e00\u4e2aViewController, \u5728Flutter\u4e2d\u4e00\u4e2aroute\u5bf9\u5e94\u4e00\u4e2aWidget \u5728\u4e24\u4e2a\u754c\u9762\u63a5\u5bfc\u822a\u4f7f\u7528 Navigator Navigator.push(). Navigator.pop().","title":"\u6982\u8ff0"},{"location":"android/flutterdev/flutterNavigator/#androidios","text":"/// See also: /// /// * [Navigator], a widget that handles routing. /// * [SystemChannels.navigation], which handles subsequent navigation /// requests from the embedder. String get defaultRouteName = _defaultRouteName (); String _defaultRouteName () native Window_defaultRouteName ; \u5728App\u7a0b\u5e8f\u542f\u52a8\u65f6\u8c03\u7528\u8def\u7531\u529f\u80fd\u548c\u4f20\u9012\u53c2\u6570 \u6ca1\u6709\u6307\u5b9a\u8def\u7531\uff0c\u7f3a\u7701\u7406\u7531\u662f /","title":"Android&amp;IOS\u542f\u52a8\u8c03\u7528\u8def\u7531\u4f20\u9012\u53c2\u6570"},{"location":"android/flutterdev/flutterNavigator/#android","text":"public class AnotherActivity extends FlutterActivity { @Override public FlutterView createFlutterView ( Context context ) { WindowManager . LayoutParams matchParent = new WindowManager . LayoutParams (- 1 , - 1 ); FlutterNativeView nativeView = this . createFlutterNativeView (); FlutterView flutterView = new FlutterView ( this , ( AttributeSet ) null , nativeView ); flutterView . setInitialRoute ( /route1 ); flutterView . setLayoutParams ( matchParent ); this . setContentView ( flutterView ); return flutterView ; } } void main () = runApp ( InitPage ()); class InitPage extends StatelessWidget { var temp = window . defaultRouteName ; @ override Widget build ( BuildContext context ) { print ( Flutter routes $ temp ); return MaterialApp ( title: Flutter Demo , theme: ThemeData ( primarySwatch: Colors . blue , ), initialRoute: / , routes: { / : ( context ) { print ( show times ); DefaultPage (); }, /route1 : ( context ) { print ( show route1 ); MyApp (); }, /route2 : ( context ) = DefaultPage (), }, ); } }","title":"Android"},{"location":"android/flutterdev/flutterNavigator/#ios","text":"/// /// On iOS, calling /// FlutterViewController.setInitialRoute /// will set this value. The value must be set sufficiently early, i.e. before /// the [runApp] call is executed in Dart, for this to have any effect on the /// framework. The application:didFinishLaunchingWithOptions: method is a /// suitable time to set this value. ///","title":"iOS"},{"location":"android/flutterdev/flutterNavigator/#navigator","text":"","title":"Navigator \u6838\u5fc3\u903b\u8f91"},{"location":"android/flutterdev/flutterNavigator/#_2","text":"1.`_WidgetsAppState`build\u65b9\u6cd5\u4e2d\u5bf9Navigator\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u5224\u65ad\u5f53\u524d\u7684\u9ed8\u8ba4\u8def\u7531\u548c` window.defaultRouteName`\u662f\u5426\u4e00\u81f4\uff0c\u4f18\u5148\u4f7f\u7528`WidgetsBinding.instance.window.defaultRouteName` 2.\u8c03\u7528`_onGenerateRoute`\u521d\u59cb\u5316\u4f20\u5165\u7684\u8def\u7531\u4fe1\u606f 3.\u5904\u7406`_onUnknownRoute`\u672a\u77e5\u8def\u7531\u4fe1\u606f 4.\u51fa\u8def`NavigatorObserver`\u5bfc\u822a\u89c2\u5bdf\u8005\u5bf9\u8c61 5.\u4f7f\u7528`OverlayEntry`\u5b9e\u4f53\u7ba1\u7406\u5bfc\u822a\u987a\u5e8f\uff0c`_initialOverlayEntries = lt;OverlayEntry gt;[];` 6.\u4f7f\u7528`Listener`\u6765\u5bf9\u9f20\u6807\u4e8b\u4ef6\u8fdb\u884c\u76d1\u542c\u7ba1\u7406 7.\u4f7f\u7528`AbsorbPointer`\u62e6\u622a\u4e8b\u4ef6\uff0c\u662f\u5426\u53ef\u4ee5\u4f20\u5165\u5b50\u6811\u4e2d 8.\u4f7f\u7528`FocusScope`\u7ba1\u7406\u76f8\u5173\u7684\u7126\u70b9\u4e8b\u4ef6 9.`Overlay`\u5185\u90e8\u4f7f\u7528`Stack`\u63a7\u4ef6\u5bf9\u5bfc\u822a\u4e2d\u7684Widget\u8fdb\u884cUI\u6c47\u603b\u6446\u653e\u7684\u4f4d\u7f6e\u8fdb\u884c\u5904\u7406 10.`Route`\u4e2d\u4fdd\u5b58 10.1\uff1aNavigatorState 10.2\uff1aRouteSettings 10.3\uff1aconst lt;OverlayEntry gt;[];","title":"\u521d\u59cb\u5316\u8fc7\u7a0b"},{"location":"android/flutterdev/flutterNavigator/#navogator","text":"WidgetsApp \u5bf9Widget\u505a\u4e86\u4e00\u4e2a\u9876\u5c42\u5c01\u88c5 1.Navigator 2.Localizations 3.DefaultTextStyle 4.MediaQuery \u5728WidgetsAppBuilder\u4e2d\u5b9e\u4f8b\u5316 Navigator \u521d\u59cb\u5316Flutter\u5c42\u7684\u903b\u8f91 @ override Widget build ( BuildContext context ) { Widget navigator ; if ( _navigator != null ) { navigator = Navigator ( key: _navigator , // If window.defaultRouteName isn t / , we should assume it was set // intentionally via `setInitialRoute`, and should override whatever // is in [widget.initialRoute]. initialRoute: WidgetsBinding . instance . window . defaultRouteName != Navigator . defaultRouteName ? WidgetsBinding . instance . window . defaultRouteName : widget . initialRoute ?? WidgetsBinding . instance . window . defaultRouteName , onGenerateRoute: _onGenerateRoute , onUnknownRoute: _onUnknownRoute , observers: widget . navigatorObservers , ); } MaterialApp \u7684build\u51fd\u6570\u4e2d\u5bf9 WidgetsApp \u8fdb\u884c\u5c01\u88c5 @ override Widget build ( BuildContext context ) { Widget result = WidgetsApp ( key: GlobalObjectKey ( this ), navigatorKey: widget . navigatorKey , navigatorObservers: _navigatorObservers , pageRouteBuilder: T ( RouteSettings settings , WidgetBuilder builder ) = MaterialPageRoute T ( settings: settings , builder: builder ), home: widget . home , routes: widget . routes , initialRoute: widget . initialRoute , onGenerateRoute: widget . onGenerateRoute , onUnknownRoute: widget . onUnknownRoute , builder: ( BuildContext context , Widget child ) { // Use a light theme, dark theme, or fallback theme. ThemeData theme ; final ui . Brightness platformBrightness = MediaQuery . platformBrightnessOf ( context ); if ( platformBrightness == ui . Brightness . dark widget . darkTheme != null ) { theme = widget . darkTheme ; } else if ( widget . theme != null ) { theme = widget . theme ; } else { theme = ThemeData . fallback (); } return AnimatedTheme ( data: theme , isMaterialAppTheme: true , child: widget . builder != null ? Builder ( builder: ( BuildContext context ) { return widget . builder ( context , child ); }, ) : child , ); }, );","title":"Navogator\u521d\u59cb\u5316\u8fc7\u7a0b"},{"location":"android/flutterdev/flutterNavigator/#navigator_1","text":"Navigator\u6784\u9020\u51fd\u6570 \u5728 MaterialApp \u7684\u6784\u9020\u51fd\u6570\u4e2d\u4f20\u5165\u76f8\u5173\u7684\u8def\u7531\u6784\u9020\u53c2\u6570\uff0c\u5728 build Navigator \u4e2d\u7ec4\u8981\u7684\u7c7b: NavigatorObserver\uff1a\u4e00\u4e2a\u501f\u53e3\u3001\u5bfc\u822a\u5207\u6362\u662f\u80fd\u591f\u76d1\u542c\u5bfc\u822a\u5207\u6362\u7684\u52a8\u4f5c\uff0c\u5728\u5207\u6362\u7684\u65f6\u5019\u5904\u7406\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91 RouteSettings:\u9875\u9762\u95f4\u8fdb\u884c\u5bfc\u822a\u662f\u5bf9\u6570\u636e\u7684\u4e00\u4e2a\u5c01\u88c5 OverlayState:State\u5bf9\u8c61\uff0c\u6784\u5efa\u6709\u72b6\u6001\u7684Widget\uff0c\u4f7f\u7528`Stack`\u5bf9`List lt;OverlayEntry gt;`\u4e2d\u7684Widget\u8fdb\u884c\u6392\u5e8f\u548c\u7ed8\u5236 Route\uff1a\u7ba1\u7406Widget\u7684\u903b\u8f91\u987a\u5e8f\u548c\u76f8\u5173\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u548c\u6bcf\u4e2aOverlayEntry FocusScopeNode: OverlayEntry\uff1a\u5bf9\u6bcf\u4e00\u4e2aWiget\u8fdb\u884c\u5c01\u88c5\u548c\u7ba1\u7406\uff0c\u8fdb\u884cWidget\u903b\u8f91\u6392\u5e8f\u548c\u6570\u636e\u4fdd\u5b58\uff0c`List lt;OverlayEntry gt;` TickerProviderStateMixin \u8def\u7531\u53c2\u6570\u4f20\u8f93\u7684\u7c7b\u578b:(\u80fd\u591f\u4f20\u9012\u81ea\u5b9a\u4e49\u7c7b\uff0c\u90a3\u4e48\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u4f20\u8f93\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e) String int Object Map class Navigator extends StatefulWidget { /// Creates a widget that maintains a stack-based history of child widgets. /// The [onGenerateRoute] argument must not be null. const Navigator ({ Key key , this . initialRoute , @ required this . onGenerateRoute , this . onUnknownRoute , this . observers = const NavigatorObserver [], }) : assert ( onGenerateRoute != null ), super ( key: key ); final String initialRoute ; final RouteFactory onGenerateRoute ; final RouteFactory onUnknownRoute ; final List NavigatorObserver observers ; static const String defaultRouteName = / ; static NavigatorState of ( BuildContext context , { bool rootNavigator = false , bool nullOk = false , }) { final NavigatorState navigator = rootNavigator ? context . rootAncestorStateOfType ( const TypeMatcher NavigatorState ()) : context . ancestorStateOfType ( const TypeMatcher NavigatorState ()); assert (() { if ( navigator == null ! nullOk ) { throw FlutterError ( Navigator operation requested with a context that does not include a Navigator. \\n The context used to push or pop routes from the Navigator must be that of a widget that is a descendant of a Navigator widget. ); } return true ; }()); return navigator ; } @ override NavigatorState createState () = NavigatorState (); } NavigatorState\u6838\u5fc3\u903b\u8f91: 1.\u5b9a\u4e49`_history = lt;Route lt;dynamic gt; gt;[];`\u5bf9\u8def\u7531\u5668\u8fdb\u884c\u7ba1\u7406 2.\u5b9a\u4e49`_initialOverlayEntries = lt;OverlayEntry gt;[];`\u4fdd\u5b58\u6bcf\u4e00\u4e2aWidget\u9875\u9762\u5bf9\u8c61\uff0c\u7ba1\u7406`Widget`\u5728`Stack`\u4e2d\u7684\u4f4d\u7f6e 3.\u521d\u59cb\u5316`NavigatorObserver`\u5bf9\u8c61 4.\u5904\u7406\u521d\u59cb\u5316\u8def\u7531`initialRouteName` 5.\u6784\u5efa`_routeNamed`\u5bf9\u8c61 6.\u5904\u7406\u5728`Navigator`\u4e0a\u4f7f\u7528\u7684\u70b9\u51fb\u3001\u624b\u52bf\u3001\u7126\u70b9\u8fdb\u884c\u5904\u7406 6.1 `Listener`\u5904\u7406\u9f20\u6807\u4e8b\u4ef6 6.2 `AbsorbPointer`\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u62e6\u622a 6.3 `FocusScope`\u7126\u70b9\u5904\u7406 6.4 `Overlay`\u5c01\u88c5`Stack`\u5bf9`OverlayEntry`\u4e2d\u5bf9\u5e94\u7684Widget\u8fdb\u884c\u6e32\u67d3 @ override class NavigatorState extends State Navigator with TickerProviderStateMixin { final GlobalKey OverlayState _overlayKey = GlobalKey OverlayState (); final List Route dynamic _history = Route dynamic []; final Set Route dynamic _poppedRoutes = Route dynamic {}; final FocusScopeNode focusScopeNode = FocusScopeNode ( debugLabel: Navigator Scope ); final List OverlayEntry _initialOverlayEntries = OverlayEntry []; @ override void initState () { super . initState (); ///\u521d\u59cb\u5316\u89c2\u5bdf\u8005\u5bf9\u8c61 for ( NavigatorObserver observer in widget . observers ) { assert ( observer . navigator == null ); observer . _navigator = this ; } ///\u5904\u7406\u521d\u59cb\u5316\u8def\u7531 String initialRouteName = widget . initialRoute ?? Navigator . defaultRouteName ; if ( initialRouteName . startsWith ( / ) initialRouteName . length 1 ) { initialRouteName = initialRouteName . substring ( 1 ); // strip leading / assert ( Navigator . defaultRouteName == / ); final List String plannedInitialRouteNames = String [ Navigator . defaultRouteName , ]; final List Route dynamic plannedInitialRoutes = Route dynamic [ _routeNamed dynamic ( Navigator . defaultRouteName , allowNull: true , arguments: null ), ]; final List String routeParts = initialRouteName . split ( / ); if ( initialRouteName . isNotEmpty ) { String routeName = ; for ( String part in routeParts ) { routeName += / $ part ; plannedInitialRouteNames . add ( routeName ); plannedInitialRoutes . add ( _routeNamed dynamic ( routeName , allowNull: true , arguments: null )); } } ...... for ( Route dynamic route in _history ) _initialOverlayEntries . addAll ( route . overlayEntries ); } OverlayState get overlay = _overlayKey . currentState ; OverlayEntry get _currentOverlayEntry { for ( Route dynamic route in _history . reversed ) { if ( route . overlayEntries . isNotEmpty ) return route . overlayEntries . last ; } return null ; } ///\u6784\u5efa\u8def\u7531\u5bf9\u8c61 Route T _routeNamed T ( String name , { @ required Object arguments , bool allowNull = false }) { assert ( ! _debugLocked ); assert ( name != null ); final RouteSettings settings = RouteSettings ( name: name , isInitialRoute: _history . isEmpty , arguments: arguments , ); Route T route = widget . onGenerateRoute ( settings ); if ( route == null ! allowNull ) { assert (() { if ( widget . onUnknownRoute == null ) { throw FlutterError ( If a Navigator has no onUnknownRoute, then its onGenerateRoute must never return null. \\n When trying to build the route $ name , onGenerateRoute returned null, but there was no onUnknownRoute callback specified. \\n The Navigator was: \\n $ this ); } return true ; }()); route = widget . onUnknownRoute ( settings ); assert (() { if ( route == null ) { throw FlutterError ( A Navigator \\ s onUnknownRoute returned null. \\n When trying to build the route $ name , both onGenerateRoute and onUnknownRoute returned null. The onUnknownRoute callback should never return null. \\n The Navigator was: \\n $ this ); } return true ; }()); } return route ; } @ override Widget build ( BuildContext context ) { assert ( ! _debugLocked ); assert ( _history . isNotEmpty ); ///\u5904\u7406\u9f20\u6807\u4e8b\u4ef6 return Listener ( onPointerDown: _handlePointerDown , onPointerUp: _handlePointerUpOrCancel , onPointerCancel: _handlePointerUpOrCancel , ///\u6d88\u8d39\u6389\u5b50\u6811\u4e2d\u7684\u4e8b\u4ef6\uff0c\u4e0d\u8ba9\u5b50\u8282\u70b9\u5904\u7406\u4e8b\u4ef6 child: AbsorbPointer ( absorbing: false , // it s mutated directly by _cancelActivePointers above child: FocusScope ( node: focusScopeNode , autofocus: true , child: Overlay ( key: _overlayKey , initialEntries: _initialOverlayEntries , ), ), ), ); } }","title":"Navigator\u6e90\u7801\u89e3\u6790"},{"location":"android/flutterdev/flutterNavigator/#pushpop","text":"1.\u901a\u8fc7 Navigator.of(context).pushNamed T (routeName, arguments: arguments); \u5728Widget\u6811\u4e2d\u67e5\u627e NavigatorState @ optionalTypeArgs static Future T pushNamed T extends Object ( BuildContext context , String routeName , { Object arguments , }) { ///\u6838\u5fc3\u4ee3\u7801 return Navigator . of ( context ). pushNamed T ( routeName , arguments: arguments ); } 2.\u8c03\u7528 Route \u4e2d\u7684 install \u51fa\u7684\u8def\u7531\u4fe1\u606f\u548c RouteSettings \u53c2\u6570\u5230Route\u4e2d\uff0c Route \u901a\u8fc7\u5168\u5c40\u7684 final GlobalKey OverlayState _overlayKey = GlobalKey OverlayState (); \u67e5\u627e\u5230\u5728 NavigatorState build \u4e2d\u6784\u5efa\u7684 Overlay \u4ece\u800c\u628a\u6570\u636e\u4f20\u5165 OverlayState \u4e2d\u7684 List OverlayEntry @ optionalTypeArgs Future T push T extends Object ( Route T route ) { final Route dynamic oldRoute = _history . isNotEmpty ? _history . last : null ; route . _navigator = this ; /* \u8c03\u7528Route\u65b9\u6cd5 */ route . install ( _currentOverlayEntry ); _history . add ( route ); route . didPush (); route . didChangeNext ( null ); if ( oldRoute != null ) { oldRoute . didChangeNext ( route ); route . didChangePrevious ( oldRoute ); } for ( NavigatorObserver observer in widget . observers ) observer . didPush ( route , oldRoute ); assert (() { _debugLocked = false ; return true ; }()); _afterNavigation ( route ); return route . popped ; } 3.\u8c03\u7528 OverlayState insertAll \u65b9\u6cd5\uff0c\u6dfb\u52a0\u8def\u7531\u4fe1\u606f\u5230 List OverlayEntry \u5217\u8868\u4e2d\uff0c\u8c03\u7528 setState \u65b9\u6cd5\u5c31\u89e6\u53d1 Widget build \u65b9\u6cd5\u91cd\u5efa\uff0c\u91cd\u65b0\u7ed8\u5236\u6574\u68f5 Widget \u6811\uff0c\u6700\u7ec8\u8c03\u7528 _Theatre RenderObjectWidget void insertAll ( Iterable OverlayEntry entries , { OverlayEntry below , OverlayEntry above }) { if ( entries . isEmpty ) return ; for ( OverlayEntry entry in entries ) { assert ( entry . _overlay == null ); entry . _overlay = this ; } setState (() { _entries . insertAll ( _insertionIndex ( below , above ), entries ); }); }","title":"push&amp;Pop"},{"location":"android/flutterdev/flutterNavigator/#_3","text":"","title":"\u5728\u4e0d\u540c\u7684\u5e73\u53f0\u4e4b\u95f4\u4f7f\u7528\u4e0d\u540c\u7684\u52a8\u753b"},{"location":"android/flutterdev/flutterNavigator/#scheduler","text":"if ( SchedulerBinding . instance . schedulerPhase == SchedulerPhase . persistentCallbacks ) { SchedulerBinding . instance . addPostFrameCallback (( Duration duration ) { overlay . _remove ( this ); }); }","title":"\u76d1\u542cScheduler\u751f\u547d\u5468\u671f\u53d8\u5316"},{"location":"android/flutterdev/flutterTest/","text":"Flutter \u6d4b\u8bd5 \u6d4b\u8bd5\u5e93: https://dart-pub.mirrors.sjtug.sjtu.edu.cn/packages/test","title":"Flutter\u6d4b\u8bd5"},{"location":"android/flutterdev/flutterTest/#flutter","text":"\u6d4b\u8bd5\u5e93: https://dart-pub.mirrors.sjtug.sjtu.edu.cn/packages/test","title":"Flutter \u6d4b\u8bd5"},{"location":"android/flutterdev/flutter_drawer/","text":"TargetPlatform Semantics \u4fdd\u5b58Flutter\u76f8\u5173\u7684\u5c0f\u90e8\u4ef6: /Users/cuco/flutter/packages/flutter/lib/src/widgets/basic.dart DrawerController GestureRecognizer DragGestureRecognizer UserAccountsDrawerHeader FutureBuilder TickerProvider Ticker TickerMode Completer Timeline Flutter\u76f8\u5173\u63d2\u4ef6 https://github.com/flutter/plugins android_alarm_manager pub package android_intent pub package battery pub package camera pub package connectivity pub package device_info pub package google_maps_flutter pub package google_sign_in pub package image_picker pub package in_app_purchase pub package local_auth pub package package_info pub package path_provider pub package quick_actions pub package sensors pub package share pub package shared_preferences pub package url_launcher pub package video_player pub package webview_flutter android { defaultConfig { ndk { //\u8bbe\u7f6e\u652f\u6301\u7684SO\u5e93\u67b6\u6784\uff08\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\uff0c\u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a\u5e73\u53f0\u7684so\uff09 abiFilters \"armeabi\", \"armeabi-v7a\", \"arm64-v8a\", \"x86\",\"arm64-v8a\",\"x86_64\" } } } dependencies { compile fileTree(dir: 'libs', include: ['*.jar']) //3D\u5730\u56feso\u53cajar compile 'com.amap.api:3dmap:latest.integration' //\u5b9a\u4f4d\u529f\u80fd compile 'com.amap.api:location:latest.integration' //\u641c\u7d22\u529f\u80fd compile 'com.amap.api:search:latest.integration' }","title":"Flutter drawer"},{"location":"android/flutterdev/flutter_drawer/#flutter","text":"https://github.com/flutter/plugins android_alarm_manager pub package android_intent pub package battery pub package camera pub package connectivity pub package device_info pub package google_maps_flutter pub package google_sign_in pub package image_picker pub package in_app_purchase pub package local_auth pub package package_info pub package path_provider pub package quick_actions pub package sensors pub package share pub package shared_preferences pub package url_launcher pub package video_player pub package webview_flutter android { defaultConfig { ndk { //\u8bbe\u7f6e\u652f\u6301\u7684SO\u5e93\u67b6\u6784\uff08\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\uff0c\u9009\u62e9\u4e00\u4e2a\u6216\u591a\u4e2a\u5e73\u53f0\u7684so\uff09 abiFilters \"armeabi\", \"armeabi-v7a\", \"arm64-v8a\", \"x86\",\"arm64-v8a\",\"x86_64\" } } } dependencies { compile fileTree(dir: 'libs', include: ['*.jar']) //3D\u5730\u56feso\u53cajar compile 'com.amap.api:3dmap:latest.integration' //\u5b9a\u4f4d\u529f\u80fd compile 'com.amap.api:location:latest.integration' //\u641c\u7d22\u529f\u80fd compile 'com.amap.api:search:latest.integration' }","title":"Flutter\u76f8\u5173\u63d2\u4ef6"},{"location":"android/flutterdev/flutteradvance/","text":"Dart \u5f00\u53d1 Android IOS Web \u5e38\u89c1\u5f00\u53d1\u5e93 flutter-go Flutter\u5f00\u6e90\u5e93 Flutterrun\u539f\u7406 \u6e90\u7801\u89e3\u8bfbFlutter tools\u673a\u5236 \u6df1\u5165\u7406\u89e3Flutter\u5e94\u7528\u542f\u52a8 \u5f7b\u5e95\u7406\u89e3\u5b89\u5353\u5e94\u7528\u65e0\u54cd\u5e94\u673a\u5236 Flutter\u524d\u7aef\u7f16\u8bd1frontend_server \u73af\u5883\u642d\u5efa\u95ee\u9898\uff1f 1.\u7cfb\u7edf\u8981\u6c42 2.\u8bbe\u7f6eFlutter\u955c\u50cf 3.\u83b7\u53d6FlutterSDK 4.IOS\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e 5.Android\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e 6.\u5982\u4f55\u67e5\u770bMac\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c 7.Flutter\u4f9d\u8d56\u5e93\uff1abash\u3001curl git 2.x mkdir rm unzip which 8.\u8bbe\u7f6eFlutter\u955c\u50cf\uff1abash_profile export PUB_HOSTED_URL=https://pub.flutter-io.cn export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn git clone -b dev https://github.com/flutter/flutter.git export PATH= $PWD/flutter/bin:$PATH cd ./flutter flutter doctor \u4e0a\u6d77\u8d44\u6599\u83b7\u53d6: FLUTTER_STORAGE_BASE_URL: https://mirrors.sjtug.sjtu.edu.cn/ PUB_HOSTED_URL: https://dart-pub.mirrors.sjtug.sjtu.edu.cn/ Flutter in China flutter.cn 9.\u73af\u5883\u53d8\u91cf\u914d\u7f6e 10.\u6253\u5f00IOS\u6a21\u62df\u5668 open -a Simulator 11.\u4f7f\u7528\u547d\u4ee4\u884c\u521b\u5efa\u548c\u8fd0\u884c\u9879\u76ee 12.\u5982\u4f55\u5b89\u88c5Flutter App\u5230\u82f9\u679c\u771f\u673a\u4e0a 1.\u8981\u901a\u8fc7 flutter run \u8fd0\u884c\u5230IOS\u771f\u673a\u4e0a\uff0c\u9700\u8981\u5b89\u88c5\u4e00\u4e0b\u989d\u5916\u7684\u5f00\u53d1\u5de5\u5177\u548c\u4e00\u4e2aApple\u8d26\u53f7\uff0c\u8fd8\u9700\u8981\u7684Xcode\u4e2d\u8bbe\u7f6e 2.\u4f7f\u7528Xcode\u8fd0\u884cFlutter App\u66f4\u7b80\u5355\uff0c\u8fd9\u51e0\u8fd0\u884c\u5c31\u53ef\u4ee5\u4e86 \u5b89\u88c5IOS\u5b89\u88c5\u5de5\u5177: ![pic](../../assets/images/android/flutter/brewiosinstall.png) \u4efb\u4f55\u4e00\u4e2a\u547d\u4ee4\u5931\u8d25\u90fd\u53ef\u4ee5\u8fd0\u884c`brew doctor`\u6765\u6392\u67e5\u9519\u8bef 13.Homebrew \u5b89\u88c5\u4f7f\u7528 14.Flutter\u5f00\u53d1\u5de5\u5177\u4f7f\u7528 15.androidStudio\u7248\u672c\u63a7\u5236 16.Flutter\u73af\u5883\u53d8\u91cf\u3001\u5de5\u5177\u95ee\u9898\u3001\u7248\u672c\u95ee\u9898 Flutter\u73af\u5883\u53d8\u91cf\u3001stable\u3001beta\u3001dev\u3001master Flutter doctor AndroidStudio Xcode \u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u67e5\u770b\u662f\u662f\u5426\u53ef\u4ee5\u8fd0\u884c VPN\u548c\u955c\u50cf 17.Flutter\u9700\u8981\u638c\u63e1\u7684\u5185\u5bb9 1.\u5b66\u4e60Flutter\u9700\u8981\u638c\u63e1\u7684\u57fa\u7840\u77e5\u8bc6\uff1aDart\u3001Android IOS\u57fa\u7840 Dart , Dart\u4e2d\u6587 2.\u5982\u4f55\u4f7f\u7528Flutter\u5305\u548c\u63d2\u4ef6 3.\u5982\u4f55\u7ee7\u7eedFlutter\u5e03\u5c40 4.\u5982\u4f55\u4f7f\u7528Flutter\u8def\u7531\u548c\u5bfc\u822a 5.\u5982\u4f55\u68c0\u6d4b\u7528\u6237\u624b\u52bf\u548c\u4ee5\u53ca\u70b9\u51fb\u4e8b\u4ef6\u5904\u7406 6.\u5982\u4f55\u5bfc\u5165\u548c\u4f7f\u7528Flutter\u8d44\u6e90\u6587\u4ef6 7.\u5982\u4f55\u6253\u5f00\u7b2c\u4e09\u65b9\u5e94\u7528 18.\u6750\u6599\u8bbe\u8ba1 \u6750\u6599\u8bbe\u8ba1 \u5b57\u4f53\u5e93 19.\u5e03\u5c40\u76f8\u5173\u7ec4\u4ef6 RenderObjectWidget SingleChildRenderObjectWidget Opactiy ClipOval ClipRect PhysicalModel Align Padding SizeBox FractionallySizeBox MultiChildRenderObjectWidget Flex Stack Wrap Flow ParentDataWidget Positioned Flexible- Expande 20.Flutter \u751f\u547d\u5468\u671f(\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u3001Widget\u751f\u547d\u5468\u671f) Flutter\u751f\u547d\u5468\u671f\u6309\u7167\u4f7f\u5176\u5212\u5206\u4e3a\u4e09\u4e2a\u4e0d\u540c\u7684\u751f\u547d\u5468\u671f: 1.\u521b\u5efa\u671f createState\u3001initState 2.\u66f4\u65b0\u671f didchangeDependences\u3001build\u3001didUpdateWidget 3.\u9500\u6bc1\u671f deativate\u3001dispose 21.AndroidX\u517c\u5bb9 22.\u5982\u4f55\u6dfb\u52a0\u56fe\u7247\u5360\u4f4d\u7b26 23.\u5982\u4f55\u52a0\u8f7d\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u7247 24.\u5982\u4f55\u52a0\u8f7d\u624b\u673a\u4e0a\u7684\u56fe\u7247 25.\u5b9e\u73b0\u52a8\u753b\u6709\u54ea\u4e9b\u65b9\u5f0f 26.\u8bf4\u660eHero\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f 27.Flutter\u5f00\u53d1\u7684\u6280\u5de7\u6709\u54ea\u4e9b\uff1f\uff1f 28.\u5982\u4f55\u8c03\u8bd5flutter\u7684android\u4ee3\u7801 29.\u5982\u4f55\u8c03\u8bd5Flutter\u7684IOS\u4ee3\u7801 Flutter\u6df7\u5408\u5f00\u53d1 1.Flutter\u6df7\u5408\u5f00\u53d1\u6709\u54ea\u4e9b\u6b65\u9aa4 2.\u521b\u5efa\u4e00\u4e2aFluttermodul\u6709\u54ea\u4e9b\u6b65\u9aa4 3.Android\u5df2\u6709\u9879\u76ee\u4e2d\u96c6\u6210Flutter\u6b65\u9aa4 4.\u73b0\u6709IOS\u4e2d\u96c6\u6210Flutter\u7684\u6b65\u9aa4 5.\u8bf7\u5bf9\u6bd4\u7eafFlutter\u5f00\u53d1\u548c\u6df7\u5408Flutter\u5f00\u53d1\u8c03\u8bd5\u6709\u54ea\u4e9b\u6b65\u9aa4 6.Flutter\u4ee3\u7801\u7684\u8fd0\u884c\u6a21\u5f0f 7.\u5982\u4f55\u6253\u5305\u4e00\u4e2a\u5df2\u7ecf\u96c6\u6210Flutter\u7684\u9879\u76ee\u5982\u4f55\u8bbe\u7f6e\uff1f 8.Flutter\u548cNative\u901a\u4fe1\u7684\u65b9\u5f0f\uff1f\u6709\u54ea\u4e9b\u6b65\u9aa4\uff1f 9.\u63cf\u8ff0Channels\u662f\u5982\u4f55\u5de5\u4f5c\u7684? 10.Flutter\u5982\u4f55\u8c03\u7528Native\u4ee3\u7801\uff1f 11.Native\u5982\u4f55\u8c03\u7528Flutter\u4ee3\u7801\uff1f 12.\u5982\u4f55\u5c06Flutter\u7684\u9875\u9762\u4f5c\u4e3a\u4e00\u4e2a\u9875\u9762\u96c6\u6210\u5230\u73b0\u6709\u9875\u9762\u4e2d? 13.\u70ed\u52a0\u8f7d\u548c\u70ed\u91cd\u542f\u7684\u533a\u522b\uff1f\uff1f 14.Android\u8bc1\u4e66\u7248\u672c\u53f7\u7684\u533a\u522b\uff1f\uff1f\uff1f 15. Flutter\u5b66\u4e60\u8def\u7ebf 1.Flutter\u5f00\u53d1\u76f8\u5173\u5de5\u5177 2.Dart\u57fa\u7840 \u5e38\u89c1\u7684\u6570\u636e\u4f20\u8f93\u7ed3\u6784:XML,JSON,protobuf protobuf\u4f7f\u7528 Widget\u751f\u547d\u5468\u671f Flutter\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f mport package:flutter/foundation.dart ; import package:flutter/widgets.dart ; class LifecycleEventHandler extends WidgetsBindingObserver { LifecycleEventHandler ({ this . resumeCallBack , this . suspendingCallBack }); final AsyncCallback resumeCallBack ; final AsyncCallback suspendingCallBack ; @ override Future Null didChangeAppLifecycleState ( AppLifecycleState state ) async { switch ( state ) { case AppLifecycleState . inactive: case AppLifecycleState . paused: case AppLifecycleState . suspending: await suspendingCallBack (); break ; case AppLifecycleState . resumed: await resumeCallBack (); break ; } } } class AppWidgetState extends State AppWidget { void initState () { super . initState (); WidgetsBinding . instance . addObserver ( new LifecycleEventHandler ( resumeCallback (() = setState ((){})) ); } ... } import package:flutter/services.dart ; SystemChannels . lifecycle . setMessageHandler (( msg ){ debugPrint ( SystemChannels $ msg ); if ( msg == AppLifecycleState . resumed . toString ()) setState ((){}); }); 0 For deeply testing , I think the results are worth for read . If you are curious about which method you should use , just read the below: ( Tested on Android ) There are three methods for LifeCycle solution . WidgetsBindingObserver SystemChannels . lifecycle flutter - android - lifecycle - plugin The main difference between WidgetsBindingObserver and SystemChannels . lifecycle is that WidgetsBindingObserver have more capables If you have a bunch of widgets that need to listen LifeCycle . SystemChannels is more low layer , and used by WidgetsBindingObserver . After several testing , If you use SystemChannels after runApp , and home widget mixin with WidgetsBindingObserver , home widget would be failed , because SystemChannels . lifecycle . setMessageHandler override the home s method. So If you want to use a global , single method , go for SystemChannels . lifecycle , others for WidgetsBindingObserver . And what about the third method ? This is only for Android , and If you must bind your method before runApp , this is the only way to go . 3.Flutter\u57fa\u7840 /// * [DefaultAssetBundle] /// * [NetworkAssetBundle] /// * [rootBundle] /// *[SystemChannels] /// *[WidgetsBindingObserver] /// * [ListView], which handles multiple children in a scrolling list. /// * [GridView], which handles multiple children in a scrolling grid. /// * [PageView], for a scrollable that works page by page. /// * [Scrollable], which handles arbitrary scrolling effects. 4.Flutter\u7b2c\u4e09\u65b9\u67b6\u6784\u5e93 \u7b80\u5355\u7684\u8def\u7531\u5bfc\u822afluro \u83b7\u53d6\u8bbe\u5907\u4fe1\u606f 5.Flutter\u67b6\u6784 6.Flutter\u4f18\u5316 7.Flutter\u76f8\u5173\u9ad8\u7ea7\u5f00\u53d1\u5de5\u5177 2.FluuterUI \u5e93 3.FlutterEngine \u5e93 MVP Flutter: MVP Flutter \u5b66\u4e60\uff1a Dart\u865a\u62df\u673a Flutter\u6846\u67b6\u5c42 flutter\u5e94\u7528\u5c42 Flutter\u5e03\u5c40\u7684\u8ba1\u7b97\u548c\u751f\u547d\u5468\u671f PreferredSizeWidget \u5e38\u7528\u5de5\u5177\u7c7b: https://www.jianshu.com/p/425a7ff9d66e \u4f7f\u7528\u5230\u7684\u6280\u672f\u548c\u9047\u5230\u7684\u5751 \u4f7f\u7528\u5230\u7684\u5de5\u5177: flutter_statusbar connectivity eventbus \u540c\u6b65\u548c\u5f02\u6b65\u7684\u5dee\u5f02 static final EventBus eventBus = new EventBus(); // static final EventBus eventBus = new EventBus(sync: true);//\u4f7f\u7528\u5f02\u6b65\u64cd\u4f5c rxdart sqlite Redux ## \u540e\u53f0DjangoUI [simpleUI](https://gitee.com/tompeppa/simpleui/) [QUICK](https://gitee.com/tompeppa/simpleui/blob/master/QUICK.md) # Android\u5b66\u4e60\u8d44\u6599 ## Android\u539f\u751f\u5b66\u4e60\u8d44\u6599 [open-android](https://github.com/open-android/Android) [MVPArms\u5b98\u65b9\u5feb\u901f\u7ec4\u4ef6\u5316\u65b9\u6848\u5f00\u6e90](https://blog.csdn.net/xJ032w2j4cCjhOW8s8/article/details/80730205) [Android\u539f\u751f\u6743\u9650](https://blog.csdn.net/u013553529/article/details/53167072) [\u7cfb\u7edf\u6743\u9650](https://blog.csdn.net/u013553529/article/details/53167072) [Rx\u5b98\u65b9\u6587\u6863](https://github.com/tbruyelle/RxPermissions) ## \u67b6\u6784 [MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller) [MVP](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter) ## json_to_dart https://javiercbk.github.io/json_to_dart/ [\u81ea\u5b9a\u4e49\u4e00\u4e2a\u65b9\u4fbf\u7684\u70b9\u51fb\u63a7\u4ef6](https://blog.csdn.net/qq_28478281/article/details/84064947): # \u4e24\u4e2a\u6587\u4ef6\u7684\u5f02\u540c import package:flutter/material.dart ; import package:flutter/cupertino.dart ; Dio: https://segmentfault.com/a/1190000015853959 \u5751: https://blog.csdn.net/perfectnihil/article/details/92664198 FlatButton,MaterialButton,CupertinoButton,IconButton,ImageButton \u4f7f\u7528 \u83b7\u53d6\u5c4f\u5e55\u63a7\u4ef6\u5927\u5c0f: https://segmentfault.com/a/1190000015182891 https://juejin.im/post/5c827600f265da2da67c5f06 https://blog.csdn.net/suyie007/article/details/84106543 TextField\u63a7\u4ef6\u4f7f\u7528: https://www.cnblogs.com/ChengYing-Freedom/p/10304959.html https://www.jianshu.com/p/54419a143d70 https://juejin.im/post/5c12250af265da61590b8b20 WillPopScope https://juejin.im/post/5cb46c87e51d456e6479b459 #meta\u7c7b\u7684\u4f7f\u7528 /Users/cuco/flutter/.pub-cache/hosted/pub.dartlang.org/meta-1.1.6/lib/meta.dart # \u7f51\u7edc\u5904\u7406: https://flutter.dev/docs/cookbook/networking/fetch-data #Flutter\u8def\u52b2\u64cd\u4f5c\u5e93 /Users/cuco/flutter/.pub-cache/hosted/pub.dartlang.org/path-1.6.2/lib/path.dart # \u6570\u636e\u5e93 sqflite: ^1.1.6+3 \u66f4\u65b0\u6570\u636e\u5e93: https://github.com/tekartik/sqflite/blob/master/sqflite/doc/migration_example.md \u6570\u636e\u5e93\u64cd\u4f5c: https://github.com/tekartik/sqflite/blob/master/sqflite/doc/opening_db.md#prevent-database-locked-issue \u52a8\u6001\u751f\u6210\u6587\u4ef6: flutter packages pub run build_runner build flutter packages pub run build_runner build --delete-conflicting-outputs # \u6d4b\u8bd5 \u5355\u5143\u6d4b\u8bd5\u3001mockito https://pub.dev/packages/mockito # Mac \u8fde\u63a5\u624b\u673a\u5931\u8d25 rm -rf /var/db/lockdown \u279c iotproject_client git:(master) \u2717 flutter doctor Doctor summary (to see all details, run flutter doctor -v): [\u2713] Flutter (Channel stable, v1.5.4-hotfix.2, on Mac OS X 10.14.3 18D109, locale zh-Hans-CN) \u28fbUnhandled exception: Exception: ideviceinfo returned an error: ERROR: Could not connect to lockdownd, error code -21 # IOS\u771f\u673a\u5b89\u88c5 \u279c iotproject_client git:(master) \u2717 flutter run -d a86c6137ffe625bd1ce35ae0405ed863ae270b2f Launching lib/main.dart on iPhone 6s Plus in debug mode... \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 No valid code signing certificates were found You can connect to your Apple Developer account by signing in with your Apple ID in Xcode and create an iOS Development Certificate as well as a Provisioning Profile for your project by: 1- Open the Flutter project s Xcode target with open ios/Runner.xcworkspace 2- Select the Runner project in the navigator then the Runner target in the project settings 3- In the General tab, make sure a Development Team is selected. You may need to: - Log in with your Apple ID in Xcode first - Ensure you have a valid unique Bundle ID - Register your device with your Apple Developer Account - Let Xcode automatically provision a profile for your app 4- Build or run your project again 5- Trust your newly created Development Certificate on your iOS device via Settings gt; General gt; Device Management gt; [your new certificate] gt; Trust For more information, please visit: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/ AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html Or run on an iOS simulator without code signing \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 No development certificates available to code sign app for device deployment \u279c iotproject_client git:(master) \u2717","title":"Flutter\u5b66\u4e60\u8def\u7ebf"},{"location":"android/flutterdev/flutteradvance/#dart-androidiosweb","text":"","title":"Dart \u5f00\u53d1 Android&amp;IOS&amp;Web"},{"location":"android/flutterdev/flutteradvance/#_1","text":"flutter-go Flutter\u5f00\u6e90\u5e93 Flutterrun\u539f\u7406 \u6e90\u7801\u89e3\u8bfbFlutter tools\u673a\u5236 \u6df1\u5165\u7406\u89e3Flutter\u5e94\u7528\u542f\u52a8 \u5f7b\u5e95\u7406\u89e3\u5b89\u5353\u5e94\u7528\u65e0\u54cd\u5e94\u673a\u5236 Flutter\u524d\u7aef\u7f16\u8bd1frontend_server","title":"\u5e38\u89c1\u5f00\u53d1\u5e93"},{"location":"android/flutterdev/flutteradvance/#_2","text":"1.\u7cfb\u7edf\u8981\u6c42 2.\u8bbe\u7f6eFlutter\u955c\u50cf 3.\u83b7\u53d6FlutterSDK 4.IOS\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e 5.Android\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e 6.\u5982\u4f55\u67e5\u770bMac\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c 7.Flutter\u4f9d\u8d56\u5e93\uff1abash\u3001curl git 2.x mkdir rm unzip which 8.\u8bbe\u7f6eFlutter\u955c\u50cf\uff1abash_profile export PUB_HOSTED_URL=https://pub.flutter-io.cn export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn git clone -b dev https://github.com/flutter/flutter.git export PATH= $PWD/flutter/bin:$PATH cd ./flutter flutter doctor \u4e0a\u6d77\u8d44\u6599\u83b7\u53d6: FLUTTER_STORAGE_BASE_URL: https://mirrors.sjtug.sjtu.edu.cn/ PUB_HOSTED_URL: https://dart-pub.mirrors.sjtug.sjtu.edu.cn/ Flutter in China flutter.cn 9.\u73af\u5883\u53d8\u91cf\u914d\u7f6e 10.\u6253\u5f00IOS\u6a21\u62df\u5668 open -a Simulator 11.\u4f7f\u7528\u547d\u4ee4\u884c\u521b\u5efa\u548c\u8fd0\u884c\u9879\u76ee 12.\u5982\u4f55\u5b89\u88c5Flutter App\u5230\u82f9\u679c\u771f\u673a\u4e0a 1.\u8981\u901a\u8fc7 flutter run \u8fd0\u884c\u5230IOS\u771f\u673a\u4e0a\uff0c\u9700\u8981\u5b89\u88c5\u4e00\u4e0b\u989d\u5916\u7684\u5f00\u53d1\u5de5\u5177\u548c\u4e00\u4e2aApple\u8d26\u53f7\uff0c\u8fd8\u9700\u8981\u7684Xcode\u4e2d\u8bbe\u7f6e 2.\u4f7f\u7528Xcode\u8fd0\u884cFlutter App\u66f4\u7b80\u5355\uff0c\u8fd9\u51e0\u8fd0\u884c\u5c31\u53ef\u4ee5\u4e86 \u5b89\u88c5IOS\u5b89\u88c5\u5de5\u5177: ![pic](../../assets/images/android/flutter/brewiosinstall.png) \u4efb\u4f55\u4e00\u4e2a\u547d\u4ee4\u5931\u8d25\u90fd\u53ef\u4ee5\u8fd0\u884c`brew doctor`\u6765\u6392\u67e5\u9519\u8bef 13.Homebrew \u5b89\u88c5\u4f7f\u7528 14.Flutter\u5f00\u53d1\u5de5\u5177\u4f7f\u7528 15.androidStudio\u7248\u672c\u63a7\u5236 16.Flutter\u73af\u5883\u53d8\u91cf\u3001\u5de5\u5177\u95ee\u9898\u3001\u7248\u672c\u95ee\u9898 Flutter\u73af\u5883\u53d8\u91cf\u3001stable\u3001beta\u3001dev\u3001master Flutter doctor AndroidStudio Xcode \u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u67e5\u770b\u662f\u662f\u5426\u53ef\u4ee5\u8fd0\u884c VPN\u548c\u955c\u50cf 17.Flutter\u9700\u8981\u638c\u63e1\u7684\u5185\u5bb9 1.\u5b66\u4e60Flutter\u9700\u8981\u638c\u63e1\u7684\u57fa\u7840\u77e5\u8bc6\uff1aDart\u3001Android IOS\u57fa\u7840 Dart , Dart\u4e2d\u6587 2.\u5982\u4f55\u4f7f\u7528Flutter\u5305\u548c\u63d2\u4ef6 3.\u5982\u4f55\u7ee7\u7eedFlutter\u5e03\u5c40 4.\u5982\u4f55\u4f7f\u7528Flutter\u8def\u7531\u548c\u5bfc\u822a 5.\u5982\u4f55\u68c0\u6d4b\u7528\u6237\u624b\u52bf\u548c\u4ee5\u53ca\u70b9\u51fb\u4e8b\u4ef6\u5904\u7406 6.\u5982\u4f55\u5bfc\u5165\u548c\u4f7f\u7528Flutter\u8d44\u6e90\u6587\u4ef6 7.\u5982\u4f55\u6253\u5f00\u7b2c\u4e09\u65b9\u5e94\u7528 18.\u6750\u6599\u8bbe\u8ba1 \u6750\u6599\u8bbe\u8ba1 \u5b57\u4f53\u5e93 19.\u5e03\u5c40\u76f8\u5173\u7ec4\u4ef6 RenderObjectWidget SingleChildRenderObjectWidget Opactiy ClipOval ClipRect PhysicalModel Align Padding SizeBox FractionallySizeBox MultiChildRenderObjectWidget Flex Stack Wrap Flow ParentDataWidget Positioned Flexible- Expande 20.Flutter \u751f\u547d\u5468\u671f(\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u3001Widget\u751f\u547d\u5468\u671f) Flutter\u751f\u547d\u5468\u671f\u6309\u7167\u4f7f\u5176\u5212\u5206\u4e3a\u4e09\u4e2a\u4e0d\u540c\u7684\u751f\u547d\u5468\u671f: 1.\u521b\u5efa\u671f createState\u3001initState 2.\u66f4\u65b0\u671f didchangeDependences\u3001build\u3001didUpdateWidget 3.\u9500\u6bc1\u671f deativate\u3001dispose 21.AndroidX\u517c\u5bb9 22.\u5982\u4f55\u6dfb\u52a0\u56fe\u7247\u5360\u4f4d\u7b26 23.\u5982\u4f55\u52a0\u8f7d\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u7247 24.\u5982\u4f55\u52a0\u8f7d\u624b\u673a\u4e0a\u7684\u56fe\u7247 25.\u5b9e\u73b0\u52a8\u753b\u6709\u54ea\u4e9b\u65b9\u5f0f 26.\u8bf4\u660eHero\u6709\u54ea\u4e9b\u5e94\u7528\u573a\u666f 27.Flutter\u5f00\u53d1\u7684\u6280\u5de7\u6709\u54ea\u4e9b\uff1f\uff1f 28.\u5982\u4f55\u8c03\u8bd5flutter\u7684android\u4ee3\u7801 29.\u5982\u4f55\u8c03\u8bd5Flutter\u7684IOS\u4ee3\u7801","title":"\u73af\u5883\u642d\u5efa\u95ee\u9898\uff1f"},{"location":"android/flutterdev/flutteradvance/#flutter","text":"1.Flutter\u6df7\u5408\u5f00\u53d1\u6709\u54ea\u4e9b\u6b65\u9aa4 2.\u521b\u5efa\u4e00\u4e2aFluttermodul\u6709\u54ea\u4e9b\u6b65\u9aa4 3.Android\u5df2\u6709\u9879\u76ee\u4e2d\u96c6\u6210Flutter\u6b65\u9aa4 4.\u73b0\u6709IOS\u4e2d\u96c6\u6210Flutter\u7684\u6b65\u9aa4 5.\u8bf7\u5bf9\u6bd4\u7eafFlutter\u5f00\u53d1\u548c\u6df7\u5408Flutter\u5f00\u53d1\u8c03\u8bd5\u6709\u54ea\u4e9b\u6b65\u9aa4 6.Flutter\u4ee3\u7801\u7684\u8fd0\u884c\u6a21\u5f0f 7.\u5982\u4f55\u6253\u5305\u4e00\u4e2a\u5df2\u7ecf\u96c6\u6210Flutter\u7684\u9879\u76ee\u5982\u4f55\u8bbe\u7f6e\uff1f 8.Flutter\u548cNative\u901a\u4fe1\u7684\u65b9\u5f0f\uff1f\u6709\u54ea\u4e9b\u6b65\u9aa4\uff1f 9.\u63cf\u8ff0Channels\u662f\u5982\u4f55\u5de5\u4f5c\u7684? 10.Flutter\u5982\u4f55\u8c03\u7528Native\u4ee3\u7801\uff1f 11.Native\u5982\u4f55\u8c03\u7528Flutter\u4ee3\u7801\uff1f 12.\u5982\u4f55\u5c06Flutter\u7684\u9875\u9762\u4f5c\u4e3a\u4e00\u4e2a\u9875\u9762\u96c6\u6210\u5230\u73b0\u6709\u9875\u9762\u4e2d? 13.\u70ed\u52a0\u8f7d\u548c\u70ed\u91cd\u542f\u7684\u533a\u522b\uff1f\uff1f 14.Android\u8bc1\u4e66\u7248\u672c\u53f7\u7684\u533a\u522b\uff1f\uff1f\uff1f 15.","title":"Flutter\u6df7\u5408\u5f00\u53d1"},{"location":"android/flutterdev/flutteradvance/#flutter_1","text":"1.Flutter\u5f00\u53d1\u76f8\u5173\u5de5\u5177 2.Dart\u57fa\u7840","title":"Flutter\u5b66\u4e60\u8def\u7ebf"},{"location":"android/flutterdev/flutteradvance/#xmljsonprotobuf","text":"protobuf\u4f7f\u7528","title":"\u5e38\u89c1\u7684\u6570\u636e\u4f20\u8f93\u7ed3\u6784:XML,JSON,protobuf"},{"location":"android/flutterdev/flutteradvance/#widget","text":"Flutter\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f mport package:flutter/foundation.dart ; import package:flutter/widgets.dart ; class LifecycleEventHandler extends WidgetsBindingObserver { LifecycleEventHandler ({ this . resumeCallBack , this . suspendingCallBack }); final AsyncCallback resumeCallBack ; final AsyncCallback suspendingCallBack ; @ override Future Null didChangeAppLifecycleState ( AppLifecycleState state ) async { switch ( state ) { case AppLifecycleState . inactive: case AppLifecycleState . paused: case AppLifecycleState . suspending: await suspendingCallBack (); break ; case AppLifecycleState . resumed: await resumeCallBack (); break ; } } } class AppWidgetState extends State AppWidget { void initState () { super . initState (); WidgetsBinding . instance . addObserver ( new LifecycleEventHandler ( resumeCallback (() = setState ((){})) ); } ... } import package:flutter/services.dart ; SystemChannels . lifecycle . setMessageHandler (( msg ){ debugPrint ( SystemChannels $ msg ); if ( msg == AppLifecycleState . resumed . toString ()) setState ((){}); }); 0 For deeply testing , I think the results are worth for read . If you are curious about which method you should use , just read the below: ( Tested on Android ) There are three methods for LifeCycle solution . WidgetsBindingObserver SystemChannels . lifecycle flutter - android - lifecycle - plugin The main difference between WidgetsBindingObserver and SystemChannels . lifecycle is that WidgetsBindingObserver have more capables If you have a bunch of widgets that need to listen LifeCycle . SystemChannels is more low layer , and used by WidgetsBindingObserver . After several testing , If you use SystemChannels after runApp , and home widget mixin with WidgetsBindingObserver , home widget would be failed , because SystemChannels . lifecycle . setMessageHandler override the home s method. So If you want to use a global , single method , go for SystemChannels . lifecycle , others for WidgetsBindingObserver . And what about the third method ? This is only for Android , and If you must bind your method before runApp , this is the only way to go . 3.Flutter\u57fa\u7840 /// * [DefaultAssetBundle] /// * [NetworkAssetBundle] /// * [rootBundle] /// *[SystemChannels] /// *[WidgetsBindingObserver] /// * [ListView], which handles multiple children in a scrolling list. /// * [GridView], which handles multiple children in a scrolling grid. /// * [PageView], for a scrollable that works page by page. /// * [Scrollable], which handles arbitrary scrolling effects. 4.Flutter\u7b2c\u4e09\u65b9\u67b6\u6784\u5e93 \u7b80\u5355\u7684\u8def\u7531\u5bfc\u822afluro \u83b7\u53d6\u8bbe\u5907\u4fe1\u606f 5.Flutter\u67b6\u6784 6.Flutter\u4f18\u5316 7.Flutter\u76f8\u5173\u9ad8\u7ea7\u5f00\u53d1\u5de5\u5177 2.FluuterUI \u5e93 3.FlutterEngine \u5e93","title":"Widget\u751f\u547d\u5468\u671f"},{"location":"android/flutterdev/flutteradvance/#mvp-flutter","text":"MVP Flutter \u5b66\u4e60\uff1a Dart\u865a\u62df\u673a Flutter\u6846\u67b6\u5c42 flutter\u5e94\u7528\u5c42 Flutter\u5e03\u5c40\u7684\u8ba1\u7b97\u548c\u751f\u547d\u5468\u671f PreferredSizeWidget \u5e38\u7528\u5de5\u5177\u7c7b: https://www.jianshu.com/p/425a7ff9d66e","title":"MVP Flutter:"},{"location":"android/flutterdev/flutteradvance/#_3","text":"\u4f7f\u7528\u5230\u7684\u5de5\u5177: flutter_statusbar connectivity eventbus \u540c\u6b65\u548c\u5f02\u6b65\u7684\u5dee\u5f02 static final EventBus eventBus = new EventBus(); // static final EventBus eventBus = new EventBus(sync: true);//\u4f7f\u7528\u5f02\u6b65\u64cd\u4f5c rxdart sqlite Redux ## \u540e\u53f0DjangoUI [simpleUI](https://gitee.com/tompeppa/simpleui/) [QUICK](https://gitee.com/tompeppa/simpleui/blob/master/QUICK.md) # Android\u5b66\u4e60\u8d44\u6599 ## Android\u539f\u751f\u5b66\u4e60\u8d44\u6599 [open-android](https://github.com/open-android/Android) [MVPArms\u5b98\u65b9\u5feb\u901f\u7ec4\u4ef6\u5316\u65b9\u6848\u5f00\u6e90](https://blog.csdn.net/xJ032w2j4cCjhOW8s8/article/details/80730205) [Android\u539f\u751f\u6743\u9650](https://blog.csdn.net/u013553529/article/details/53167072) [\u7cfb\u7edf\u6743\u9650](https://blog.csdn.net/u013553529/article/details/53167072) [Rx\u5b98\u65b9\u6587\u6863](https://github.com/tbruyelle/RxPermissions) ## \u67b6\u6784 [MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller) [MVP](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter) ## json_to_dart https://javiercbk.github.io/json_to_dart/ [\u81ea\u5b9a\u4e49\u4e00\u4e2a\u65b9\u4fbf\u7684\u70b9\u51fb\u63a7\u4ef6](https://blog.csdn.net/qq_28478281/article/details/84064947): # \u4e24\u4e2a\u6587\u4ef6\u7684\u5f02\u540c import package:flutter/material.dart ; import package:flutter/cupertino.dart ; Dio: https://segmentfault.com/a/1190000015853959 \u5751: https://blog.csdn.net/perfectnihil/article/details/92664198 FlatButton,MaterialButton,CupertinoButton,IconButton,ImageButton \u4f7f\u7528 \u83b7\u53d6\u5c4f\u5e55\u63a7\u4ef6\u5927\u5c0f: https://segmentfault.com/a/1190000015182891 https://juejin.im/post/5c827600f265da2da67c5f06 https://blog.csdn.net/suyie007/article/details/84106543 TextField\u63a7\u4ef6\u4f7f\u7528: https://www.cnblogs.com/ChengYing-Freedom/p/10304959.html https://www.jianshu.com/p/54419a143d70 https://juejin.im/post/5c12250af265da61590b8b20 WillPopScope https://juejin.im/post/5cb46c87e51d456e6479b459 #meta\u7c7b\u7684\u4f7f\u7528 /Users/cuco/flutter/.pub-cache/hosted/pub.dartlang.org/meta-1.1.6/lib/meta.dart # \u7f51\u7edc\u5904\u7406: https://flutter.dev/docs/cookbook/networking/fetch-data #Flutter\u8def\u52b2\u64cd\u4f5c\u5e93 /Users/cuco/flutter/.pub-cache/hosted/pub.dartlang.org/path-1.6.2/lib/path.dart # \u6570\u636e\u5e93 sqflite: ^1.1.6+3 \u66f4\u65b0\u6570\u636e\u5e93: https://github.com/tekartik/sqflite/blob/master/sqflite/doc/migration_example.md \u6570\u636e\u5e93\u64cd\u4f5c: https://github.com/tekartik/sqflite/blob/master/sqflite/doc/opening_db.md#prevent-database-locked-issue \u52a8\u6001\u751f\u6210\u6587\u4ef6: flutter packages pub run build_runner build flutter packages pub run build_runner build --delete-conflicting-outputs # \u6d4b\u8bd5 \u5355\u5143\u6d4b\u8bd5\u3001mockito https://pub.dev/packages/mockito # Mac \u8fde\u63a5\u624b\u673a\u5931\u8d25 rm -rf /var/db/lockdown \u279c iotproject_client git:(master) \u2717 flutter doctor Doctor summary (to see all details, run flutter doctor -v): [\u2713] Flutter (Channel stable, v1.5.4-hotfix.2, on Mac OS X 10.14.3 18D109, locale zh-Hans-CN) \u28fbUnhandled exception: Exception: ideviceinfo returned an error: ERROR: Could not connect to lockdownd, error code -21 # IOS\u771f\u673a\u5b89\u88c5 \u279c iotproject_client git:(master) \u2717 flutter run -d a86c6137ffe625bd1ce35ae0405ed863ae270b2f Launching lib/main.dart on iPhone 6s Plus in debug mode... \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 No valid code signing certificates were found You can connect to your Apple Developer account by signing in with your Apple ID in Xcode and create an iOS Development Certificate as well as a Provisioning Profile for your project by: 1- Open the Flutter project s Xcode target with open ios/Runner.xcworkspace 2- Select the Runner project in the navigator then the Runner target in the project settings 3- In the General tab, make sure a Development Team is selected. You may need to: - Log in with your Apple ID in Xcode first - Ensure you have a valid unique Bundle ID - Register your device with your Apple Developer Account - Let Xcode automatically provision a profile for your app 4- Build or run your project again 5- Trust your newly created Development Certificate on your iOS device via Settings gt; General gt; Device Management gt; [your new certificate] gt; Trust For more information, please visit: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/ AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html Or run on an iOS simulator without code signing \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 No development certificates available to code sign app for device deployment \u279c iotproject_client git:(master) \u2717","title":"\u4f7f\u7528\u5230\u7684\u6280\u672f\u548c\u9047\u5230\u7684\u5751"},{"location":"android/flutterdev/fluttersnip/","text":"FlutterUI\u5f00\u53d1\u91cd\u7528\u4ee3\u7801\u7247\u6bb5 \u5904\u7406Isolate\u4e2d\u7684\u4ee3\u7801\u7247\u6bb5\u9519\u8bef\u5f02\u5e38 Future void getPic () async { // HttpServer.bind(address, port) Isolate . current . addErrorListener ( new RawReceivePort (( dynamic pair ) async { print ( Isolate.current.addErrorListener caught an error ); await _reportError ( ( pair as List String ). first , ( pair as List String ). last , ); }). sendPort ); } //\u5904\u7406\u9519\u8bef\u65e5\u5fd7 void _reportError ( String first , String last ) {} void main () { // \u6307\u5b9a\u8fd0\u884c\u5728\u81ea\u5df1\u7684\u533a\u57df\u4e2d,\u5904\u7406\u5168\u5c40\u7684\u4fe1\u606f runZoned (() async { runApp ( FlutterReduxApp ()); PaintingBinding . instance . imageCache . maximumSize = 100 ; // getPic().then() }, onError: ( Object obj , StackTrace stack ) { // \u53d1\u9001\u9519\u8bef\u662f\u5728\u8fd9\u91cc\u5904\u7406 print ( obj ); print ( stack ); }); } \u52a8\u6001\u4fee\u6539\u72b6\u6001\u680f\u7684\u6837\u5f0f // \u4fee\u6539\u7cfb\u7edf\u72b6\u6001\u680f\u989c\u8272 SystemChrome . setSystemUIOverlayStyle ( SystemUiOverlayStyle ( systemNavigationBarColor: Color ( AppColors . themeColor ), // navigation bar color statusBarColor: Color ( AppColors . themeColor ), // status bar color )); \u5e38\u7528\u6ce8\u89e3 /// Constants for use in metadata annotations. /// /// See also `@deprecated` and `@override` in the `dart:core` library. /// /// Annotations provide semantic information that tools can use to provide a /// better user experience. For example, an IDE might not autocomplete the name /// of a function that s been marked `@deprecated`, or it might display the /// function s name differently. /// /// For information on installing and importing this library, see the /// [meta package on pub.dartlang.org] (http://pub.dartlang.org/packages/meta). /// For examples of using annotations, see /// [Metadata](https://www.dartlang.org/docs/dart-up-and-running/ch02.html#metadata) /// in the language tour. library meta ; const _AlwaysThrows alwaysThrows = const _AlwaysThrows (); const _Checked checked = const _Checked (); const _Experimental experimental = const _Experimental (); const _Factory factory = const _Factory (); const Immutable immutable = const Immutable (); const _IsTest isTest = const _IsTest (); const _IsTestGroup isTestGroup = const _IsTestGroup (); const _Literal literal = const _Literal (); const _MustCallSuper mustCallSuper = const _MustCallSuper (); const _OptionalTypeArgs optionalTypeArgs = const _OptionalTypeArgs (); const _Protected protected = const _Protected (); const Required required = const Required (); const _Virtual virtual = const _Virtual (); const _VisibleForOverriding visibleForOverriding = const _VisibleForOverriding (); const _VisibleForTesting visibleForTesting = const _VisibleForTesting (); \u5e38\u7528\u63a7\u4ef6 SafeArea RoundedRectangleBorder \u914d\u5408 AutomaticKeepAliveClientMixin \u53ef\u4ee5 keep \u4f4f \u4f7f\u7528Intent\u6253\u5f00Android\u539f\u751f\u5e94\u7528 /// \u4e0d\u9000\u51fa Future bool _dialogExitApp ( BuildContext context ) async { if ( Platform . isAndroid ) { AndroidIntent intent = AndroidIntent ( action: android.intent.action.MAIN , category: android.intent.category.HOME , ); await intent . launch (); } return Future . value ( false ); }","title":"\u4ee3\u7801\u7247\u6bb5"},{"location":"android/flutterdev/fluttersnip/#flutterui","text":"","title":"FlutterUI\u5f00\u53d1\u91cd\u7528\u4ee3\u7801\u7247\u6bb5"},{"location":"android/flutterdev/fluttersnip/#isolate","text":"Future void getPic () async { // HttpServer.bind(address, port) Isolate . current . addErrorListener ( new RawReceivePort (( dynamic pair ) async { print ( Isolate.current.addErrorListener caught an error ); await _reportError ( ( pair as List String ). first , ( pair as List String ). last , ); }). sendPort ); } //\u5904\u7406\u9519\u8bef\u65e5\u5fd7 void _reportError ( String first , String last ) {} void main () { // \u6307\u5b9a\u8fd0\u884c\u5728\u81ea\u5df1\u7684\u533a\u57df\u4e2d,\u5904\u7406\u5168\u5c40\u7684\u4fe1\u606f runZoned (() async { runApp ( FlutterReduxApp ()); PaintingBinding . instance . imageCache . maximumSize = 100 ; // getPic().then() }, onError: ( Object obj , StackTrace stack ) { // \u53d1\u9001\u9519\u8bef\u662f\u5728\u8fd9\u91cc\u5904\u7406 print ( obj ); print ( stack ); }); }","title":"\u5904\u7406Isolate\u4e2d\u7684\u4ee3\u7801\u7247\u6bb5\u9519\u8bef\u5f02\u5e38"},{"location":"android/flutterdev/fluttersnip/#_1","text":"// \u4fee\u6539\u7cfb\u7edf\u72b6\u6001\u680f\u989c\u8272 SystemChrome . setSystemUIOverlayStyle ( SystemUiOverlayStyle ( systemNavigationBarColor: Color ( AppColors . themeColor ), // navigation bar color statusBarColor: Color ( AppColors . themeColor ), // status bar color ));","title":"\u52a8\u6001\u4fee\u6539\u72b6\u6001\u680f\u7684\u6837\u5f0f"},{"location":"android/flutterdev/fluttersnip/#_2","text":"/// Constants for use in metadata annotations. /// /// See also `@deprecated` and `@override` in the `dart:core` library. /// /// Annotations provide semantic information that tools can use to provide a /// better user experience. For example, an IDE might not autocomplete the name /// of a function that s been marked `@deprecated`, or it might display the /// function s name differently. /// /// For information on installing and importing this library, see the /// [meta package on pub.dartlang.org] (http://pub.dartlang.org/packages/meta). /// For examples of using annotations, see /// [Metadata](https://www.dartlang.org/docs/dart-up-and-running/ch02.html#metadata) /// in the language tour. library meta ; const _AlwaysThrows alwaysThrows = const _AlwaysThrows (); const _Checked checked = const _Checked (); const _Experimental experimental = const _Experimental (); const _Factory factory = const _Factory (); const Immutable immutable = const Immutable (); const _IsTest isTest = const _IsTest (); const _IsTestGroup isTestGroup = const _IsTestGroup (); const _Literal literal = const _Literal (); const _MustCallSuper mustCallSuper = const _MustCallSuper (); const _OptionalTypeArgs optionalTypeArgs = const _OptionalTypeArgs (); const _Protected protected = const _Protected (); const Required required = const Required (); const _Virtual virtual = const _Virtual (); const _VisibleForOverriding visibleForOverriding = const _VisibleForOverriding (); const _VisibleForTesting visibleForTesting = const _VisibleForTesting ();","title":"\u5e38\u7528\u6ce8\u89e3"},{"location":"android/flutterdev/fluttersnip/#_3","text":"SafeArea RoundedRectangleBorder \u914d\u5408 AutomaticKeepAliveClientMixin \u53ef\u4ee5 keep \u4f4f","title":"\u5e38\u7528\u63a7\u4ef6"},{"location":"android/flutterdev/fluttersnip/#intentandroid","text":"/// \u4e0d\u9000\u51fa Future bool _dialogExitApp ( BuildContext context ) async { if ( Platform . isAndroid ) { AndroidIntent intent = AndroidIntent ( action: android.intent.action.MAIN , category: android.intent.category.HOME , ); await intent . launch (); } return Future . value ( false ); }","title":"\u4f7f\u7528Intent\u6253\u5f00Android\u539f\u751f\u5e94\u7528"},{"location":"android/flutterdev/flutterzone/","text":"Flutter Zone \u4ec0\u4e48\u662fZone \u5982\u4f55\u4f7f\u7528 \u4f18\u5316\u76d1\u63a7 \u5982\u4f55\u4f18\u5316","title":"Flutter Zone"},{"location":"android/flutterdev/flutterzone/#flutter-zone","text":"","title":"Flutter Zone"},{"location":"android/flutterdev/flutterzone/#zone","text":"","title":"\u4ec0\u4e48\u662fZone"},{"location":"android/flutterdev/flutterzone/#_1","text":"","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"android/flutterdev/flutterzone/#_2","text":"","title":"\u4f18\u5316\u76d1\u63a7"},{"location":"android/flutterdev/flutterzone/#_3","text":"","title":"\u5982\u4f55\u4f18\u5316"},{"location":"android/flutterdev/futterStream/","text":"Future Stream Flutter \u6cdb\u578b\u4f7f\u7528 \u4e2d\u65ad\u65f6\u8fd4\u56de\u52a8\u6001\u7c7b\u578bdynamic Completer StreamController SynchronousStreamController /** * A simple stopwatch interface to measure elapsed time. */ class Stopwatch { Flutter stream \u6709\u4e24\u79cd\u7c7b\u578b: single-subscription broadcast \u6982\u8ff0 \u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u4f7f\u7528async\u548cawait\u5173\u952e\u5b57\u3002 \u5982\u4f55\u4f7f\u7528async\u548cawait\u5f71\u54cd\u6267\u884c\u987a\u5e8f\u3002 \u5982\u4f55\u4f7f\u7528\u51fd\u6570\u4e2d\u7684try-catch\u8868\u8fbe\u5f0f\u5904\u7406\u5f02\u6b65\u8c03\u7528\u4e2d\u7684\u9519\u8befasync\u3002 \u4f7f\u7528\u573a\u666f \u901a\u8fc7\u7f51\u7edc\u83b7\u53d6\u6570\u636e\u3002 \u5199\u5165\u6570\u636e\u5e93\u3002 \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002 \u5173\u952e\u672f\u8bed \u540c\u6b65\u64cd\u4f5c\uff1a\u540c\u6b65\u64cd\u4f5c\u963b\u6b62\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u76f4\u5230\u5b8c\u6210\u3002 \u540c\u6b65\u529f\u80fd\uff1a\u540c\u6b65\u529f\u80fd\u4ec5\u6267\u884c\u540c\u6b65\u64cd\u4f5c\u3002 \u5f02\u6b65\u64cd\u4f5c\uff1a\u4e00\u65e6\u542f\u52a8\uff0c\u5f02\u6b65\u64cd\u4f5c\u5141\u8bb8\u5176\u4ed6\u64cd\u4f5c\u5728\u5b8c\u6210\u4e4b\u524d\u6267\u884c\u3002 \u5f02\u6b65\u529f\u80fd\uff1a\u5f02\u6b65\u529f\u80fd\u81f3\u5c11\u6267\u884c\u4e00\u6b21\u5f02\u6b65\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u6267\u884c\u540c\u6b65\u64cd\u4f5c\u3002 \u8fd4\u56de\u503c \u7c7b\u578b\u7684Future\u4ee5type Future lt;T gt;\u7684\u503c\u5b8c\u6210T\u3002\u4f8b\u5982\uff0c\u5177\u6709\u7c7b\u578b\u7684future\u5c06Future lt;String gt;\u751f\u6210\u5b57\u7b26\u4e32\u503c\u3002\u5982\u679cFuture\u4e0d\u80fd\u4ea7\u751f\u53ef\u7528\u4ef7\u503c\uff0c\u90a3\u4e48\u672a\u6765\u7684\u7c7b\u578b\u5c31\u662f Future lt;void gt;\u3002 \u6e90\u7801\u5206\u6790 1.\u5206\u6790Futur\u6e90\u7801\u8c03\u7528\u8fc7\u7a0b\uff0c Future.delayed(Duration(milliseconds: 500)) 2.\u8c03\u52a8\u7cfb\u7edf Timer \u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570 3.\u65b0\u5efa\u4e00\u4e2aFutur\u5b9e\u4f8b\u7c7b _Future 4.\u8c03\u52a8\u76d1\u542c\u94fe 5.\u8c03\u7528\u7cfb\u7edfTimer\u6267\u884c\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u5728 Zone \u4e2d\u5b8c\u6210\u5f02\u6b65\u64cd\u4f5c 6.\u6267\u884c\u76f8\u5173\u7684\u4ee3\u7801\u5b8c\u6210\u4e4b\u540e\u8c03\u7528 _FutureListener \u5bf9\u8c61\u9010\u5c42\u8c03\u7528\u94fe\u5f0f\u65b9\u6cd5 Future . delayed ( Duration ( milliseconds: 500 )) . then (( value ) { print ( won t reach here ); }) // Future completes with an error. . whenComplete ( () = print ( reaches here )) // Future completes with the same error. . then (( _ ) = print ( won t reach here )) // Future completes with the same error. . catchError (( error ) {}) . whenComplete (() {}); \u521b\u5efa\u4e00\u4e2a\u7cfb\u7edf\u7ea7\u522b\u7684\u5012\u8ba1\u65f6\u8fdb\u884c\u8ba1\u65f6\u529f\u80fd\uff0c\u5728 Zone \u533a\u57df\u4e2d\u7ee7\u7eed\u5f02\u6b65\u5904\u7406 [Dart Zone\u4f7f\u7528] factory Timer ( Duration duration , void callback ()) { if ( Zone . current == Zone . root ) { // No need to bind the callback. We know that the root s timer will // be invoked in the root zone. return Zone . current . createTimer ( duration , callback ); } return Zone . current . createTimer ( duration , Zone . current . bindCallbackGuarded ( callback )); } \u65b0\u5efa\u4e00\u4e2aFutur\u5b9e\u4f8b\u7c7b _Future factory Future . delayed ( Duration duration , [ FutureOr T computation ()]) { _Future T result = new _Future T (); new Timer ( duration , () { if ( computation == null ) { result . _complete ( null ); } else { try { result . _complete ( computation ()); } catch ( e , s ) { _completeWithErrorCallback ( result , e , s ); } } }); return result ; } void _complete ( FutureOr T value ) { assert ( ! _isComplete ); if ( value is Future T ) { if ( value is _Future T ) { _chainCoreFuture ( value , this ); } else { _chainForeignFuture ( value , this ); } } else { _FutureListener listeners = _removeListeners (); _setValue ( value ); _propagateToListeners ( this , listeners ); } } \u5728\u94fe\u5f0f\u8c03\u7528\u4e2d\uff0c\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a FutureOr \u5bf9\u8c61\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u8c03\u7528\u7684\u5bf9\u8c61\uff0c\u5e76\u6dfb\u52a0\u5f53\u524d\u8c03\u7528\u5230\u4e0a\u4e00\u6b21\u8c03\u7528\u7684\u76d1\u542c\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u4e2d _thenNoZoneRegistration ,\u5728\u8ba1\u7b97\u7ed3\u679c\u5b8c\u6210\u4e4b\u540e\uff0c\u9010\u5c42\u8fd4\u56de\u8c03\u7528\u76d1\u542c\u5bf9\u8c61\u8fdb\u884c\u5904\u7406 _FutureListener Future R then R ( FutureOr R f ( T value ), { Function onError }) { Zone currentZone = Zone . current ; /* \u5224\u65ad\u5f53\u524d\u7684`Zone`\u662f\u5426\u5728`rootZone`\u4e2d */ if ( ! identical ( currentZone , _rootZone )) { f = currentZone . registerUnaryCallback FutureOr R , T ( f ); if ( onError != null ) { // In checked mode, this checks that onError is assignable to one of: // dynamic Function(Object) // dynamic Function(Object, StackTrace) onError = _registerErrorHandler ( onError , currentZone ); } } return _thenNoZoneRegistration R ( f , onError ); } // This method is used by async/await. Future E _thenNoZoneRegistration E ( FutureOr E f ( T value ), Function onError ) { _Future E result = new _Future E (); _addListener ( new _FutureListener T , E . then ( result , f , onError )); return result ; } Stream \u5e38\u7528\u7684\u5173\u952e\u5b57: first last single firstWhere() lastWhere() singleWhere(). skip() skipWhile() take() takeWhile() where(). transform factory Timer ( Duration duration , void callback ()) { if ( Zone . current == Zone . root ) { // No need to bind the callback. We know that the root s timer will // be invoked in the root zone. return Zone . current . createTimer ( duration , callback ); } return Zone . current . createTimer ( duration , Zone . current . bindCallbackGuarded ( callback )); } Dart Zone\u4f7f\u7528 \u8bbe\u7f6e\u5f53\u524d\u533a\u57df\u9519\u8bef\u56de\u8c03 /* \u5168\u5c40Isolate\u9519\u8bef\u5904\u7406 */ AsyncError replacement = Zone . current . errorCallback ( error , stackTrace ); /* \u83b7\u53d6\u8ddfroot */ Zone . root \u5224\u65ad\u5f53\u524d\u7684 Zone \u662f\u5426\u4e3a\u6839 root if ( ! identical ( Zone . current , _rootZone )) { AsyncError replacement = Zone . current . errorCallback ( error , stackTrace ); if ( replacement != null ) { error = _nonNullError ( replacement . error ); stackTrace = replacement . stackTrace ; } } \u53c2\u8003\u8fde\u63a5 \u751f\u6210\u5668\u4f7f\u7528 async-await futures-error-handling stream RxDart github repo Asynchronous Programming: Streams Single-Subscription vs. Broadcast Streams Creating Streams in Dart Testing Streams: Stream Matchers","title":"Future&Stream"},{"location":"android/flutterdev/futterStream/#future-stream","text":"Flutter \u6cdb\u578b\u4f7f\u7528 \u4e2d\u65ad\u65f6\u8fd4\u56de\u52a8\u6001\u7c7b\u578bdynamic Completer StreamController SynchronousStreamController /** * A simple stopwatch interface to measure elapsed time. */ class Stopwatch { Flutter stream \u6709\u4e24\u79cd\u7c7b\u578b: single-subscription broadcast","title":"Future &amp; Stream"},{"location":"android/flutterdev/futterStream/#_1","text":"\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u4f7f\u7528async\u548cawait\u5173\u952e\u5b57\u3002 \u5982\u4f55\u4f7f\u7528async\u548cawait\u5f71\u54cd\u6267\u884c\u987a\u5e8f\u3002 \u5982\u4f55\u4f7f\u7528\u51fd\u6570\u4e2d\u7684try-catch\u8868\u8fbe\u5f0f\u5904\u7406\u5f02\u6b65\u8c03\u7528\u4e2d\u7684\u9519\u8befasync\u3002","title":"\u6982\u8ff0"},{"location":"android/flutterdev/futterStream/#_2","text":"\u901a\u8fc7\u7f51\u7edc\u83b7\u53d6\u6570\u636e\u3002 \u5199\u5165\u6570\u636e\u5e93\u3002 \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002","title":"\u4f7f\u7528\u573a\u666f"},{"location":"android/flutterdev/futterStream/#_3","text":"\u540c\u6b65\u64cd\u4f5c\uff1a\u540c\u6b65\u64cd\u4f5c\u963b\u6b62\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u76f4\u5230\u5b8c\u6210\u3002 \u540c\u6b65\u529f\u80fd\uff1a\u540c\u6b65\u529f\u80fd\u4ec5\u6267\u884c\u540c\u6b65\u64cd\u4f5c\u3002 \u5f02\u6b65\u64cd\u4f5c\uff1a\u4e00\u65e6\u542f\u52a8\uff0c\u5f02\u6b65\u64cd\u4f5c\u5141\u8bb8\u5176\u4ed6\u64cd\u4f5c\u5728\u5b8c\u6210\u4e4b\u524d\u6267\u884c\u3002 \u5f02\u6b65\u529f\u80fd\uff1a\u5f02\u6b65\u529f\u80fd\u81f3\u5c11\u6267\u884c\u4e00\u6b21\u5f02\u6b65\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u6267\u884c\u540c\u6b65\u64cd\u4f5c\u3002","title":"\u5173\u952e\u672f\u8bed"},{"location":"android/flutterdev/futterStream/#_4","text":"\u7c7b\u578b\u7684Future\u4ee5type Future lt;T gt;\u7684\u503c\u5b8c\u6210T\u3002\u4f8b\u5982\uff0c\u5177\u6709\u7c7b\u578b\u7684future\u5c06Future lt;String gt;\u751f\u6210\u5b57\u7b26\u4e32\u503c\u3002\u5982\u679cFuture\u4e0d\u80fd\u4ea7\u751f\u53ef\u7528\u4ef7\u503c\uff0c\u90a3\u4e48\u672a\u6765\u7684\u7c7b\u578b\u5c31\u662f Future lt;void gt;\u3002","title":"\u8fd4\u56de\u503c"},{"location":"android/flutterdev/futterStream/#_5","text":"1.\u5206\u6790Futur\u6e90\u7801\u8c03\u7528\u8fc7\u7a0b\uff0c Future.delayed(Duration(milliseconds: 500)) 2.\u8c03\u52a8\u7cfb\u7edf Timer \u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570 3.\u65b0\u5efa\u4e00\u4e2aFutur\u5b9e\u4f8b\u7c7b _Future 4.\u8c03\u52a8\u76d1\u542c\u94fe 5.\u8c03\u7528\u7cfb\u7edfTimer\u6267\u884c\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u5728 Zone \u4e2d\u5b8c\u6210\u5f02\u6b65\u64cd\u4f5c 6.\u6267\u884c\u76f8\u5173\u7684\u4ee3\u7801\u5b8c\u6210\u4e4b\u540e\u8c03\u7528 _FutureListener \u5bf9\u8c61\u9010\u5c42\u8c03\u7528\u94fe\u5f0f\u65b9\u6cd5 Future . delayed ( Duration ( milliseconds: 500 )) . then (( value ) { print ( won t reach here ); }) // Future completes with an error. . whenComplete ( () = print ( reaches here )) // Future completes with the same error. . then (( _ ) = print ( won t reach here )) // Future completes with the same error. . catchError (( error ) {}) . whenComplete (() {}); \u521b\u5efa\u4e00\u4e2a\u7cfb\u7edf\u7ea7\u522b\u7684\u5012\u8ba1\u65f6\u8fdb\u884c\u8ba1\u65f6\u529f\u80fd\uff0c\u5728 Zone \u533a\u57df\u4e2d\u7ee7\u7eed\u5f02\u6b65\u5904\u7406 [Dart Zone\u4f7f\u7528] factory Timer ( Duration duration , void callback ()) { if ( Zone . current == Zone . root ) { // No need to bind the callback. We know that the root s timer will // be invoked in the root zone. return Zone . current . createTimer ( duration , callback ); } return Zone . current . createTimer ( duration , Zone . current . bindCallbackGuarded ( callback )); } \u65b0\u5efa\u4e00\u4e2aFutur\u5b9e\u4f8b\u7c7b _Future factory Future . delayed ( Duration duration , [ FutureOr T computation ()]) { _Future T result = new _Future T (); new Timer ( duration , () { if ( computation == null ) { result . _complete ( null ); } else { try { result . _complete ( computation ()); } catch ( e , s ) { _completeWithErrorCallback ( result , e , s ); } } }); return result ; } void _complete ( FutureOr T value ) { assert ( ! _isComplete ); if ( value is Future T ) { if ( value is _Future T ) { _chainCoreFuture ( value , this ); } else { _chainForeignFuture ( value , this ); } } else { _FutureListener listeners = _removeListeners (); _setValue ( value ); _propagateToListeners ( this , listeners ); } } \u5728\u94fe\u5f0f\u8c03\u7528\u4e2d\uff0c\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a FutureOr \u5bf9\u8c61\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u8c03\u7528\u7684\u5bf9\u8c61\uff0c\u5e76\u6dfb\u52a0\u5f53\u524d\u8c03\u7528\u5230\u4e0a\u4e00\u6b21\u8c03\u7528\u7684\u76d1\u542c\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\u4e2d _thenNoZoneRegistration ,\u5728\u8ba1\u7b97\u7ed3\u679c\u5b8c\u6210\u4e4b\u540e\uff0c\u9010\u5c42\u8fd4\u56de\u8c03\u7528\u76d1\u542c\u5bf9\u8c61\u8fdb\u884c\u5904\u7406 _FutureListener Future R then R ( FutureOr R f ( T value ), { Function onError }) { Zone currentZone = Zone . current ; /* \u5224\u65ad\u5f53\u524d\u7684`Zone`\u662f\u5426\u5728`rootZone`\u4e2d */ if ( ! identical ( currentZone , _rootZone )) { f = currentZone . registerUnaryCallback FutureOr R , T ( f ); if ( onError != null ) { // In checked mode, this checks that onError is assignable to one of: // dynamic Function(Object) // dynamic Function(Object, StackTrace) onError = _registerErrorHandler ( onError , currentZone ); } } return _thenNoZoneRegistration R ( f , onError ); } // This method is used by async/await. Future E _thenNoZoneRegistration E ( FutureOr E f ( T value ), Function onError ) { _Future E result = new _Future E (); _addListener ( new _FutureListener T , E . then ( result , f , onError )); return result ; }","title":"\u6e90\u7801\u5206\u6790"},{"location":"android/flutterdev/futterStream/#stream","text":"\u5e38\u7528\u7684\u5173\u952e\u5b57: first last single firstWhere() lastWhere() singleWhere(). skip() skipWhile() take() takeWhile() where(). transform factory Timer ( Duration duration , void callback ()) { if ( Zone . current == Zone . root ) { // No need to bind the callback. We know that the root s timer will // be invoked in the root zone. return Zone . current . createTimer ( duration , callback ); } return Zone . current . createTimer ( duration , Zone . current . bindCallbackGuarded ( callback )); }","title":"Stream"},{"location":"android/flutterdev/futterStream/#dart-zone","text":"\u8bbe\u7f6e\u5f53\u524d\u533a\u57df\u9519\u8bef\u56de\u8c03 /* \u5168\u5c40Isolate\u9519\u8bef\u5904\u7406 */ AsyncError replacement = Zone . current . errorCallback ( error , stackTrace ); /* \u83b7\u53d6\u8ddfroot */ Zone . root \u5224\u65ad\u5f53\u524d\u7684 Zone \u662f\u5426\u4e3a\u6839 root if ( ! identical ( Zone . current , _rootZone )) { AsyncError replacement = Zone . current . errorCallback ( error , stackTrace ); if ( replacement != null ) { error = _nonNullError ( replacement . error ); stackTrace = replacement . stackTrace ; } }","title":"Dart Zone\u4f7f\u7528"},{"location":"android/flutterdev/futterStream/#_6","text":"\u751f\u6210\u5668\u4f7f\u7528 async-await futures-error-handling stream RxDart github repo Asynchronous Programming: Streams Single-Subscription vs. Broadcast Streams Creating Streams in Dart Testing Streams: Stream Matchers","title":"\u53c2\u8003\u8fde\u63a5"},{"location":"android/flutterdev/isolatedev/","text":"Flutter ISOlate \u4f7f\u7528 Flutter \u5b66\u4e60\u8d44\u6e90 \u4ec0\u4e48\u662fISOlate 1.\u4e00\u4e2a\u72ec\u7acb\u7684DART\u6267\u884c\u4e0a\u4e0b\u6587\u3002\u6240\u6709\u7684DART\u4ee3\u7801\u90fd\u8fd0\u884c\u5728 ISOlate \u4e2d\uff0c\u4ee3\u7801\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u548c\u503c\u3002\u90fd\u662f\u5728\u4e00\u4e2aISOlate\u4e2d\u8fd0\u884c\u3002 2.\u4e0d\u540c\u7684isolates\u53ef\u4ee5\u901a\u8fc7ReceivePort/SendPort\u8fdb\u884c\u901a\u4fe1\u3002 3. isolate \u5bf9\u8c61\u662f\u5bf9ISOlate\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u901a\u5e38\u548c\u5f53\u524d\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u3002\u5b83\u4ee3\u8868\u5e76\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u53e6\u4e00\u4e2aISOlate\u3002 4.\u751f\u6210\u65b0ISOlate\u65f6\uff0c\u5c06\u8fd0\u884c\u4ee3\u7801\u9694\u79bb\u5728\u5176\u81ea\u5df1\u7684\u4e8b\u4ef6\u5faa\u73af\u4e2d\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u8fd0\u884c\u8f83\u5c0f\u7684\u4efb\u52a1\u5728\u5d4c\u5957\u7684\u5fae\u4efb\u52a1\u961f\u5217\u4e2d\u3002 5. isolate \u5bf9\u8c61\u5141\u8bb8\u5176\u4ed6\u9694\u79bb\u5bf9\u8c61\u63a7\u5236\u4e8b\u4ef6\u5faa\u73af\u5b83\u6240\u4ee3\u8868\u7684\u9694\u79bb\u7269\uff0c\u4e3a\u4e86\u68c0\u67e5 ISOlate \uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u6682\u505cISOlate\u6216\u83b7ISOlate\u65f6\u7684\u4e8b\u4ef6\u6709\u4e00\u4e2a\u672a\u5bdf\u89c9\u7684\u9519\u8bef\u3002 6.[ControlPort]\u8bc6\u522b\u5e76\u5141\u8bb8\u63a7\u5236ISOlate\uff0c\u4ee5\u53ca[PauseCapability]\u548c[TermineCapability]\u4fdd\u62a4\u8bbf\u95ee\u4e00\u4e9b\u63a7\u5236\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5728\u6ca1\u6709[pause]\uff0c\u65e0\u6548\u3002 7.isolate\u64cd\u4f5c\u63d0\u4f9b\u7684\u201cisolate\u201d\u5bf9\u8c61\u5c06\u5177\u6709\u63a7\u5236\u7aef\u53e3\u548c\u63a7\u5236ISOlate\u6240\u9700\u7684\u529f\u80fd\u3002\u53ef\u4ee5\u5728\u6ca1\u6709\u8fd9\u4e9b\u80fd\u529b\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u65b0\u7684\u9694\u79bb\u5bf9\u8c61\u5982\u6709\u5fc5\u8981\uff0c\u4f7f\u7528[isolate.isolate]\u6784\u9020\u51fd\u6570\u3002 8.isolate\u5bf9\u8c61\u4e0d\u80fd\u901a\u8fc7\u201csendport\u201d\u53d1\u9001\uff0c\u4f46 ControlPort \u548c PauseCapability \u53ef\u4ee5\u88ab\u53d1\u9001\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u529f\u80fd\u3002 \u5982\u4f55\u521b\u5efa ISOlate \u5982\u4f55\u8bbf\u95ee\u548c\u4f20\u9012\u53c2\u6570 \u5982\u4f55\u76d1\u63a7 \u5982\u4f55\u4f18\u5316 \u5f53\u524d\u7684ISOlate\u548c\u521b\u5efa\u51fa\u6765\u7684Isolate\u6709\u4ec0\u4e48\u533a\u522b \u5982\u4f55\u63a7\u5236\u548c\u4f7f\u7528\u5176\u4ed6ISOlate \u4ec0\u4e48\u662f\u5fae\u4efb\u52a1 Flutter\u9519\u8bef\u5904\u7406 Android\u591a\u8fdb\u7a0b\uff0c\u5185\u5b58\u7ba1\u7406 1.UI\u8fdb\u7a0b\u548c\u540e\u53f0\u8fdb\u7a0b\u5206\u79bb\uff0c\u540e\u7aef\u8fdb\u7a0b\uff0c\u6301\u7eed\u7684\u63d0\u4f9b\u670d\u52a1 2.\u80fd\u591f\u51cf\u8f7bUI\u8fdb\u7a0b\u5728\u7684\u5185\u5b58\u538b\u529b\uff0c\u907f\u514d\u5185\u5b58\u6ea2\u51fa\u548c\u6cc4\u6f0f(\u4e00\u822c\u7cfb\u7edf\u63d0\u4f9b\u7684\u5185\u5b58\u4e3a32M,64M,128M) \u5de7\u7528Android\u591a\u8fdb\u7a0b\uff0c\u5fae\u4fe1\uff0c\u5fae\u535a\u7b49\u4e3b\u6d41App\u90fd\u5728\u7528 Android\u5185\u5b58\u4f18\u5316\u6742\u8c08 Android\u5185\u5b58\u7ba1\u7406 akcanary AndroidExcludedRefs fresco \u4f18\u5316\u5b89\u5353\u5e94\u7528\u5185\u5b58\u7684\u795e\u79d8\u65b9\u6cd5\u4ee5\u53ca\u80cc\u540e\u7684\u539f\u7406 Android\u6027\u80fd\u4f18\u5316\u4e4b\u5185\u5b58\u7bc7 \u591a\u8fdb\u7a0b\u8fdb\u7a0b\u7ba1\u7406\u5de5\u5177 \u8fdb\u7a0b\u67e5\u770b\u5de5\u5177 \u5f00\u53d1\u8005\u9009\u9879\u4e2d\u67e5\u770b demoAIDL \u8fdb\u7a0b\u4fdd\u6d3b \u957f\u8fde\u63a5 typedef OnProgressListener = void Function ( double completed , double total ); typedef OnResultListener = void Function ( String result ); // An encapsulation of a large amount of synchronous processing. // // The choice of JSON parsing here is meant as an example that might surface // in real-world applications. class Calculator { Calculator ({ @ required this . onProgressListener , @ required this . onResultListener , String data }) : assert ( onProgressListener != null ), assert ( onResultListener != null ), // In order to keep the example files smaller, we cheat a little and // replicate our small json string into a 10,000-element array. _data = _replicateJson ( data , 10000 ); final OnProgressListener onProgressListener ; final OnResultListener onResultListener ; final String _data ; // This example assumes that the number of objects to parse is known in // advance. In a real-world situation, this might not be true; in that case, // the app might choose to display an indeterminate progress indicator. static const int _NUM_ITEMS = 110000 ; static const int _NOTIFY_INTERVAL = 1000 ; // Run the computation associated with this Calculator. void run () { int i = 0 ; final JsonDecoder decoder = JsonDecoder ( ( dynamic key , dynamic value ) { if ( key is int i ++ % _NOTIFY_INTERVAL == 0 ) onProgressListener ( i . toDouble (), _NUM_ITEMS . toDouble ()); return value ; } ); try { final List dynamic result = decoder . convert ( _data ); final int n = result . length ; onResultListener ( Decoded $ n results ); } catch ( e , stack ) { print ( Invalid JSON file: $ e ); print ( stack ); } } static String _replicateJson ( String data , int count ) { final StringBuffer buffer = StringBuffer ().. write ( [ ); for ( int i = 0 ; i count ; i ++ ) { buffer . write ( data ); if ( i count - 1 ) buffer . write ( , ); } buffer . write ( ] ); return buffer . toString (); } } // The current state of the calculation. enum CalculationState { idle , loading , calculating } // Structured message to initialize the spawned isolate. class CalculationMessage { CalculationMessage ( this . data , this . sendPort ); String data ; SendPort sendPort ; } // A manager for the connection to a spawned isolate. // // Isolates communicate with each other via ReceivePorts and SendPorts. // This class manages these ports and maintains state related to the // progress of the background computation. class CalculationManager { CalculationManager ({ @ required this . onProgressListener , @ required this . onResultListener }) : assert ( onProgressListener != null ), assert ( onResultListener != null ), _receivePort = ReceivePort () { _receivePort . listen ( _handleMessage ); } CalculationState _state = CalculationState . idle ; CalculationState get state = _state ; bool get isRunning = _state != CalculationState . idle ; double _completed = 0.0 ; double _total = 1.0 ; final OnProgressListener onProgressListener ; final OnResultListener onResultListener ; // Start the background computation. // // Does nothing if the computation is already running. void start () { if ( ! isRunning ) { _state = CalculationState . loading ; _runCalculation (); } } // Stop the background computation. // // Kills the isolate immediately, if spawned. Does nothing if the // computation is not running. void stop () { if ( isRunning ) { _state = CalculationState . idle ; if ( _isolate != null ) { _isolate . kill ( priority: Isolate . immediate ); _isolate = null ; _completed = 0.0 ; _total = 1.0 ; } } } final ReceivePort _receivePort ; Isolate _isolate ; void _runCalculation () { // Load the JSON string. This is done in the main isolate because spawned // isolates do not have access to the root bundle. However, the loading // process is asynchronous, so the UI will not block while the file is // loaded. rootBundle . loadString ( services/data.json ). then void (( String data ) { if ( isRunning ) { final CalculationMessage message = CalculationMessage ( data , _receivePort . sendPort ); // Spawn an isolate to JSON-parse the file contents. The JSON parsing // is synchronous, so if done in the main isolate, the UI would block. Isolate . spawn CalculationMessage ( _calculate , message ). then void (( Isolate isolate ) { if ( ! isRunning ) { isolate . kill ( priority: Isolate . immediate ); } else { _state = CalculationState . calculating ; _isolate = isolate ; } }); } }); } void _handleMessage ( dynamic message ) { if ( message is List double ) { _completed = message [ 0 ]; _total = message [ 1 ]; onProgressListener ( _completed , _total ); } else if ( message is String ) { _completed = 0.0 ; _total = 1.0 ; _isolate = null ; _state = CalculationState . idle ; onResultListener ( message ); } } // Main entry point for the spawned isolate. // // This entry point must be static, and its (single) argument must match // the message passed in Isolate.spawn above. Typically, some part of the // message will contain a SendPort so that the spawned isolate can // communicate back to the main isolate. // // Static and global variables are initialized anew in the spawned isolate, // in a separate memory space. static void _calculate ( CalculationMessage message ) { final SendPort sender = message . sendPort ; final Calculator calculator = Calculator ( onProgressListener: ( double completed , double total ) { sender . send ( double [ completed , total ]); }, onResultListener: sender . send , data: message . data , ); calculator . run (); } } // Main app widget. // // The app shows a simple UI that allows control of the background computation, // as well as an animation to illustrate that the UI does not block while this // computation is performed. // // This is a StatefulWidget in order to hold the CalculationManager and // the AnimationController for the running animation. class IsolateExampleWidget extends StatefulWidget { @ override IsolateExampleState createState () = IsolateExampleState (); } // Main application state. class IsolateExampleState extends State StatefulWidget with SingleTickerProviderStateMixin { String _status = Idle ; String _label = Start ; String _result = ; double _progress = 0.0 ; AnimationController _animation ; CalculationManager _calculationManager ; @ override void initState () { super . initState (); _animation = AnimationController ( duration: const Duration ( milliseconds: 3600 ), vsync: this , ).. repeat (); _calculationManager = CalculationManager ( onProgressListener: _handleProgressUpdate , onResultListener: _handleResult , ); } @ override void dispose () { _animation . dispose (); super . dispose (); } @ override Widget build ( BuildContext context ) { return Material ( child: Column ( mainAxisAlignment: MainAxisAlignment . spaceAround , children: Widget [ RotationTransition ( turns: _animation , child: Container ( width: 120.0 , height: 120.0 , color: const Color ( 0xFF882222 ), ), ), Opacity ( opacity: _calculationManager . isRunning ? 1.0 : 0.0 , child: CircularProgressIndicator ( value: _progress ), ), Text ( _status ), Center ( child: RaisedButton ( child: Text ( _label ), onPressed: _handleButtonPressed , ), ), Text ( _result ), ], ), ); } void _handleProgressUpdate ( double completed , double total ) { _updateState ( , completed / total ); } void _handleResult ( String result ) { _updateState ( result , 0.0 ); } void _handleButtonPressed () { if ( _calculationManager . isRunning ) _calculationManager . stop (); else _calculationManager . start (); _updateState ( , 0.0 ); } String _getStatus ( CalculationState state ) { switch ( state ) { case CalculationState . loading: return Loading... ; case CalculationState . calculating: return In Progress ; case CalculationState . idle: default : return Idle ; } } void _updateState ( String result , double progress ) { setState (() { _result = result ; _progress = progress ; _label = _calculationManager . isRunning ? Stop : Start ; _status = _getStatus ( _calculationManager . state ); }); } } void main () { runApp ( MaterialApp ( home: IsolateExampleWidget ())); } { _id : 57112806d874e9e6df7099d4 , index : 0 , guid : 77dc6167-2351-4a64-a603-aceaff115432 , isActive : false , balance : $1,316.41 , picture : http://placehold.it/32x32 , age : 21 , eyeColor : brown , name : Marta Hartman , gender : female , company : EXAMPLE , email : martahartman@example.com , phone : +1 (555) 555-2328 , address : 463 Temple Court, Brandywine, Kansas, 1113 , about : Incididunt commodo sunt commodo nulla adipisicing duis aute enim aute minim reprehenderit aute consectetur. Eu laborum esse aute laborum aute. Tempor in cillum exercitation aliqua velit quis incididunt esse ea nisi. Cillum pariatur reprehenderit est nisi nisi exercitation.\\r\\n , registered : 2014-01-18T12:32:22 +08:00 , latitude : 4.101477 , longitude : 39.153115 , tags : [ pariatur , sit , sint , ex , minim , veniam , ullamco ], friends : [ { id : 0 , name : Tricia Guerra }, { id : 1 , name : Paula Dillard }, { id : 2 , name : Ursula Stout } ], greeting : Hello, Marta Hartman! You have 4 unread messages. , favoriteFruit : strawberry }","title":"ISOlate\u4f7f\u7528"},{"location":"android/flutterdev/isolatedev/#flutter-isolate","text":"Flutter \u5b66\u4e60\u8d44\u6e90","title":"Flutter ISOlate \u4f7f\u7528"},{"location":"android/flutterdev/isolatedev/#isolate","text":"1.\u4e00\u4e2a\u72ec\u7acb\u7684DART\u6267\u884c\u4e0a\u4e0b\u6587\u3002\u6240\u6709\u7684DART\u4ee3\u7801\u90fd\u8fd0\u884c\u5728 ISOlate \u4e2d\uff0c\u4ee3\u7801\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u548c\u503c\u3002\u90fd\u662f\u5728\u4e00\u4e2aISOlate\u4e2d\u8fd0\u884c\u3002 2.\u4e0d\u540c\u7684isolates\u53ef\u4ee5\u901a\u8fc7ReceivePort/SendPort\u8fdb\u884c\u901a\u4fe1\u3002 3. isolate \u5bf9\u8c61\u662f\u5bf9ISOlate\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u901a\u5e38\u548c\u5f53\u524d\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u3002\u5b83\u4ee3\u8868\u5e76\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u53e6\u4e00\u4e2aISOlate\u3002 4.\u751f\u6210\u65b0ISOlate\u65f6\uff0c\u5c06\u8fd0\u884c\u4ee3\u7801\u9694\u79bb\u5728\u5176\u81ea\u5df1\u7684\u4e8b\u4ef6\u5faa\u73af\u4e2d\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u8fd0\u884c\u8f83\u5c0f\u7684\u4efb\u52a1\u5728\u5d4c\u5957\u7684\u5fae\u4efb\u52a1\u961f\u5217\u4e2d\u3002 5. isolate \u5bf9\u8c61\u5141\u8bb8\u5176\u4ed6\u9694\u79bb\u5bf9\u8c61\u63a7\u5236\u4e8b\u4ef6\u5faa\u73af\u5b83\u6240\u4ee3\u8868\u7684\u9694\u79bb\u7269\uff0c\u4e3a\u4e86\u68c0\u67e5 ISOlate \uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u6682\u505cISOlate\u6216\u83b7ISOlate\u65f6\u7684\u4e8b\u4ef6\u6709\u4e00\u4e2a\u672a\u5bdf\u89c9\u7684\u9519\u8bef\u3002 6.[ControlPort]\u8bc6\u522b\u5e76\u5141\u8bb8\u63a7\u5236ISOlate\uff0c\u4ee5\u53ca[PauseCapability]\u548c[TermineCapability]\u4fdd\u62a4\u8bbf\u95ee\u4e00\u4e9b\u63a7\u5236\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5728\u6ca1\u6709[pause]\uff0c\u65e0\u6548\u3002 7.isolate\u64cd\u4f5c\u63d0\u4f9b\u7684\u201cisolate\u201d\u5bf9\u8c61\u5c06\u5177\u6709\u63a7\u5236\u7aef\u53e3\u548c\u63a7\u5236ISOlate\u6240\u9700\u7684\u529f\u80fd\u3002\u53ef\u4ee5\u5728\u6ca1\u6709\u8fd9\u4e9b\u80fd\u529b\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u65b0\u7684\u9694\u79bb\u5bf9\u8c61\u5982\u6709\u5fc5\u8981\uff0c\u4f7f\u7528[isolate.isolate]\u6784\u9020\u51fd\u6570\u3002 8.isolate\u5bf9\u8c61\u4e0d\u80fd\u901a\u8fc7\u201csendport\u201d\u53d1\u9001\uff0c\u4f46 ControlPort \u548c PauseCapability \u53ef\u4ee5\u88ab\u53d1\u9001\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u529f\u80fd\u3002","title":"\u4ec0\u4e48\u662fISOlate"},{"location":"android/flutterdev/isolatedev/#isolate_1","text":"","title":"\u5982\u4f55\u521b\u5efa ISOlate"},{"location":"android/flutterdev/isolatedev/#_1","text":"","title":"\u5982\u4f55\u8bbf\u95ee\u548c\u4f20\u9012\u53c2\u6570"},{"location":"android/flutterdev/isolatedev/#_2","text":"","title":"\u5982\u4f55\u76d1\u63a7"},{"location":"android/flutterdev/isolatedev/#_3","text":"","title":"\u5982\u4f55\u4f18\u5316"},{"location":"android/flutterdev/isolatedev/#isolateisolate","text":"","title":"\u5f53\u524d\u7684ISOlate\u548c\u521b\u5efa\u51fa\u6765\u7684Isolate\u6709\u4ec0\u4e48\u533a\u522b"},{"location":"android/flutterdev/isolatedev/#isolate_2","text":"","title":"\u5982\u4f55\u63a7\u5236\u548c\u4f7f\u7528\u5176\u4ed6ISOlate"},{"location":"android/flutterdev/isolatedev/#_4","text":"","title":"\u4ec0\u4e48\u662f\u5fae\u4efb\u52a1"},{"location":"android/flutterdev/isolatedev/#flutter","text":"","title":"Flutter\u9519\u8bef\u5904\u7406"},{"location":"android/flutterdev/isolatedev/#android","text":"1.UI\u8fdb\u7a0b\u548c\u540e\u53f0\u8fdb\u7a0b\u5206\u79bb\uff0c\u540e\u7aef\u8fdb\u7a0b\uff0c\u6301\u7eed\u7684\u63d0\u4f9b\u670d\u52a1 2.\u80fd\u591f\u51cf\u8f7bUI\u8fdb\u7a0b\u5728\u7684\u5185\u5b58\u538b\u529b\uff0c\u907f\u514d\u5185\u5b58\u6ea2\u51fa\u548c\u6cc4\u6f0f(\u4e00\u822c\u7cfb\u7edf\u63d0\u4f9b\u7684\u5185\u5b58\u4e3a32M,64M,128M) \u5de7\u7528Android\u591a\u8fdb\u7a0b\uff0c\u5fae\u4fe1\uff0c\u5fae\u535a\u7b49\u4e3b\u6d41App\u90fd\u5728\u7528 Android\u5185\u5b58\u4f18\u5316\u6742\u8c08 Android\u5185\u5b58\u7ba1\u7406 akcanary AndroidExcludedRefs fresco \u4f18\u5316\u5b89\u5353\u5e94\u7528\u5185\u5b58\u7684\u795e\u79d8\u65b9\u6cd5\u4ee5\u53ca\u80cc\u540e\u7684\u539f\u7406 Android\u6027\u80fd\u4f18\u5316\u4e4b\u5185\u5b58\u7bc7","title":"Android\u591a\u8fdb\u7a0b\uff0c\u5185\u5b58\u7ba1\u7406"},{"location":"android/flutterdev/isolatedev/#_5","text":"\u8fdb\u7a0b\u67e5\u770b\u5de5\u5177 \u5f00\u53d1\u8005\u9009\u9879\u4e2d\u67e5\u770b demoAIDL","title":"\u591a\u8fdb\u7a0b\u8fdb\u7a0b\u7ba1\u7406\u5de5\u5177"},{"location":"android/flutterdev/isolatedev/#_6","text":"","title":"\u8fdb\u7a0b\u4fdd\u6d3b"},{"location":"android/flutterdev/isolatedev/#_7","text":"typedef OnProgressListener = void Function ( double completed , double total ); typedef OnResultListener = void Function ( String result ); // An encapsulation of a large amount of synchronous processing. // // The choice of JSON parsing here is meant as an example that might surface // in real-world applications. class Calculator { Calculator ({ @ required this . onProgressListener , @ required this . onResultListener , String data }) : assert ( onProgressListener != null ), assert ( onResultListener != null ), // In order to keep the example files smaller, we cheat a little and // replicate our small json string into a 10,000-element array. _data = _replicateJson ( data , 10000 ); final OnProgressListener onProgressListener ; final OnResultListener onResultListener ; final String _data ; // This example assumes that the number of objects to parse is known in // advance. In a real-world situation, this might not be true; in that case, // the app might choose to display an indeterminate progress indicator. static const int _NUM_ITEMS = 110000 ; static const int _NOTIFY_INTERVAL = 1000 ; // Run the computation associated with this Calculator. void run () { int i = 0 ; final JsonDecoder decoder = JsonDecoder ( ( dynamic key , dynamic value ) { if ( key is int i ++ % _NOTIFY_INTERVAL == 0 ) onProgressListener ( i . toDouble (), _NUM_ITEMS . toDouble ()); return value ; } ); try { final List dynamic result = decoder . convert ( _data ); final int n = result . length ; onResultListener ( Decoded $ n results ); } catch ( e , stack ) { print ( Invalid JSON file: $ e ); print ( stack ); } } static String _replicateJson ( String data , int count ) { final StringBuffer buffer = StringBuffer ().. write ( [ ); for ( int i = 0 ; i count ; i ++ ) { buffer . write ( data ); if ( i count - 1 ) buffer . write ( , ); } buffer . write ( ] ); return buffer . toString (); } } // The current state of the calculation. enum CalculationState { idle , loading , calculating } // Structured message to initialize the spawned isolate. class CalculationMessage { CalculationMessage ( this . data , this . sendPort ); String data ; SendPort sendPort ; } // A manager for the connection to a spawned isolate. // // Isolates communicate with each other via ReceivePorts and SendPorts. // This class manages these ports and maintains state related to the // progress of the background computation. class CalculationManager { CalculationManager ({ @ required this . onProgressListener , @ required this . onResultListener }) : assert ( onProgressListener != null ), assert ( onResultListener != null ), _receivePort = ReceivePort () { _receivePort . listen ( _handleMessage ); } CalculationState _state = CalculationState . idle ; CalculationState get state = _state ; bool get isRunning = _state != CalculationState . idle ; double _completed = 0.0 ; double _total = 1.0 ; final OnProgressListener onProgressListener ; final OnResultListener onResultListener ; // Start the background computation. // // Does nothing if the computation is already running. void start () { if ( ! isRunning ) { _state = CalculationState . loading ; _runCalculation (); } } // Stop the background computation. // // Kills the isolate immediately, if spawned. Does nothing if the // computation is not running. void stop () { if ( isRunning ) { _state = CalculationState . idle ; if ( _isolate != null ) { _isolate . kill ( priority: Isolate . immediate ); _isolate = null ; _completed = 0.0 ; _total = 1.0 ; } } } final ReceivePort _receivePort ; Isolate _isolate ; void _runCalculation () { // Load the JSON string. This is done in the main isolate because spawned // isolates do not have access to the root bundle. However, the loading // process is asynchronous, so the UI will not block while the file is // loaded. rootBundle . loadString ( services/data.json ). then void (( String data ) { if ( isRunning ) { final CalculationMessage message = CalculationMessage ( data , _receivePort . sendPort ); // Spawn an isolate to JSON-parse the file contents. The JSON parsing // is synchronous, so if done in the main isolate, the UI would block. Isolate . spawn CalculationMessage ( _calculate , message ). then void (( Isolate isolate ) { if ( ! isRunning ) { isolate . kill ( priority: Isolate . immediate ); } else { _state = CalculationState . calculating ; _isolate = isolate ; } }); } }); } void _handleMessage ( dynamic message ) { if ( message is List double ) { _completed = message [ 0 ]; _total = message [ 1 ]; onProgressListener ( _completed , _total ); } else if ( message is String ) { _completed = 0.0 ; _total = 1.0 ; _isolate = null ; _state = CalculationState . idle ; onResultListener ( message ); } } // Main entry point for the spawned isolate. // // This entry point must be static, and its (single) argument must match // the message passed in Isolate.spawn above. Typically, some part of the // message will contain a SendPort so that the spawned isolate can // communicate back to the main isolate. // // Static and global variables are initialized anew in the spawned isolate, // in a separate memory space. static void _calculate ( CalculationMessage message ) { final SendPort sender = message . sendPort ; final Calculator calculator = Calculator ( onProgressListener: ( double completed , double total ) { sender . send ( double [ completed , total ]); }, onResultListener: sender . send , data: message . data , ); calculator . run (); } } // Main app widget. // // The app shows a simple UI that allows control of the background computation, // as well as an animation to illustrate that the UI does not block while this // computation is performed. // // This is a StatefulWidget in order to hold the CalculationManager and // the AnimationController for the running animation. class IsolateExampleWidget extends StatefulWidget { @ override IsolateExampleState createState () = IsolateExampleState (); } // Main application state. class IsolateExampleState extends State StatefulWidget with SingleTickerProviderStateMixin { String _status = Idle ; String _label = Start ; String _result = ; double _progress = 0.0 ; AnimationController _animation ; CalculationManager _calculationManager ; @ override void initState () { super . initState (); _animation = AnimationController ( duration: const Duration ( milliseconds: 3600 ), vsync: this , ).. repeat (); _calculationManager = CalculationManager ( onProgressListener: _handleProgressUpdate , onResultListener: _handleResult , ); } @ override void dispose () { _animation . dispose (); super . dispose (); } @ override Widget build ( BuildContext context ) { return Material ( child: Column ( mainAxisAlignment: MainAxisAlignment . spaceAround , children: Widget [ RotationTransition ( turns: _animation , child: Container ( width: 120.0 , height: 120.0 , color: const Color ( 0xFF882222 ), ), ), Opacity ( opacity: _calculationManager . isRunning ? 1.0 : 0.0 , child: CircularProgressIndicator ( value: _progress ), ), Text ( _status ), Center ( child: RaisedButton ( child: Text ( _label ), onPressed: _handleButtonPressed , ), ), Text ( _result ), ], ), ); } void _handleProgressUpdate ( double completed , double total ) { _updateState ( , completed / total ); } void _handleResult ( String result ) { _updateState ( result , 0.0 ); } void _handleButtonPressed () { if ( _calculationManager . isRunning ) _calculationManager . stop (); else _calculationManager . start (); _updateState ( , 0.0 ); } String _getStatus ( CalculationState state ) { switch ( state ) { case CalculationState . loading: return Loading... ; case CalculationState . calculating: return In Progress ; case CalculationState . idle: default : return Idle ; } } void _updateState ( String result , double progress ) { setState (() { _result = result ; _progress = progress ; _label = _calculationManager . isRunning ? Stop : Start ; _status = _getStatus ( _calculationManager . state ); }); } } void main () { runApp ( MaterialApp ( home: IsolateExampleWidget ())); } { _id : 57112806d874e9e6df7099d4 , index : 0 , guid : 77dc6167-2351-4a64-a603-aceaff115432 , isActive : false , balance : $1,316.41 , picture : http://placehold.it/32x32 , age : 21 , eyeColor : brown , name : Marta Hartman , gender : female , company : EXAMPLE , email : martahartman@example.com , phone : +1 (555) 555-2328 , address : 463 Temple Court, Brandywine, Kansas, 1113 , about : Incididunt commodo sunt commodo nulla adipisicing duis aute enim aute minim reprehenderit aute consectetur. Eu laborum esse aute laborum aute. Tempor in cillum exercitation aliqua velit quis incididunt esse ea nisi. Cillum pariatur reprehenderit est nisi nisi exercitation.\\r\\n , registered : 2014-01-18T12:32:22 +08:00 , latitude : 4.101477 , longitude : 39.153115 , tags : [ pariatur , sit , sint , ex , minim , veniam , ullamco ], friends : [ { id : 0 , name : Tricia Guerra }, { id : 1 , name : Paula Dillard }, { id : 2 , name : Ursula Stout } ], greeting : Hello, Marta Hartman! You have 4 unread messages. , favoriteFruit : strawberry }","title":"\u957f\u8fde\u63a5"},{"location":"android/flutterdev/listview/","text":"ListView AutomaticKeepAlive layout algorithms. Constraints combine scrolling, viewporting, and a layout model \u7f51\u7edcInspector ca539f6b02264b61842d7ce8ce219d2f { \"time\": \"1201\", \"switch\": true, \"enable\": true }","title":"ListView"},{"location":"android/flutterdev/listview/#listview","text":"","title":"ListView"},{"location":"android/flutterdev/listview/#automatickeepalive","text":"","title":"AutomaticKeepAlive"},{"location":"android/flutterdev/listview/#layout-algorithms","text":"Constraints combine scrolling, viewporting, and a layout model \u7f51\u7edcInspector ca539f6b02264b61842d7ce8ce219d2f { \"time\": \"1201\", \"switch\": true, \"enable\": true }","title":"layout algorithms."},{"location":"android/flutterdev/mixin/","text":"flutter mixin Bloc Reactive Programming Stream mixin\u4e0d\u80fd\u6709\u6784\u9020\u51fd\u6570 \u5168\u5c40\u9519\u8bef\u4fe1\u606f\u63d0\u793a \u7b80\u800c\u8a00\u4e4b\uff0c\u4e1a\u52a1\u903b\u8f91\u9700\u8981\uff1a \u88ab\u79fb\u5230\u4e00\u4e2a\u6216\u51e0\u4e2aBLoC\uff0c \u5c3d\u53ef\u80fd\u4ece\u8868\u793a\u5c42\u4e2d\u5220\u9664\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cUI\u7ec4\u4ef6\u5e94\u8be5\u53ea\u5173\u5fc3UI\u4e8b\u7269\u800c\u4e0d\u5173\u5fc3\u4e1a\u52a1\uff0c \u4f9d\u8d56Streams \u72ec\u5bb6\u4f7f\u7528\u8f93\u5165\uff08Sink\uff09\u548c\u8f93\u51fa\uff08\u6d41\uff09\uff0c \u4fdd\u6301\u5e73\u53f0\u72ec\u7acb\uff0c \u4fdd\u6301\u73af\u5883\u72ec\u7acb\u3002 bloc\u67b6\u6784 bloc\u67b6\u6784\u7ec3\u4e60 Demo\u5730\u5740 DemoBloc Bloc\u67b6\u6784 Using Map, HashMap, LinkedHashMap, SplayTreeMap \u4e3a\u6bcf\u4e00\u4e2a\u65b0\u7684\u9875\u9762\u6ce8\u5165\u65b0\u7684\u529f\u80fd\u6a21\u5757 Generic\u7c7b\u578b \u6d41\u53ef\u4ee5\u4f20\u8fbe\u4ec0\u4e48\uff1f \u4e00\u5207\u90fd\u662f\u5982\u6b64\u3002\u4ece\u503c\uff0c\u4e8b\u4ef6\uff0c\u5bf9\u8c61\uff0c\u96c6\u5408\uff0c\u6620\u5c04\uff0c\u9519\u8bef\u6216\u751a\u81f3\u53e6\u4e00\u4e2a\u6d41\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d41\u4f20\u8fbe\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e\u3002 \u5173\u952e\u6982\u5ff5 StreamTransformer StreamConsumer StreamSubscription RxDart RxDart StreamBuilder redux 1.\u5168\u5c40\u4fdd\u5b58App\u7684\u72b6\u6001\uff0c\u4f7f\u7528Bloc\u67b6\u6784\u6a21\u5f0f 2.\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u72b6\u6001\u6811\u7684\u72b6\u6001 dispatch 3.\u8c03\u7528\u8fc7\u7a0b dispatch ==== Middleware ==== Reducer Flutter\u9762\u8bd5\u9898 https://juejin.im/post/5c67d621518825620a7f133e","title":"flutter mixin&Bloc& Reactive Programming&Stream"},{"location":"android/flutterdev/mixin/#flutter-mixinbloc-reactive-programmingstream","text":"mixin\u4e0d\u80fd\u6709\u6784\u9020\u51fd\u6570 \u5168\u5c40\u9519\u8bef\u4fe1\u606f\u63d0\u793a \u7b80\u800c\u8a00\u4e4b\uff0c\u4e1a\u52a1\u903b\u8f91\u9700\u8981\uff1a \u88ab\u79fb\u5230\u4e00\u4e2a\u6216\u51e0\u4e2aBLoC\uff0c \u5c3d\u53ef\u80fd\u4ece\u8868\u793a\u5c42\u4e2d\u5220\u9664\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cUI\u7ec4\u4ef6\u5e94\u8be5\u53ea\u5173\u5fc3UI\u4e8b\u7269\u800c\u4e0d\u5173\u5fc3\u4e1a\u52a1\uff0c \u4f9d\u8d56Streams \u72ec\u5bb6\u4f7f\u7528\u8f93\u5165\uff08Sink\uff09\u548c\u8f93\u51fa\uff08\u6d41\uff09\uff0c \u4fdd\u6301\u5e73\u53f0\u72ec\u7acb\uff0c \u4fdd\u6301\u73af\u5883\u72ec\u7acb\u3002 bloc\u67b6\u6784 bloc\u67b6\u6784\u7ec3\u4e60 Demo\u5730\u5740 DemoBloc Bloc\u67b6\u6784 Using Map, HashMap, LinkedHashMap, SplayTreeMap \u4e3a\u6bcf\u4e00\u4e2a\u65b0\u7684\u9875\u9762\u6ce8\u5165\u65b0\u7684\u529f\u80fd\u6a21\u5757 Generic\u7c7b\u578b","title":"flutter mixin&amp;Bloc&amp; Reactive Programming&amp;Stream"},{"location":"android/flutterdev/mixin/#_1","text":"\u4e00\u5207\u90fd\u662f\u5982\u6b64\u3002\u4ece\u503c\uff0c\u4e8b\u4ef6\uff0c\u5bf9\u8c61\uff0c\u96c6\u5408\uff0c\u6620\u5c04\uff0c\u9519\u8bef\u6216\u751a\u81f3\u53e6\u4e00\u4e2a\u6d41\uff0c\u53ef\u4ee5\u901a\u8fc7\u6d41\u4f20\u8fbe\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e\u3002","title":"\u6d41\u53ef\u4ee5\u4f20\u8fbe\u4ec0\u4e48\uff1f"},{"location":"android/flutterdev/mixin/#_2","text":"StreamTransformer StreamConsumer StreamSubscription","title":"\u5173\u952e\u6982\u5ff5"},{"location":"android/flutterdev/mixin/#rxdart","text":"RxDart StreamBuilder","title":"RxDart"},{"location":"android/flutterdev/mixin/#redux","text":"1.\u5168\u5c40\u4fdd\u5b58App\u7684\u72b6\u6001\uff0c\u4f7f\u7528Bloc\u67b6\u6784\u6a21\u5f0f 2.\u53ea\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u6539\u53d8\u72b6\u6001\u6811\u7684\u72b6\u6001 dispatch 3.\u8c03\u7528\u8fc7\u7a0b dispatch ==== Middleware ==== Reducer","title":"redux"},{"location":"android/flutterdev/mixin/#flutter","text":"https://juejin.im/post/5c67d621518825620a7f133e","title":"Flutter\u9762\u8bd5\u9898"},{"location":"android/flutterdev/platform_channels/","text":"platform_channels \u6982\u8ff0 \u5b98\u65b9\u6848\u4f8b channels\u7c7b\u578b BasicMessageChannel MethodChannel EventChannel \u7f16\u7801\u65b9\u5f0f BinaryCodec StringCodec JSONMessageCodec JSONMethodCodec StandardMessageCodec StandardMethodCodec","title":"PlatformChannel"},{"location":"android/flutterdev/platform_channels/#platform_channels","text":"","title":"platform_channels"},{"location":"android/flutterdev/platform_channels/#_1","text":"\u5b98\u65b9\u6848\u4f8b","title":"\u6982\u8ff0"},{"location":"android/flutterdev/platform_channels/#channels","text":"BasicMessageChannel MethodChannel EventChannel","title":"channels\u7c7b\u578b"},{"location":"android/flutterdev/platform_channels/#_2","text":"BinaryCodec StringCodec JSONMessageCodec JSONMethodCodec StandardMessageCodec StandardMethodCodec","title":"\u7f16\u7801\u65b9\u5f0f"},{"location":"android/flutterdev/protobuf/","text":"Protobuf \u5f00\u53d1\u793a\u4f8b Protobuf Google\u5b98\u7f51 Protobuf for Dart Protobuf Dart\u8bed\u8a00Protobuf \u5bc6\u7801\u5b66 \u793a\u4f8b\u4ee3\u7801 Protobuf\u5b98\u65b9\u793a\u4f8b\u4ee3\u7801","title":"Protobuf \u5f00\u53d1\u793a\u4f8b"},{"location":"android/flutterdev/protobuf/#protobuf","text":"Protobuf Google\u5b98\u7f51","title":"Protobuf \u5f00\u53d1\u793a\u4f8b"},{"location":"android/flutterdev/protobuf/#protobuf-for-dart","text":"Protobuf Dart\u8bed\u8a00Protobuf \u5bc6\u7801\u5b66","title":"Protobuf for Dart"},{"location":"android/flutterdev/protobuf/#_1","text":"Protobuf\u5b98\u65b9\u793a\u4f8b\u4ee3\u7801","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"android/issue/Androidissue/","text":"android\u5f00\u53d1\u5e38\u89c1\u95ee\u9898 Activiy+Fragment+ViewPager: Getting the error \u201cJava.lang.IllegalStateException Activity has been destroyed\u201d when using tabs with ViewPager // http://stackoverflow.com/questions/15207305/getting-the-error-java-lang-illegalstateexception-activity-has-been-destroyed @Override public void onDetach() { super.onDetach(); try { Field childFragmentManager = Fragment.class.getDeclaredField( mChildFragmentManager ); childFragmentManager.setAccessible(true); childFragmentManager.set(this, null); } catch (NoSuchFieldException e) { throw new RuntimeException(e); } catch (IllegalAccessException e) { throw new RuntimeException(e); } }","title":"Issue\u5e38\u89c1\u95ee\u9898"},{"location":"android/issue/Androidissue/#android","text":"Activiy+Fragment+ViewPager: Getting the error \u201cJava.lang.IllegalStateException Activity has been destroyed\u201d when using tabs with ViewPager // http://stackoverflow.com/questions/15207305/getting-the-error-java-lang-illegalstateexception-activity-has-been-destroyed @Override public void onDetach() { super.onDetach(); try { Field childFragmentManager = Fragment.class.getDeclaredField( mChildFragmentManager ); childFragmentManager.setAccessible(true); childFragmentManager.set(this, null); } catch (NoSuchFieldException e) { throw new RuntimeException(e); } catch (IllegalAccessException e) { throw new RuntimeException(e); } }","title":"android\u5f00\u53d1\u5e38\u89c1\u95ee\u9898"},{"location":"android/rn/react_native/","text":"React Native \u5f00\u53d1\u5de5\u5177 expo Create App \u5f00\u53d1\u6587\u6863 \u5b9e\u6218 \u8bb0\u4e00\u6b21React Native\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u89e3\u51b3\u53ea\u5728\u5343\u91cc\u4e4b\u5916\u53ef\u91cd\u73b0\u7684Bug \u5de7\u7528Android\u591a\u8fdb\u7a0b\uff0c\u5fae\u4fe1\uff0c\u5fae\u535a\u7b49\u4e3b\u6d41App\u90fd\u5728\u7528 \u5185\u5b58\u4f18\u5316 \u57fa\u4e8eReactNative\u5b9e\u73b0\u52a8\u6001\u52a0\u8f7d \u4e00\u4e0b\u4e24\u7bc7\u4e3a\u7ba1\u7406\u6559\u7a0b \u57fa\u4e8eReactNative\u5b9e\u73b0\u52a8\u6001\u52a0\u8f7d\uff08\u670d\u52a1\u7aef\u4e3aSpring Boot\uff09 \u52a8\u6001\u52a0\u8f7d\u65b9\u6848\u6e90\u4ee3\u7801 React Native App\u5e94\u7528\u67b6\u6784\u8bbe\u8ba1 React Native\u8d44\u6e90\u6253\u5305\u548c\u52a0\u8f7d\u673a\u5236","title":"ReactNative"},{"location":"android/rn/react_native/#react-native","text":"","title":"React Native"},{"location":"android/rn/react_native/#_1","text":"expo Create App \u5f00\u53d1\u6587\u6863","title":"\u5f00\u53d1\u5de5\u5177"},{"location":"android/rn/react_native/#_2","text":"\u8bb0\u4e00\u6b21React Native\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u89e3\u51b3\u53ea\u5728\u5343\u91cc\u4e4b\u5916\u53ef\u91cd\u73b0\u7684Bug \u5de7\u7528Android\u591a\u8fdb\u7a0b\uff0c\u5fae\u4fe1\uff0c\u5fae\u535a\u7b49\u4e3b\u6d41App\u90fd\u5728\u7528 \u5185\u5b58\u4f18\u5316 \u57fa\u4e8eReactNative\u5b9e\u73b0\u52a8\u6001\u52a0\u8f7d \u4e00\u4e0b\u4e24\u7bc7\u4e3a\u7ba1\u7406\u6559\u7a0b \u57fa\u4e8eReactNative\u5b9e\u73b0\u52a8\u6001\u52a0\u8f7d\uff08\u670d\u52a1\u7aef\u4e3aSpring Boot\uff09 \u52a8\u6001\u52a0\u8f7d\u65b9\u6848\u6e90\u4ee3\u7801 React Native App\u5e94\u7528\u67b6\u6784\u8bbe\u8ba1 React Native\u8d44\u6e90\u6253\u5305\u548c\u52a0\u8f7d\u673a\u5236","title":"\u5b9e\u6218"},{"location":"android/utils/MD5/","text":"package com.willblaschko.android.alexavoicelibrary.utility; import android.content.Context; import android.content.pm.PackageInfo; import android.content.pm.PackageManager; import android.content.pm.Signature; import java.io.ByteArrayInputStream; import java.io.InputStream; import java.security.MessageDigest; import java.security.NoSuchAlgorithmException; import java.security.cert.CertificateEncodingException; import java.security.cert.CertificateException; import java.security.cert.CertificateFactory; import java.security.cert.X509Certificate; /** * Utility functions to get the application signing key versus running the keytool in java */ public class SigningKey { /** * Get the MD5 fingerprint required for application authentication on the server to set up security profiles * @param context any Context from the running application * @return the string equivalent of the MD5 fingerprint */ public static String getCertificateMD5Fingerprint(Context context) { PackageManager pm = context.getPackageManager(); String packageName = context.getPackageName(); int flags = PackageManager.GET_SIGNATURES; PackageInfo packageInfo = null; try { packageInfo = pm.getPackageInfo(packageName, flags); } catch (PackageManager.NameNotFoundException e) { e.printStackTrace(); } Signature[] signatures = packageInfo.signatures; byte[] cert = signatures[0].toByteArray(); InputStream input = new ByteArrayInputStream(cert); CertificateFactory cf = null; try { cf = CertificateFactory.getInstance( X509 ); } catch (CertificateException e) { e.printStackTrace(); } X509Certificate c = null; try { c = (X509Certificate) cf.generateCertificate(input); } catch (CertificateException e) { e.printStackTrace(); } String hexString = null; try { MessageDigest md = MessageDigest.getInstance( MD5 ); byte[] publicKey = md.digest(c.getEncoded()); hexString = byte2HexFormatted(publicKey); } catch (NoSuchAlgorithmException e1) { e1.printStackTrace(); } catch (CertificateEncodingException e) { e.printStackTrace(); } return hexString; } /** * Convert the resulting byte array into a string for submission * @param arr the byte array supplied by getCertificateMD5Fingerprint * @return the string equivalent */ public static String byte2HexFormatted(byte[] arr) { StringBuilder str = new StringBuilder(arr.length * 2); for (int i = 0; i lt; arr.length; i++) { String h = Integer.toHexString(arr[i]); int l = h.length(); if (l == 1) h = 0 + h; if (l gt; 2) h = h.substring(l - 2, l); str.append(h.toUpperCase()); if (i lt; (arr.length - 1)) str.append( : ); } return str.toString(); } }","title":"MD5"},{"location":"download/download/","text":"superUs Android \u624b\u673a\u6743\u9650\u7ba1\u7406\u5de5\u5177 SuperUs","title":"download"},{"location":"extensions/admonition/","text":"Admonition Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings. Installation Add the following lines to your mkdocs.yml : markdown_extensions : - admonition Usage Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Changing the title By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Removing the title Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Embedded code blocks Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = 087652 ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Collapsible blocks The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default. Types Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note . Note Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso Abstract Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr Info Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo Tip Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important Success Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done Question Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq Warning Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention Failure Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing Danger Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error Bug Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug Example Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet Quote Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"AndroidStudio"},{"location":"extensions/admonition/#admonition","text":"Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings.","title":"Admonition"},{"location":"extensions/admonition/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - admonition","title":"Installation"},{"location":"extensions/admonition/#usage","text":"Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Usage"},{"location":"extensions/admonition/#changing-the-title","text":"By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Changing the title"},{"location":"extensions/admonition/#removing-the-title","text":"Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Removing the title"},{"location":"extensions/admonition/#embedded-code-blocks","text":"Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = 087652 ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.","title":"Embedded code blocks"},{"location":"extensions/admonition/#collapsible-blocks","text":"The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default.","title":"Collapsible blocks"},{"location":"extensions/admonition/#types","text":"Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note .","title":"Types"},{"location":"extensions/admonition/#note","text":"Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso","title":"Note"},{"location":"extensions/admonition/#abstract","text":"Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr","title":"Abstract"},{"location":"extensions/admonition/#info","text":"Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo","title":"Info"},{"location":"extensions/admonition/#tip","text":"Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important","title":"Tip"},{"location":"extensions/admonition/#success","text":"Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done","title":"Success"},{"location":"extensions/admonition/#question","text":"Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq","title":"Question"},{"location":"extensions/admonition/#warning","text":"Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention","title":"Warning"},{"location":"extensions/admonition/#failure","text":"Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing","title":"Failure"},{"location":"extensions/admonition/#danger","text":"Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error","title":"Danger"},{"location":"extensions/admonition/#bug","text":"Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug","title":"Bug"},{"location":"extensions/admonition/#example","text":"Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet","title":"Example"},{"location":"extensions/admonition/#quote","text":"Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Quote"},{"location":"extensions/codehilite/","text":"CodeHilite CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. The highlighting process is executed during compilation of the Markdown file. Syntax highlighting not working? Please ensure that Pygments is installed. See the next section for further directions on how to set up Pygments or use the official Docker image with all dependencies pre-installed. Installation CodeHilite parses code blocks and wraps them in pre tags. If Pygments is installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can be installed with the following command: pip install pygments To enable CodeHilite, add the following lines to your mkdocs.yml : markdown_extensions : - codehilite Usage Specifying the language The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways. via Markdown syntax recommended In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf via Shebang Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf via three colons If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: import tensorflow as tf Adding line numbers Line numbers can be added by enabling the linenums flag in your mkdocs.yml : markdown_extensions : - codehilite : linenums : true Example: ``` python Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] gt ; items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Grouping code blocks The SuperFences extension which is part of the PyMdown Extensions package adds support for grouping code blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: ``` bash tab= Bash #!/bin/bash echo Hello world! ``` ``` c tab= C #include stdio.h int main(void) { printf( Hello world!\\n ); } ``` ``` c++ tab= C++ #include iostream int main() { std::cout Hello world! std::endl; return 0; } ``` ``` c# tab= C# using System; class Program { static void Main(string[] args) { Console.WriteLine( Hello world! ); } } ``` Result: Bash #!/bin/bash echo Hello world! C #include stdio.h int main ( void ) { printf ( Hello world! \\n ); } C++ #include iostream int main () { std :: cout Hello world! std :: endl ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( Hello world! ); } } Highlighting specific lines Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines= 3 4 Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] gt ; items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Supported languages excerpt CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt. Bash #!/bin/bash for OPT in $@ do case $OPT in -f ) canonicalize = 1 ;; -n ) switchlf = -n ;; esac done # readlink -f function __readlink_f { target = $1 while test -n $target ; do filepath = $target cd ` dirname $filepath ` target = ` readlink $filepath ` done /bin/echo $switchlf ` pwd -P ` / ` basename $filepath ` } if [ ! $canonicalize ] ; then readlink $switchlf $@ else for file in $@ do case $file in -* ) ;; * ) __readlink_f $file ;; esac done fi exit $? C extern size_t pb_varint_scan ( const uint8_t data [], size_t left ) { assert ( data left ); left = left 10 ? 10 : left ; #ifdef __SSE2__ /* Mapping: remaining bytes == bitmask */ static const int mask_map [] = { 0x0000 , 0x0001 , 0x0003 , 0x0007 , 0x000F , 0x001F , 0x003F , 0x007F , 0x00FF , 0x01FF , 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128 (( const __m128i * ) data ); __m128i high = _mm_set1_epi8 ( 0x80 ); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8 ( _mm_and_si128 ( temp , high )); mask = ( mask mask_map [ left ]) ^ mask_map [ left ]; /* Count trailing zeroes */ return mask ? __builtin_ctz ( mask ) + 1 : 0 ; #else /* Linear scan */ size_t size = 0 ; while ( data [ size ++ ] 0x80 ) if ( !-- left ) return 0 ; return size ; #endif /* __SSE2__ */ } C++ Extension :: Extension ( const Descriptor * descriptor , const Descriptor * scope ) : descriptor_ ( descriptor ), scope_ ( scope ) { /* Extract full name for signature */ variables_ [ signature ] = descriptor_ - full_name (); /* Prepare message symbol */ variables_ [ message ] = StringReplace ( variables_ [ signature ], . , _ , true ); LowerString ( ( variables_ [ message ])); /* Suffix scope to identifiers, if given */ string suffix ( ); if ( scope_ ) { suffix = scope_ - full_name (); /* Check if the base and extension types are in the same package */ if ( ! scope_ - file () - package (). compare ( descriptor_ - file () - package ())) suffix = StripPrefixString ( suffix , scope_ - file () - package () + . ); /* Append to signature */ variables_ [ signature ] += .[ + suffix + ] ; suffix = _ + suffix ; } /* Prepare extension symbol */ variables_ [ extension ] = StringReplace ( suffix , . , _ , true ); LowerString ( ( variables_ [ extension ])); } C #35 ; public static void Send ( Socket socket , byte [] buffer , int offset , int size , int timeout ) { int startTickCount = Environment . TickCount ; int sent = 0 ; do { if ( Environment . TickCount startTickCount + timeout ) throw new Exception ( Timeout. ); try { sent += socket . Send ( buffer , offset + sent , size - sent , SocketFlags . None ); } catch ( SocketException ex ) { if ( ex . SocketErrorCode == SocketError . WouldBlock || ex . SocketErrorCode == SocketError . IOPending || ex . SocketErrorCode == SocketError . NoBufferSpaceAvailable ) { /* Socket buffer is probably full, wait and try again */ Thread . Sleep ( 30 ); } else { throw ex ; } } } while ( sent size ); } Clojure ( clojure-version ) ( defn partition-when [ f ] ( fn [ rf ] ( let [ a ( java.util.ArrayList. ) fval ( volatile! false )] ( fn ([] ( rf )) ([ result ] ( let [ result ( if ( .isEmpty a ) result ( let [ v ( vec ( .toArray a ))] ;; Clear first ( .clear a ) ( unreduced ( rf result v ))))] ( rf result ))) ([ result input ] ( if-not ( and ( f input ) @ fval ) ( do ( vreset! fval true ) ( .add a input ) result ) ( let [ v ( vec ( .toArray a ))] ( .clear a ) ( let [ ret ( rf result v )] ( when-not ( reduced? ret ) ( .add a input )) ret )))))))) ( into [] ( partition-when # ( .startsWith % )) [ 1d 33 1 2 22 3 ]) Diff Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log( hello world ); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ packages/services.web/{!(test)/**/,}*.js , packages/error/**/*.js ], - scripts: [ - grunt.js , - db/**/*.js - ], browser: [ packages/web/server.js , packages/web/server/**/*.js , Docker FROM ubuntu # Install vnc, xvfb in order to create a fake display and firefox RUN apt-get update apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c echo firefox /.bashrc EXPOSE 5900 CMD [ x11vnc , -forever , -usepw , -create ] Elixir require Logger def accept ( port ) do { :ok , socket } = :gen_tcp . listen ( port , [ :binary , packet : :line , active : false , reuseaddr : true ]) Logger . info Accepting connections on port #{ port } loop_acceptor ( socket ) end defp loop_acceptor ( socket ) do { :ok , client } = :gen_tcp . accept ( socket ) serve ( client ) loop_acceptor ( socket ) end defp serve ( socket ) do socket | read_line () | write_line ( socket ) serve ( socket ) end defp read_line ( socket ) do { :ok , data } = :gen_tcp . recv ( socket , 0 ) data end defp write_line ( line , socket ) do :gen_tcp . send ( socket , line ) end Erlang circular ( Defs ) - [ { { Type , Base }, Fields } || { { Type , Base }, Fields } - Defs , Type == msg , circular ( Base , Defs ) ]. circular ( Base , Defs ) - Fields = proplists : get_value ({ msg , Base }, Defs ), circular ( Defs , Fields , [ Base ]). circular (_ Defs , [], _ Path ) - false ; circular ( Defs , [ Field | Fields ], Path ) - case Field #field.type of { msg , Type } - case lists : member ( Type , Path ) of false - Children = proplists : get_value ({ msg , Type }, Defs ), case circular ( Defs , Children , [ Type | Path ]) of false - circular ( Defs , Fields , Path ); true - true end ; true - Type == lists : last ( Path ) andalso ( length ( Path ) == 1 orelse not is_tree ( Path )) end ; _ - circular ( Defs , Fields , Path ) end . F #35 ; /// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [ Js ] getRectangles () : Async Rectangle [] = async { let req = XMLHttpRequest () req . Open ( POST , /get , true ) let! resp = req . AsyncSend () return JSON . parse ( resp ) } /// Repeatedly update rectangles after 0.5 sec let [ Js ] updateLoop () = async { while true do do ! Async . Sleep ( 500 ) let! rects = getRectangles () cleanRectangles () rects | Array . iter createRectangle } Go package main import fmt func counter ( id int , channel chan int , closer bool ) { for i := 0 ; i 10000000 ; i ++ { fmt . Println ( process , id , send , i ) channel - 1 } if closer { close ( channel ) } } func main () { channel := make ( chan int ) go counter ( 1 , channel , false ) go counter ( 2 , channel , true ) x := 0 // receiving data from channel for i := range channel { fmt . Println ( receiving ) x += i } fmt . Println ( x ) } HTML !doctype html html class = no-js lang = head meta charset = utf-8 meta http-equiv = x-ua-compatible content = ie=edge title HTML5 Boilerplate / title meta name = description content = meta name = viewport content = width=device-width, initial-scale=1 link rel = apple-touch-icon href = apple-touch-icon.png link rel = stylesheet href = css/normalize.css link rel = stylesheet href = css/main.css script src = js/vendor/modernizr-2.8.3.min.js / script / head body p Hello world! This is HTML5 Boilerplate. / p / body / html Java import java.util.LinkedList ; import java.lang.reflect.Array ; public class UnsortedHashSet E { private static final double LOAD_FACTOR_LIMIT = 0.7 ; private int size ; private LinkedList E [] con ; public UnsortedHashSet () { con = ( LinkedList E [])( new LinkedList [ 10 ]); } public boolean add ( E obj ) { int oldSize = size ; int index = Math . abs ( obj . hashCode ()) % con . length ; if ( con [ index ] == null ) con [ index ] = new LinkedList E (); if (! con [ index ]. contains ( obj )) { con [ index ]. add ( obj ); size ++; } if ( 1.0 * size / con . length LOAD_FACTOR_LIMIT ) resize (); return oldSize != size ; } private void resize () { UnsortedHashSet E temp = new UnsortedHashSet E (); temp . con = ( LinkedList E [])( new LinkedList [ con . length * 2 + 1 ]); for ( int i = 0 ; i con . length ; i ++) { if ( con [ i ] != null ) for ( E e : con [ i ]) temp . add ( e ); } con = temp . con ; } public int size () { return size ; } } JavaScript var Math = require ( lib/math ); var _extends = function ( target ) { for ( var i = 1 ; i arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; var e = exports . e = 2.71828182846 ; exports [ default ] = function ( x ) { return Math . exp ( x ); }; module . exports = _extends ( exports [ default ], exports ); JSON { name : mkdocs-material , version : 0.2.4 , description : A Material Design theme for MkDocs , homepage : http://squidfunk.github.io/mkdocs-material/ , authors : [ squidfunk martin.donath@squidfunk.com ], license : MIT , main : Gulpfile.js , scripts : { start : ./node_modules/.bin/gulp watch --mkdocs , build : ./node_modules/.bin/gulp build --production } ... } Julia using MXNet mlp = @mx . chain mx . Variable ( : data ) = mx . FullyConnected ( name =: fc1 , num_hidden = 128 ) = mx . Activation ( name =: relu1 , act_type =: relu ) = mx . FullyConnected ( name =: fc2 , num_hidden = 64 ) = mx . Activation ( name =: relu2 , act_type =: relu ) = mx . FullyConnected ( name =: fc3 , num_hidden = 10 ) = mx . SoftmaxOutput ( name =: softmax ) # data provider batch_size = 100 include ( Pkg . dir ( MXNet , examples , mnist , mnist-data.jl )) train_provider , eval_provider = get_mnist_providers ( batch_size ) # setup model model = mx . FeedForward ( mlp , context = mx . cpu ()) # optimization algorithm optimizer = mx . SGD ( lr = 0.1 , momentum = 0.9 ) # fit parameters mx . fit ( model , optimizer , train_provider , n_epoch = 20 , eval_data = eval_provider ) Lua local ffi = require ( ffi ) ffi . cdef [[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi . os == Windows then function sleep ( s ) ffi . C . Sleep ( s * 1000 ) end else function sleep ( s ) ffi . C . poll ( nil , 0 , s * 1000 ) end end for i = 1 , 160 do io.write ( . ); io.flush () sleep ( 0.01 ) end io.write ( \\n ) MySQL SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = 087652 ; PHP ?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller ; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ; use Symfony\\Component\\HttpFoundation\\Response ; class LuckyController { /** * @Route( /lucky/number ) */ public function numberAction () { $number = mt_rand ( 0 , 100 ); return new Response ( html body Lucky number: . $number . /body /html ); } } Protocol Buffers syntax = proto2 ; package caffe ; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [ packed = true ]; } message BlobProto { optional BlobShape shape = 7 ; repeated float data = 5 [ packed = true ]; repeated float diff = 6 [ packed = true ]; // 4D dimensions -- deprecated. Use shape instead. optional int32 num = 1 [ default = 0 ]; optional int32 channels = 2 [ default = 0 ]; optional int32 height = 3 [ default = 0 ]; optional int32 width = 4 [ default = 0 ]; } Python A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf . app . flags FLAGS = flags . FLAGS flags . DEFINE_string ( data_dir , /tmp/data/ , Directory for storing data ) mnist = input_data . read_data_sets ( FLAGS . data_dir , one_hot = True ) sess = tf . InteractiveSession () # Create the model x = tf . placeholder ( tf . float32 , [ None , 784 ]) W = tf . Variable ( tf . zeros ([ 784 , 10 ])) b = tf . Variable ( tf . zeros ([ 10 ])) y = tf . nn . softmax ( tf . matmul ( x , W ) + b ) Ruby require finity/event require finity/machine require finity/state require finity/transition require finity/version module Finity class InvalidCallback StandardError ; end class MissingCallback StandardError ; end class InvalidState StandardError ; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, block @finity ||= Machine . new self , options , block end # Return the names of all registered states. def states @finity . states . map { | name , _ | name } end # Return the names of all registered events. def events @finity . events . map { | name , _ | name } end end # Inject methods into the including class upon inclusion. def self . included base base . extend ClassMethods end end XML ?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE mainTag SYSTEM some.dtd [ENTITY % entity] ?oxygen RNGSchema= some.rng type= xml ? xs:main-Tag xmlns:xs= http://www.w3.org/2001/XMLSchema !-- This is a sample comment -- childTag attribute= Quoted Value another-attribute= Single quoted value a-third-attribute= 123 withTextContent Some text content /withTextContent withEntityContent Some text content with lt; entities gt; and mentioning uint8_t and int32_t /withEntityContent otherTag attribute= Single quoted Value / /childTag ![CDATA[ some CData ]] /main-Tag","title":"CodeHilite"},{"location":"extensions/codehilite/#codehilite","text":"CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. The highlighting process is executed during compilation of the Markdown file. Syntax highlighting not working? Please ensure that Pygments is installed. See the next section for further directions on how to set up Pygments or use the official Docker image with all dependencies pre-installed.","title":"CodeHilite"},{"location":"extensions/codehilite/#installation","text":"CodeHilite parses code blocks and wraps them in pre tags. If Pygments is installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can be installed with the following command: pip install pygments To enable CodeHilite, add the following lines to your mkdocs.yml : markdown_extensions : - codehilite","title":"Installation"},{"location":"extensions/codehilite/#usage","text":"","title":"Usage"},{"location":"extensions/codehilite/#specifying-the-language","text":"The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways.","title":"Specifying the language"},{"location":"extensions/codehilite/#via-markdown-syntax-recommended","text":"In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf","title":"via Markdown syntax recommended"},{"location":"extensions/codehilite/#via-shebang","text":"Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf","title":"via Shebang"},{"location":"extensions/codehilite/#via-three-colons","text":"If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: import tensorflow as tf","title":"via three colons"},{"location":"extensions/codehilite/#adding-line-numbers","text":"Line numbers can be added by enabling the linenums flag in your mkdocs.yml : markdown_extensions : - codehilite : linenums : true Example: ``` python Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] gt ; items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Adding line numbers"},{"location":"extensions/codehilite/#grouping-code-blocks","text":"The SuperFences extension which is part of the PyMdown Extensions package adds support for grouping code blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: ``` bash tab= Bash #!/bin/bash echo Hello world! ``` ``` c tab= C #include stdio.h int main(void) { printf( Hello world!\\n ); } ``` ``` c++ tab= C++ #include iostream int main() { std::cout Hello world! std::endl; return 0; } ``` ``` c# tab= C# using System; class Program { static void Main(string[] args) { Console.WriteLine( Hello world! ); } } ``` Result: Bash #!/bin/bash echo Hello world! C #include stdio.h int main ( void ) { printf ( Hello world! \\n ); } C++ #include iostream int main () { std :: cout Hello world! std :: endl ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( Hello world! ); } }","title":"Grouping code blocks"},{"location":"extensions/codehilite/#highlighting-specific-lines","text":"Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines= 3 4 Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 Bubble sort def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] gt ; items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Highlighting specific lines"},{"location":"extensions/codehilite/#supported-languages-excerpt","text":"CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt.","title":"Supported languages excerpt"},{"location":"extensions/codehilite/#bash","text":"#!/bin/bash for OPT in $@ do case $OPT in -f ) canonicalize = 1 ;; -n ) switchlf = -n ;; esac done # readlink -f function __readlink_f { target = $1 while test -n $target ; do filepath = $target cd ` dirname $filepath ` target = ` readlink $filepath ` done /bin/echo $switchlf ` pwd -P ` / ` basename $filepath ` } if [ ! $canonicalize ] ; then readlink $switchlf $@ else for file in $@ do case $file in -* ) ;; * ) __readlink_f $file ;; esac done fi exit $?","title":"Bash"},{"location":"extensions/codehilite/#c","text":"extern size_t pb_varint_scan ( const uint8_t data [], size_t left ) { assert ( data left ); left = left 10 ? 10 : left ; #ifdef __SSE2__ /* Mapping: remaining bytes == bitmask */ static const int mask_map [] = { 0x0000 , 0x0001 , 0x0003 , 0x0007 , 0x000F , 0x001F , 0x003F , 0x007F , 0x00FF , 0x01FF , 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128 (( const __m128i * ) data ); __m128i high = _mm_set1_epi8 ( 0x80 ); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8 ( _mm_and_si128 ( temp , high )); mask = ( mask mask_map [ left ]) ^ mask_map [ left ]; /* Count trailing zeroes */ return mask ? __builtin_ctz ( mask ) + 1 : 0 ; #else /* Linear scan */ size_t size = 0 ; while ( data [ size ++ ] 0x80 ) if ( !-- left ) return 0 ; return size ; #endif /* __SSE2__ */ }","title":"C"},{"location":"extensions/codehilite/#c_1","text":"Extension :: Extension ( const Descriptor * descriptor , const Descriptor * scope ) : descriptor_ ( descriptor ), scope_ ( scope ) { /* Extract full name for signature */ variables_ [ signature ] = descriptor_ - full_name (); /* Prepare message symbol */ variables_ [ message ] = StringReplace ( variables_ [ signature ], . , _ , true ); LowerString ( ( variables_ [ message ])); /* Suffix scope to identifiers, if given */ string suffix ( ); if ( scope_ ) { suffix = scope_ - full_name (); /* Check if the base and extension types are in the same package */ if ( ! scope_ - file () - package (). compare ( descriptor_ - file () - package ())) suffix = StripPrefixString ( suffix , scope_ - file () - package () + . ); /* Append to signature */ variables_ [ signature ] += .[ + suffix + ] ; suffix = _ + suffix ; } /* Prepare extension symbol */ variables_ [ extension ] = StringReplace ( suffix , . , _ , true ); LowerString ( ( variables_ [ extension ])); }","title":"C++"},{"location":"extensions/codehilite/#c35","text":"public static void Send ( Socket socket , byte [] buffer , int offset , int size , int timeout ) { int startTickCount = Environment . TickCount ; int sent = 0 ; do { if ( Environment . TickCount startTickCount + timeout ) throw new Exception ( Timeout. ); try { sent += socket . Send ( buffer , offset + sent , size - sent , SocketFlags . None ); } catch ( SocketException ex ) { if ( ex . SocketErrorCode == SocketError . WouldBlock || ex . SocketErrorCode == SocketError . IOPending || ex . SocketErrorCode == SocketError . NoBufferSpaceAvailable ) { /* Socket buffer is probably full, wait and try again */ Thread . Sleep ( 30 ); } else { throw ex ; } } } while ( sent size ); }","title":"C&#35;"},{"location":"extensions/codehilite/#clojure","text":"( clojure-version ) ( defn partition-when [ f ] ( fn [ rf ] ( let [ a ( java.util.ArrayList. ) fval ( volatile! false )] ( fn ([] ( rf )) ([ result ] ( let [ result ( if ( .isEmpty a ) result ( let [ v ( vec ( .toArray a ))] ;; Clear first ( .clear a ) ( unreduced ( rf result v ))))] ( rf result ))) ([ result input ] ( if-not ( and ( f input ) @ fval ) ( do ( vreset! fval true ) ( .add a input ) result ) ( let [ v ( vec ( .toArray a ))] ( .clear a ) ( let [ ret ( rf result v )] ( when-not ( reduced? ret ) ( .add a input )) ret )))))))) ( into [] ( partition-when # ( .startsWith % )) [ 1d 33 1 2 22 3 ])","title":"Clojure"},{"location":"extensions/codehilite/#diff","text":"Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log( hello world ); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ packages/services.web/{!(test)/**/,}*.js , packages/error/**/*.js ], - scripts: [ - grunt.js , - db/**/*.js - ], browser: [ packages/web/server.js , packages/web/server/**/*.js ,","title":"Diff"},{"location":"extensions/codehilite/#docker","text":"FROM ubuntu # Install vnc, xvfb in order to create a fake display and firefox RUN apt-get update apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c echo firefox /.bashrc EXPOSE 5900 CMD [ x11vnc , -forever , -usepw , -create ]","title":"Docker"},{"location":"extensions/codehilite/#elixir","text":"require Logger def accept ( port ) do { :ok , socket } = :gen_tcp . listen ( port , [ :binary , packet : :line , active : false , reuseaddr : true ]) Logger . info Accepting connections on port #{ port } loop_acceptor ( socket ) end defp loop_acceptor ( socket ) do { :ok , client } = :gen_tcp . accept ( socket ) serve ( client ) loop_acceptor ( socket ) end defp serve ( socket ) do socket | read_line () | write_line ( socket ) serve ( socket ) end defp read_line ( socket ) do { :ok , data } = :gen_tcp . recv ( socket , 0 ) data end defp write_line ( line , socket ) do :gen_tcp . send ( socket , line ) end","title":"Elixir"},{"location":"extensions/codehilite/#erlang","text":"circular ( Defs ) - [ { { Type , Base }, Fields } || { { Type , Base }, Fields } - Defs , Type == msg , circular ( Base , Defs ) ]. circular ( Base , Defs ) - Fields = proplists : get_value ({ msg , Base }, Defs ), circular ( Defs , Fields , [ Base ]). circular (_ Defs , [], _ Path ) - false ; circular ( Defs , [ Field | Fields ], Path ) - case Field #field.type of { msg , Type } - case lists : member ( Type , Path ) of false - Children = proplists : get_value ({ msg , Type }, Defs ), case circular ( Defs , Children , [ Type | Path ]) of false - circular ( Defs , Fields , Path ); true - true end ; true - Type == lists : last ( Path ) andalso ( length ( Path ) == 1 orelse not is_tree ( Path )) end ; _ - circular ( Defs , Fields , Path ) end .","title":"Erlang"},{"location":"extensions/codehilite/#f35","text":"/// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [ Js ] getRectangles () : Async Rectangle [] = async { let req = XMLHttpRequest () req . Open ( POST , /get , true ) let! resp = req . AsyncSend () return JSON . parse ( resp ) } /// Repeatedly update rectangles after 0.5 sec let [ Js ] updateLoop () = async { while true do do ! Async . Sleep ( 500 ) let! rects = getRectangles () cleanRectangles () rects | Array . iter createRectangle }","title":"F&#35;"},{"location":"extensions/codehilite/#go","text":"package main import fmt func counter ( id int , channel chan int , closer bool ) { for i := 0 ; i 10000000 ; i ++ { fmt . Println ( process , id , send , i ) channel - 1 } if closer { close ( channel ) } } func main () { channel := make ( chan int ) go counter ( 1 , channel , false ) go counter ( 2 , channel , true ) x := 0 // receiving data from channel for i := range channel { fmt . Println ( receiving ) x += i } fmt . Println ( x ) }","title":"Go"},{"location":"extensions/codehilite/#html","text":"!doctype html html class = no-js lang = head meta charset = utf-8 meta http-equiv = x-ua-compatible content = ie=edge title HTML5 Boilerplate / title meta name = description content = meta name = viewport content = width=device-width, initial-scale=1 link rel = apple-touch-icon href = apple-touch-icon.png link rel = stylesheet href = css/normalize.css link rel = stylesheet href = css/main.css script src = js/vendor/modernizr-2.8.3.min.js / script / head body p Hello world! This is HTML5 Boilerplate. / p / body / html","title":"HTML"},{"location":"extensions/codehilite/#java","text":"import java.util.LinkedList ; import java.lang.reflect.Array ; public class UnsortedHashSet E { private static final double LOAD_FACTOR_LIMIT = 0.7 ; private int size ; private LinkedList E [] con ; public UnsortedHashSet () { con = ( LinkedList E [])( new LinkedList [ 10 ]); } public boolean add ( E obj ) { int oldSize = size ; int index = Math . abs ( obj . hashCode ()) % con . length ; if ( con [ index ] == null ) con [ index ] = new LinkedList E (); if (! con [ index ]. contains ( obj )) { con [ index ]. add ( obj ); size ++; } if ( 1.0 * size / con . length LOAD_FACTOR_LIMIT ) resize (); return oldSize != size ; } private void resize () { UnsortedHashSet E temp = new UnsortedHashSet E (); temp . con = ( LinkedList E [])( new LinkedList [ con . length * 2 + 1 ]); for ( int i = 0 ; i con . length ; i ++) { if ( con [ i ] != null ) for ( E e : con [ i ]) temp . add ( e ); } con = temp . con ; } public int size () { return size ; } }","title":"Java"},{"location":"extensions/codehilite/#javascript","text":"var Math = require ( lib/math ); var _extends = function ( target ) { for ( var i = 1 ; i arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; var e = exports . e = 2.71828182846 ; exports [ default ] = function ( x ) { return Math . exp ( x ); }; module . exports = _extends ( exports [ default ], exports );","title":"JavaScript"},{"location":"extensions/codehilite/#json","text":"{ name : mkdocs-material , version : 0.2.4 , description : A Material Design theme for MkDocs , homepage : http://squidfunk.github.io/mkdocs-material/ , authors : [ squidfunk martin.donath@squidfunk.com ], license : MIT , main : Gulpfile.js , scripts : { start : ./node_modules/.bin/gulp watch --mkdocs , build : ./node_modules/.bin/gulp build --production } ... }","title":"JSON"},{"location":"extensions/codehilite/#julia","text":"using MXNet mlp = @mx . chain mx . Variable ( : data ) = mx . FullyConnected ( name =: fc1 , num_hidden = 128 ) = mx . Activation ( name =: relu1 , act_type =: relu ) = mx . FullyConnected ( name =: fc2 , num_hidden = 64 ) = mx . Activation ( name =: relu2 , act_type =: relu ) = mx . FullyConnected ( name =: fc3 , num_hidden = 10 ) = mx . SoftmaxOutput ( name =: softmax ) # data provider batch_size = 100 include ( Pkg . dir ( MXNet , examples , mnist , mnist-data.jl )) train_provider , eval_provider = get_mnist_providers ( batch_size ) # setup model model = mx . FeedForward ( mlp , context = mx . cpu ()) # optimization algorithm optimizer = mx . SGD ( lr = 0.1 , momentum = 0.9 ) # fit parameters mx . fit ( model , optimizer , train_provider , n_epoch = 20 , eval_data = eval_provider )","title":"Julia"},{"location":"extensions/codehilite/#lua","text":"local ffi = require ( ffi ) ffi . cdef [[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi . os == Windows then function sleep ( s ) ffi . C . Sleep ( s * 1000 ) end else function sleep ( s ) ffi . C . poll ( nil , 0 , s * 1000 ) end end for i = 1 , 160 do io.write ( . ); io.flush () sleep ( 0.01 ) end io.write ( \\n )","title":"Lua"},{"location":"extensions/codehilite/#mysql","text":"SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = 087652 ;","title":"MySQL"},{"location":"extensions/codehilite/#php","text":"?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller ; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ; use Symfony\\Component\\HttpFoundation\\Response ; class LuckyController { /** * @Route( /lucky/number ) */ public function numberAction () { $number = mt_rand ( 0 , 100 ); return new Response ( html body Lucky number: . $number . /body /html ); } }","title":"PHP"},{"location":"extensions/codehilite/#protocol-buffers","text":"syntax = proto2 ; package caffe ; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [ packed = true ]; } message BlobProto { optional BlobShape shape = 7 ; repeated float data = 5 [ packed = true ]; repeated float diff = 6 [ packed = true ]; // 4D dimensions -- deprecated. Use shape instead. optional int32 num = 1 [ default = 0 ]; optional int32 channels = 2 [ default = 0 ]; optional int32 height = 3 [ default = 0 ]; optional int32 width = 4 [ default = 0 ]; }","title":"Protocol Buffers"},{"location":"extensions/codehilite/#python","text":"A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf . app . flags FLAGS = flags . FLAGS flags . DEFINE_string ( data_dir , /tmp/data/ , Directory for storing data ) mnist = input_data . read_data_sets ( FLAGS . data_dir , one_hot = True ) sess = tf . InteractiveSession () # Create the model x = tf . placeholder ( tf . float32 , [ None , 784 ]) W = tf . Variable ( tf . zeros ([ 784 , 10 ])) b = tf . Variable ( tf . zeros ([ 10 ])) y = tf . nn . softmax ( tf . matmul ( x , W ) + b )","title":"Python"},{"location":"extensions/codehilite/#ruby","text":"require finity/event require finity/machine require finity/state require finity/transition require finity/version module Finity class InvalidCallback StandardError ; end class MissingCallback StandardError ; end class InvalidState StandardError ; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, block @finity ||= Machine . new self , options , block end # Return the names of all registered states. def states @finity . states . map { | name , _ | name } end # Return the names of all registered events. def events @finity . events . map { | name , _ | name } end end # Inject methods into the including class upon inclusion. def self . included base base . extend ClassMethods end end","title":"Ruby"},{"location":"extensions/codehilite/#xml","text":"?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE mainTag SYSTEM some.dtd [ENTITY % entity] ?oxygen RNGSchema= some.rng type= xml ? xs:main-Tag xmlns:xs= http://www.w3.org/2001/XMLSchema !-- This is a sample comment -- childTag attribute= Quoted Value another-attribute= Single quoted value a-third-attribute= 123 withTextContent Some text content /withTextContent withEntityContent Some text content with lt; entities gt; and mentioning uint8_t and int32_t /withEntityContent otherTag attribute= Single quoted Value / /childTag ![CDATA[ some CData ]] /main-Tag","title":"XML"},{"location":"extensions/footnotes/","text":"Footnotes Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation. Installation Add the following lines to your mkdocs.yml : markdown_extensions : - footnotes Usage The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document. Inserting the reference The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Inserting the content The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference. on a single line Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page on multiple lines Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Footnotes"},{"location":"extensions/footnotes/#footnotes","text":"Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation.","title":"Footnotes"},{"location":"extensions/footnotes/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - footnotes","title":"Installation"},{"location":"extensions/footnotes/#usage","text":"The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document.","title":"Usage"},{"location":"extensions/footnotes/#inserting-the-reference","text":"The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Inserting the reference"},{"location":"extensions/footnotes/#inserting-the-content","text":"The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference.","title":"Inserting the content"},{"location":"extensions/footnotes/#on-a-single-line","text":"Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page","title":"on a single line"},{"location":"extensions/footnotes/#on-multiple-lines","text":"Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"on multiple lines"},{"location":"extensions/metadata/","text":"Metadata The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context. Installation Add the following lines to your mkdocs.yml : markdown_extensions : - meta Usage Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material. Setting a hero text Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts Linking sources When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output. Redirecting to another page It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url . Overrides Page title The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title. Page description The page description can also be overridden on a per-document level: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value. Disqus As describe in the getting started guide , the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Chrome"},{"location":"extensions/metadata/#metadata","text":"The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context.","title":"Metadata"},{"location":"extensions/metadata/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - meta","title":"Installation"},{"location":"extensions/metadata/#usage","text":"Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material.","title":"Usage"},{"location":"extensions/metadata/#setting-a-hero-text","text":"Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts","title":"Setting a hero text"},{"location":"extensions/metadata/#linking-sources","text":"When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output.","title":"Linking sources"},{"location":"extensions/metadata/#redirecting-to-another-page","text":"It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url .","title":"Redirecting to another page"},{"location":"extensions/metadata/#overrides","text":"","title":"Overrides"},{"location":"extensions/metadata/#page-title","text":"The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title.","title":"Page title"},{"location":"extensions/metadata/#page-description","text":"The page description can also be overridden on a per-document level: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value.","title":"Page description"},{"location":"extensions/metadata/#disqus","text":"As describe in the getting started guide , the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Disqus"},{"location":"extensions/permalinks/","text":"Permalinks Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document. Installation To enable permalinks, add the following to your mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link Usage When enabled, permalinks are inserted automatically.","title":"Permalinks"},{"location":"extensions/permalinks/#permalinks","text":"Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document.","title":"Permalinks"},{"location":"extensions/permalinks/#installation","text":"To enable permalinks, add the following to your mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link","title":"Installation"},{"location":"extensions/permalinks/#usage","text":"When enabled, permalinks are inserted automatically.","title":"Usage"},{"location":"extensions/pymdown/","text":"PyMdown Extensions PyMdown Extensions is a collection of Markdown extensions that add some great features to the standard Markdown library. For this reason, the installation of this package is highly recommended as it's well-integrated with the Material theme. Installation The PyMdown Extensions package can be installed with the following command: pip install pymdown-extensions The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with the Material theme: markdown_extensions : - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde Usage Arithmatex MathJax Arithmatex integrates Material with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This must be done with additional JavaScript : extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime in extra_javascript which contains your MathJax configuration, e.g.: window . MathJax = { tex2jax : { inlineMath : [ [ \\\\( , \\\\) ] ], displayMath : [ [ \\\\[ , \\\\] ] ] }, TeX : { TagSide : right , TagIndent : .8em , MultLineWidth : 85% , equationNumbers : { autoNumber : AMS , }, unicode : { fonts : STIXGeneral, Arial Unicode MS } }, displayAlign : left , showProcessingMessages : false , messageStyle : none }; In your mkdocs.yml , include it with: extra_javascript : - javascripts/extra.js - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML Blocks Blocks are enclosed in $$ ... $$ which are placed on separate lines. Example: $$ \\frac {n ! }{k !( n - k )! } = \\binom {n}{k} $$ Result: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k} Inline Inline equations need to be enclosed in $ ... $ : Example: Lorem ipsum dolor sit amet: $ p ( x|y ) = \\frac {p ( y|x ) p ( x ) }{p ( y ) } $ Result: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)} BetterEm BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes . Caret Caret makes it possible to highlight inserted text . The portion of text that should be marked as added must be enclosed in two carets ^^...^^ . Critic Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. Details Details adds collapsible Admonition-style blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: How many Prolog programmers does it take to change a lightbulb? Yes. Emoji Emoji adds the ability to insert a -load of emojis that we use in our daily lives. See the EmojiOne demo for a list of all available emojis. Happy scrolling Legal disclaimer Material has no affiliation with EmojiOne which is released under CC BY 4.0 . When including EmojiOne images or CSS, please read the EmojiOne license to ensure proper usage and attribution. InlineHilite InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. var test = 0 ; and can be achived by prefixing inline code with a shebang and language identifier, e.g. #!js . MagicLink MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses. Mark Mark adds the ability to highlight text like it was marked with a text marker . The portion of text that should be highlighted must be enclosed in two equal signs ==...== . SmartSymbols SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows ( , , ), trademark and copyright symbols ( , , ) and fractions ( , , ...). SuperFences SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs . Tasklist Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Tilde Tilde provides an easy way to strike through cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"PyMdown Extensions"},{"location":"extensions/pymdown/#pymdown-extensions","text":"PyMdown Extensions is a collection of Markdown extensions that add some great features to the standard Markdown library. For this reason, the installation of this package is highly recommended as it's well-integrated with the Material theme.","title":"PyMdown Extensions"},{"location":"extensions/pymdown/#installation","text":"The PyMdown Extensions package can be installed with the following command: pip install pymdown-extensions The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with the Material theme: markdown_extensions : - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde","title":"Installation"},{"location":"extensions/pymdown/#usage","text":"","title":"Usage"},{"location":"extensions/pymdown/#arithmatex-mathjax","text":"Arithmatex integrates Material with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This must be done with additional JavaScript : extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime in extra_javascript which contains your MathJax configuration, e.g.: window . MathJax = { tex2jax : { inlineMath : [ [ \\\\( , \\\\) ] ], displayMath : [ [ \\\\[ , \\\\] ] ] }, TeX : { TagSide : right , TagIndent : .8em , MultLineWidth : 85% , equationNumbers : { autoNumber : AMS , }, unicode : { fonts : STIXGeneral, Arial Unicode MS } }, displayAlign : left , showProcessingMessages : false , messageStyle : none }; In your mkdocs.yml , include it with: extra_javascript : - javascripts/extra.js - https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML","title":"Arithmatex MathJax"},{"location":"extensions/pymdown/#blocks","text":"Blocks are enclosed in $$ ... $$ which are placed on separate lines. Example: $$ \\frac {n ! }{k !( n - k )! } = \\binom {n}{k} $$ Result: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k}","title":"Blocks"},{"location":"extensions/pymdown/#inline","text":"Inline equations need to be enclosed in $ ... $ : Example: Lorem ipsum dolor sit amet: $ p ( x|y ) = \\frac {p ( y|x ) p ( x ) }{p ( y ) } $ Result: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)}","title":"Inline"},{"location":"extensions/pymdown/#betterem","text":"BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes .","title":"BetterEm"},{"location":"extensions/pymdown/#caret","text":"Caret makes it possible to highlight inserted text . The portion of text that should be marked as added must be enclosed in two carets ^^...^^ .","title":"Caret"},{"location":"extensions/pymdown/#critic","text":"Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.","title":"Critic"},{"location":"extensions/pymdown/#details","text":"Details adds collapsible Admonition-style blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: How many Prolog programmers does it take to change a lightbulb? Yes.","title":"Details"},{"location":"extensions/pymdown/#emoji","text":"Emoji adds the ability to insert a -load of emojis that we use in our daily lives. See the EmojiOne demo for a list of all available emojis. Happy scrolling Legal disclaimer Material has no affiliation with EmojiOne which is released under CC BY 4.0 . When including EmojiOne images or CSS, please read the EmojiOne license to ensure proper usage and attribution.","title":"Emoji"},{"location":"extensions/pymdown/#inlinehilite","text":"InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. var test = 0 ; and can be achived by prefixing inline code with a shebang and language identifier, e.g. #!js .","title":"InlineHilite"},{"location":"extensions/pymdown/#magiclink","text":"MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses.","title":"MagicLink"},{"location":"extensions/pymdown/#mark","text":"Mark adds the ability to highlight text like it was marked with a text marker . The portion of text that should be highlighted must be enclosed in two equal signs ==...== .","title":"Mark"},{"location":"extensions/pymdown/#smartsymbols","text":"SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows ( , , ), trademark and copyright symbols ( , , ) and fractions ( , , ...).","title":"SmartSymbols"},{"location":"extensions/pymdown/#superfences","text":"SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs .","title":"SuperFences"},{"location":"extensions/pymdown/#tasklist","text":"Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi","title":"Tasklist"},{"location":"extensions/pymdown/#tilde","text":"Tilde provides an easy way to strike through cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"Tilde"},{"location":"iot/Alexa/","text":"\u8bed\u97f3\u52a9\u624b Alexa \u4e9a\u9a6c\u900a\u4e2d\u56fd\u73b0\u884c\u6f14\u8bb2\u4f1a; Alexa Alexa \u7528\u6237\u63a5\u53e3 \u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u56db\u4e2a\u8f6f\u4ef6\u6765\u548cAVS\u7cfb\u7edf\u4ea4\u4e92 Fire OS 3.0 or higherv Link Android 5.0 or higher Link iOS 9.0 or higher Link Desktop browsers by going to: Link Use Alexa Using Alexa Alexa Feature Help Alexa Feature Help Echo,Echo dot Get Started with Alexa Alexa \u8d2d\u4e70\u94fe\u63a5 Echo Alexa \u4e9a\u9a6c\u900a\u7684\u667a\u80fd\u97f3\u7bb1 Ehco \u662f\u4e00\u4e2a\u5c06\u8bed\u97f3\u6280\u672f\u642d\u8f7d\u5728\u9664\u8ba1\u7b97\u673a\u3001\u79fb\u52a8\u8bbe\u5907\u4ee5\u5916\u7684\u6210\u529f\u6848\u4f8b\uff0c\u5176\u9500\u91cf\u5f15\u7206\u4e9a\u9a6c\u900a\u7f51\u7ad9\uff0c\u5e76\u6210\u4e3a\u4e9a\u9a6c\u900a\u6709\u53f2\u4ee5\u6765\u6700\u6210\u529f\u7684\u4ea7\u54c1\u4e4b\u4e00\u3002\u968f\u540e\uff0c\u8fd9\u6b3e\u8bbe\u5907\u6240\u642d\u8f7d\u3001\u5e76\u4e14\u7531\u4e9a\u9a6c\u900a\u81ea\u8eab\u7814\u53d1\u7684\u8bed\u97f3\u52a9\u624b\u2014\u2014Alexa \u4e5f\u88ab\u9010\u6e10\u63a5\u5165\u5230\u5176\u4ed6\u786c\u4ef6\u8bbe\u5907\u4e2d\uff0c\u968f\u7740\u7b2c\u4e09\u65b9\u5f00\u53d1\u5e73\u53f0\u7684\u5f00\u653e\uff0c Alexa \u66f4\u662f\u7a81\u7834 10000 \u9879\u6280\u80fd\u5927\u5173\u3002 \u63a5\u5165\u7b2c\u4e09\u65b9\u786c\u4ef6\uff0c\u6db5\u76d6\u667a\u80fd\u97f3\u7bb1\u3001\u53ef\u7a7f\u6234\u3001\u8f66\u8f7d\u3001\u624b\u673a\u7b49\u8bbe\u5907 \u8d2d\u7269\u3001\u5bb6\u7535\u63a7\u5236\u3001\u64ad\u653e\u97f3\u4e50\u3001\u65b0\u95fb\u3001\u8bbe\u7f6e\u95f9\u949f\u7b49 \u5728\u8f6f\u4ef6\u4e0a\uff0c\u57fa\u4e8e AVS \u8fd9\u5957\u7cfb\u7edf\uff0cAlexa \u80fd\u591f\u5c06\u5e94\u7528\u7684\u4fe1\u606f\u63a8\u9001\u5230\u5ba2\u6237\u7684\u4ea7\u54c1\u4e2d\uff0c\u53e6\u5916\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5229\u7528\u81ea\u5df1\u7684\u6280\u672f\u548c\u4ea7\u54c1\u5b9e\u73b0\u4fe1\u606f\u7684\u4f20\u8f93\u3002 GoogleHome GoogleHome\u8d2d\u4e70 GoogleHome help GoogleHome Help Built in \u8bed\u97f3\u63a7\u5236\u786c\u4ef6 \u8bed\u97f3\u5b9e\u9a8c\u5ba4 \u7ffb\u5899\u5de5\u5177 Aws Avs \u8ba4\u8bc1\u5f00\u53d1\u5957\u4ef6","title":"Alexa"},{"location":"iot/Alexa/#_1","text":"","title":"\u8bed\u97f3\u52a9\u624b"},{"location":"iot/Alexa/#alexa","text":"\u4e9a\u9a6c\u900a\u4e2d\u56fd\u73b0\u884c\u6f14\u8bb2\u4f1a; Alexa","title":"Alexa"},{"location":"iot/Alexa/#alexa_1","text":"\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u56db\u4e2a\u8f6f\u4ef6\u6765\u548cAVS\u7cfb\u7edf\u4ea4\u4e92 Fire OS 3.0 or higherv Link Android 5.0 or higher Link iOS 9.0 or higher Link Desktop browsers by going to: Link","title":"Alexa \u7528\u6237\u63a5\u53e3"},{"location":"iot/Alexa/#use-alexa","text":"Using Alexa","title":"Use Alexa"},{"location":"iot/Alexa/#alexa-feature-help","text":"Alexa Feature Help Echo,Echo dot Get Started with Alexa","title":"Alexa Feature Help"},{"location":"iot/Alexa/#alexa_2","text":"Echo Alexa \u4e9a\u9a6c\u900a\u7684\u667a\u80fd\u97f3\u7bb1 Ehco \u662f\u4e00\u4e2a\u5c06\u8bed\u97f3\u6280\u672f\u642d\u8f7d\u5728\u9664\u8ba1\u7b97\u673a\u3001\u79fb\u52a8\u8bbe\u5907\u4ee5\u5916\u7684\u6210\u529f\u6848\u4f8b\uff0c\u5176\u9500\u91cf\u5f15\u7206\u4e9a\u9a6c\u900a\u7f51\u7ad9\uff0c\u5e76\u6210\u4e3a\u4e9a\u9a6c\u900a\u6709\u53f2\u4ee5\u6765\u6700\u6210\u529f\u7684\u4ea7\u54c1\u4e4b\u4e00\u3002\u968f\u540e\uff0c\u8fd9\u6b3e\u8bbe\u5907\u6240\u642d\u8f7d\u3001\u5e76\u4e14\u7531\u4e9a\u9a6c\u900a\u81ea\u8eab\u7814\u53d1\u7684\u8bed\u97f3\u52a9\u624b\u2014\u2014Alexa \u4e5f\u88ab\u9010\u6e10\u63a5\u5165\u5230\u5176\u4ed6\u786c\u4ef6\u8bbe\u5907\u4e2d\uff0c\u968f\u7740\u7b2c\u4e09\u65b9\u5f00\u53d1\u5e73\u53f0\u7684\u5f00\u653e\uff0c Alexa \u66f4\u662f\u7a81\u7834 10000 \u9879\u6280\u80fd\u5927\u5173\u3002","title":"Alexa \u8d2d\u4e70\u94fe\u63a5"},{"location":"iot/Alexa/#_2","text":"\u8d2d\u7269\u3001\u5bb6\u7535\u63a7\u5236\u3001\u64ad\u653e\u97f3\u4e50\u3001\u65b0\u95fb\u3001\u8bbe\u7f6e\u95f9\u949f\u7b49","title":"\u63a5\u5165\u7b2c\u4e09\u65b9\u786c\u4ef6\uff0c\u6db5\u76d6\u667a\u80fd\u97f3\u7bb1\u3001\u53ef\u7a7f\u6234\u3001\u8f66\u8f7d\u3001\u624b\u673a\u7b49\u8bbe\u5907"},{"location":"iot/Alexa/#avs-alexa","text":"","title":"\u5728\u8f6f\u4ef6\u4e0a\uff0c\u57fa\u4e8e AVS \u8fd9\u5957\u7cfb\u7edf\uff0cAlexa \u80fd\u591f\u5c06\u5e94\u7528\u7684\u4fe1\u606f\u63a8\u9001\u5230\u5ba2\u6237\u7684\u4ea7\u54c1\u4e2d\uff0c\u53e6\u5916\uff0c\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u5229\u7528\u81ea\u5df1\u7684\u6280\u672f\u548c\u4ea7\u54c1\u5b9e\u73b0\u4fe1\u606f\u7684\u4f20\u8f93\u3002"},{"location":"iot/Alexa/#googlehome","text":"GoogleHome\u8d2d\u4e70","title":"GoogleHome"},{"location":"iot/Alexa/#googlehome-help","text":"GoogleHome Help","title":"GoogleHome help"},{"location":"iot/Alexa/#built-in","text":"\u8bed\u97f3\u63a7\u5236\u786c\u4ef6 \u8bed\u97f3\u5b9e\u9a8c\u5ba4 \u7ffb\u5899\u5de5\u5177 Aws Avs \u8ba4\u8bc1\u5f00\u53d1\u5957\u4ef6","title":"Built in"},{"location":"iot/awsiot/","text":"aws IOT \u5b9e\u73b0\u65b9\u6848 \u89d2\u8272: arn:aws:iam::223598429371:role/lambda_invoke_function_assume_apigw_role /2015-03-31/functions/arn:aws:lambda:us-east-1:223598429371:function:Calc/invocations AWS CloudFormation \u6982\u5ff5 \u6a21\u677f \u5806\u6808 \u66f4\u6539\u96c6 \u5229\u7528 CodePipeline \u8fdb\u884c\u6301\u7eed\u4ea4\u4ed8 \u6301\u7eed\u4ea4\u4ed8\u662f\u4e00\u79cd\u53d1\u5e03\u5b9e\u8df5\uff0c\u901a\u8fc7\u8be5\u5b9e\u8df5\u53ef\u4ee5\u81ea\u52a8\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u51c6\u5907\u4ee3\u7801\u66f4\u6539\u4ee5\u4fbf\u6295\u4ea7 \u6301\u7eed\u4ea4\u4ed8 https://aws.amazon.com/cn/devops/continuous-delivery/ AWS CodeBuild https://aws.amazon.com/cn/codebuild/ \u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898 \u5b89\u88c5CLI \u547d\u4ee4\u884c\u63a5\u53e3\u5b89\u88c5 \u5982\u4f55\u6807\u8bb0\u4e00\u6b3e\u4ea7\u54c1\u548c\u591a\u4e2a\u8bbe\u5907 productid : IoT \u8bbe\u5907 ID accessToken: IoT \u8bbe\u5907 Token timestamp : \u8bc1\u4e66\u7533\u8bf7\u65f6\u95f4\u6233 applyState : \u7533\u8bf7\u72b6\u6001\uff08\u5982\u679c\u7533\u8bf7\u8fc7\u8bc1\u4e66\u8bbe\u7f6e\u4e3a-1\uff0c\u6807\u8bb0\u6b64\u8bbe\u5907\u5df2\u7ecf\u6ce8\u518c\u8fc7\u8bc1\u4e66\u4e86\uff09 certID : \u8bbe\u5907\u5173\u8054\u7684\u8bc1\u4e66 ID \u7269\u8054\u7f51\u8bbe\u5907\u5f80\u5f80\u6ca1\u6709\u5c4f\u5e55\uff0c\u4e5f\u6ca1\u6709\u5de5\u4f5c\u4eba\u5458\u5728\u8bbe\u5907\u524d\u8fdb\u884c\u624b\u52a8\u7ba1\u7406\u3002 \u5347\u7ea7\u64cd\u4f5c\u5982\u4f55\u89e6\u53d1\uff1f\u5347\u7ea7\u5931\u8d25\u540e\u5982\u4f55\u56de\u6eda\uff0c\u5e76\u4e0a\u62a5\u5347\u7ea7\u72b6\u6001\uff1f \u5728\u7269\u8054\u7f51\u591a\u4eba\u6743\u9650\u7ba1\u7406\u7684\u573a\u666f\u4e2d \u6211\u4eec\u4f7f\u7528 STS \u670d\u52a1\u5206\u53d1\u4e34\u65f6\u51ed\u8bc1\uff0c\u4ee5\u6ee1\u8db3\u6743\u9650\u7684\u7ec6\u7c92\u5ea6\u63a7\u5236 \u591a\u4e2aAPP\u7684\u4ea4\u4e92\u95ee\u9898 \u591a\u4e2a\u63a7\u5236\u7aef APP \u4ea4\u4e92\u7ba1\u7406\u591a\u4e2a\u8bbe\u5907 \u5728 IoT \u573a\u666f\u4e0b\uff0c\u8003\u8651\u5230\u8bbe\u5907\u4e0e\u670d\u52a1\u7aef\u7684\u4ea4\u4e92\u7684\u9ad8\u53ef\u7528\u6027\uff0c\u4ee5\u53ca\u5bf9\u65f6\u95f4\u548c\u8d44\u6e90\u8c03\u5ea6\u7684\u4e0d\u53ef\u9884\u77e5\u6027 \u5229\u7528 API Gateway \u548c Lambda \u7ec4\u5408\u7684\u65e0\u670d\u52a1\u5668\u67b6\u6784\u65b9\u5f0f\u53ef\u4ee5\u66f4\u597d\u7684\u6ee1\u8db3\u5b9e\u9645\u4f7f\u7528\u9700\u6c42\u3002\u8fd9\u662f\u56e0\u4e3a API Gateway \u548c Lambda \u6309\u7167\u8bf7\u6c42\u6570\u91cf\u548c\u6301\u7eed\u65f6\u95f4\u8fdb\u884c\u8ba1\u8d39\uff0c\u65e0\u9700\u7ba1\u7406\u670d\u52a1\u5668\uff0c\u5e76\u83b7\u5f97\u6301\u7eed\u6269\u5c55\u7684\u80fd\u529b\u3002 \u90a3\u4e48\u8bbe\u5907\u53c8\u5982\u4f55\u8fde\u63a5\u5230\u4e91\u7aef\u5462\uff1f AWS IoT \u63d0\u4f9b\u4e86 MQTT, MQTT over WebSocket, HTTP \u4e09\u79cd\u63a5\u5165\u65b9\u5f0f MQTT \u6216 MQTT over WebSocket \u652f\u6301\u4e91\u7aef\u4e3b\u52a8\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6d88\u606f\uff0c\u800c HTTP \u5219\u4e0d\u80fd\u3002 \u4e91\u7aef\u53c8\u5982\u4f55\u505a\u8eab\u4efd\u8bc6\u522b\u7684\u5462\uff1f X.509 \u8bbe\u5907\u8bc1\u4e66\u548c HTTP SigV4 \u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f AWS \u63d0\u4f9b\u4e86\u591a\u79cd\u8bc1\u4e66\u4e0b\u53d1\u7684\u65b9\u5f0f \u5982\u679c\u4f7f\u7528\u60a8\u81ea\u5df1\u7684 CA \u7b7e\u53d1\u7684\u8bbe\u5907\u8bc1\u4e66\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 JITR(Just-In-Time-Registration) \u6216 JITP(Just-In-Time-Provision) \u7684\u65b9\u5f0f\u5c06\u8bbe\u5907\u8fde\u63a5\u81f3\u4e91\u7aef\u5e76\u6307\u5b9a\u76f8\u5173\u63a7\u5236\u7b56\u7565\uff1b\u5982\u679c\u4f7f\u7528 AWS IoT Core \u7b7e\u53d1\u7684\u8bbe\u5907\u8bc1\u4e66\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 CVM(Certificate Vendor Machine) \u7684\u65b9\u5f0f\u5c06\u8bbe\u5907\u8fde\u63a5\u81f3\u4e91\u7aef\u5e76\u63a7\u5236\u76f8\u5173\u63a7\u5236\u7b56\u7565\uff1b\u5f53\u7136\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4f7f\u7528 AWS IOT API \u5b9a\u5236\u81ea\u5df1\u7684\u8eab\u4efd\u8ba4\u8bc1\u8fc7\u7a0b\u3002 \u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4f7f\u7528 AWS IOT API \u5b9a\u5236\u81ea\u5df1\u7684\u8eab\u4efd\u8ba4\u8bc1\u8fc7\u7a0b\u3002 \u8bbe\u5907\u9884\u914d\u7f6e \u5982\u679c\u4f7f\u7528\u60a8\u81ea\u5df1\u7684 CA \u7b7e\u53d1\u7684\u8bbe\u5907\u8bc1\u4e66 \u60a8\u53ef\u4ee5\u901a\u8fc7 JITR(Just-In-Time-Registration) JITP(Just-In-Time-Provision) AWS \u7684\u670d\u52a1\u8fdb\u884c\u67b6\u6784\u8bbe\u8ba1\u548c\u4e1a\u52a1\u903b\u8f91\u8bbe\u8ba1 IoT Core: \u7528\u4e8e\u8bbe\u5907\u8fde\u63a5\uff0c\u8bbe\u5907\u7ba1\u7406\uff0c\u8bbe\u5907\u8ba4\u8bc1\uff0c\u6d88\u606f\u8f6c\u53d1\u3002 Lambda: \u63d0\u4f9b\u8bbe\u5907\u914d\u7f6e\u4fe1\u606f\uff0c\u8c03\u7528 AWS IoT Core API, DynamoDB API\u3002 API Gateway: \u7ba1\u7406\u7ef4\u62a4 Restful API\uff0c\u5e76\u4e14\u89e6\u53d1 Lambda\u3002 DynamoDB: \u5b58\u653e\u7528\u6237\u548c\u8bbe\u5907\u7684\u7ed1\u5b9a\u5173\u7cfb\u3002 STS: \u83b7\u5f97 AWS \u4e34\u65f6\u6388\u6743\uff0c\u7528\u4e8e\u8bbe\u5907\u8fde\u63a5\u81f3 IoT Core\u3002 CloudFormation: \u5e2e\u52a9\u7528\u6237\u5728\u4e0d\u540c\u5730\u533a\u5feb\u901f\u90e8\u7f72\u76f8\u540c\u7684\u67b6\u6784\u3001\u670d\u52a1\u3002 \u7269\u8054\u7f51\u573a\u666f\u4e2d\uff0c\u7ec8\u7aef\u8bbe\u5907\u7684\u751f\u4ea7\u8005\u548c\u9500\u552e\u8005\u5f80\u5f80\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\uff0c\u800c\u4ea7\u54c1\u7684\u6700\u7ec8\u4f7f\u7528\u5730\u70b9\u4e5f\u53ef\u80fd\u56e0\u4e3a\u9500\u552e\u8def\u5f84\u7684\u4e0d\u540c\u800c\u6709\u5dee\u5f02\u3002\u4e3a\u4e86\u5728\u5168\u7403\u533a\u57df\u63d0\u4f9b\u76f8\u540c\u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u8bbe\u5907\u5e94\u8be5\u80fd\u591f\u6839\u636e\u5176\u6240\u5728\u7684\u533a\u57df\u8fdb\u884c\u81ea\u53d1\u6027\u7684\u8fde\u63a5\u9009\u62e9\uff0c\u5e76\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u63d0\u4f9b\u66f4\u4f4e\u7684\u7f51\u7edc\u65f6\u5ef6\u3002\u4f5c\u4e3a IoT \u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u9700\u8981\u8bbe\u8ba1\u90e8\u7f72\u4e00\u5957\u8de8\u533a\u57df\u7684\u5408\u7406\u67b6\u6784\u4ece\u800c\u6ee1\u8db3\u8fd9\u6837\u7684\u9700\u6c42\u3002 \u7269\u8054\u7f51\u8bbe\u5907\u5168\u7403\u90e8\u7f72\u67b6\u6784\u65b9\u6848 \u533a\u57df\u8bbe\u7f6e \u8981\u5c06 REST API \u4e0e Lambda \u96c6\u6210\uff0c\u60a8\u5fc5\u987b\u9009\u62e9\u4e00\u4e2a\u540c\u65f6\u63d0\u4f9b API Gateway \u548c Lambda \u670d\u52a1\u7684\u533a\u57df\u3002\u6709\u5173\u533a\u57df\u53ef\u7528\u6027\uff0c\u8bf7\u53c2\u9605\u533a\u57df\u548c\u7ec8\u7aef\u8282\u70b9\u3002 API \u7ec8\u7aef\u8282\u70b9 API Gateway \u4e2d\u90e8\u7f72\u5230\u7279\u5b9a\u533a\u57df\u7684 API \u7684\u4e3b\u673a\u540d\u3002\u4e3b\u673a\u540d\u7684\u683c\u5f0f\u662f {api-id}.execute-api.{region}.amazonaws.com\u3002\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\u7684 API \u7ec8\u7aef\u8282\u70b9\uff1a \u8fb9\u7f18\u4f18\u5316\u7684 API \u7ec8\u7aef\u8282\u70b9 \u79c1\u6709 API \u7ec8\u7aef\u8282\u70b9 \u533a\u57df API \u7ec8\u7aef\u8282\u70b9 Alexa \u6848\u4f8b Alexa \u6848\u4f8b Alexa \u5f00\u53d1\u6e90\u4ee3\u7801 Lambda\u6821\u9a8c\u8eab\u4efd\u6d41\u7a0b API GateWay\u6388\u6743\u63a7\u5236 API Gateway\u6388\u6743\u63a7\u5236 IAM \u6743\u9650 Lambda \u6388\u6743\u65b9 Amazon Cognito \u7528\u6237\u6c60 \u7edf\u8ba1\u4f7f\u7528\u60c5\u51b5 \u4f7f\u7528\u65b9\u5f0f \u60a8\u53ef\u4ee5\u4f7f\u7528 API Gateway \u63a7\u5236\u53f0 API Gateway REST API AWS CLI \u67d0\u4e2a AWS \u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u5305\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u548c\u5176\u4ed6\u4efb\u52a1 \u533a\u57df\u548c\u7ec8\u7aef\u8282\u70b9 API Gateway https://stackoverflow.com/questions/55594587/setup-a-basic-websocket-mock-in-aws-apigateway IoT\u8bbe\u5907\u7684\u72b6\u6001\u63a7\u5236\u548c\u6570\u636e\u5206\u6790 AWS IoT DAY-Shenzhen-AWS IoT\u8bbe\u5907\u7684\u72b6\u6001\u63a7\u5236\u548c\u6570\u636e\u5206\u6790 APIGateway Access DynamoDB \u5c06 AWS Lambda \u4e0e Amazon API Gateway \u7ed3\u5408\u4f7f\u7528 \u5728 API Gateway \u4e2d\u4e3a AWS Lambda \u51fd\u6570\u521b\u5efa REST API \u5728 API Gateway \u4e2d\u521b\u5efa REST API \u4f5c\u4e3a Amazon S3 \u4ee3\u7406 CVM \u5b9e\u73b0\u67b6\u6784 https://github.com/awslabs \u4e50\u946b\u4ee3\u7801 https://github.com/EspressifApp/EsptouchForAndroid \u4e50\u946bAndroid \u4ee3\u7801: https://github.com/EspressifApp/IOT-Espressif-Android https://github.com/aws-samples/aws-iot-elf https://github.com/aws-samples/aws-iot-elf/blob/master/elf.py aws example \u4e9a\u9a6c\u900a\u5f00\u53d1\u6848\u4f8b Python\u6ce8\u518c\u4e9a\u9a6c\u900aIOT Core Things","title":"AWSIOT"},{"location":"iot/awsiot/#aws-iot","text":"\u89d2\u8272: arn:aws:iam::223598429371:role/lambda_invoke_function_assume_apigw_role /2015-03-31/functions/arn:aws:lambda:us-east-1:223598429371:function:Calc/invocations","title":"aws IOT \u5b9e\u73b0\u65b9\u6848"},{"location":"iot/awsiot/#aws-cloudformation","text":"","title":"AWS CloudFormation \u6982\u5ff5"},{"location":"iot/awsiot/#_1","text":"","title":"\u6a21\u677f"},{"location":"iot/awsiot/#_2","text":"","title":"\u5806\u6808"},{"location":"iot/awsiot/#_3","text":"","title":"\u66f4\u6539\u96c6"},{"location":"iot/awsiot/#codepipeline","text":"\u6301\u7eed\u4ea4\u4ed8\u662f\u4e00\u79cd\u53d1\u5e03\u5b9e\u8df5\uff0c\u901a\u8fc7\u8be5\u5b9e\u8df5\u53ef\u4ee5\u81ea\u52a8\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u51c6\u5907\u4ee3\u7801\u66f4\u6539\u4ee5\u4fbf\u6295\u4ea7","title":"\u5229\u7528 CodePipeline \u8fdb\u884c\u6301\u7eed\u4ea4\u4ed8"},{"location":"iot/awsiot/#_4","text":"https://aws.amazon.com/cn/devops/continuous-delivery/","title":"\u6301\u7eed\u4ea4\u4ed8"},{"location":"iot/awsiot/#aws-codebuild","text":"https://aws.amazon.com/cn/codebuild/","title":"AWS CodeBuild"},{"location":"iot/awsiot/#_5","text":"","title":"\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898"},{"location":"iot/awsiot/#cli","text":"\u547d\u4ee4\u884c\u63a5\u53e3\u5b89\u88c5","title":"\u5b89\u88c5CLI"},{"location":"iot/awsiot/#_6","text":"productid : IoT \u8bbe\u5907 ID accessToken: IoT \u8bbe\u5907 Token timestamp : \u8bc1\u4e66\u7533\u8bf7\u65f6\u95f4\u6233 applyState : \u7533\u8bf7\u72b6\u6001\uff08\u5982\u679c\u7533\u8bf7\u8fc7\u8bc1\u4e66\u8bbe\u7f6e\u4e3a-1\uff0c\u6807\u8bb0\u6b64\u8bbe\u5907\u5df2\u7ecf\u6ce8\u518c\u8fc7\u8bc1\u4e66\u4e86\uff09 certID : \u8bbe\u5907\u5173\u8054\u7684\u8bc1\u4e66 ID","title":"\u5982\u4f55\u6807\u8bb0\u4e00\u6b3e\u4ea7\u54c1\u548c\u591a\u4e2a\u8bbe\u5907"},{"location":"iot/awsiot/#_7","text":"\u5347\u7ea7\u64cd\u4f5c\u5982\u4f55\u89e6\u53d1\uff1f\u5347\u7ea7\u5931\u8d25\u540e\u5982\u4f55\u56de\u6eda\uff0c\u5e76\u4e0a\u62a5\u5347\u7ea7\u72b6\u6001\uff1f","title":"\u7269\u8054\u7f51\u8bbe\u5907\u5f80\u5f80\u6ca1\u6709\u5c4f\u5e55\uff0c\u4e5f\u6ca1\u6709\u5de5\u4f5c\u4eba\u5458\u5728\u8bbe\u5907\u524d\u8fdb\u884c\u624b\u52a8\u7ba1\u7406\u3002"},{"location":"iot/awsiot/#_8","text":"\u6211\u4eec\u4f7f\u7528 STS \u670d\u52a1\u5206\u53d1\u4e34\u65f6\u51ed\u8bc1\uff0c\u4ee5\u6ee1\u8db3\u6743\u9650\u7684\u7ec6\u7c92\u5ea6\u63a7\u5236","title":"\u5728\u7269\u8054\u7f51\u591a\u4eba\u6743\u9650\u7ba1\u7406\u7684\u573a\u666f\u4e2d"},{"location":"iot/awsiot/#app","text":"\u591a\u4e2a\u63a7\u5236\u7aef APP \u4ea4\u4e92\u7ba1\u7406\u591a\u4e2a\u8bbe\u5907","title":"\u591a\u4e2aAPP\u7684\u4ea4\u4e92\u95ee\u9898"},{"location":"iot/awsiot/#iot","text":"\u5229\u7528 API Gateway \u548c Lambda \u7ec4\u5408\u7684\u65e0\u670d\u52a1\u5668\u67b6\u6784\u65b9\u5f0f\u53ef\u4ee5\u66f4\u597d\u7684\u6ee1\u8db3\u5b9e\u9645\u4f7f\u7528\u9700\u6c42\u3002\u8fd9\u662f\u56e0\u4e3a API Gateway \u548c Lambda \u6309\u7167\u8bf7\u6c42\u6570\u91cf\u548c\u6301\u7eed\u65f6\u95f4\u8fdb\u884c\u8ba1\u8d39\uff0c\u65e0\u9700\u7ba1\u7406\u670d\u52a1\u5668\uff0c\u5e76\u83b7\u5f97\u6301\u7eed\u6269\u5c55\u7684\u80fd\u529b\u3002","title":"\u5728 IoT \u573a\u666f\u4e0b\uff0c\u8003\u8651\u5230\u8bbe\u5907\u4e0e\u670d\u52a1\u7aef\u7684\u4ea4\u4e92\u7684\u9ad8\u53ef\u7528\u6027\uff0c\u4ee5\u53ca\u5bf9\u65f6\u95f4\u548c\u8d44\u6e90\u8c03\u5ea6\u7684\u4e0d\u53ef\u9884\u77e5\u6027"},{"location":"iot/awsiot/#_9","text":"AWS IoT \u63d0\u4f9b\u4e86 MQTT, MQTT over WebSocket, HTTP \u4e09\u79cd\u63a5\u5165\u65b9\u5f0f MQTT \u6216 MQTT over WebSocket \u652f\u6301\u4e91\u7aef\u4e3b\u52a8\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u6d88\u606f\uff0c\u800c HTTP \u5219\u4e0d\u80fd\u3002","title":"\u90a3\u4e48\u8bbe\u5907\u53c8\u5982\u4f55\u8fde\u63a5\u5230\u4e91\u7aef\u5462\uff1f"},{"location":"iot/awsiot/#_10","text":"X.509 \u8bbe\u5907\u8bc1\u4e66\u548c HTTP SigV4 \u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f","title":"\u4e91\u7aef\u53c8\u5982\u4f55\u505a\u8eab\u4efd\u8bc6\u522b\u7684\u5462\uff1f"},{"location":"iot/awsiot/#aws","text":"\u5982\u679c\u4f7f\u7528\u60a8\u81ea\u5df1\u7684 CA \u7b7e\u53d1\u7684\u8bbe\u5907\u8bc1\u4e66\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 JITR(Just-In-Time-Registration) \u6216 JITP(Just-In-Time-Provision) \u7684\u65b9\u5f0f\u5c06\u8bbe\u5907\u8fde\u63a5\u81f3\u4e91\u7aef\u5e76\u6307\u5b9a\u76f8\u5173\u63a7\u5236\u7b56\u7565\uff1b\u5982\u679c\u4f7f\u7528 AWS IoT Core \u7b7e\u53d1\u7684\u8bbe\u5907\u8bc1\u4e66\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 CVM(Certificate Vendor Machine) \u7684\u65b9\u5f0f\u5c06\u8bbe\u5907\u8fde\u63a5\u81f3\u4e91\u7aef\u5e76\u63a7\u5236\u76f8\u5173\u63a7\u5236\u7b56\u7565\uff1b\u5f53\u7136\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4f7f\u7528 AWS IOT API \u5b9a\u5236\u81ea\u5df1\u7684\u8eab\u4efd\u8ba4\u8bc1\u8fc7\u7a0b\u3002","title":"AWS \u63d0\u4f9b\u4e86\u591a\u79cd\u8bc1\u4e66\u4e0b\u53d1\u7684\u65b9\u5f0f"},{"location":"iot/awsiot/#aws-iot-api","text":"\u8bbe\u5907\u9884\u914d\u7f6e \u5982\u679c\u4f7f\u7528\u60a8\u81ea\u5df1\u7684 CA \u7b7e\u53d1\u7684\u8bbe\u5907\u8bc1\u4e66 \u60a8\u53ef\u4ee5\u901a\u8fc7 JITR(Just-In-Time-Registration) JITP(Just-In-Time-Provision) AWS \u7684\u670d\u52a1\u8fdb\u884c\u67b6\u6784\u8bbe\u8ba1\u548c\u4e1a\u52a1\u903b\u8f91\u8bbe\u8ba1 IoT Core: \u7528\u4e8e\u8bbe\u5907\u8fde\u63a5\uff0c\u8bbe\u5907\u7ba1\u7406\uff0c\u8bbe\u5907\u8ba4\u8bc1\uff0c\u6d88\u606f\u8f6c\u53d1\u3002 Lambda: \u63d0\u4f9b\u8bbe\u5907\u914d\u7f6e\u4fe1\u606f\uff0c\u8c03\u7528 AWS IoT Core API, DynamoDB API\u3002 API Gateway: \u7ba1\u7406\u7ef4\u62a4 Restful API\uff0c\u5e76\u4e14\u89e6\u53d1 Lambda\u3002 DynamoDB: \u5b58\u653e\u7528\u6237\u548c\u8bbe\u5907\u7684\u7ed1\u5b9a\u5173\u7cfb\u3002 STS: \u83b7\u5f97 AWS \u4e34\u65f6\u6388\u6743\uff0c\u7528\u4e8e\u8bbe\u5907\u8fde\u63a5\u81f3 IoT Core\u3002 CloudFormation: \u5e2e\u52a9\u7528\u6237\u5728\u4e0d\u540c\u5730\u533a\u5feb\u901f\u90e8\u7f72\u76f8\u540c\u7684\u67b6\u6784\u3001\u670d\u52a1\u3002 \u7269\u8054\u7f51\u573a\u666f\u4e2d\uff0c\u7ec8\u7aef\u8bbe\u5907\u7684\u751f\u4ea7\u8005\u548c\u9500\u552e\u8005\u5f80\u5f80\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\uff0c\u800c\u4ea7\u54c1\u7684\u6700\u7ec8\u4f7f\u7528\u5730\u70b9\u4e5f\u53ef\u80fd\u56e0\u4e3a\u9500\u552e\u8def\u5f84\u7684\u4e0d\u540c\u800c\u6709\u5dee\u5f02\u3002\u4e3a\u4e86\u5728\u5168\u7403\u533a\u57df\u63d0\u4f9b\u76f8\u540c\u7684\u4f7f\u7528\u4f53\u9a8c\uff0c\u8bbe\u5907\u5e94\u8be5\u80fd\u591f\u6839\u636e\u5176\u6240\u5728\u7684\u533a\u57df\u8fdb\u884c\u81ea\u53d1\u6027\u7684\u8fde\u63a5\u9009\u62e9\uff0c\u5e76\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u63d0\u4f9b\u66f4\u4f4e\u7684\u7f51\u7edc\u65f6\u5ef6\u3002\u4f5c\u4e3a IoT \u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u9700\u8981\u8bbe\u8ba1\u90e8\u7f72\u4e00\u5957\u8de8\u533a\u57df\u7684\u5408\u7406\u67b6\u6784\u4ece\u800c\u6ee1\u8db3\u8fd9\u6837\u7684\u9700\u6c42\u3002 \u7269\u8054\u7f51\u8bbe\u5907\u5168\u7403\u90e8\u7f72\u67b6\u6784\u65b9\u6848","title":"\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4f7f\u7528 AWS IOT API \u5b9a\u5236\u81ea\u5df1\u7684\u8eab\u4efd\u8ba4\u8bc1\u8fc7\u7a0b\u3002"},{"location":"iot/awsiot/#_11","text":"\u8981\u5c06 REST API \u4e0e Lambda \u96c6\u6210\uff0c\u60a8\u5fc5\u987b\u9009\u62e9\u4e00\u4e2a\u540c\u65f6\u63d0\u4f9b API Gateway \u548c Lambda \u670d\u52a1\u7684\u533a\u57df\u3002\u6709\u5173\u533a\u57df\u53ef\u7528\u6027\uff0c\u8bf7\u53c2\u9605\u533a\u57df\u548c\u7ec8\u7aef\u8282\u70b9\u3002 API \u7ec8\u7aef\u8282\u70b9 API Gateway \u4e2d\u90e8\u7f72\u5230\u7279\u5b9a\u533a\u57df\u7684 API \u7684\u4e3b\u673a\u540d\u3002\u4e3b\u673a\u540d\u7684\u683c\u5f0f\u662f {api-id}.execute-api.{region}.amazonaws.com\u3002\u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\u7684 API \u7ec8\u7aef\u8282\u70b9\uff1a \u8fb9\u7f18\u4f18\u5316\u7684 API \u7ec8\u7aef\u8282\u70b9 \u79c1\u6709 API \u7ec8\u7aef\u8282\u70b9 \u533a\u57df API \u7ec8\u7aef\u8282\u70b9","title":"\u533a\u57df\u8bbe\u7f6e"},{"location":"iot/awsiot/#alexa","text":"Alexa \u6848\u4f8b Alexa \u5f00\u53d1\u6e90\u4ee3\u7801 Lambda\u6821\u9a8c\u8eab\u4efd\u6d41\u7a0b","title":"Alexa \u6848\u4f8b"},{"location":"iot/awsiot/#api-gateway","text":"API Gateway\u6388\u6743\u63a7\u5236 IAM \u6743\u9650 Lambda \u6388\u6743\u65b9 Amazon Cognito \u7528\u6237\u6c60 \u7edf\u8ba1\u4f7f\u7528\u60c5\u51b5 \u4f7f\u7528\u65b9\u5f0f \u60a8\u53ef\u4ee5\u4f7f\u7528 API Gateway \u63a7\u5236\u53f0 API Gateway REST API AWS CLI \u67d0\u4e2a AWS \u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u5305\u6267\u884c\u8fd9\u4e9b\u4efb\u52a1\u548c\u5176\u4ed6\u4efb\u52a1 \u533a\u57df\u548c\u7ec8\u7aef\u8282\u70b9","title":"API GateWay\u6388\u6743\u63a7\u5236"},{"location":"iot/awsiot/#api-gateway_1","text":"https://stackoverflow.com/questions/55594587/setup-a-basic-websocket-mock-in-aws-apigateway","title":"API Gateway"},{"location":"iot/awsiot/#iot_1","text":"AWS IoT DAY-Shenzhen-AWS IoT\u8bbe\u5907\u7684\u72b6\u6001\u63a7\u5236\u548c\u6570\u636e\u5206\u6790","title":"IoT\u8bbe\u5907\u7684\u72b6\u6001\u63a7\u5236\u548c\u6570\u636e\u5206\u6790"},{"location":"iot/awsiot/#apigateway-access-dynamodb","text":"\u5c06 AWS Lambda \u4e0e Amazon API Gateway \u7ed3\u5408\u4f7f\u7528 \u5728 API Gateway \u4e2d\u4e3a AWS Lambda \u51fd\u6570\u521b\u5efa REST API \u5728 API Gateway \u4e2d\u521b\u5efa REST API \u4f5c\u4e3a Amazon S3 \u4ee3\u7406","title":"APIGateway  Access DynamoDB"},{"location":"iot/awsiot/#cvm","text":"https://github.com/awslabs","title":"CVM \u5b9e\u73b0\u67b6\u6784"},{"location":"iot/awsiot/#_12","text":"https://github.com/EspressifApp/EsptouchForAndroid \u4e50\u946bAndroid \u4ee3\u7801: https://github.com/EspressifApp/IOT-Espressif-Android https://github.com/aws-samples/aws-iot-elf https://github.com/aws-samples/aws-iot-elf/blob/master/elf.py","title":"\u4e50\u946b\u4ee3\u7801"},{"location":"iot/awsiot/#aws-example","text":"\u4e9a\u9a6c\u900a\u5f00\u53d1\u6848\u4f8b Python\u6ce8\u518c\u4e9a\u9a6c\u900aIOT Core Things","title":"aws example"},{"location":"iot/developerTools/","text":"aws \u5f00\u53d1\u5de5\u5177 Pycharm \u5f00\u53d1\u5de5\u5177 Pycharm\u4e0b\u8f7d\u5de5\u5177 AWS Toolkit for JetBrains AWS Serverless Application Model (SAM) \u5f00\u53d1\u5e93 API Gateway + Cognito Auth + Cognito Hosted Auth Example sam init --runtime python3.6 --name python-debugging $ DEBUGGER_ARGS=\"-m ikpdb --ikpdb-port=5858 --ikpdb-working-directory=/var/task/ --ikpdb-client-working-directory=/myApp --ikpdb-address=0.0.0.0\" echo {} | sam local invoke -d 5858 myFunction","title":"aws\u5f00\u53d1\u5de5\u5177"},{"location":"iot/developerTools/#aws","text":"","title":"aws \u5f00\u53d1\u5de5\u5177"},{"location":"iot/developerTools/#pycharm","text":"Pycharm\u4e0b\u8f7d\u5de5\u5177 AWS Toolkit for JetBrains AWS Serverless Application Model (SAM) \u5f00\u53d1\u5e93 API Gateway + Cognito Auth + Cognito Hosted Auth Example sam init --runtime python3.6 --name python-debugging $ DEBUGGER_ARGS=\"-m ikpdb --ikpdb-port=5858 --ikpdb-working-directory=/var/task/ --ikpdb-client-working-directory=/myApp --ikpdb-address=0.0.0.0\" echo {} | sam local invoke -d 5858 myFunction","title":"Pycharm \u5f00\u53d1\u5de5\u5177"},{"location":"iot/iotCore/","text":"IOTCore Aws IOTCore Aws\u79fb\u52a8\u5f00\u53d1\u5e73\u53f0blog IOT\u6848\u4f8b AWS IoT Core\u8ba4\u8bc1\u65b9\u5f0f AWS IoT Core\u652f\u6301\u57fa\u4e8e\u8bc1\u4e66\u8ba4\u8bc1 *\u81ea\u5b9a\u4e49\u6388\u6743\u7a0b\u5e8f *\u76f8\u4e92\u8eab\u4efd\u9a8c\u8bc1 *Amazon Cognito Identity AWS IoT Core\u652f\u6301\u57fa\u4e8e\u8bc1\u4e66\u7684\u76f8\u4e92\u8eab\u4efd\u9a8c\u8bc1\uff0c\u81ea\u5b9a\u4e49\u6388\u6743\u7a0b\u5e8f\u548cAmazon Cognito Identity\uff0c\u4ee5\u9a8c\u8bc1\u5bf9AWS IoT\u8bbe\u5907\u7f51\u5173\u7684\u8bf7\u6c42\u3002Amazon Cognito \u7528\u6237\u6c60\u4e8e\u53bb\u5e74\u666e\u904d\u63a8\u51fa\u3002\u5b83\u5141\u8bb8\u5ba2\u6237\u8f7b\u677e\u6dfb\u52a0\u7528\u6237\u6ce8\u518c\u5e76\u767b\u5f55\u79fb\u52a8\u548cWeb\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Cognito User Pools\u8eab\u4efd\u901a\u8fc7\u5c06\u5176\u94fe\u63a5\u5230Cognito Federated Identities\u6765\u4e0eAWS IoT Core\u8fdb\u884c\u901a\u4fe1\u3002 IAM AWS Identity and Access Management \u662f\u4e00\u79cd Web \u670d\u52a1\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5b89\u5168\u5730\u63a7\u5236\u5bf9 AWS \u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 IAM \u63a7\u5236\u5bf9\u54ea\u4e2a\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1 (\u767b\u5f55) \u548c\u6388\u6743 (\u5177\u6709\u6743\u9650) \u4ee5\u4f7f\u7528\u8d44\u6e90\u3002 \u5f53\u60a8\u9996\u6b21\u521b\u5efa AWS \u8d26\u6237\u65f6\uff0c\u6700\u521d\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5bf9\u8d26\u6237\u4e2d\u6240\u6709 AWS \u670d\u52a1\u548c\u8d44\u6e90\u6709\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\u7684\u5355\u70b9\u767b\u5f55\u8eab\u4efd\u3002\u6b64\u8eab\u4efd\u79f0\u4e3a \u8d26\u6237 AWS\uff0c\u53ef\u4f7f\u7528\u60a8\u521b\u5efa\u8d26\u6237\u65f6\u6240\u7528\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u5bc6\u7801\u767b\u5f55\u6765\u83b7\u5f97\u6b64\u8eab\u4efd\u3002\u5f3a\u70c8\u5efa\u8bae\u60a8\u4e0d\u4f7f\u7528 \u6839\u7528\u6237 \u6267\u884c\u65e5\u5e38\u4efb\u52a1\uff0c\u5373\u4f7f\u662f\u7ba1\u7406\u4efb\u52a1\u3002\u8bf7\u9075\u5b88\u4ec5\u5c06\u7528\u4e8e\u521b\u5efa\u9996\u4e2a \u7528\u6237\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u7136\u540e\u8bf7\u59a5\u5584\u4fdd\u5b58 \u6839\u7528\u6237 \u51ed\u8bc1\uff0c\u4ec5\u7528\u5b83\u4eec\u6267\u884c\u5c11\u6570\u8d26\u6237\u548c\u670d\u52a1\u7ba1\u7406\u4efb\u52a1\u3002 \u8bbf\u95ee\u65b9\u5f0f \u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528 AWS Identity and Access Management\u3002 AWS \u7ba1\u7406\u63a7\u5236\u53f0 \u63a7\u5236\u53f0\u662f\u7528\u4e8e\u7ba1\u7406 IAM \u548c AWS \u8d44\u6e90\u7684\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u754c\u9762\u3002\u6709\u5173\u901a\u8fc7\u63a7\u5236\u53f0\u8bbf\u95ee IAM \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 IAM \u63a7\u5236\u53f0\u548c\u767b\u5f55\u9875\u9762\u3002\u6709\u5173\u6307\u5bfc\u60a8\u4f7f\u7528\u63a7\u5236\u53f0\u7684\u6559\u7a0b\uff0c\u8bf7\u53c2\u9605\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a IAM \u7ba1\u7406\u5458\u7528\u6237\u548c\u7ec4\u3002 AWS \u547d\u4ee4\u884c\u5de5\u5177 \u60a8\u53ef\u4ee5\u4f7f\u7528 AWS \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5728\u7cfb\u7edf\u7684\u547d\u4ee4\u884c\u4e2d\u53d1\u51fa\u547d\u4ee4\u4ee5\u6267\u884c IAM \u548c AWS \u4efb\u52a1\u3002\u4e0e\u63a7\u5236\u53f0\u76f8\u6bd4\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u66f4\u5feb\u3001\u66f4\u65b9\u4fbf\u3002\u5982\u679c\u8981\u6784\u5efa\u6267\u884c AWS \u4efb\u52a1\u7684\u811a\u672c\uff0c\u547d\u4ee4\u884c\u5de5\u5177\u4e5f\u4f1a\u5341\u5206\u6709\u7528\u3002 AWS \u63d0\u4f9b\u4e24\u7ec4\u547d\u4ee4\u884c\u5de5\u5177\uff1aAWS Command Line Interface (AWS CLI) \u548c \u9002\u7528\u4e8e Windows PowerShell \u7684 AWS \u5de5\u5177\u3002\u6709\u5173\u5b89\u88c5\u548c\u4f7f\u7528 AWS CLI \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 AWS Command Line Interface \u7528\u6237\u6307\u5357\u3002\u6709\u5173\u5b89\u88c5\u548c\u4f7f\u7528Windows PowerShell \u5de5\u5177\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u9002\u7528\u4e8e Windows PowerShell \u7684 AWS \u5de5\u5177 \u7528\u6237\u6307\u5357\u3002 AWS \u5f00\u53d1\u5de5\u5177\u5305 AWS \u63d0\u4f9b\u7684 SDK (\u5f00\u53d1\u5de5\u5177\u5305) \u5305\u542b\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u5e73\u53f0 (Java\u3001Python\u3001Ruby\u3001.NET\u3001iOS\u3001Android \u7b49) \u7684\u5e93\u548c\u793a\u4f8b\u4ee3\u7801\u3002\u5f00\u53d1\u5de5\u5177\u5305\u63d0\u4f9b\u4fbf\u6377\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bf9 IAM \u548c AWS \u7684\u7f16\u7a0b\u8bbf\u95ee\u3002\u4f8b\u5982\uff0c\u5f00\u53d1\u5de5\u5177\u5305\u6267\u884c\u4ee5\u4e0b\u7c7b\u4f3c\u4efb\u52a1\uff1a\u52a0\u5bc6\u7b7e\u7f72\u8bf7\u6c42\u3001\u7ba1\u7406\u9519\u8bef\u4ee5\u53ca\u81ea\u52a8\u91cd\u8bd5\u8bf7\u6c42\u3002\u6709\u5173 AWS \u5f00\u53d1\u5de5\u5177\u5305\u7684\u4fe1\u606f\uff08\u5305\u62ec\u5982\u4f55\u4e0b\u8f7d\u53ca\u5b89\u88c5\uff09\uff0c\u8bf7\u53c2\u9605\u9002\u7528\u4e8e Amazon Web Services \u7684\u5de5\u5177\u9875\u9762\u3002 IAM HTTPS API \u60a8\u53ef\u4ee5\u4f7f\u7528 IAM HTTPS API\uff08\u53ef\u8ba9\u60a8\u76f4\u63a5\u5411\u670d\u52a1\u53d1\u5e03 HTTPS \u8bf7\u6c42\uff09\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bbf\u95ee IAM \u548c AWS\u3002\u4f7f\u7528 HTTPS API \u65f6\uff0c\u5fc5\u987b\u6dfb\u52a0\u4ee3\u7801\uff0c\u624d\u80fd\u4f7f\u7528\u60a8\u7684\u51ed\u8bc1\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6570\u5b57\u5316\u7b7e\u540d\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u901a\u8fc7\u63d0\u51fa HTTP \u67e5\u8be2\u8bf7\u6c42\u6765\u8c03\u7528 API\u548c IAM API \u53c2\u8003\u3002 \u7b56\u7565 \u7b56\u7565 \u7b56\u7565\u6458\u8981 \u670d\u52a1\u6458\u8981 \u64cd\u4f5c\u6458\u8981 \u57fa\u4e8e\u8eab\u4efd\u548c\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565 \u7b56\u7565\u5206\u7c7b \u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u662f\u9644\u52a0\u5230 IAM \u8eab\u4efd\uff08\u5982 IAM \u7528\u6237\u3001\u7ec4\u6216\u89d2\u8272\uff09\u7684\u6743\u9650\u7b56\u7565 \u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u662f\u9644\u52a0\u5230\u8d44\u6e90\uff08\u5982 Amazon S3 \u5b58\u50a8\u6876\u6216 IAM \u89d2\u8272\u4fe1\u4efb\u7b56\u7565\uff09\u7684\u6743\u9650\u7b56\u7565\u3002 \u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u63a7\u5236\u8eab\u4efd\u53ef\u4ee5\u5728\u54ea\u4e9b\u6761\u4ef6\u4e0b\u5bf9\u54ea\u4e9b\u8d44\u6e90\u6267\u884c\u54ea\u4e9b\u64cd\u4f5c\u3002\u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5206\u7c7b\uff1a \u6258\u7ba1\u7b56\u7565 \u2013 \u57fa\u4e8e\u8eab\u4efd\u7684\u72ec\u7acb\u7b56\u7565\uff0c\u53ef\u9644\u52a0\u5230\u60a8\u7684 AWS \u8d26\u6237\u4e2d\u7684\u591a\u4e2a\u7528\u6237\u3001\u7ec4\u548c\u89d2\u8272\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u7c7b\u578b\u7684\u6258\u7ba1\u7b56\u7565\uff1a AWS \u6258\u7ba1\u7b56\u7565 \u2013 \u7531 AWS \u521b\u5efa\u548c\u7ba1\u7406\u7684\u6258\u7ba1\u7b56\u7565\u3002\u5982\u679c\u60a8\u521a\u5f00\u59cb\u4f7f\u7528\u7b56\u7565\uff0c\u5efa\u8bae\u5148\u4f7f\u7528 AWS \u6258\u7ba1\u7b56\u7565\u3002 \u5ba2\u6237\u6258\u7ba1\u7b56\u7565 \u2013 \u60a8\u5728 AWS \u8d26\u6237\u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u6258\u7ba1\u7b56\u7565\u3002\u4e0e AWS \u6258\u7ba1\u7b56\u7565\u76f8\u6bd4\uff0c\u5ba2\u6237\u6258\u7ba1\u7b56\u7565\u53ef\u4ee5\u66f4\u7cbe\u786e\u5730\u63a7\u5236\u7b56\u7565\u3002\u60a8\u53ef\u4ee5\u5728\u53ef\u89c6\u5316\u7f16\u8f91\u5668\u4e2d\u521b\u5efa\u548c\u7f16\u8f91 IAM \u7b56\u7565\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa JSON \u7b56\u7565\u6587\u6863\u4ee5\u521b\u5efa\u548c\u7f16\u8f91\u8be5\u7b56\u7565\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u521b\u5efa IAM \u7b56\u7565 \u548c \u7f16\u8f91 IAM \u7b56\u7565\u3002 \u5185\u8054\u7b56\u7565 \u2013 \u7531\u60a8\u521b\u5efa\u548c\u7ba1\u7406\u7684\u7b56\u7565\uff0c\u76f4\u63a5\u5d4c\u5165\u5728\u5355\u4e2a\u7528\u6237\u3001\u7ec4\u6216\u89d2\u8272\u4e2d\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u4f7f\u7528\u5185\u8054\u7b56\u7565\u3002 \u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u63a7\u5236\u6307\u5b9a\u7684\u59d4\u6258\u4eba\u53ef\u4ee5\u5728\u4f55\u79cd\u6761\u4ef6\u4e0b\u5bf9\u8be5\u8d44\u6e90\u6267\u884c\u54ea\u4e9b\u64cd\u4f5c\u3002\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u662f\u5185\u8054\u7b56\u7565\uff0c\u6ca1\u6709\u57fa\u4e8e\u8d44\u6e90\u7684\u6258\u7ba1\u7b56\u7565\u3002\u8981\u542f\u7528\u8de8\u8d26\u6237\u8bbf\u95ee\uff0c\u60a8\u53ef\u4ee5\u5c06\u6574\u4e2a\u8d26\u6237\u6216\u5176\u4ed6\u8d26\u6237\u4e2d\u7684 IAM \u5b9e\u4f53\u6307\u5b9a\u4e3a\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u4e2d\u7684\u59d4\u6258\u4eba\u3002 IAM \u670d\u52a1\u4ec5\u652f\u6301\u4e00\u79cd\u7c7b\u578b\u7684\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\uff08\u79f0\u4e3a\u89d2\u8272\u4fe1\u4efb\u7b56\u7565\uff09\uff0c\u8fd9\u79cd\u7b56\u7565\u9644\u52a0\u5230 IAM \u89d2\u8272\u3002\u7531\u4e8e IAM \u89d2\u8272\u540c\u65f6\u662f\u652f\u6301\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u7684\u8eab\u4efd\u548c\u8d44\u6e90\uff0c\u56e0\u6b64\uff0c\u60a8\u5fc5\u987b\u540c\u65f6\u5c06\u4fe1\u4efb\u7b56\u7565\u548c\u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u9644\u52a0\u5230 IAM \u89d2\u8272\u3002\u4fe1\u4efb\u7b56\u7565\u5b9a\u4e49\u54ea\u4e9b\u59d4\u6258\u4eba\u5b9e\u4f53\uff08\u8d26\u6237\u3001\u7528\u6237\u3001\u89d2\u8272\u548c\u8054\u5408\u8eab\u4efd\u7528\u6237\uff09\u53ef\u4ee5\u4ee3\u5165\u8be5\u89d2\u8272\u3002\u8981\u4e86\u89e3 IAM \u89d2\u8272\u5982\u4f55\u4e0e\u5176\u4ed6\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u4e0d\u540c\uff0c\u8bf7\u53c2\u9605IAM \u89d2\u8272\u4e0e\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u6709\u4f55\u4e0d\u540c\u3002 IAM \u63a7\u5236\u53f0\u4e2d\u63d0\u4f9b\u4e86\u7b56\u7565\u6458\u8981 \u8868\uff0c\u8fd9\u4e9b\u8868\u603b\u7ed3\u4e86\u7b56\u7565\u4e2d\u5bf9\u6bcf\u4e2a\u670d\u52a1\u5141\u8bb8\u6216\u62d2\u7edd\u7684\u8bbf\u95ee\u7ea7\u522b\u3001\u8d44\u6e90\u548c\u6761\u4ef6\u3002\u7b56\u7565\u5728\u4e09\u4e2a\u8868\u4e2d\u6982\u62ec\uff1a\u7b56\u7565\u6458\u8981\u3001\u670d\u52a1\u6458\u8981\u548c\u64cd\u4f5c\u6458\u8981\u3002\u7b56\u7565\u6458\u8981\u8868\u5305\u542b\u670d\u52a1\u5217\u8868\u3002\u9009\u62e9\u5176\u4e2d\u7684\u670d\u52a1\u53ef\u67e5\u770b\u670d\u52a1\u6458\u8981\u3002\u8be5\u6458\u8981\u8868\u5305\u542b\u6240\u9009\u670d\u52a1\u7684\u64cd\u4f5c\u548c\u5173\u8054\u6743\u9650\u7684\u5217\u8868\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u8be5\u8868\u4e2d\u7684\u64cd\u4f5c\u4ee5\u67e5\u770b\u64cd\u4f5c\u6458\u8981\u3002\u8be5\u8868\u5305\u542b\u6240\u9009\u64cd\u4f5c\u7684\u8d44\u6e90\u548c\u6761\u4ef6\u5217\u8868\u3002 Amazon Cognito \u6587\u6863 Amazon Cognito \u6587\u6863 Configuring Cognito User Pools to Communicate with AWS IoT Core \u7ecf\u8fc7Amazon Cognito\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u9700\u8981\u4e24\u4e2a\u7b56\u7565\u624d\u80fd\u8bbf\u95eeAWS IoT \u7b2c\u4e00\u4e2a\u7b56\u7565\u9644\u52a0\u5230\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u6c60\u7684\u89d2\u8272\uff0c\u4ee5\u9a8c\u8bc1\u548c\u6388\u6743Cognito\u7528\u6237\u4e0eAWS IoT\u8fdb\u884c\u901a\u4fe1\u3002 \u7b2c\u4e8c\u4e2a\u7b56\u7565\u9644\u52a0\u5230\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684Cognito\u7528\u6237ID\u4e3b\u4f53\uff0c\u4ee5\u83b7\u5f97\u7ec6\u7c92\u5ea6\u6743\u9650\u3002 \u5e38\u89c1\u4efb\u52a1\u7684\u5feb\u901f\u94fe\u63a5 \u5e38\u89c1\u4efb\u52a1\u7684\u5feb\u901f\u94fe\u63a5 \u5982\u4f55\u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406\u7cfb\u7edf\u6765\u63a7\u5236\u5bf9AWS IoT\u8d44\u6e90\u7684\u8bbf\u95ee \u5982\u4f55\u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406\u7cfb\u7edf\u6765\u63a7\u5236\u5bf9AWS IoT\u8d44\u6e90\u7684\u8bbf\u95ee Configuring Cognito User Pools to Communicate with AWS IoT Core Configuring Cognito User Pools to Communicate with AWS IoT Core Understanding Amazon Cognito user pool OAuth 2.0 grants Understanding Amazon Cognito user pool OAuth 2.0 grants Aws CLI CLI APi Gateway \u4e24\u79cdApi\u7c7b\u578b Select whether you would like to create a REST API or a WebSocket API. API GateWay API Gateway \u7684\u4f18\u52bf Amazon API Gateway \u5177\u5907\u4e0b\u5217\u4f18\u70b9\uff1a \u652f\u6301\u6709\u72b6\u6001 (WebSocket) \u548c\u65e0\u72b6\u6001 (REST) API \u4e0e AWS \u670d\u52a1\uff08\u5982 AWS Lambda\u3001Amazon Kinesis \u548c Amazon DynamoDB\uff09\u96c6\u6210 \u80fd\u591f\u4f7f\u7528 IAM \u89d2\u8272\u548c\u7b56\u7565\u3001AWS Lambda \u6388\u6743\u65b9\u6216 Amazon Cognito \u7528\u6237\u6c60\u6765\u6388\u6743\u5bf9\u60a8\u7684 API \u7684\u8bbf\u95ee \u7528\u4e8e\u5c06 API \u4f5c\u4e3a SaaS \u9500\u552e\u7684\u4f7f\u7528\u8ba1\u5212\u548c API \u5bc6\u94a5 \u7528\u4ee5\u5b89\u5168\u5730\u63a8\u51fa\u66f4\u6539\u7684\u91d1\u4e1d\u96c0\u7248\u672c\u90e8\u7f72 API \u4f7f\u7528\u60c5\u51b5\u548c API \u66f4\u6539\u7684 CloudTrail \u65e5\u5fd7\u8bb0\u5f55\u548c\u76d1\u63a7 CloudWatch \u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55\u548c\u6267\u884c\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5305\u62ec\u8bbe\u7f6e\u8b66\u62a5\u7684\u80fd\u529b \u80fd\u591f\u4f7f\u7528 AWS CloudFormation \u6a21\u677f\u4ee5\u652f\u6301\u521b\u5efa API \u652f\u6301\u81ea\u5b9a\u4e49\u57df\u540d GoogleIOTCore GoogleIOTCore","title":"IotCore"},{"location":"iot/iotCore/#iotcore","text":"","title":"IOTCore"},{"location":"iot/iotCore/#aws-iotcore","text":"Aws\u79fb\u52a8\u5f00\u53d1\u5e73\u53f0blog IOT\u6848\u4f8b","title":"Aws IOTCore"},{"location":"iot/iotCore/#aws-iot-core","text":"AWS IoT Core\u652f\u6301\u57fa\u4e8e\u8bc1\u4e66\u8ba4\u8bc1 *\u81ea\u5b9a\u4e49\u6388\u6743\u7a0b\u5e8f *\u76f8\u4e92\u8eab\u4efd\u9a8c\u8bc1 *Amazon Cognito Identity AWS IoT Core\u652f\u6301\u57fa\u4e8e\u8bc1\u4e66\u7684\u76f8\u4e92\u8eab\u4efd\u9a8c\u8bc1\uff0c\u81ea\u5b9a\u4e49\u6388\u6743\u7a0b\u5e8f\u548cAmazon Cognito Identity\uff0c\u4ee5\u9a8c\u8bc1\u5bf9AWS IoT\u8bbe\u5907\u7f51\u5173\u7684\u8bf7\u6c42\u3002Amazon Cognito \u7528\u6237\u6c60\u4e8e\u53bb\u5e74\u666e\u904d\u63a8\u51fa\u3002\u5b83\u5141\u8bb8\u5ba2\u6237\u8f7b\u677e\u6dfb\u52a0\u7528\u6237\u6ce8\u518c\u5e76\u767b\u5f55\u79fb\u52a8\u548cWeb\u5e94\u7528\u7a0b\u5e8f\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528Cognito User Pools\u8eab\u4efd\u901a\u8fc7\u5c06\u5176\u94fe\u63a5\u5230Cognito Federated Identities\u6765\u4e0eAWS IoT Core\u8fdb\u884c\u901a\u4fe1\u3002","title":"AWS IoT Core\u8ba4\u8bc1\u65b9\u5f0f"},{"location":"iot/iotCore/#iam","text":"AWS Identity and Access Management \u662f\u4e00\u79cd Web \u670d\u52a1\uff0c\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5b89\u5168\u5730\u63a7\u5236\u5bf9 AWS \u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 IAM \u63a7\u5236\u5bf9\u54ea\u4e2a\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1 (\u767b\u5f55) \u548c\u6388\u6743 (\u5177\u6709\u6743\u9650) \u4ee5\u4f7f\u7528\u8d44\u6e90\u3002 \u5f53\u60a8\u9996\u6b21\u521b\u5efa AWS \u8d26\u6237\u65f6\uff0c\u6700\u521d\u4f7f\u7528\u7684\u662f\u4e00\u4e2a\u5bf9\u8d26\u6237\u4e2d\u6240\u6709 AWS \u670d\u52a1\u548c\u8d44\u6e90\u6709\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\u7684\u5355\u70b9\u767b\u5f55\u8eab\u4efd\u3002\u6b64\u8eab\u4efd\u79f0\u4e3a \u8d26\u6237 AWS\uff0c\u53ef\u4f7f\u7528\u60a8\u521b\u5efa\u8d26\u6237\u65f6\u6240\u7528\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u5bc6\u7801\u767b\u5f55\u6765\u83b7\u5f97\u6b64\u8eab\u4efd\u3002\u5f3a\u70c8\u5efa\u8bae\u60a8\u4e0d\u4f7f\u7528 \u6839\u7528\u6237 \u6267\u884c\u65e5\u5e38\u4efb\u52a1\uff0c\u5373\u4f7f\u662f\u7ba1\u7406\u4efb\u52a1\u3002\u8bf7\u9075\u5b88\u4ec5\u5c06\u7528\u4e8e\u521b\u5efa\u9996\u4e2a \u7528\u6237\u7684\u6700\u4f73\u5b9e\u8df5\u3002\u7136\u540e\u8bf7\u59a5\u5584\u4fdd\u5b58 \u6839\u7528\u6237 \u51ed\u8bc1\uff0c\u4ec5\u7528\u5b83\u4eec\u6267\u884c\u5c11\u6570\u8d26\u6237\u548c\u670d\u52a1\u7ba1\u7406\u4efb\u52a1\u3002","title":"IAM"},{"location":"iot/iotCore/#_1","text":"\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528 AWS Identity and Access Management\u3002 AWS \u7ba1\u7406\u63a7\u5236\u53f0 \u63a7\u5236\u53f0\u662f\u7528\u4e8e\u7ba1\u7406 IAM \u548c AWS \u8d44\u6e90\u7684\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u754c\u9762\u3002\u6709\u5173\u901a\u8fc7\u63a7\u5236\u53f0\u8bbf\u95ee IAM \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 IAM \u63a7\u5236\u53f0\u548c\u767b\u5f55\u9875\u9762\u3002\u6709\u5173\u6307\u5bfc\u60a8\u4f7f\u7528\u63a7\u5236\u53f0\u7684\u6559\u7a0b\uff0c\u8bf7\u53c2\u9605\u521b\u5efa\u60a8\u7684\u7b2c\u4e00\u4e2a IAM \u7ba1\u7406\u5458\u7528\u6237\u548c\u7ec4\u3002 AWS \u547d\u4ee4\u884c\u5de5\u5177 \u60a8\u53ef\u4ee5\u4f7f\u7528 AWS \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5728\u7cfb\u7edf\u7684\u547d\u4ee4\u884c\u4e2d\u53d1\u51fa\u547d\u4ee4\u4ee5\u6267\u884c IAM \u548c AWS \u4efb\u52a1\u3002\u4e0e\u63a7\u5236\u53f0\u76f8\u6bd4\uff0c\u4f7f\u7528\u547d\u4ee4\u884c\u66f4\u5feb\u3001\u66f4\u65b9\u4fbf\u3002\u5982\u679c\u8981\u6784\u5efa\u6267\u884c AWS \u4efb\u52a1\u7684\u811a\u672c\uff0c\u547d\u4ee4\u884c\u5de5\u5177\u4e5f\u4f1a\u5341\u5206\u6709\u7528\u3002 AWS \u63d0\u4f9b\u4e24\u7ec4\u547d\u4ee4\u884c\u5de5\u5177\uff1aAWS Command Line Interface (AWS CLI) \u548c \u9002\u7528\u4e8e Windows PowerShell \u7684 AWS \u5de5\u5177\u3002\u6709\u5173\u5b89\u88c5\u548c\u4f7f\u7528 AWS CLI \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 AWS Command Line Interface \u7528\u6237\u6307\u5357\u3002\u6709\u5173\u5b89\u88c5\u548c\u4f7f\u7528Windows PowerShell \u5de5\u5177\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u9002\u7528\u4e8e Windows PowerShell \u7684 AWS \u5de5\u5177 \u7528\u6237\u6307\u5357\u3002 AWS \u5f00\u53d1\u5de5\u5177\u5305 AWS \u63d0\u4f9b\u7684 SDK (\u5f00\u53d1\u5de5\u5177\u5305) \u5305\u542b\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u5e73\u53f0 (Java\u3001Python\u3001Ruby\u3001.NET\u3001iOS\u3001Android \u7b49) \u7684\u5e93\u548c\u793a\u4f8b\u4ee3\u7801\u3002\u5f00\u53d1\u5de5\u5177\u5305\u63d0\u4f9b\u4fbf\u6377\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bf9 IAM \u548c AWS \u7684\u7f16\u7a0b\u8bbf\u95ee\u3002\u4f8b\u5982\uff0c\u5f00\u53d1\u5de5\u5177\u5305\u6267\u884c\u4ee5\u4e0b\u7c7b\u4f3c\u4efb\u52a1\uff1a\u52a0\u5bc6\u7b7e\u7f72\u8bf7\u6c42\u3001\u7ba1\u7406\u9519\u8bef\u4ee5\u53ca\u81ea\u52a8\u91cd\u8bd5\u8bf7\u6c42\u3002\u6709\u5173 AWS \u5f00\u53d1\u5de5\u5177\u5305\u7684\u4fe1\u606f\uff08\u5305\u62ec\u5982\u4f55\u4e0b\u8f7d\u53ca\u5b89\u88c5\uff09\uff0c\u8bf7\u53c2\u9605\u9002\u7528\u4e8e Amazon Web Services \u7684\u5de5\u5177\u9875\u9762\u3002 IAM HTTPS API \u60a8\u53ef\u4ee5\u4f7f\u7528 IAM HTTPS API\uff08\u53ef\u8ba9\u60a8\u76f4\u63a5\u5411\u670d\u52a1\u53d1\u5e03 HTTPS \u8bf7\u6c42\uff09\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bbf\u95ee IAM \u548c AWS\u3002\u4f7f\u7528 HTTPS API \u65f6\uff0c\u5fc5\u987b\u6dfb\u52a0\u4ee3\u7801\uff0c\u624d\u80fd\u4f7f\u7528\u60a8\u7684\u51ed\u8bc1\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6570\u5b57\u5316\u7b7e\u540d\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u901a\u8fc7\u63d0\u51fa HTTP \u67e5\u8be2\u8bf7\u6c42\u6765\u8c03\u7528 API\u548c IAM API \u53c2\u8003\u3002","title":"\u8bbf\u95ee\u65b9\u5f0f"},{"location":"iot/iotCore/#_2","text":"\u7b56\u7565 \u7b56\u7565\u6458\u8981 \u670d\u52a1\u6458\u8981 \u64cd\u4f5c\u6458\u8981","title":"\u7b56\u7565"},{"location":"iot/iotCore/#_3","text":"\u7b56\u7565\u5206\u7c7b \u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u662f\u9644\u52a0\u5230 IAM \u8eab\u4efd\uff08\u5982 IAM \u7528\u6237\u3001\u7ec4\u6216\u89d2\u8272\uff09\u7684\u6743\u9650\u7b56\u7565 \u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u662f\u9644\u52a0\u5230\u8d44\u6e90\uff08\u5982 Amazon S3 \u5b58\u50a8\u6876\u6216 IAM \u89d2\u8272\u4fe1\u4efb\u7b56\u7565\uff09\u7684\u6743\u9650\u7b56\u7565\u3002 \u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u63a7\u5236\u8eab\u4efd\u53ef\u4ee5\u5728\u54ea\u4e9b\u6761\u4ef6\u4e0b\u5bf9\u54ea\u4e9b\u8d44\u6e90\u6267\u884c\u54ea\u4e9b\u64cd\u4f5c\u3002\u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5206\u7c7b\uff1a \u6258\u7ba1\u7b56\u7565 \u2013 \u57fa\u4e8e\u8eab\u4efd\u7684\u72ec\u7acb\u7b56\u7565\uff0c\u53ef\u9644\u52a0\u5230\u60a8\u7684 AWS \u8d26\u6237\u4e2d\u7684\u591a\u4e2a\u7528\u6237\u3001\u7ec4\u548c\u89d2\u8272\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u7c7b\u578b\u7684\u6258\u7ba1\u7b56\u7565\uff1a AWS \u6258\u7ba1\u7b56\u7565 \u2013 \u7531 AWS \u521b\u5efa\u548c\u7ba1\u7406\u7684\u6258\u7ba1\u7b56\u7565\u3002\u5982\u679c\u60a8\u521a\u5f00\u59cb\u4f7f\u7528\u7b56\u7565\uff0c\u5efa\u8bae\u5148\u4f7f\u7528 AWS \u6258\u7ba1\u7b56\u7565\u3002 \u5ba2\u6237\u6258\u7ba1\u7b56\u7565 \u2013 \u60a8\u5728 AWS \u8d26\u6237\u4e2d\u521b\u5efa\u548c\u7ba1\u7406\u7684\u6258\u7ba1\u7b56\u7565\u3002\u4e0e AWS \u6258\u7ba1\u7b56\u7565\u76f8\u6bd4\uff0c\u5ba2\u6237\u6258\u7ba1\u7b56\u7565\u53ef\u4ee5\u66f4\u7cbe\u786e\u5730\u63a7\u5236\u7b56\u7565\u3002\u60a8\u53ef\u4ee5\u5728\u53ef\u89c6\u5316\u7f16\u8f91\u5668\u4e2d\u521b\u5efa\u548c\u7f16\u8f91 IAM \u7b56\u7565\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa JSON \u7b56\u7565\u6587\u6863\u4ee5\u521b\u5efa\u548c\u7f16\u8f91\u8be5\u7b56\u7565\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u521b\u5efa IAM \u7b56\u7565 \u548c \u7f16\u8f91 IAM \u7b56\u7565\u3002 \u5185\u8054\u7b56\u7565 \u2013 \u7531\u60a8\u521b\u5efa\u548c\u7ba1\u7406\u7684\u7b56\u7565\uff0c\u76f4\u63a5\u5d4c\u5165\u5728\u5355\u4e2a\u7528\u6237\u3001\u7ec4\u6216\u89d2\u8272\u4e2d\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u5efa\u8bae\u4f7f\u7528\u5185\u8054\u7b56\u7565\u3002 \u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u63a7\u5236\u6307\u5b9a\u7684\u59d4\u6258\u4eba\u53ef\u4ee5\u5728\u4f55\u79cd\u6761\u4ef6\u4e0b\u5bf9\u8be5\u8d44\u6e90\u6267\u884c\u54ea\u4e9b\u64cd\u4f5c\u3002\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u662f\u5185\u8054\u7b56\u7565\uff0c\u6ca1\u6709\u57fa\u4e8e\u8d44\u6e90\u7684\u6258\u7ba1\u7b56\u7565\u3002\u8981\u542f\u7528\u8de8\u8d26\u6237\u8bbf\u95ee\uff0c\u60a8\u53ef\u4ee5\u5c06\u6574\u4e2a\u8d26\u6237\u6216\u5176\u4ed6\u8d26\u6237\u4e2d\u7684 IAM \u5b9e\u4f53\u6307\u5b9a\u4e3a\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u4e2d\u7684\u59d4\u6258\u4eba\u3002 IAM \u670d\u52a1\u4ec5\u652f\u6301\u4e00\u79cd\u7c7b\u578b\u7684\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\uff08\u79f0\u4e3a\u89d2\u8272\u4fe1\u4efb\u7b56\u7565\uff09\uff0c\u8fd9\u79cd\u7b56\u7565\u9644\u52a0\u5230 IAM \u89d2\u8272\u3002\u7531\u4e8e IAM \u89d2\u8272\u540c\u65f6\u662f\u652f\u6301\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u7684\u8eab\u4efd\u548c\u8d44\u6e90\uff0c\u56e0\u6b64\uff0c\u60a8\u5fc5\u987b\u540c\u65f6\u5c06\u4fe1\u4efb\u7b56\u7565\u548c\u57fa\u4e8e\u8eab\u4efd\u7684\u7b56\u7565\u9644\u52a0\u5230 IAM \u89d2\u8272\u3002\u4fe1\u4efb\u7b56\u7565\u5b9a\u4e49\u54ea\u4e9b\u59d4\u6258\u4eba\u5b9e\u4f53\uff08\u8d26\u6237\u3001\u7528\u6237\u3001\u89d2\u8272\u548c\u8054\u5408\u8eab\u4efd\u7528\u6237\uff09\u53ef\u4ee5\u4ee3\u5165\u8be5\u89d2\u8272\u3002\u8981\u4e86\u89e3 IAM \u89d2\u8272\u5982\u4f55\u4e0e\u5176\u4ed6\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u4e0d\u540c\uff0c\u8bf7\u53c2\u9605IAM \u89d2\u8272\u4e0e\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565\u6709\u4f55\u4e0d\u540c\u3002 IAM \u63a7\u5236\u53f0\u4e2d\u63d0\u4f9b\u4e86\u7b56\u7565\u6458\u8981 \u8868\uff0c\u8fd9\u4e9b\u8868\u603b\u7ed3\u4e86\u7b56\u7565\u4e2d\u5bf9\u6bcf\u4e2a\u670d\u52a1\u5141\u8bb8\u6216\u62d2\u7edd\u7684\u8bbf\u95ee\u7ea7\u522b\u3001\u8d44\u6e90\u548c\u6761\u4ef6\u3002\u7b56\u7565\u5728\u4e09\u4e2a\u8868\u4e2d\u6982\u62ec\uff1a\u7b56\u7565\u6458\u8981\u3001\u670d\u52a1\u6458\u8981\u548c\u64cd\u4f5c\u6458\u8981\u3002\u7b56\u7565\u6458\u8981\u8868\u5305\u542b\u670d\u52a1\u5217\u8868\u3002\u9009\u62e9\u5176\u4e2d\u7684\u670d\u52a1\u53ef\u67e5\u770b\u670d\u52a1\u6458\u8981\u3002\u8be5\u6458\u8981\u8868\u5305\u542b\u6240\u9009\u670d\u52a1\u7684\u64cd\u4f5c\u548c\u5173\u8054\u6743\u9650\u7684\u5217\u8868\u3002\u60a8\u53ef\u4ee5\u9009\u62e9\u8be5\u8868\u4e2d\u7684\u64cd\u4f5c\u4ee5\u67e5\u770b\u64cd\u4f5c\u6458\u8981\u3002\u8be5\u8868\u5305\u542b\u6240\u9009\u64cd\u4f5c\u7684\u8d44\u6e90\u548c\u6761\u4ef6\u5217\u8868\u3002","title":"\u57fa\u4e8e\u8eab\u4efd\u548c\u57fa\u4e8e\u8d44\u6e90\u7684\u7b56\u7565"},{"location":"iot/iotCore/#amazon-cognito","text":"Amazon Cognito \u6587\u6863 Configuring Cognito User Pools to Communicate with AWS IoT Core \u7ecf\u8fc7Amazon Cognito\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u9700\u8981\u4e24\u4e2a\u7b56\u7565\u624d\u80fd\u8bbf\u95eeAWS IoT \u7b2c\u4e00\u4e2a\u7b56\u7565\u9644\u52a0\u5230\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u6c60\u7684\u89d2\u8272\uff0c\u4ee5\u9a8c\u8bc1\u548c\u6388\u6743Cognito\u7528\u6237\u4e0eAWS IoT\u8fdb\u884c\u901a\u4fe1\u3002 \u7b2c\u4e8c\u4e2a\u7b56\u7565\u9644\u52a0\u5230\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684Cognito\u7528\u6237ID\u4e3b\u4f53\uff0c\u4ee5\u83b7\u5f97\u7ec6\u7c92\u5ea6\u6743\u9650\u3002","title":"Amazon Cognito \u6587\u6863"},{"location":"iot/iotCore/#_4","text":"\u5e38\u89c1\u4efb\u52a1\u7684\u5feb\u901f\u94fe\u63a5","title":"\u5e38\u89c1\u4efb\u52a1\u7684\u5feb\u901f\u94fe\u63a5"},{"location":"iot/iotCore/#aws-iot","text":"\u5982\u4f55\u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406\u7cfb\u7edf\u6765\u63a7\u5236\u5bf9AWS IoT\u8d44\u6e90\u7684\u8bbf\u95ee","title":"\u5982\u4f55\u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u8eab\u4efd\u548c\u8bbf\u95ee\u7ba1\u7406\u7cfb\u7edf\u6765\u63a7\u5236\u5bf9AWS IoT\u8d44\u6e90\u7684\u8bbf\u95ee"},{"location":"iot/iotCore/#configuring-cognito-user-pools-to-communicate-with-aws-iot-core","text":"Configuring Cognito User Pools to Communicate with AWS IoT Core","title":"Configuring Cognito User Pools to Communicate with AWS IoT Core"},{"location":"iot/iotCore/#understanding-amazon-cognito-user-pool-oauth-20-grants","text":"Understanding Amazon Cognito user pool OAuth 2.0 grants","title":"Understanding Amazon Cognito user pool OAuth 2.0 grants"},{"location":"iot/iotCore/#aws-cli","text":"CLI","title":"Aws CLI"},{"location":"iot/iotCore/#api-gateway","text":"\u4e24\u79cdApi\u7c7b\u578b Select whether you would like to create a REST API or a WebSocket API.","title":"APi Gateway"},{"location":"iot/iotCore/#api-gateway_1","text":"API Gateway \u7684\u4f18\u52bf Amazon API Gateway \u5177\u5907\u4e0b\u5217\u4f18\u70b9\uff1a \u652f\u6301\u6709\u72b6\u6001 (WebSocket) \u548c\u65e0\u72b6\u6001 (REST) API \u4e0e AWS \u670d\u52a1\uff08\u5982 AWS Lambda\u3001Amazon Kinesis \u548c Amazon DynamoDB\uff09\u96c6\u6210 \u80fd\u591f\u4f7f\u7528 IAM \u89d2\u8272\u548c\u7b56\u7565\u3001AWS Lambda \u6388\u6743\u65b9\u6216 Amazon Cognito \u7528\u6237\u6c60\u6765\u6388\u6743\u5bf9\u60a8\u7684 API \u7684\u8bbf\u95ee \u7528\u4e8e\u5c06 API \u4f5c\u4e3a SaaS \u9500\u552e\u7684\u4f7f\u7528\u8ba1\u5212\u548c API \u5bc6\u94a5 \u7528\u4ee5\u5b89\u5168\u5730\u63a8\u51fa\u66f4\u6539\u7684\u91d1\u4e1d\u96c0\u7248\u672c\u90e8\u7f72 API \u4f7f\u7528\u60c5\u51b5\u548c API \u66f4\u6539\u7684 CloudTrail \u65e5\u5fd7\u8bb0\u5f55\u548c\u76d1\u63a7 CloudWatch \u8bbf\u95ee\u65e5\u5fd7\u8bb0\u5f55\u548c\u6267\u884c\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5305\u62ec\u8bbe\u7f6e\u8b66\u62a5\u7684\u80fd\u529b \u80fd\u591f\u4f7f\u7528 AWS CloudFormation \u6a21\u677f\u4ee5\u652f\u6301\u521b\u5efa API \u652f\u6301\u81ea\u5b9a\u4e49\u57df\u540d","title":"API GateWay"},{"location":"iot/iotCore/#googleiotcore","text":"GoogleIOTCore","title":"GoogleIOTCore"},{"location":"iot/program/","text":"\u7f16\u7a0b\u6a21\u578b \u60a8\u5c06\u4f7f\u7528 AWS Lambda \u652f\u6301\u7684\u8bed\u8a00\u4e4b\u4e00\u4e3a Lambda \u51fd\u6570\u7f16\u5199\u4ee3\u7801\u3002\u65e0\u8bba\u60a8\u9009\u62e9\u54ea\u79cd\u8bed\u8a00\uff0c\u90fd\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u901a\u7528\u6a21\u5f0f\uff0c\u5373\u4e3a\u5305\u542b\u4ee5\u4e0b\u6838\u5fc3\u6982\u5ff5\u7684 Lambda \u51fd\u6570\u7f16\u5199\u4ee3\u7801\uff1a \u5904\u7406\u7a0b\u5e8f \u2013 \u5904\u7406\u7a0b\u5e8f\u662f AWS Lambda \u8c03\u7528\u7684\u7528\u4e8e\u5f00\u59cb\u6267\u884c Lambda \u51fd\u6570\u7684\u51fd\u6570\u3002\u60a8\u5728\u521b\u5efa Lambda \u51fd\u6570\u65f6\u6807\u8bc6\u5904\u7406\u7a0b\u5e8f\u3002\u5728\u8c03\u7528 Lambda \u51fd\u6570\u65f6\uff0cAWS Lambda \u5c06\u901a\u8fc7\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\u6765\u5f00\u59cb\u6267\u884c\u60a8\u7684\u4ee3\u7801\u3002AWS Lambda \u5c06\u4efb\u4f55\u4e8b\u4ef6\u6570\u636e\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f\u3002\u60a8\u7684\u5904\u7406\u7a0b\u5e8f\u5e94\u5904\u7406\u6b64\u4f20\u5165\u4e8b\u4ef6\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u8c03\u7528\u60a8\u7684\u4ee3\u7801\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u51fd\u6570/\u65b9\u6cd5\u3002 \u4e0a\u4e0b\u6587 \u2013 AWS Lambda \u8fd8\u4f1a\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\u3002\u901a\u8fc7\u6b64 context \u5bf9\u8c61\uff0c\u60a8\u7684\u4ee3\u7801\u53ef\u4e0e AWS Lambda \u4ea4\u4e92\u3002\u4f8b\u5982\uff0c\u60a8\u7684\u4ee3\u7801\u53ef\u5728 AWS Lambda \u7ec8\u6b62 Lambda \u51fd\u6570\u524d\u53d1\u73b0\u5269\u4f59\u7684\u6267\u884c\u65f6\u95f4\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e Node.js \u7b49\u8bed\u8a00\uff0c\u6709\u4e00\u4e2a\u4f7f\u7528\u56de\u8c03\u7684\u5f02\u6b65\u5e73\u53f0\u3002AWS Lambda \u63d0\u4f9b\u4e86\u6709\u5173\u6b64 context \u5bf9\u8c61\u7684\u5176\u4ed6\u65b9\u6cd5\u3002\u60a8\u5c06\u4f7f\u7528\u8fd9\u4e9b context \u5bf9\u8c61\u65b9\u6cd5\u6307\u793a AWS Lambda \u7ec8\u6b62 Lambda \u51fd\u6570\u5e76\u5c06\u503c\u8fd4\u56de\u5230\u8c03\u7528\u65b9\uff08\u53ef\u9009\uff09\u3002 \u65e5\u5fd7\u8bb0\u5f55 \u2013 \u60a8\u7684 Lambda \u51fd\u6570\u53ef\u5305\u542b\u65e5\u5fd7\u8bb0\u5f55\u8bed\u53e5\u3002AWS Lambda \u5c06\u8fd9\u4e9b\u65e5\u5fd7\u5199\u5165 CloudWatch Logs\u3002\u7279\u5b9a\u8bed\u8a00\u8bed\u53e5\u5c06\u751f\u6210\u65e5\u5fd7\u6761\u76ee\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7f16\u5199 Lambda \u51fd\u6570\u4ee3\u7801\u6240\u7528\u7684\u8bed\u8a00\u3002 \u65e5\u5fd7\u8bb0\u5f55\u9700\u8981\u9075\u5faa CloudWatch Logs \u9650\u5236\u3002\u65e5\u5fd7\u6570\u636e\u4f1a\u7531\u4e8e\u9650\u5236\u800c\u4e22\u5931\uff1b\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f53\u6267\u884c\u4e0a\u4e0b\u6587\u7ec8\u6b62\u65f6\u4e5f\u4f1a\u4e22\u5931\u3002 \u5f02\u5e38 \u2013 \u60a8\u7684 Lambda \u51fd\u6570\u9700\u8981\u5c06\u51fd\u6570\u6267\u884c\u7684\u7ed3\u679c\u4f20\u9012\u7ed9 AWS Lambda\u3002\u6839\u636e\u60a8\u7f16\u5199 Lambda \u51fd\u6570\u4ee3\u7801\u6240\u7528\u7684\u8bed\u8a00\uff0c\u6210\u529f\u7ed3\u675f\u8bf7\u6c42\u6216\u5411 AWS Lambda \u901a\u77e5\u6267\u884c\u671f\u95f4\u51fa\u73b0\u4e86\u9519\u8bef\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u3002\u5982\u679c\u60a8\u540c\u6b65\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u5219 AWS Lambda \u4f1a\u5c06\u7ed3\u679c\u8f6c\u53d1\u56de\u5ba2\u6237\u7aef\u3002 \u5e76\u53d1 \u2013 \u5f53\u60a8\u7684\u51fd\u6570\u7684\u8c03\u7528\u901f\u5ea6\u5feb\u4e8e\u51fd\u6570\u7684\u5355\u4e2a\u5b9e\u4f8b\u53ef\u5904\u7406\u4e8b\u4ef6\u7684\u901f\u5ea6\u65f6\uff0cLambda \u4f1a\u901a\u8fc7\u8fd0\u884c\u5176\u4ed6\u5b9e\u4f8b\u6765\u6269\u5c55\u60a8\u7684\u51fd\u6570\u3002\u60a8\u7684\u51fd\u6570\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u6bcf\u6b21\u4ec5\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u62c5\u5fc3\u540c\u6b65\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u7684\u95ee\u9898\u3002\u4e0d\u8fc7\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5f02\u6b65\u8bed\u8a00\u529f\u80fd\u5e76\u884c\u5904\u7406\u4e8b\u4ef6\u6279\u6b21\uff0c\u5e76\u5c06\u6570\u636e\u4fdd\u5b58\u5230 /tmp \u76ee\u5f55\u4ee5\u4fbf\u5728\u540c\u4e00\u5b9e\u4f8b\u4e0a\u7684\u672a\u6765\u8c03\u7528\u4e2d\u4f7f\u7528\u3002 \u5fc5\u987b\u4ee5\u65e0\u72b6\u6001\u98ce\u683c\u7f16\u5199 Lambda \u51fd\u6570\u4ee3\u7801\uff0c\u4e14\u4e0e\u5e95\u5c42\u7684\u8ba1\u7b97\u57fa\u7840\u8bbe\u65bd\u4e0d\u5b58\u5728\u5173\u8054\u3002\u60a8\u7684\u4ee3\u7801\u5e94\u8be5\u8981\u6c42\u5c06\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\u3001\u5b50\u6d41\u7a0b\u548c\u7c7b\u4f3c\u9879\u76ee\u9650\u5236\u4e3a\u8bf7\u6c42\u7684\u751f\u547d\u5468\u671f\u3002\u6301\u4e45\u72b6\u6001\u5e94\u5b58\u50a8\u5728 Amazon S3\u3001Amazon DynamoDB \u6216\u5176\u4ed6\u4e91\u5b58\u50a8\u670d\u52a1\u4e2d\u3002 \u8981\u6c42\u51fd\u6570\u65e0\u72b6\u6001\u53ef\u4f7f AWS Lambda \u6839\u636e\u9700\u8981\u542f\u52a8\u5408\u9002\u6570\u91cf\u7684\u51fd\u6570\u526f\u672c\uff0c\u4ee5\u6839\u636e\u4f20\u5165\u4e8b\u4ef6\u548c\u8bf7\u6c42\u7684\u901f\u7387\u8c03\u6574\u89c4\u6a21\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u51fd\u6570\u53ef\u80fd\u4e0d\u4f1a\u59cb\u7ec8\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8ba1\u7b97\u5b9e\u4f8b\u4e0a\uff0c\u4e14 AWS Lambda \u53ef\u80fd\u4f1a\u591a\u6b21\u4f7f\u7528 Lambda \u51fd\u6570\u7684\u7ed9\u5b9a\u5b9e\u4f8b\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u4f7f\u7528 AWS Lambda \u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5\u3002","title":"program"},{"location":"iot/program/#_1","text":"\u60a8\u5c06\u4f7f\u7528 AWS Lambda \u652f\u6301\u7684\u8bed\u8a00\u4e4b\u4e00\u4e3a Lambda \u51fd\u6570\u7f16\u5199\u4ee3\u7801\u3002\u65e0\u8bba\u60a8\u9009\u62e9\u54ea\u79cd\u8bed\u8a00\uff0c\u90fd\u53ef\u4ee5\u91c7\u7528\u4e00\u4e2a\u901a\u7528\u6a21\u5f0f\uff0c\u5373\u4e3a\u5305\u542b\u4ee5\u4e0b\u6838\u5fc3\u6982\u5ff5\u7684 Lambda \u51fd\u6570\u7f16\u5199\u4ee3\u7801\uff1a \u5904\u7406\u7a0b\u5e8f \u2013 \u5904\u7406\u7a0b\u5e8f\u662f AWS Lambda \u8c03\u7528\u7684\u7528\u4e8e\u5f00\u59cb\u6267\u884c Lambda \u51fd\u6570\u7684\u51fd\u6570\u3002\u60a8\u5728\u521b\u5efa Lambda \u51fd\u6570\u65f6\u6807\u8bc6\u5904\u7406\u7a0b\u5e8f\u3002\u5728\u8c03\u7528 Lambda \u51fd\u6570\u65f6\uff0cAWS Lambda \u5c06\u901a\u8fc7\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\u6765\u5f00\u59cb\u6267\u884c\u60a8\u7684\u4ee3\u7801\u3002AWS Lambda \u5c06\u4efb\u4f55\u4e8b\u4ef6\u6570\u636e\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f\u3002\u60a8\u7684\u5904\u7406\u7a0b\u5e8f\u5e94\u5904\u7406\u6b64\u4f20\u5165\u4e8b\u4ef6\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u8c03\u7528\u60a8\u7684\u4ee3\u7801\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u51fd\u6570/\u65b9\u6cd5\u3002 \u4e0a\u4e0b\u6587 \u2013 AWS Lambda \u8fd8\u4f1a\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\u3002\u901a\u8fc7\u6b64 context \u5bf9\u8c61\uff0c\u60a8\u7684\u4ee3\u7801\u53ef\u4e0e AWS Lambda \u4ea4\u4e92\u3002\u4f8b\u5982\uff0c\u60a8\u7684\u4ee3\u7801\u53ef\u5728 AWS Lambda \u7ec8\u6b62 Lambda \u51fd\u6570\u524d\u53d1\u73b0\u5269\u4f59\u7684\u6267\u884c\u65f6\u95f4\u3002 \u6b64\u5916\uff0c\u5bf9\u4e8e Node.js \u7b49\u8bed\u8a00\uff0c\u6709\u4e00\u4e2a\u4f7f\u7528\u56de\u8c03\u7684\u5f02\u6b65\u5e73\u53f0\u3002AWS Lambda \u63d0\u4f9b\u4e86\u6709\u5173\u6b64 context \u5bf9\u8c61\u7684\u5176\u4ed6\u65b9\u6cd5\u3002\u60a8\u5c06\u4f7f\u7528\u8fd9\u4e9b context \u5bf9\u8c61\u65b9\u6cd5\u6307\u793a AWS Lambda \u7ec8\u6b62 Lambda \u51fd\u6570\u5e76\u5c06\u503c\u8fd4\u56de\u5230\u8c03\u7528\u65b9\uff08\u53ef\u9009\uff09\u3002 \u65e5\u5fd7\u8bb0\u5f55 \u2013 \u60a8\u7684 Lambda \u51fd\u6570\u53ef\u5305\u542b\u65e5\u5fd7\u8bb0\u5f55\u8bed\u53e5\u3002AWS Lambda \u5c06\u8fd9\u4e9b\u65e5\u5fd7\u5199\u5165 CloudWatch Logs\u3002\u7279\u5b9a\u8bed\u8a00\u8bed\u53e5\u5c06\u751f\u6210\u65e5\u5fd7\u6761\u76ee\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7f16\u5199 Lambda \u51fd\u6570\u4ee3\u7801\u6240\u7528\u7684\u8bed\u8a00\u3002 \u65e5\u5fd7\u8bb0\u5f55\u9700\u8981\u9075\u5faa CloudWatch Logs \u9650\u5236\u3002\u65e5\u5fd7\u6570\u636e\u4f1a\u7531\u4e8e\u9650\u5236\u800c\u4e22\u5931\uff1b\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f53\u6267\u884c\u4e0a\u4e0b\u6587\u7ec8\u6b62\u65f6\u4e5f\u4f1a\u4e22\u5931\u3002 \u5f02\u5e38 \u2013 \u60a8\u7684 Lambda \u51fd\u6570\u9700\u8981\u5c06\u51fd\u6570\u6267\u884c\u7684\u7ed3\u679c\u4f20\u9012\u7ed9 AWS Lambda\u3002\u6839\u636e\u60a8\u7f16\u5199 Lambda \u51fd\u6570\u4ee3\u7801\u6240\u7528\u7684\u8bed\u8a00\uff0c\u6210\u529f\u7ed3\u675f\u8bf7\u6c42\u6216\u5411 AWS Lambda \u901a\u77e5\u6267\u884c\u671f\u95f4\u51fa\u73b0\u4e86\u9519\u8bef\u6709\u51e0\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u3002\u5982\u679c\u60a8\u540c\u6b65\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u5219 AWS Lambda \u4f1a\u5c06\u7ed3\u679c\u8f6c\u53d1\u56de\u5ba2\u6237\u7aef\u3002 \u5e76\u53d1 \u2013 \u5f53\u60a8\u7684\u51fd\u6570\u7684\u8c03\u7528\u901f\u5ea6\u5feb\u4e8e\u51fd\u6570\u7684\u5355\u4e2a\u5b9e\u4f8b\u53ef\u5904\u7406\u4e8b\u4ef6\u7684\u901f\u5ea6\u65f6\uff0cLambda \u4f1a\u901a\u8fc7\u8fd0\u884c\u5176\u4ed6\u5b9e\u4f8b\u6765\u6269\u5c55\u60a8\u7684\u51fd\u6570\u3002\u60a8\u7684\u51fd\u6570\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u6bcf\u6b21\u4ec5\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\uff0c\u56e0\u6b64\u60a8\u65e0\u9700\u62c5\u5fc3\u540c\u6b65\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u7684\u95ee\u9898\u3002\u4e0d\u8fc7\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5f02\u6b65\u8bed\u8a00\u529f\u80fd\u5e76\u884c\u5904\u7406\u4e8b\u4ef6\u6279\u6b21\uff0c\u5e76\u5c06\u6570\u636e\u4fdd\u5b58\u5230 /tmp \u76ee\u5f55\u4ee5\u4fbf\u5728\u540c\u4e00\u5b9e\u4f8b\u4e0a\u7684\u672a\u6765\u8c03\u7528\u4e2d\u4f7f\u7528\u3002 \u5fc5\u987b\u4ee5\u65e0\u72b6\u6001\u98ce\u683c\u7f16\u5199 Lambda \u51fd\u6570\u4ee3\u7801\uff0c\u4e14\u4e0e\u5e95\u5c42\u7684\u8ba1\u7b97\u57fa\u7840\u8bbe\u65bd\u4e0d\u5b58\u5728\u5173\u8054\u3002\u60a8\u7684\u4ee3\u7801\u5e94\u8be5\u8981\u6c42\u5c06\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\u3001\u5b50\u6d41\u7a0b\u548c\u7c7b\u4f3c\u9879\u76ee\u9650\u5236\u4e3a\u8bf7\u6c42\u7684\u751f\u547d\u5468\u671f\u3002\u6301\u4e45\u72b6\u6001\u5e94\u5b58\u50a8\u5728 Amazon S3\u3001Amazon DynamoDB \u6216\u5176\u4ed6\u4e91\u5b58\u50a8\u670d\u52a1\u4e2d\u3002 \u8981\u6c42\u51fd\u6570\u65e0\u72b6\u6001\u53ef\u4f7f AWS Lambda \u6839\u636e\u9700\u8981\u542f\u52a8\u5408\u9002\u6570\u91cf\u7684\u51fd\u6570\u526f\u672c\uff0c\u4ee5\u6839\u636e\u4f20\u5165\u4e8b\u4ef6\u548c\u8bf7\u6c42\u7684\u901f\u7387\u8c03\u6574\u89c4\u6a21\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u51fd\u6570\u53ef\u80fd\u4e0d\u4f1a\u59cb\u7ec8\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u8ba1\u7b97\u5b9e\u4f8b\u4e0a\uff0c\u4e14 AWS Lambda \u53ef\u80fd\u4f1a\u591a\u6b21\u4f7f\u7528 Lambda \u51fd\u6570\u7684\u7ed9\u5b9a\u5b9e\u4f8b\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u4f7f\u7528 AWS Lambda \u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5\u3002","title":"\u7f16\u7a0b\u6a21\u578b"},{"location":"iot/protocol/","text":"\u534f\u8bae MQTT mqtt-v3.1.1 WebSocket JSON Web Token (JWT) JSON Web Token (JWT) \u4e3a\u60a8\u7684 AWS \u8d44\u6e90\u542f\u7528 SAML \u4e3a\u60a8\u7684 AWS \u8d44\u6e90\u542f\u7528 SAML OpenSSL OpenSSL \u4ee3\u7801\u7ba1\u7406 Swagger 2.0 HTTPS \u5728 Amazon API Gateway \u4e2d\uff0cAPI \u5c06\u5f15\u7528\u4e00\u7cfb\u5217\u53ef\u901a\u8fc7 HTTPS \u7ec8\u7aef\u8282\u70b9\u8c03\u7528\u7684\u8d44\u6e90\u548c\u65b9\u6cd5\u3002 PostMan POSTMAN cURL wscat wscat aws\u6d4b\u8bd5WebSock HIPPA HIPPA","title":"protocol"},{"location":"iot/protocol/#_1","text":"","title":"\u534f\u8bae"},{"location":"iot/protocol/#mqtt","text":"mqtt-v3.1.1","title":"MQTT"},{"location":"iot/protocol/#websocket","text":"","title":"WebSocket"},{"location":"iot/protocol/#json-web-token-jwt","text":"JSON Web Token (JWT)","title":"JSON Web Token (JWT)"},{"location":"iot/protocol/#aws-saml","text":"\u4e3a\u60a8\u7684 AWS \u8d44\u6e90\u542f\u7528 SAML","title":"\u4e3a\u60a8\u7684 AWS \u8d44\u6e90\u542f\u7528 SAML"},{"location":"iot/protocol/#openssl","text":"OpenSSL","title":"OpenSSL"},{"location":"iot/protocol/#_2","text":"Swagger 2.0","title":"\u4ee3\u7801\u7ba1\u7406"},{"location":"iot/protocol/#https","text":"\u5728 Amazon API Gateway \u4e2d\uff0cAPI \u5c06\u5f15\u7528\u4e00\u7cfb\u5217\u53ef\u901a\u8fc7 HTTPS \u7ec8\u7aef\u8282\u70b9\u8c03\u7528\u7684\u8d44\u6e90\u548c\u65b9\u6cd5\u3002","title":"HTTPS"},{"location":"iot/protocol/#postman","text":"POSTMAN","title":"PostMan"},{"location":"iot/protocol/#curl","text":"","title":"cURL"},{"location":"iot/protocol/#wscat","text":"wscat aws\u6d4b\u8bd5WebSock","title":"wscat"},{"location":"iot/protocol/#hippa","text":"HIPPA","title":"HIPPA"},{"location":"iot/usermanager/","text":"\u7528\u6237\u7ba1\u7406\u548c\u6743\u9650 \u65e0\u670d\u52a1\u5f00\u53d1\u5de5\u5177 \u804a\u5929\u7a0b\u5e8f \u65e0\u670d\u52a1\u67b6\u6784\u5f00\u53d1\u53d1\u5e03\u5de5\u5177 \u901a\u8fc7ip\u5730\u5740\u83b7\u53d6\u4f4d\u7f6e ipstack jq GSON \u547d\u4ee4\u884c\u5904\u7406\u5de5\u5177 Cognito Amazon Cognito \u4e3a\u60a8\u7684 Web \u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u8eab\u4efd\u9a8c\u8bc1\u3001\u6388\u6743\u548c\u7528\u6237\u7ba1\u7406\u3002\u60a8\u7684\u7528\u6237\u53ef\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u76f4\u63a5\u767b\u5f55\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9 (\u5982 Facebook\u3001Amazon \u6216 Google) \u767b\u5f55\u3002 \u672c\u4e3b\u9898\u4ecb\u7ecd\u4f7f\u7528 Amazon Cognito \u7684\u516d\u4e2a\u5e38\u89c1\u573a\u666f\u3002 Amazon Cognito \u7684\u4e24\u4e2a\u4e3b\u8981\u7ec4\u4ef6\u662f\u7528\u6237\u6c60\u548c\u8eab\u4efd\u6c60\u3002\u7528\u6237\u6c60\u662f\u4e3a\u60a8\u7684 Web \u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u63d0\u4f9b\u6ce8\u518c\u548c\u767b\u5f55\u9009\u9879\u7684\u7528\u6237\u76ee\u5f55\u3002\u8eab\u4efd\u6c60\u63d0\u4f9b AWS \u51ed\u8bc1\u4ee5\u5411\u7528\u6237\u6388\u4e88\u5bf9\u5176\u4ed6 AWS \u670d\u52a1\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u7528\u6237\u6c60\u662f Amazon Cognito \u4e2d\u7684\u7528\u6237\u76ee\u5f55\u3002\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u6c60\u76f4\u63a5\u767b\u5f55\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9\u8eab\u4efd\u63d0\u4f9b\u5546 (IdP) \u8054\u5408\u3002\u7528\u6237\u6c60\u7ba1\u7406\u4ece\u901a\u8fc7 Facebook\u3001Google \u548c Amazon \u8fdb\u884c\u7684\u793e\u4ea4\u767b\u5f55\u8fd4\u56de\u7684\u4ee5\u53ca\u4ece OpenID Connect (OIDC) \u548c SAML IdP \u8fd4\u56de\u7684\u4ee4\u724c\u7684\u5904\u7406\u5f00\u9500\u3002 \u65e0\u8bba\u60a8\u7684\u7528\u6237\u662f\u76f4\u63a5\u767b\u5f55\u8fd8\u662f\u901a\u8fc7\u7b2c\u4e09\u65b9\u767b\u5f55\uff0c\u7528\u6237\u6c60\u7684\u6240\u6709\u6210\u5458\u90fd\u6709\u4e00\u4e2a\u53ef\u901a\u8fc7\u5f00\u53d1\u5de5\u5177\u5305\u8bbf\u95ee\u7684\u76ee\u5f55\u914d\u7f6e\u6587\u4ef6\u3002 \u501f\u52a9\u8eab\u4efd\u6c60\uff0c\u60a8\u7684\u7528\u6237\u53ef\u4ee5\u83b7\u53d6\u4e34\u65f6 AWS \u51ed\u8bc1\u6765\u8bbf\u95ee AWS \u670d\u52a1\uff0c\u5982 Amazon S3 \u548c DynamoDB\u3002\u8eab\u4efd\u6c60\u652f\u6301\u533f\u540d\u6765\u5bbe\u7528\u6237\u4ee5\u53ca\u901a\u8fc7\u7b2c\u4e09\u65b9 IdP \u7684\u8054\u5408\u8eab\u4efd\u9a8c\u8bc1\u3002 Cognito \u5355\u70b9\u767b\u5f55 \u901a\u8fc7\u7b2c\u4e09\u65b9\u6dfb\u52a0\u7528\u6237\u6c60\u767b\u5f55 Android Demo Amazon Pinpoint Amazon Pinpoint \u53d1\u9001\u5b9a\u5411\u6d88\u606f \u4ec0\u4e48\u662f\u5ba2\u6237\u5206\u6790 \u5ba2\u6237\u5206\u6790\u7684\u4e09\u4e2a\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1a\u5ba2\u6237\u4eba\u53e3\u7edf\u8ba1\uff0c\u5174\u8da3\u548c\u53c2\u4e0e\u5ea6\u3002 Amazon Pinpoint REST API \u4ec0\u4e48\u662f\u5ba2\u6237\u7ec6\u5206\uff1f \u5c06 Amazon Pinpoint \u4e0e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u96c6\u6210 \u652f\u6301\u7684\u56fd\u5bb6\u548c\u5730\u533a \u4e3a\u60c5\u7eea\u5206\u6790\u548c\u53c2\u4e0e\u521b\u5efa\u57fa\u4e8eAI\u7684\u8425\u9500\u89e3\u51b3\u65b9\u6848 \u8fea\u58eb\u5c3c\u6d41\u5a92\u4f53\u670d\u52a1\u5982\u4f55\u4f7f\u7528Amazon Pinpoint\u5b9e\u65f6\u5411\u6570\u767e\u4e07\u7528\u6237\u53d1\u9001\u4e2a\u6027\u5316\u6d88\u606f AWS AppSync AWS AppSync makes it easy to build data-driven mobile and browser-based apps that deliver responsive, collaborative experiences by keeping the data updated when devices are connected, enabling the app to use local data when offline, and synchronizing the data when the devices reconnect. AWS AppSync uses the open standard GraphQL query language so you can request, change, and subscribe to the exact data you need with just a few lines of code. AWS AppSync Alexa Amazon Cognito for Alexa Skills User Management","title":"UserManager"},{"location":"iot/usermanager/#_1","text":"","title":"\u7528\u6237\u7ba1\u7406\u548c\u6743\u9650"},{"location":"iot/usermanager/#_2","text":"\u804a\u5929\u7a0b\u5e8f \u65e0\u670d\u52a1\u67b6\u6784\u5f00\u53d1\u53d1\u5e03\u5de5\u5177","title":"\u65e0\u670d\u52a1\u5f00\u53d1\u5de5\u5177"},{"location":"iot/usermanager/#ip","text":"ipstack jq GSON \u547d\u4ee4\u884c\u5904\u7406\u5de5\u5177","title":"\u901a\u8fc7ip\u5730\u5740\u83b7\u53d6\u4f4d\u7f6e"},{"location":"iot/usermanager/#cognito","text":"Amazon Cognito \u4e3a\u60a8\u7684 Web \u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u8eab\u4efd\u9a8c\u8bc1\u3001\u6388\u6743\u548c\u7528\u6237\u7ba1\u7406\u3002\u60a8\u7684\u7528\u6237\u53ef\u4f7f\u7528\u7528\u6237\u540d\u548c\u5bc6\u7801\u76f4\u63a5\u767b\u5f55\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9 (\u5982 Facebook\u3001Amazon \u6216 Google) \u767b\u5f55\u3002 \u672c\u4e3b\u9898\u4ecb\u7ecd\u4f7f\u7528 Amazon Cognito \u7684\u516d\u4e2a\u5e38\u89c1\u573a\u666f\u3002 Amazon Cognito \u7684\u4e24\u4e2a\u4e3b\u8981\u7ec4\u4ef6\u662f\u7528\u6237\u6c60\u548c\u8eab\u4efd\u6c60\u3002\u7528\u6237\u6c60\u662f\u4e3a\u60a8\u7684 Web \u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u63d0\u4f9b\u6ce8\u518c\u548c\u767b\u5f55\u9009\u9879\u7684\u7528\u6237\u76ee\u5f55\u3002\u8eab\u4efd\u6c60\u63d0\u4f9b AWS \u51ed\u8bc1\u4ee5\u5411\u7528\u6237\u6388\u4e88\u5bf9\u5176\u4ed6 AWS \u670d\u52a1\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u7528\u6237\u6c60\u662f Amazon Cognito \u4e2d\u7684\u7528\u6237\u76ee\u5f55\u3002\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7528\u6237\u6c60\u76f4\u63a5\u767b\u5f55\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9\u8eab\u4efd\u63d0\u4f9b\u5546 (IdP) \u8054\u5408\u3002\u7528\u6237\u6c60\u7ba1\u7406\u4ece\u901a\u8fc7 Facebook\u3001Google \u548c Amazon \u8fdb\u884c\u7684\u793e\u4ea4\u767b\u5f55\u8fd4\u56de\u7684\u4ee5\u53ca\u4ece OpenID Connect (OIDC) \u548c SAML IdP \u8fd4\u56de\u7684\u4ee4\u724c\u7684\u5904\u7406\u5f00\u9500\u3002 \u65e0\u8bba\u60a8\u7684\u7528\u6237\u662f\u76f4\u63a5\u767b\u5f55\u8fd8\u662f\u901a\u8fc7\u7b2c\u4e09\u65b9\u767b\u5f55\uff0c\u7528\u6237\u6c60\u7684\u6240\u6709\u6210\u5458\u90fd\u6709\u4e00\u4e2a\u53ef\u901a\u8fc7\u5f00\u53d1\u5de5\u5177\u5305\u8bbf\u95ee\u7684\u76ee\u5f55\u914d\u7f6e\u6587\u4ef6\u3002 \u501f\u52a9\u8eab\u4efd\u6c60\uff0c\u60a8\u7684\u7528\u6237\u53ef\u4ee5\u83b7\u53d6\u4e34\u65f6 AWS \u51ed\u8bc1\u6765\u8bbf\u95ee AWS \u670d\u52a1\uff0c\u5982 Amazon S3 \u548c DynamoDB\u3002\u8eab\u4efd\u6c60\u652f\u6301\u533f\u540d\u6765\u5bbe\u7528\u6237\u4ee5\u53ca\u901a\u8fc7\u7b2c\u4e09\u65b9 IdP \u7684\u8054\u5408\u8eab\u4efd\u9a8c\u8bc1\u3002 Cognito \u5355\u70b9\u767b\u5f55 \u901a\u8fc7\u7b2c\u4e09\u65b9\u6dfb\u52a0\u7528\u6237\u6c60\u767b\u5f55 Android Demo","title":"Cognito"},{"location":"iot/usermanager/#amazon-pinpoint","text":"Amazon Pinpoint \u53d1\u9001\u5b9a\u5411\u6d88\u606f \u4ec0\u4e48\u662f\u5ba2\u6237\u5206\u6790 \u5ba2\u6237\u5206\u6790\u7684\u4e09\u4e2a\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1a\u5ba2\u6237\u4eba\u53e3\u7edf\u8ba1\uff0c\u5174\u8da3\u548c\u53c2\u4e0e\u5ea6\u3002 Amazon Pinpoint REST API \u4ec0\u4e48\u662f\u5ba2\u6237\u7ec6\u5206\uff1f \u5c06 Amazon Pinpoint \u4e0e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u96c6\u6210 \u652f\u6301\u7684\u56fd\u5bb6\u548c\u5730\u533a \u4e3a\u60c5\u7eea\u5206\u6790\u548c\u53c2\u4e0e\u521b\u5efa\u57fa\u4e8eAI\u7684\u8425\u9500\u89e3\u51b3\u65b9\u6848 \u8fea\u58eb\u5c3c\u6d41\u5a92\u4f53\u670d\u52a1\u5982\u4f55\u4f7f\u7528Amazon Pinpoint\u5b9e\u65f6\u5411\u6570\u767e\u4e07\u7528\u6237\u53d1\u9001\u4e2a\u6027\u5316\u6d88\u606f","title":"Amazon Pinpoint"},{"location":"iot/usermanager/#aws-appsync","text":"AWS AppSync makes it easy to build data-driven mobile and browser-based apps that deliver responsive, collaborative experiences by keeping the data updated when devices are connected, enabling the app to use local data when offline, and synchronizing the data when the devices reconnect. AWS AppSync uses the open standard GraphQL query language so you can request, change, and subscribe to the exact data you need with just a few lines of code. AWS AppSync","title":"AWS AppSync"},{"location":"iot/usermanager/#alexa","text":"Amazon Cognito for Alexa Skills User Management","title":"Alexa"},{"location":"linux/resource/","text":"Linux\u5e38\u7528\u547d\u4ee4 \u5982\u4f55\u5728\u7ec8\u7aef\u663e\u793a\u56fe\u50cf\u7f29\u7565\u56fe | Linux \u4e2d\u56fd \u5341\u5927\u4f01\u4e1a\u7ea7Linux\u670d\u52a1\u5668\u5b89\u5168\u9632\u62a4\u8981\u70b9 \u670d\u52a1\u5668\u88ab\u5165\u4fb5\u4e86\u600e\u4e48\u529e\uff1f \u4e3a\u4ec0\u4e48\u4f60\u7684\u670d\u52a1\u5668\u603b\u88ab\u5165\u4fb5\uff1fSSH\u5bc6\u7801\u66b4\u529b\u7834\u89e3\u5b9e\u6218 \u6d45\u6790\u5927\u89c4\u6a21DDOS\u9632\u5fa1\u67b6\u6784\uff1a\u5e94\u5bf9T\u7ea7\u653b\u9632 \u521d\u521b\u516c\u53f8\u5982\u4f55\u907f\u514d\u670d\u52a1\u5668\u88ab\u653b\u51fb \u670d\u52a1\u5668\u9632\u62a4\u7981\u7528ip \u7ed9\u521d\u5b66\u8005\u7684Web\u5b89\u5168\u6307\u5357 \u7f51\u7edc\u5b89\u5168 NS \u516b\u79cd WebSocket \u6846\u67b6\u7684\u6027\u80fd\u6bd4\u8f83 Nginx Nginx install python3 + Django + uwsgi + nginx \u914d\u7f6e\u90e8\u7f72\u7b14\u8bb0 Linux\u5de5\u5177\u5feb\u901f\u6559\u7a0b","title":"\u8d44\u6599"},{"location":"project/websocket/","text":"Flutter Websocket+Django Channels \u5b8c\u6210Websocket\u524d\u540e\u7aef\u804a\u5929\u5ba4 \u524d\u8a00 WebSocket \u4e0e HTTP WebSocket \u534f\u8bae\u57282008\u5e74\u8bde\u751f\uff0c2011\u5e74\u6210\u4e3a\u56fd\u9645\u6807\u51c6\u3002\u73b0\u5728\u6240\u6709\u6d4f\u89c8\u5668\u90fd\u5df2\u7ecf\u652f\u6301\u4e86\u3002WebSocket \u7684\u6700\u5927\u7279\u70b9\u5c31\u662f\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u4e3b\u52a8\u5411\u5ba2\u6237\u7aef\u63a8\u9001\u4fe1\u606f\uff0c\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u4e3b\u52a8\u5411\u670d\u52a1\u5668\u53d1\u9001\u4fe1\u606f\uff0c\u662f\u771f\u6b63\u7684\u53cc\u5411\u5e73\u7b49\u5bf9\u8bdd\u3002 HTTP \u6709 1.1 \u548c 1.0 \u4e4b\u8bf4\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 keep-alive \uff0c\u628a\u591a\u4e2a HTTP \u8bf7\u6c42\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u4f46\u662f Websocket \u5176\u5b9e\u662f\u4e00\u4e2a\u65b0\u534f\u8bae\uff0c\u8ddf HTTP \u534f\u8bae\u57fa\u672c\u6ca1\u6709\u5173\u7cfb\uff0c\u53ea\u662f\u4e3a\u4e86\u517c\u5bb9\u73b0\u6709\u6d4f\u89c8\u5668\uff0c\u6240\u4ee5\u5728\u63e1\u624b\u9636\u6bb5\u4f7f\u7528\u4e86 HTTP \u3002 WebSocket \u7684\u5176\u4ed6\u7279\u70b9\uff1a \u5efa\u7acb\u5728 TCP \u534f\u8bae\u4e4b\u4e0a\uff0c\u670d\u52a1\u5668\u7aef\u7684\u5b9e\u73b0\u6bd4\u8f83\u5bb9\u6613\u3002 \u4e0e HTTP \u534f\u8bae\u6709\u7740\u826f\u597d\u7684\u517c\u5bb9\u6027\u3002\u9ed8\u8ba4\u7aef\u53e3\u4e5f\u662f80\u548c443\uff0c\u5e76\u4e14\u63e1\u624b\u9636\u6bb5\u91c7\u7528 HTTP \u534f\u8bae\uff0c\u56e0\u6b64\u63e1\u624b\u65f6\u4e0d\u5bb9\u6613\u5c4f\u853d\uff0c\u80fd\u901a\u8fc7\u5404\u79cd HTTP \u4ee3\u7406\u670d\u52a1\u5668\u3002 \u6570\u636e\u683c\u5f0f\u6bd4\u8f83\u8f7b\u91cf\uff0c\u6027\u80fd\u5f00\u9500\u5c0f\uff0c\u901a\u4fe1\u9ad8\u6548\u3002 \u53ef\u4ee5\u53d1\u9001\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u53d1\u9001\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u6ca1\u6709\u540c\u6e90\u9650\u5236\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u4efb\u610f\u670d\u52a1\u5668\u901a\u4fe1\u3002 \u534f\u8bae\u6807\u8bc6\u7b26\u662fws\uff08\u5982\u679c\u52a0\u5bc6\uff0c\u5219\u4e3awss\uff09\uff0c\u670d\u52a1\u5668\u7f51\u5740\u5c31\u662f URL\u3002 WebSocket \u662f\u4ec0\u4e48\u6837\u7684\u534f\u8bae\uff0c\u5177\u4f53\u6709\u4ec0\u4e48\u4f18\u70b9 \u9996\u5148\uff0cWebSocket \u662f\u4e00\u4e2a\u6301\u4e45\u5316\u7684\u534f\u8bae\uff0c\u76f8\u5bf9\u4e8e HTTP \u8fd9\u79cd\u975e\u6301\u4e45\u7684\u534f\u8bae\u6765\u8bf4\u3002\u7b80\u5355\u7684\u4e3e\u4e2a\u4f8b\u5b50\u5427\uff0c\u7528\u76ee\u524d\u5e94\u7528\u6bd4\u8f83\u5e7f\u6cdb\u7684 PHP \u751f\u547d\u5468\u671f\u6765\u89e3\u91ca\u3002 HTTP \u7684\u751f\u547d\u5468\u671f\u901a\u8fc7 Request \u6765\u754c\u5b9a\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a Request \u4e00\u4e2a Response \uff0c\u90a3\u4e48\u5728 HTTP1.0 \u4e2d\uff0c\u8fd9\u6b21 HTTP \u8bf7\u6c42\u5c31\u7ed3\u675f\u4e86\u3002 \u5728 HTTP1.1 \u4e2d\u8fdb\u884c\u4e86\u6539\u8fdb\uff0c\u4f7f\u5f97\u6709\u4e00\u4e2a keep-alive\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4e00\u4e2a HTTP \u8fde\u63a5\u4e2d\uff0c\u53ef\u4ee5\u53d1\u9001\u591a\u4e2a Request\uff0c\u63a5\u6536\u591a\u4e2a Response\u3002\u4f46\u662f\u8bf7\u8bb0\u4f4f Request = Response\uff0c \u5728 HTTP \u4e2d\u6c38\u8fdc\u662f\u8fd9\u6837\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a Request \u53ea\u80fd\u6709\u4e00\u4e2a Response\u3002\u800c\u4e14\u8fd9\u4e2a Response \u4e5f\u662f\u88ab\u52a8\u7684\uff0c\u4e0d\u80fd\u4e3b\u52a8\u53d1\u8d77\u3002 WebSocket \u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f \u9996\u5148 WebSocket \u662f\u57fa\u4e8e HTTP \u534f\u8bae\u7684\uff0c\u6216\u8005\u8bf4\u501f\u7528\u4e86 HTTP \u534f\u8bae\u6765\u5b8c\u6210\u4e00\u90e8\u5206\u63e1\u624b\u3002 \u9996\u5148\u6211\u4eec\u6765\u770b\u4e2a\u5178\u578b\u7684 WebSocket \u63e1\u624b GET /chat HTTP/1.1 Host: server.example.com Upgrade: websocket Connection: Upgrade Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw== Sec-WebSocket-Protocol: chat, superchat Sec-WebSocket-Version: 13 Origin: http://example.com \u719f\u6089 HTTP \u7684\u7ae5\u978b\u53ef\u80fd\u53d1\u73b0\u4e86\uff0c\u8fd9\u6bb5\u7c7b\u4f3c HTTP \u534f\u8bae\u7684\u63e1\u624b\u8bf7\u6c42\u4e2d\uff0c\u591a\u4e86\u8fd9\u4e48\u51e0\u4e2a\u4e1c\u897f\u3002 Upgrade: websocket Connection: Upgrade \u8fd9\u4e2a\u5c31\u662f WebSocket \u7684\u6838\u5fc3\u4e86\uff0c\u544a\u8bc9 Apache \u3001 Nginx \u7b49\u670d\u52a1\u5668\uff1a\u6ce8\u610f\u5566\uff0c\u6211\u53d1\u8d77\u7684\u8bf7\u6c42\u8981\u7528 WebSocket \u534f\u8bae\uff0c\u5feb\u70b9\u5e2e\u6211\u627e\u5230\u5bf9\u5e94\u7684\u52a9\u7406\u5904\u7406~\u800c\u4e0d\u662f\u90a3\u4e2a\u8001\u571f\u7684 HTTP\u3002 Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw== Sec-WebSocket-Protocol: chat, superchat Sec-WebSocket-Version: 13 \u9996\u5148\uff0c Sec-WebSocket-Key \u662f\u4e00\u4e2a Base64 encode \u7684\u503c\uff0c\u8fd9\u4e2a\u662f\u6d4f\u89c8\u5668\u968f\u673a\u751f\u6210\u7684\uff0c\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6ce5\u7164\uff0c\u4e0d\u8981\u5ffd\u60a0\u6211\uff0c\u6211\u8981\u9a8c\u8bc1\u4f60\u662f\u4e0d\u662f\u771f\u7684\u662f WebSocket \u52a9\u7406\u3002 \u7136\u540e\uff0c Sec_WebSocket-Protocol \u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u6765\u533a\u5206\u540c URL \u4e0b\uff0c\u4e0d\u540c\u7684\u670d\u52a1\u6240\u9700\u8981\u7684\u534f\u8bae\u3002\u7b80\u5355\u7406\u89e3\uff1a\u4eca\u665a\u6211\u8981\u670d\u52a1A\uff0c\u522b\u641e\u9519\u5566~ \u6700\u540e\uff0c Sec-WebSocket-Version \u662f\u544a\u8bc9\u670d\u52a1\u5668\u6240\u4f7f\u7528\u7684 WebSocket Draft \uff08\u534f\u8bae\u7248\u672c\uff09\uff0c\u5728\u6700\u521d\u7684\u65f6\u5019\uff0cWebSocket \u534f\u8bae\u8fd8\u5728 Draft \u9636\u6bb5\uff0c\u5404\u79cd\u5947\u5947\u602a\u602a\u7684\u534f\u8bae\u90fd\u6709\uff0c\u800c\u4e14\u8fd8\u6709\u5f88\u591a\u671f\u5947\u5947\u602a\u602a\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u4ec0\u4e48 Firefox \u548c Chrome \u7528\u7684\u4e0d\u662f\u4e00\u4e2a\u7248\u672c\u4e4b\u7c7b\u7684\uff0c\u5f53\u521d WebSocket \u534f\u8bae\u592a\u591a\u53ef\u662f\u4e00\u4e2a\u5927\u96be\u9898\u3002\u3002\u4e0d\u8fc7\u73b0\u5728\u8fd8\u597d\uff0c\u5df2\u7ecf\u5b9a\u4e0b\u6765\u5566~\u5927\u5bb6\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u7248\u672c\uff1a \u670d\u52a1\u5458\uff0c\u6211\u8981\u7684\u662f13\u5c81\u7684\u5662\u2192_\u2192 \u7136\u540e\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u4e0b\u5217\u4e1c\u897f\uff0c\u8868\u793a\u5df2\u7ecf\u63a5\u53d7\u5230\u8bf7\u6c42\uff0c \u6210\u529f\u5efa\u7acb WebSocket \u5566\uff01 HTTP/1.1 101 Switching Protocols Upgrade: websocket Connection: Upgrade Sec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk= Sec-WebSocket-Protocol: chat \u8fd9\u91cc\u5f00\u59cb\u5c31\u662f HTTP \u6700\u540e\u8d1f\u8d23\u7684\u533a\u57df\u4e86\uff0c\u544a\u8bc9\u5ba2\u6237\uff0c\u6211\u5df2\u7ecf\u6210\u529f\u5207\u6362\u534f\u8bae\u5566~ Upgrade: websocket Connection: Upgrade \u4f9d\u7136\u662f\u56fa\u5b9a\u7684\uff0c\u544a\u8bc9\u5ba2\u6237\u7aef\u5373\u5c06\u5347\u7ea7\u7684\u662f WebSocket \u534f\u8bae\uff0c\u800c\u4e0d\u662f mozillasocket\uff0clurnarsocket \u6216\u8005 shitsocket\u3002 \u7136\u540e\uff0c Sec-WebSocket-Accept \u8fd9\u4e2a\u5219\u662f\u7ecf\u8fc7\u670d\u52a1\u5668\u786e\u8ba4\uff0c\u5e76\u4e14\u52a0\u5bc6\u8fc7\u540e\u7684 Sec-WebSocket-Key \u3002 \u670d\u52a1\u5668\uff1a\u597d\u5566\u597d\u5566\uff0c\u77e5\u9053\u5566\uff0c\u7ed9\u4f60\u770b\u6211\u7684 ID CARD \u6765\u8bc1\u660e\u884c\u4e86\u5427\u3002 \u540e\u9762\u7684\uff0c Sec-WebSocket-Protocol \u5219\u662f\u8868\u793a\u6700\u7ec8\u4f7f\u7528\u7684\u534f\u8bae\u3002 \u81f3\u6b64\uff0cHTTP \u5df2\u7ecf\u5b8c\u6210\u5b83\u6240\u6709\u5de5\u4f5c\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5b8c\u5168\u6309\u7167 WebSocket \u534f\u8bae\u8fdb\u884c\u4e86\u3002 WebSocket \u7684\u4f5c\u7528 \u5728\u8bb2 WebSocket\u4e4b\u524d\uff0c\u6211\u5c31\u987a\u5e26\u7740\u8bb2\u4e0b ajax\u8f6e\u8be2 \u548c long poll \u7684\u539f\u7406\u3002 ajax\u8f6e\u8be2 ajax\u8f6e\u8be2\u7684\u539f\u7406\u975e\u5e38\u7b80\u5355\uff0c\u8ba9\u6d4f\u89c8\u5668\u9694\u4e2a\u51e0\u79d2\u5c31\u53d1\u9001\u4e00\u6b21\u8bf7\u6c42\uff0c\u8be2\u95ee\u670d\u52a1\u5668\u662f\u5426\u6709\u65b0\u4fe1\u606f\u3002 long poll long poll \u5176\u5b9e\u539f\u7406\u8ddf ajax\u8f6e\u8be2 \u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u91c7\u7528\u8f6e\u8be2\u7684\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u91c7\u53d6\u7684\u662f\u963b\u585e\u6a21\u578b\uff08\u4e00\u76f4\u6253\u7535\u8bdd\uff0c\u6ca1\u6536\u5230\u5c31\u4e0d\u6302\u7535\u8bdd\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\u540e\uff0c\u5982\u679c\u6ca1\u6d88\u606f\uff0c\u5c31\u4e00\u76f4\u4e0d\u8fd4\u56de Response \u7ed9\u5ba2\u6237\u7aef\u3002\u76f4\u5230\u6709\u6d88\u606f\u624d\u8fd4\u56de\uff0c\u8fd4\u56de\u5b8c\u4e4b\u540e\uff0c\u5ba2\u6237\u7aef\u518d\u6b21\u5efa\u7acb\u8fde\u63a5\uff0c\u5468\u800c\u590d\u59cb\u3002 WebSocket \u901a\u8fc7\u4e0a\u9762\u8fd9\u4e24\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u4e0d\u662f\u6700\u597d\u7684\u65b9\u5f0f\uff0c\u9700\u8981\u5f88\u591a\u8d44\u6e90\u3002 \u4e00\u79cd\u9700\u8981\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u4e00\u79cd\u9700\u8981\u66f4\u591a\u7684\u2019\u7535\u8bdd\u2019\u3002\u8fd9\u4e24\u79cd\u90fd\u4f1a\u5bfc\u81f4\u2019\u7535\u8bdd\u2019\u7684\u9700\u6c42\u8d8a\u6765\u8d8a\u9ad8\u3002 \u54e6\u5bf9\u4e86\uff0c\u5fd8\u8bb0\u8bf4\u4e86 HTTP \u8fd8\u662f\u4e00\u4e2a\u65e0\u72b6\u6001\u534f\u8bae\u3002\u901a\u4fd7\u7684\u8bf4\u5c31\u662f\uff0c\u670d\u52a1\u5668\u56e0\u4e3a\u6bcf\u5929\u8981\u63a5\u5f85\u592a\u591a\u5ba2\u6237\u4e86\uff0c\u662f\u4e2a\u5065\u5fd8\u9b3c\uff0c\u4f60\u4e00\u6302\u7535\u8bdd\uff0c\u4ed6\u5c31\u628a\u4f60\u7684\u4e1c\u897f\u5168\u5fd8\u5149\u4e86\uff0c\u628a\u4f60\u7684\u4e1c\u897f\u5168\u4e22\u6389\u4e86\u3002\u4f60\u7b2c\u4e8c\u6b21\u8fd8\u5f97\u518d\u544a\u8bc9\u670d\u52a1\u5668\u4e00\u904d\u3002 \u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u51fa\u73b0\u4e86 WebSocket \u3002\u4ed6\u89e3\u51b3\u4e86 HTTP \u7684\u8fd9\u51e0\u4e2a\u96be\u9898\u3002\u9996\u5148\uff0c\u88ab\u52a8\u6027\uff0c\u5f53\u670d\u52a1\u5668\u5b8c\u6210\u534f\u8bae\u5347\u7ea7\u540e\uff08HTTP- Websocket\uff09\uff0c\u670d\u52a1\u7aef\u5c31\u53ef\u4ee5\u4e3b\u52a8\u63a8\u9001\u4fe1\u606f\u7ed9\u5ba2\u6237\u7aef\u5566\u3002\u6240\u4ee5\u4e0a\u9762\u7684\u60c5\u666f\u53ef\u4ee5\u505a\u5982\u4e0b\u4fee\u6539\u3002 \u76d1\u542c\u7aef\u53e3\u5904\u7406 lsof -i:\u7aef\u53e3\u53f7 kill -9 \u8fdb\u7a0b\u53f7 \u9879\u76ee\u622a\u56fe \u9700\u8981\u7684\u7c7b\u5e93 Django Channels Channels\u662f\u4e00\u4e2a\u6269\u5c55Django\u5e76\u5c06\u5176\u80fd\u529b\u6269\u5c55\u5230HTTP\u4ee5\u5916\u7684\u9879\u76ee - \u7528\u4e8e\u5904\u7406WebSockets\uff0c\u804a\u5929\u534f\u8bae\uff0cIoT\u534f\u8bae\u7b49\u3002\u5b83\u5efa\u7acb\u5728\u4e00\u4e2a\u540d\u4e3aASGI\u7684Python\u89c4\u8303\u4e4b\u4e0a\u3002 \u5b83\u901a\u8fc7\u83b7\u53d6Django\u7684\u6838\u5fc3\u5e76\u5728\u4e0b\u9762\u5206\u5c42\u5b8c\u5168\u5f02\u6b65\u5c42\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884cDjango\u672c\u8eab\uff0c\u4f46\u5f02\u6b65\u5904\u7406\u8fde\u63a5\u548c\u5957\u63a5\u5b57\uff0c\u5e76\u5141\u8bb8\u60a8\u9009\u62e9\u4ee5\u4efb\u4e00\u6837\u5f0f\u7f16\u5199\u3002 \u8981\u5f00\u59cb\u4e86\u89e3Channels\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684\u7b80\u4ecb\uff0c\u5176\u4e2d\u5c06\u4ecb\u7ecd\u5de5\u4f5c\u539f\u7406\u3002\u5982\u679c\u60a8\u4ece\u9891\u90531\u5347\u7ea7\uff0c\u8bf7\u67e5\u770b\u9891\u90532\u4e2d\u7684\u65b0\u529f\u80fd\uff1f\u4e86\u89e3\u53d8\u5316; \u4e8b\u60c5\u5927\u4e0d\u76f8\u540c\u3002 channels channels-redis \u670d\u52a1\u5668\u7aef\u4ee3\u7801\u96c6\u6210 1.\u5b89\u88c5Channels pip install -U channels 2.\u914d\u7f6e INSTALLED_APPS = ( django.contrib.auth , django.contrib.contenttypes , django.contrib.sessions , django.contrib.sites , ... channels , ) 3.\u5b9a\u4e49\u8def\u7531 Django\u8ba4\u8bc1\u7cfb\u7edf Django\u4f1a\u8bdd\u7cfb\u7edf from channels.routing import ProtocolTypeRouter application = ProtocolTypeRouter ({ # (http- django views is added by default) websocket : AuthMiddlewareStack ( URLRouter ([ path ( channels/ str:room_name / , ChatConsumer ), path ( chat/stream/ , ChatRoomConsumer ), ] ) ), }) \u670d\u52a1\u5668\u8c03\u52a8\u5165\u53e3 class ProtocolTypeRouter : Takes a mapping of protocol type names to other Application instances, and dispatches to the right one based on protocol name (or raises an error) def __init__ ( self , application_mapping ): self . application_mapping = application_mapping if http not in self . application_mapping : \u5982\u679c\u662f http \u670d\u52a1\u8c03\u7528 AsgiHandler \u5904\u7406 self . application_mapping [ http ] = AsgiHandler def __call__ ( self , scope ): if scope [ type ] in self . application_mapping : return self . application_mapping [ scope [ type ]]( scope ) else : raise ValueError ( No application configured for scope type %r % scope [ type ] ) #\u5728\u5165\u53e3\u5904\u7406WebSocket\u8ba4\u8bc1\u670d\u52a1 # Handy shortcut for applying all three layers at once AuthMiddlewareStack = lambda inner : CookieMiddleware ( SessionMiddleware ( AuthMiddleware ( inner )) ) 4.setting \u4e2d\u914d\u7f6eAswgi\u8f6c\u53d1\u7684\u5165\u53e3 ASGI_APPLICATION = myproject.routing.application 5.\u8c03\u7528\u8def\u7531\u529f\u80fd\u628a\u8bf7\u6c42\u53d1\u9001\u5230\u4e0d\u540c\u7684\u6d88\u8d39\u8005 Channels\u901a\u9053: Channels \u6838\u5fc3\u7c7b(\u4e24\u5927\u7c7b\u540c\u6b65\u548c\u5f02\u6b65): 1.\u540c\u6b65\u7c7b\u578b: class WebsocketConsumer(SyncConsumer): class JsonWebsocketConsumer(WebsocketConsumer): 2.\u5f02\u6b65\u7c7b\u578b class AsyncWebsocketConsumer(AsyncConsumer): class AsyncJsonWebsocketConsumer(AsyncWebsocketConsumer): Channels from django.conf import settings from channels.generic.websocket import AsyncJsonWebsocketConsumer from .exceptions import ClientError from .utils import get_room_or_error class ChatRoomConsumer ( AsyncJsonWebsocketConsumer ): This chat consumer handles websocket connections for chat clients. It uses AsyncJsonWebsocketConsumer, which means all the handling functions must be async functions, and any sync work (like ORM access) has to be behind database_sync_to_async or sync_to_async. For more, read http://channels.readthedocs.io/en/latest/topics/consumers.html ##### WebSocket event handlers async def connect ( self ): Called when the websocket is handshaking as part of initial connection. # Are they logged in? if self . scope [ user ] . is_anonymous : # Reject the connection await self . close () else : # Accept the connection await self . accept () # Store which rooms the user has joined on this connection self . rooms = set () async def receive_json ( self , content ): Called when we get a text frame. Channels will JSON-decode the payload for us and pass it as the first argument. # Messages will have a command key we can switch on command = content . get ( command , None ) try : if command == join : # Make them join the room await self . join_room ( content [ room ]) elif command == leave : # Leave the room await self . leave_room ( content [ room ]) elif command == send : await self . send_room ( content [ room ], content [ message ]) except ClientError as e : # Catch any errors and send it back await self . send_json ({ error : e . code }) async def disconnect ( self , code ): Called when the WebSocket closes for any reason. # Leave all the rooms we are still in for room_id in list ( self . rooms ): try : await self . leave_room ( room_id ) except ClientError : pass ##### Command helper methods called by receive_json async def join_room ( self , room_id ): Called by receive_json when someone sent a join command. # The logged-in user is in our scope thanks to the authentication ASGI middleware room = await get_room_or_error ( room_id , self . scope [ user ]) # Send a join message if it s turned on if settings . NOTIFY_USERS_ON_ENTER_OR_LEAVE_ROOMS : await self . channel_layer . group_send ( room . group_name , { type : chat.join , room_id : room_id , username : self . scope [ user ] . username , } ) # Store that we re in the room self . rooms . add ( room_id ) # Add them to the group so they get room messages await self . channel_layer . group_add ( room . group_name , self . channel_name , ) # Instruct their client to finish opening the room await self . send_json ({ join : str ( room . id ), title : room . title , }) async def leave_room ( self , room_id ): Called by receive_json when someone sent a leave command. # The logged-in user is in our scope thanks to the authentication ASGI middleware room = await get_room_or_error ( room_id , self . scope [ user ]) # Send a leave message if it s turned on if settings . NOTIFY_USERS_ON_ENTER_OR_LEAVE_ROOMS : await self . channel_layer . group_send ( room . group_name , { type : chat.leave , room_id : room_id , username : self . scope [ user ] . username , } ) # Remove that we re in the room self . rooms . discard ( room_id ) # Remove them from the group so they no longer get room messages await self . channel_layer . group_discard ( room . group_name , self . channel_name , ) # Instruct their client to finish closing the room await self . send_json ({ leave : str ( room . id ), }) async def send_room ( self , room_id , message ): Called by receive_json when someone sends a message to a room. # Check they are in this room if room_id not in self . rooms : raise ClientError ( ROOM_ACCESS_DENIED ) # Get the room and send to the group about it room = await get_room_or_error ( room_id , self . scope [ user ]) await self . channel_layer . group_send ( room . group_name , { type : chat.message , room_id : room_id , username : self . scope [ user ] . username , message : message , } ) ##### Handlers for messages sent over the channel layer # These helper methods are named by the types we send - so chat.join becomes chat_join async def chat_join ( self , event ): Called when someone has joined our chat. # Send a message down to the client await self . send_json ( { msg_type : settings . MSG_TYPE_ENTER , room : event [ room_id ], username : event [ username ], }, ) async def chat_leave ( self , event ): Called when someone has left our chat. # Send a message down to the client await self . send_json ( { msg_type : settings . MSG_TYPE_LEAVE , room : event [ room_id ], username : event [ username ], }, ) async def chat_message ( self , event ): Called when someone has messaged our chat. # Send a message down to the client await self . send_json ( { msg_type : settings . MSG_TYPE_MESSAGE , room : event [ room_id ], username : event [ username ], message : event [ message ], }, ) \u5f02\u5e38\u7c7b\u7684\u4f7f\u7528 \u7c7b\u8def\u5f84: venv/lib/python3.7/site-packages/channels/exceptions.py class RequestAborted(Exception): class RequestTimeout(RequestAborted): class InvalidChannelLayerError(ValueError): class AcceptConnection(Exception): class DenyConnection(Exception): class ChannelFull(Exception): class MessageTooLarge(Exception): class StopConsumer(Exception): Flutter \u4ee3\u7801 web_socket_channel initWebsocket () { if ( channel == null ) { ///\u521d\u59cb\u5316WebSocket channel = IOWebSocketChannel . connect ( ws://127.0.0.1:8000/channels/rooms/ ); } ///\u8bbe\u7f6eWebSocket\u76d1\u542c channel . stream . listen (( data ) { print ( json . decode ( data )[ message ]); accetpMsg ( json . decode ( data )[ message ][ message ], json . decode ( data )[ message ][ type ]); }); } ///\u5904\u7406\u53d1\u9001 void _submitMsg ( String txt ) { _textController . clear (); setState (() { _isWriting = false ; }); Msg msg = new Msg ( txt: txt , animationController: new AnimationController ( vsync: this , duration: new Duration ( milliseconds: 800 )), ); setState (() { _messages . insert ( 0 , msg ); }); if ( txt . isNotEmpty ) { channel . sink . add ( json . encode ({ message : { message : txt , type : send } })); } msg . animationController . forward (); } ///\u5904\u7406\u63a5\u6536\u6d88\u606f void accetpMsg ( String txt , String type ) { if ( type == send ) { return ; } Msg msg = new Msg ( txt: txt , animationController: new AnimationController ( vsync: this , duration: new Duration ( milliseconds: 800 )), messageType: MessageType . accept , ); setState (() { _messages . insert ( 0 , msg ); }); msg . animationController . forward (); } @ override void dispose () { channel . sink . close (); super . dispose (); } \u9700\u8981\u7684\u7c7b\u5e93 Django Channels Channels\u662f\u4e00\u4e2a\u6269\u5c55Django\u5e76\u5c06\u5176\u80fd\u529b\u6269\u5c55\u5230HTTP\u4ee5\u5916\u7684\u9879\u76ee - \u7528\u4e8e\u5904\u7406WebSockets\uff0c\u804a\u5929\u534f\u8bae\uff0cIoT\u534f\u8bae\u7b49\u3002\u5b83\u5efa\u7acb\u5728\u4e00\u4e2a\u540d\u4e3aASGI\u7684Python\u89c4\u8303\u4e4b\u4e0a\u3002 \u5b83\u901a\u8fc7\u83b7\u53d6Django\u7684\u6838\u5fc3\u5e76\u5728\u4e0b\u9762\u5206\u5c42\u5b8c\u5168\u5f02\u6b65\u5c42\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884cDjango\u672c\u8eab\uff0c\u4f46\u5f02\u6b65\u5904\u7406\u8fde\u63a5\u548c\u5957\u63a5\u5b57\uff0c\u5e76\u5141\u8bb8\u60a8\u9009\u62e9\u4ee5\u4efb\u4e00\u6837\u5f0f\u7f16\u5199\u3002 \u8981\u5f00\u59cb\u4e86\u89e3Channels\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684\u7b80\u4ecb\uff0c\u5176\u4e2d\u5c06\u4ecb\u7ecd\u5de5\u4f5c\u539f\u7406\u3002\u5982\u679c\u60a8\u4ece\u9891\u90531\u5347\u7ea7\uff0c\u8bf7\u67e5\u770b\u9891\u90532\u4e2d\u7684\u65b0\u529f\u80fd\uff1f\u4e86\u89e3\u53d8\u5316; \u4e8b\u60c5\u5927\u4e0d\u76f8\u540c\u3002 channels channels-redis Channels 1\u548cChannels 2 \u6709\u4ec0\u4e48 AWsgi Python\u5b9e\u73b0WSGI\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3Python\u5f02\u6b65\u6846\u67b6\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u901a\u4fe1\u6807\u51c6\u63a5\u53e3 \u5728WSGI\u4e3a\u540c\u6b65Python\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u6807\u51c6\u7684\u5730\u65b9\uff0cASGI\u4e3a\u5f02\u6b65\u548c\u540c\u6b65\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\uff0c\u5177\u6709WSGI\u5411\u540e\u517c\u5bb9\u6027\u5b9e\u73b0\u4ee5\u53ca\u591a\u4e2a\u670d\u52a1\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002 WSGI\u517c\u5bb9\u6027 ASGI\u4e5f\u88ab\u8bbe\u8ba1\u4e3aWSGI\u7684\u8d85\u96c6\uff0c\u5e76\u4e14\u5728\u4e24\u8005\u4e4b\u95f4\u6709\u4e00\u79cd\u5b9a\u4e49\u7684\u8f6c\u6362\u65b9\u5f0f\uff0c\u5141\u8bb8WSGI\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u8f6c\u6362\u5305\u88c5\u5668\uff08\u5728asgiref \u5e93\u4e2d\u63d0\u4f9b\uff09\u5728ASGI\u670d\u52a1\u5668\u5185\u8fd0\u884c\u3002\u7ebf\u7a0b\u6c60\u53ef\u7528\u4e8e\u8fdc\u79bb\u5f02\u6b65\u4e8b\u4ef6\u5faa\u73af\u8fd0\u884c\u540c\u6b65WSGI\u5e94\u7528\u7a0b\u5e8f\u3002 AWSGI django-websocket-redis django-websocket-redis \u53c2\u8003\u6848\u4f8b multichat websocket \u5f00\u53d1\u8c03\u8bd5\u5de5\u5177 https://www.npmjs.com/package/wscat http://coolaf.com:1010/tool/chattest websocket\u5b98\u7f51 websocket Usage \u9879\u76ee\u5730\u5740 SkyRoad PythonProjectSample Install pip install -r requirements.txt Then, you'll need Redis running locally; the settings are configured to point to localhost , port 6379 , but you can change this in the CHANNEL_LAYERS setting in settings.py . Finally, run:: python manage.py migrate python manage.py runserver Make yourself a superuser account:: python manage.py createsuperuser \u7136\u540e\uff0c\u767b\u5f55http\uff1a// localhost\uff1a8000 / admin /\u5e76\u5236\u4f5c\u51e0\u4e2aRoom\u5bf9\u8c61\u3002\u4e00\u5b9a\u8981\u5236\u4f5c\u4e00\u4e2a\u8bbe\u7f6e\u4e3a\u201c\u4ec5\u9650\u5458\u5de5\u201d\u7684\uff0c \u6700\u540e\uff0c\u5728\u7ba1\u7406\u5458\u4e2d\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u5458\u5de5\u6743\u9650\u7684\u7b2c\u4e8c\u4e2a\u7528\u6237\u5e10\u6237\u3002\u60a8\u5c06\u4f7f\u7528\u5b83\u5728\u7b2c\u4e8c\u4e2a\u7a97\u53e3\u4e2d\u767b\u5f55\u804a\u5929\uff0c\u5e76\u5728\u4ec5\u9650\u5458\u5de5\u7684\u623f\u95f4\u4e0a\u6d4b\u8bd5\u8eab\u4efd\u9a8c\u8bc1\u3002 \u73b0\u5728\uff0c\u5728\u53e6\u4e00\u4e2a\u6d4f\u89c8\u5668\u6216\u201c\u9690\u8eab\u201d\u6a21\u5f0f\u4e0b\u6253\u5f00\u7b2c\u4e8c\u4e2a\u7a97\u53e3 - \u60a8\u5c06\u4f7f\u7528\u4e24\u4e2a\u7528\u6237\u5e10\u6237\u767b\u5f55\u540c\u4e00\u7ad9\u70b9\u3002\u5728\u4e24\u4e2a\u6d4f\u89c8\u5668\u4e2d\u5bfc\u822a\u5230 http\uff1a// localhost\uff1a8000\u5e76\u6253\u5f00\u76f8\u540c\u7684\u804a\u5929\u5ba4\u3002 \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8f93\u5165\u6d88\u606f\u5e76\u7acb\u5373\u5728\u4e24\u4e2a\u5c4f\u5e55\u4e0a\u663e\u793a\u6d88\u606f\u3002\u60a8\u53ef\u4ee5\u52a0\u5165\u5176\u4ed6\u623f\u95f4\u5e76\u5728\u90a3\u91cc\u5c1d\u8bd5\uff0c\u770b\u770b\u60a8\u5982\u4f55\u4ece\u60a8\u76ee\u524d\u52a0\u5165\u7684\u6240\u6709\u623f\u95f4\u6536\u5230\u6d88\u606f\u3002 \u5982\u679c\u60a8\u5c1d\u8bd5\u8ba9\u975e\u5de5\u4f5c\u4eba\u5458\u7528\u6237\u52a0\u5165\u60a8\u7684\u5458\u5de5\u804a\u5929\u5ba4\uff0c\u5219\u5e94\u8be5\u770b\u5230\u670d\u52a1\u5668\u7aef\u8eab\u4efd\u9a8c\u8bc1\u4ee3\u7801\u542f\u52a8\u65f6\u51fa\u73b0\u9519\u8bef\u3002 \u5de5\u4f5c\u539f\u7406 \u6709\u4e00\u4e2a\u666e\u901a\u7684Django\u89c6\u56fe\uff0c\u53ea\u63d0\u4f9b\u666e\u901a@login_required\u88c5\u9970\u5668\u540e\u9762\u7684HTML\u9875\u9762 \uff0c\u8fd9\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5355\u9875\u5e94\u7528\u7a0b\u5e8f\uff0c\u6240\u6709JS\u90fd\u52a0\u8f7d\u5230index.html\u6587\u4ef6\u4e2d\uff08\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4f8b\u5b50\uff09\u3002 \u6709\u4e00\u4e2a\u6d88\u8d39\u8005\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u8def\u7531\u5230multichat/routing.py\uff0c\u5b83\u5305\u542b\u5728\u6e20\u9053\u8ba4\u8bc1ASGI\u4e2d\u95f4\u4ef6\u4e2d\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u68c0\u67e5\u60a8\u7684\u7528\u6237\u662f\u5426\u5df2\u767b\u5f55\u5e76\u68c0\u7d22\u5b83\u4ee5\u68c0\u67e5\u60a8\u8981\u6c42\u52a0\u5165\u4f1a\u8bae\u5ba4\u65f6\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u60a8\u5728\u54ea\u4e2a\u623f\u95f4\u8ddf\u8e2aself.rooms\u6d88\u8d39\u8005\uff0c\u4ee5\u4fbf\u5728\u65ad\u5f00\u8fde\u63a5\u65f6\u53ef\u4ee5\u4fdd\u6301\u5e72\u51c0\u3002 \u6bcf\u5f53\u5ba2\u6237\u7aef\u8981\u6c42\u52a0\u5165\u623f\u95f4\uff0c\u79bb\u5f00\u623f\u95f4\u6216\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u5b83\u90fd\u4f1a\u53d1\u9001\u5e26\u6709JSON\u7f16\u7801\u547d\u4ee4\u7684WebSocket\u6587\u672c\u6846\u67b6\u3002\u6211\u4eec\u4f7f\u7528\u901a\u7528\u4f7f\u7528\u8005\u4e3a\u6211\u4eec\u5904\u7406JSON\u7684\u89e3\u7801\uff0c\u7136\u540e\u6839\u636e\u547d\u4ee4\u8c03\u5ea6\u5230\u4e09\u4e2a\u5904\u7406\u51fd\u6570\u4e4b\u4e00\u3002 \u6240\u6709\u623f\u95f4\u90fd\u6709\u4e00\u4e2a\u5173\u8054\u7684\u7ec4\uff0c\u5bf9\u4e8e\u8fde\u63a5\uff0c\u79bb\u5f00\u548c\u6d88\u606f\uff0c\u4e8b\u4ef6\u901a\u8fc7\u901a\u9053\u5c42\u53d1\u9001\u5230\u8be5\u7ec4\u3002\u7ec4\u4e2d\u7684\u6d88\u8d39\u8005\u5c06\u63a5\u6536\u8fd9\u4e9b\u6d88\u606f\uff0c\u5e76\u4e14\u6d88\u8d39\u8005\u8fd8\u5177\u6709\u7528\u4e8e\u90a3\u4e9b\uff08\u4f8b\u5982chat_join\uff09\u7684\u5904\u7406\u7a0b\u5e8f\u529f\u80fd\uff0c\u5176\u7528\u4e8e\u5728\u5c06\u4e8b\u4ef6\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u4e4b\u524d\u5c06\u4e8b\u4ef6\u7f16\u7801\u4e3aWebSocket\u6709\u7ebf\u683c\u5f0f\u3002 \u5efa\u8bae\u7684\u7ec3\u4e60 \u5982\u679c\u60a8\u60f3\u5c1d\u8bd5\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u5e76\u4e86\u89e3\u9891\u9053\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6709\u5173\u5982\u4f55\u8fdb\u884c\u64cd\u4f5c\u7684\u4e00\u4e9b\u60f3\u6cd5\u548c\u63d0\u793a\uff1a \u4f7f\u81ea\u5df1\u7684\u6d88\u606f\u5177\u6709\u4e0d\u540c\u7684\u6d88\u606f\u7c7b\u578b\u3002\u60a8\u9700\u8981\u7f16\u8f91\u8be5chat_message\u51fd\u6570\uff0c\u4ee5\u6839\u636echat.message\u5176\u83b7\u53d6\u7684\u4e8b\u4ef6\u662f\u5426\u6765\u81ea\u60a8\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4e0d\u540c\u7684\u6570\u636e\u5305\u3002 \u6dfb\u52a0\u6d88\u606f\u6301\u4e45\u6027\u3002\u5df2\u53d1\u9001\u6d88\u606f\u4ee5\u4f7f\u7528\u6237\u52a0\u5165\u623f\u95f4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u6d88\u606f\u53d1\u9001\u4e00\u4e9b\u4ee5\u524d\u7684\u6d88\u606f; \u4f46\u662f\uff0c\u4f60\u9700\u8981\u5236\u4f5c\u4e00\u4e2a\u6a21\u578b\u6765\u4fdd\u5b58\u6d88\u606f\u3002 \u5728\u6dfb\u52a0\u548c\u5220\u9664\u623f\u95f4\u65f6\uff0c\u4f7f\u623f\u95f4\u5217\u8868\u52a8\u6001\u66f4\u6539\u3002\u60a8\u53ef\u4ee5\u6dfb\u52a0\u6bcf\u4e2a\u5957\u63a5\u5b57\u52a0\u5165\u7684\u516c\u5171\u7ec4\uff0c\u5e76\u5728\u521b\u5efa/\u5220\u9664\u623f\u95f4\u65f6\u5411\u5176\u53d1\u9001\u4e8b\u4ef6\u3002 \u6dfb\u52a0\u90ae\u4ef6\u7f16\u8f91\u548c\u5220\u9664\u3002\u4f60\u9700\u8981\u5148\u8ba9\u5b83\u4eec\u6301\u4e45\u5316; \u786e\u4fdd\u60a8\u968f\u6bcf\u6761\u6d88\u606f\u53d1\u9001\u6d88\u606fID\uff0c\u4ee5\u4fbf\u5ba2\u6237\u7aef\u53ef\u4ee5\u8ddf\u8e2a\u5b83\u4eec\u3002\u7136\u540e\uff0c\u7f16\u5199\u4e00\u4e9b\u4ee3\u7801\u6765\u5904\u7406\u7f16\u8f91\uff0c\u5e76\u5728\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\u89e6\u53d1\u53d1\u9001\u65b0\u6d88\u606f\u7684\u6d88\u606fID\u3002 \u8fdb\u4e00\u6b65\u9605\u8bfb You can find the Channels documentation at http://channels.readthedocs.org","title":"WebSocket"},{"location":"project/websocket/#flutter-websocketdjango-channels-websocket","text":"","title":"Flutter Websocket+Django  Channels \u5b8c\u6210Websocket\u524d\u540e\u7aef\u804a\u5929\u5ba4"},{"location":"project/websocket/#_1","text":"","title":"\u524d\u8a00"},{"location":"project/websocket/#websocket-http","text":"WebSocket \u534f\u8bae\u57282008\u5e74\u8bde\u751f\uff0c2011\u5e74\u6210\u4e3a\u56fd\u9645\u6807\u51c6\u3002\u73b0\u5728\u6240\u6709\u6d4f\u89c8\u5668\u90fd\u5df2\u7ecf\u652f\u6301\u4e86\u3002WebSocket \u7684\u6700\u5927\u7279\u70b9\u5c31\u662f\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u4e3b\u52a8\u5411\u5ba2\u6237\u7aef\u63a8\u9001\u4fe1\u606f\uff0c\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u4e3b\u52a8\u5411\u670d\u52a1\u5668\u53d1\u9001\u4fe1\u606f\uff0c\u662f\u771f\u6b63\u7684\u53cc\u5411\u5e73\u7b49\u5bf9\u8bdd\u3002 HTTP \u6709 1.1 \u548c 1.0 \u4e4b\u8bf4\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 keep-alive \uff0c\u628a\u591a\u4e2a HTTP \u8bf7\u6c42\u5408\u5e76\u4e3a\u4e00\u4e2a\uff0c\u4f46\u662f Websocket \u5176\u5b9e\u662f\u4e00\u4e2a\u65b0\u534f\u8bae\uff0c\u8ddf HTTP \u534f\u8bae\u57fa\u672c\u6ca1\u6709\u5173\u7cfb\uff0c\u53ea\u662f\u4e3a\u4e86\u517c\u5bb9\u73b0\u6709\u6d4f\u89c8\u5668\uff0c\u6240\u4ee5\u5728\u63e1\u624b\u9636\u6bb5\u4f7f\u7528\u4e86 HTTP \u3002","title":"WebSocket \u4e0e HTTP"},{"location":"project/websocket/#websocket","text":"\u5efa\u7acb\u5728 TCP \u534f\u8bae\u4e4b\u4e0a\uff0c\u670d\u52a1\u5668\u7aef\u7684\u5b9e\u73b0\u6bd4\u8f83\u5bb9\u6613\u3002 \u4e0e HTTP \u534f\u8bae\u6709\u7740\u826f\u597d\u7684\u517c\u5bb9\u6027\u3002\u9ed8\u8ba4\u7aef\u53e3\u4e5f\u662f80\u548c443\uff0c\u5e76\u4e14\u63e1\u624b\u9636\u6bb5\u91c7\u7528 HTTP \u534f\u8bae\uff0c\u56e0\u6b64\u63e1\u624b\u65f6\u4e0d\u5bb9\u6613\u5c4f\u853d\uff0c\u80fd\u901a\u8fc7\u5404\u79cd HTTP \u4ee3\u7406\u670d\u52a1\u5668\u3002 \u6570\u636e\u683c\u5f0f\u6bd4\u8f83\u8f7b\u91cf\uff0c\u6027\u80fd\u5f00\u9500\u5c0f\uff0c\u901a\u4fe1\u9ad8\u6548\u3002 \u53ef\u4ee5\u53d1\u9001\u6587\u672c\uff0c\u4e5f\u53ef\u4ee5\u53d1\u9001\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u6ca1\u6709\u540c\u6e90\u9650\u5236\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u4efb\u610f\u670d\u52a1\u5668\u901a\u4fe1\u3002 \u534f\u8bae\u6807\u8bc6\u7b26\u662fws\uff08\u5982\u679c\u52a0\u5bc6\uff0c\u5219\u4e3awss\uff09\uff0c\u670d\u52a1\u5668\u7f51\u5740\u5c31\u662f URL\u3002","title":"WebSocket \u7684\u5176\u4ed6\u7279\u70b9\uff1a"},{"location":"project/websocket/#websocket_1","text":"\u9996\u5148\uff0cWebSocket \u662f\u4e00\u4e2a\u6301\u4e45\u5316\u7684\u534f\u8bae\uff0c\u76f8\u5bf9\u4e8e HTTP \u8fd9\u79cd\u975e\u6301\u4e45\u7684\u534f\u8bae\u6765\u8bf4\u3002\u7b80\u5355\u7684\u4e3e\u4e2a\u4f8b\u5b50\u5427\uff0c\u7528\u76ee\u524d\u5e94\u7528\u6bd4\u8f83\u5e7f\u6cdb\u7684 PHP \u751f\u547d\u5468\u671f\u6765\u89e3\u91ca\u3002 HTTP \u7684\u751f\u547d\u5468\u671f\u901a\u8fc7 Request \u6765\u754c\u5b9a\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a Request \u4e00\u4e2a Response \uff0c\u90a3\u4e48\u5728 HTTP1.0 \u4e2d\uff0c\u8fd9\u6b21 HTTP \u8bf7\u6c42\u5c31\u7ed3\u675f\u4e86\u3002 \u5728 HTTP1.1 \u4e2d\u8fdb\u884c\u4e86\u6539\u8fdb\uff0c\u4f7f\u5f97\u6709\u4e00\u4e2a keep-alive\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u4e00\u4e2a HTTP \u8fde\u63a5\u4e2d\uff0c\u53ef\u4ee5\u53d1\u9001\u591a\u4e2a Request\uff0c\u63a5\u6536\u591a\u4e2a Response\u3002\u4f46\u662f\u8bf7\u8bb0\u4f4f Request = Response\uff0c \u5728 HTTP \u4e2d\u6c38\u8fdc\u662f\u8fd9\u6837\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a Request \u53ea\u80fd\u6709\u4e00\u4e2a Response\u3002\u800c\u4e14\u8fd9\u4e2a Response \u4e5f\u662f\u88ab\u52a8\u7684\uff0c\u4e0d\u80fd\u4e3b\u52a8\u53d1\u8d77\u3002","title":"WebSocket \u662f\u4ec0\u4e48\u6837\u7684\u534f\u8bae\uff0c\u5177\u4f53\u6709\u4ec0\u4e48\u4f18\u70b9"},{"location":"project/websocket/#websocket_2","text":"\u9996\u5148 WebSocket \u662f\u57fa\u4e8e HTTP \u534f\u8bae\u7684\uff0c\u6216\u8005\u8bf4\u501f\u7528\u4e86 HTTP \u534f\u8bae\u6765\u5b8c\u6210\u4e00\u90e8\u5206\u63e1\u624b\u3002 \u9996\u5148\u6211\u4eec\u6765\u770b\u4e2a\u5178\u578b\u7684 WebSocket \u63e1\u624b GET /chat HTTP/1.1 Host: server.example.com Upgrade: websocket Connection: Upgrade Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw== Sec-WebSocket-Protocol: chat, superchat Sec-WebSocket-Version: 13 Origin: http://example.com \u719f\u6089 HTTP \u7684\u7ae5\u978b\u53ef\u80fd\u53d1\u73b0\u4e86\uff0c\u8fd9\u6bb5\u7c7b\u4f3c HTTP \u534f\u8bae\u7684\u63e1\u624b\u8bf7\u6c42\u4e2d\uff0c\u591a\u4e86\u8fd9\u4e48\u51e0\u4e2a\u4e1c\u897f\u3002 Upgrade: websocket Connection: Upgrade \u8fd9\u4e2a\u5c31\u662f WebSocket \u7684\u6838\u5fc3\u4e86\uff0c\u544a\u8bc9 Apache \u3001 Nginx \u7b49\u670d\u52a1\u5668\uff1a\u6ce8\u610f\u5566\uff0c\u6211\u53d1\u8d77\u7684\u8bf7\u6c42\u8981\u7528 WebSocket \u534f\u8bae\uff0c\u5feb\u70b9\u5e2e\u6211\u627e\u5230\u5bf9\u5e94\u7684\u52a9\u7406\u5904\u7406~\u800c\u4e0d\u662f\u90a3\u4e2a\u8001\u571f\u7684 HTTP\u3002 Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw== Sec-WebSocket-Protocol: chat, superchat Sec-WebSocket-Version: 13 \u9996\u5148\uff0c Sec-WebSocket-Key \u662f\u4e00\u4e2a Base64 encode \u7684\u503c\uff0c\u8fd9\u4e2a\u662f\u6d4f\u89c8\u5668\u968f\u673a\u751f\u6210\u7684\uff0c\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6ce5\u7164\uff0c\u4e0d\u8981\u5ffd\u60a0\u6211\uff0c\u6211\u8981\u9a8c\u8bc1\u4f60\u662f\u4e0d\u662f\u771f\u7684\u662f WebSocket \u52a9\u7406\u3002 \u7136\u540e\uff0c Sec_WebSocket-Protocol \u662f\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u6765\u533a\u5206\u540c URL \u4e0b\uff0c\u4e0d\u540c\u7684\u670d\u52a1\u6240\u9700\u8981\u7684\u534f\u8bae\u3002\u7b80\u5355\u7406\u89e3\uff1a\u4eca\u665a\u6211\u8981\u670d\u52a1A\uff0c\u522b\u641e\u9519\u5566~ \u6700\u540e\uff0c Sec-WebSocket-Version \u662f\u544a\u8bc9\u670d\u52a1\u5668\u6240\u4f7f\u7528\u7684 WebSocket Draft \uff08\u534f\u8bae\u7248\u672c\uff09\uff0c\u5728\u6700\u521d\u7684\u65f6\u5019\uff0cWebSocket \u534f\u8bae\u8fd8\u5728 Draft \u9636\u6bb5\uff0c\u5404\u79cd\u5947\u5947\u602a\u602a\u7684\u534f\u8bae\u90fd\u6709\uff0c\u800c\u4e14\u8fd8\u6709\u5f88\u591a\u671f\u5947\u5947\u602a\u602a\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u4ec0\u4e48 Firefox \u548c Chrome \u7528\u7684\u4e0d\u662f\u4e00\u4e2a\u7248\u672c\u4e4b\u7c7b\u7684\uff0c\u5f53\u521d WebSocket \u534f\u8bae\u592a\u591a\u53ef\u662f\u4e00\u4e2a\u5927\u96be\u9898\u3002\u3002\u4e0d\u8fc7\u73b0\u5728\u8fd8\u597d\uff0c\u5df2\u7ecf\u5b9a\u4e0b\u6765\u5566~\u5927\u5bb6\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u7248\u672c\uff1a \u670d\u52a1\u5458\uff0c\u6211\u8981\u7684\u662f13\u5c81\u7684\u5662\u2192_\u2192 \u7136\u540e\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u4e0b\u5217\u4e1c\u897f\uff0c\u8868\u793a\u5df2\u7ecf\u63a5\u53d7\u5230\u8bf7\u6c42\uff0c \u6210\u529f\u5efa\u7acb WebSocket \u5566\uff01 HTTP/1.1 101 Switching Protocols Upgrade: websocket Connection: Upgrade Sec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk= Sec-WebSocket-Protocol: chat \u8fd9\u91cc\u5f00\u59cb\u5c31\u662f HTTP \u6700\u540e\u8d1f\u8d23\u7684\u533a\u57df\u4e86\uff0c\u544a\u8bc9\u5ba2\u6237\uff0c\u6211\u5df2\u7ecf\u6210\u529f\u5207\u6362\u534f\u8bae\u5566~ Upgrade: websocket Connection: Upgrade \u4f9d\u7136\u662f\u56fa\u5b9a\u7684\uff0c\u544a\u8bc9\u5ba2\u6237\u7aef\u5373\u5c06\u5347\u7ea7\u7684\u662f WebSocket \u534f\u8bae\uff0c\u800c\u4e0d\u662f mozillasocket\uff0clurnarsocket \u6216\u8005 shitsocket\u3002 \u7136\u540e\uff0c Sec-WebSocket-Accept \u8fd9\u4e2a\u5219\u662f\u7ecf\u8fc7\u670d\u52a1\u5668\u786e\u8ba4\uff0c\u5e76\u4e14\u52a0\u5bc6\u8fc7\u540e\u7684 Sec-WebSocket-Key \u3002 \u670d\u52a1\u5668\uff1a\u597d\u5566\u597d\u5566\uff0c\u77e5\u9053\u5566\uff0c\u7ed9\u4f60\u770b\u6211\u7684 ID CARD \u6765\u8bc1\u660e\u884c\u4e86\u5427\u3002 \u540e\u9762\u7684\uff0c Sec-WebSocket-Protocol \u5219\u662f\u8868\u793a\u6700\u7ec8\u4f7f\u7528\u7684\u534f\u8bae\u3002 \u81f3\u6b64\uff0cHTTP \u5df2\u7ecf\u5b8c\u6210\u5b83\u6240\u6709\u5de5\u4f5c\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5b8c\u5168\u6309\u7167 WebSocket \u534f\u8bae\u8fdb\u884c\u4e86\u3002","title":"WebSocket \u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f"},{"location":"project/websocket/#websocket_3","text":"\u5728\u8bb2 WebSocket\u4e4b\u524d\uff0c\u6211\u5c31\u987a\u5e26\u7740\u8bb2\u4e0b ajax\u8f6e\u8be2 \u548c long poll \u7684\u539f\u7406\u3002","title":"WebSocket \u7684\u4f5c\u7528"},{"location":"project/websocket/#ajax","text":"ajax\u8f6e\u8be2\u7684\u539f\u7406\u975e\u5e38\u7b80\u5355\uff0c\u8ba9\u6d4f\u89c8\u5668\u9694\u4e2a\u51e0\u79d2\u5c31\u53d1\u9001\u4e00\u6b21\u8bf7\u6c42\uff0c\u8be2\u95ee\u670d\u52a1\u5668\u662f\u5426\u6709\u65b0\u4fe1\u606f\u3002","title":"ajax\u8f6e\u8be2"},{"location":"project/websocket/#long-poll","text":"long poll \u5176\u5b9e\u539f\u7406\u8ddf ajax\u8f6e\u8be2 \u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u91c7\u7528\u8f6e\u8be2\u7684\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u91c7\u53d6\u7684\u662f\u963b\u585e\u6a21\u578b\uff08\u4e00\u76f4\u6253\u7535\u8bdd\uff0c\u6ca1\u6536\u5230\u5c31\u4e0d\u6302\u7535\u8bdd\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\u540e\uff0c\u5982\u679c\u6ca1\u6d88\u606f\uff0c\u5c31\u4e00\u76f4\u4e0d\u8fd4\u56de Response \u7ed9\u5ba2\u6237\u7aef\u3002\u76f4\u5230\u6709\u6d88\u606f\u624d\u8fd4\u56de\uff0c\u8fd4\u56de\u5b8c\u4e4b\u540e\uff0c\u5ba2\u6237\u7aef\u518d\u6b21\u5efa\u7acb\u8fde\u63a5\uff0c\u5468\u800c\u590d\u59cb\u3002","title":"long poll"},{"location":"project/websocket/#websocket_4","text":"\u901a\u8fc7\u4e0a\u9762\u8fd9\u4e24\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u90fd\u4e0d\u662f\u6700\u597d\u7684\u65b9\u5f0f\uff0c\u9700\u8981\u5f88\u591a\u8d44\u6e90\u3002 \u4e00\u79cd\u9700\u8981\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u4e00\u79cd\u9700\u8981\u66f4\u591a\u7684\u2019\u7535\u8bdd\u2019\u3002\u8fd9\u4e24\u79cd\u90fd\u4f1a\u5bfc\u81f4\u2019\u7535\u8bdd\u2019\u7684\u9700\u6c42\u8d8a\u6765\u8d8a\u9ad8\u3002 \u54e6\u5bf9\u4e86\uff0c\u5fd8\u8bb0\u8bf4\u4e86 HTTP \u8fd8\u662f\u4e00\u4e2a\u65e0\u72b6\u6001\u534f\u8bae\u3002\u901a\u4fd7\u7684\u8bf4\u5c31\u662f\uff0c\u670d\u52a1\u5668\u56e0\u4e3a\u6bcf\u5929\u8981\u63a5\u5f85\u592a\u591a\u5ba2\u6237\u4e86\uff0c\u662f\u4e2a\u5065\u5fd8\u9b3c\uff0c\u4f60\u4e00\u6302\u7535\u8bdd\uff0c\u4ed6\u5c31\u628a\u4f60\u7684\u4e1c\u897f\u5168\u5fd8\u5149\u4e86\uff0c\u628a\u4f60\u7684\u4e1c\u897f\u5168\u4e22\u6389\u4e86\u3002\u4f60\u7b2c\u4e8c\u6b21\u8fd8\u5f97\u518d\u544a\u8bc9\u670d\u52a1\u5668\u4e00\u904d\u3002 \u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u51fa\u73b0\u4e86 WebSocket \u3002\u4ed6\u89e3\u51b3\u4e86 HTTP \u7684\u8fd9\u51e0\u4e2a\u96be\u9898\u3002\u9996\u5148\uff0c\u88ab\u52a8\u6027\uff0c\u5f53\u670d\u52a1\u5668\u5b8c\u6210\u534f\u8bae\u5347\u7ea7\u540e\uff08HTTP- Websocket\uff09\uff0c\u670d\u52a1\u7aef\u5c31\u53ef\u4ee5\u4e3b\u52a8\u63a8\u9001\u4fe1\u606f\u7ed9\u5ba2\u6237\u7aef\u5566\u3002\u6240\u4ee5\u4e0a\u9762\u7684\u60c5\u666f\u53ef\u4ee5\u505a\u5982\u4e0b\u4fee\u6539\u3002","title":"WebSocket"},{"location":"project/websocket/#_2","text":"lsof -i:\u7aef\u53e3\u53f7 kill -9 \u8fdb\u7a0b\u53f7","title":"\u76d1\u542c\u7aef\u53e3\u5904\u7406"},{"location":"project/websocket/#_3","text":"","title":"\u9879\u76ee\u622a\u56fe"},{"location":"project/websocket/#_4","text":"Django Channels Channels\u662f\u4e00\u4e2a\u6269\u5c55Django\u5e76\u5c06\u5176\u80fd\u529b\u6269\u5c55\u5230HTTP\u4ee5\u5916\u7684\u9879\u76ee - \u7528\u4e8e\u5904\u7406WebSockets\uff0c\u804a\u5929\u534f\u8bae\uff0cIoT\u534f\u8bae\u7b49\u3002\u5b83\u5efa\u7acb\u5728\u4e00\u4e2a\u540d\u4e3aASGI\u7684Python\u89c4\u8303\u4e4b\u4e0a\u3002 \u5b83\u901a\u8fc7\u83b7\u53d6Django\u7684\u6838\u5fc3\u5e76\u5728\u4e0b\u9762\u5206\u5c42\u5b8c\u5168\u5f02\u6b65\u5c42\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884cDjango\u672c\u8eab\uff0c\u4f46\u5f02\u6b65\u5904\u7406\u8fde\u63a5\u548c\u5957\u63a5\u5b57\uff0c\u5e76\u5141\u8bb8\u60a8\u9009\u62e9\u4ee5\u4efb\u4e00\u6837\u5f0f\u7f16\u5199\u3002 \u8981\u5f00\u59cb\u4e86\u89e3Channels\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684\u7b80\u4ecb\uff0c\u5176\u4e2d\u5c06\u4ecb\u7ecd\u5de5\u4f5c\u539f\u7406\u3002\u5982\u679c\u60a8\u4ece\u9891\u90531\u5347\u7ea7\uff0c\u8bf7\u67e5\u770b\u9891\u90532\u4e2d\u7684\u65b0\u529f\u80fd\uff1f\u4e86\u89e3\u53d8\u5316; \u4e8b\u60c5\u5927\u4e0d\u76f8\u540c\u3002 channels channels-redis","title":"\u9700\u8981\u7684\u7c7b\u5e93"},{"location":"project/websocket/#_5","text":"1.\u5b89\u88c5Channels pip install -U channels 2.\u914d\u7f6e INSTALLED_APPS = ( django.contrib.auth , django.contrib.contenttypes , django.contrib.sessions , django.contrib.sites , ... channels , ) 3.\u5b9a\u4e49\u8def\u7531 Django\u8ba4\u8bc1\u7cfb\u7edf Django\u4f1a\u8bdd\u7cfb\u7edf from channels.routing import ProtocolTypeRouter application = ProtocolTypeRouter ({ # (http- django views is added by default) websocket : AuthMiddlewareStack ( URLRouter ([ path ( channels/ str:room_name / , ChatConsumer ), path ( chat/stream/ , ChatRoomConsumer ), ] ) ), }) \u670d\u52a1\u5668\u8c03\u52a8\u5165\u53e3 class ProtocolTypeRouter : Takes a mapping of protocol type names to other Application instances, and dispatches to the right one based on protocol name (or raises an error) def __init__ ( self , application_mapping ): self . application_mapping = application_mapping if http not in self . application_mapping : \u5982\u679c\u662f http \u670d\u52a1\u8c03\u7528 AsgiHandler \u5904\u7406 self . application_mapping [ http ] = AsgiHandler def __call__ ( self , scope ): if scope [ type ] in self . application_mapping : return self . application_mapping [ scope [ type ]]( scope ) else : raise ValueError ( No application configured for scope type %r % scope [ type ] ) #\u5728\u5165\u53e3\u5904\u7406WebSocket\u8ba4\u8bc1\u670d\u52a1 # Handy shortcut for applying all three layers at once AuthMiddlewareStack = lambda inner : CookieMiddleware ( SessionMiddleware ( AuthMiddleware ( inner )) ) 4.setting \u4e2d\u914d\u7f6eAswgi\u8f6c\u53d1\u7684\u5165\u53e3 ASGI_APPLICATION = myproject.routing.application 5.\u8c03\u7528\u8def\u7531\u529f\u80fd\u628a\u8bf7\u6c42\u53d1\u9001\u5230\u4e0d\u540c\u7684\u6d88\u8d39\u8005 Channels\u901a\u9053: Channels \u6838\u5fc3\u7c7b(\u4e24\u5927\u7c7b\u540c\u6b65\u548c\u5f02\u6b65): 1.\u540c\u6b65\u7c7b\u578b: class WebsocketConsumer(SyncConsumer): class JsonWebsocketConsumer(WebsocketConsumer): 2.\u5f02\u6b65\u7c7b\u578b class AsyncWebsocketConsumer(AsyncConsumer): class AsyncJsonWebsocketConsumer(AsyncWebsocketConsumer): Channels from django.conf import settings from channels.generic.websocket import AsyncJsonWebsocketConsumer from .exceptions import ClientError from .utils import get_room_or_error class ChatRoomConsumer ( AsyncJsonWebsocketConsumer ): This chat consumer handles websocket connections for chat clients. It uses AsyncJsonWebsocketConsumer, which means all the handling functions must be async functions, and any sync work (like ORM access) has to be behind database_sync_to_async or sync_to_async. For more, read http://channels.readthedocs.io/en/latest/topics/consumers.html ##### WebSocket event handlers async def connect ( self ): Called when the websocket is handshaking as part of initial connection. # Are they logged in? if self . scope [ user ] . is_anonymous : # Reject the connection await self . close () else : # Accept the connection await self . accept () # Store which rooms the user has joined on this connection self . rooms = set () async def receive_json ( self , content ): Called when we get a text frame. Channels will JSON-decode the payload for us and pass it as the first argument. # Messages will have a command key we can switch on command = content . get ( command , None ) try : if command == join : # Make them join the room await self . join_room ( content [ room ]) elif command == leave : # Leave the room await self . leave_room ( content [ room ]) elif command == send : await self . send_room ( content [ room ], content [ message ]) except ClientError as e : # Catch any errors and send it back await self . send_json ({ error : e . code }) async def disconnect ( self , code ): Called when the WebSocket closes for any reason. # Leave all the rooms we are still in for room_id in list ( self . rooms ): try : await self . leave_room ( room_id ) except ClientError : pass ##### Command helper methods called by receive_json async def join_room ( self , room_id ): Called by receive_json when someone sent a join command. # The logged-in user is in our scope thanks to the authentication ASGI middleware room = await get_room_or_error ( room_id , self . scope [ user ]) # Send a join message if it s turned on if settings . NOTIFY_USERS_ON_ENTER_OR_LEAVE_ROOMS : await self . channel_layer . group_send ( room . group_name , { type : chat.join , room_id : room_id , username : self . scope [ user ] . username , } ) # Store that we re in the room self . rooms . add ( room_id ) # Add them to the group so they get room messages await self . channel_layer . group_add ( room . group_name , self . channel_name , ) # Instruct their client to finish opening the room await self . send_json ({ join : str ( room . id ), title : room . title , }) async def leave_room ( self , room_id ): Called by receive_json when someone sent a leave command. # The logged-in user is in our scope thanks to the authentication ASGI middleware room = await get_room_or_error ( room_id , self . scope [ user ]) # Send a leave message if it s turned on if settings . NOTIFY_USERS_ON_ENTER_OR_LEAVE_ROOMS : await self . channel_layer . group_send ( room . group_name , { type : chat.leave , room_id : room_id , username : self . scope [ user ] . username , } ) # Remove that we re in the room self . rooms . discard ( room_id ) # Remove them from the group so they no longer get room messages await self . channel_layer . group_discard ( room . group_name , self . channel_name , ) # Instruct their client to finish closing the room await self . send_json ({ leave : str ( room . id ), }) async def send_room ( self , room_id , message ): Called by receive_json when someone sends a message to a room. # Check they are in this room if room_id not in self . rooms : raise ClientError ( ROOM_ACCESS_DENIED ) # Get the room and send to the group about it room = await get_room_or_error ( room_id , self . scope [ user ]) await self . channel_layer . group_send ( room . group_name , { type : chat.message , room_id : room_id , username : self . scope [ user ] . username , message : message , } ) ##### Handlers for messages sent over the channel layer # These helper methods are named by the types we send - so chat.join becomes chat_join async def chat_join ( self , event ): Called when someone has joined our chat. # Send a message down to the client await self . send_json ( { msg_type : settings . MSG_TYPE_ENTER , room : event [ room_id ], username : event [ username ], }, ) async def chat_leave ( self , event ): Called when someone has left our chat. # Send a message down to the client await self . send_json ( { msg_type : settings . MSG_TYPE_LEAVE , room : event [ room_id ], username : event [ username ], }, ) async def chat_message ( self , event ): Called when someone has messaged our chat. # Send a message down to the client await self . send_json ( { msg_type : settings . MSG_TYPE_MESSAGE , room : event [ room_id ], username : event [ username ], message : event [ message ], }, )","title":"\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u96c6\u6210"},{"location":"project/websocket/#_6","text":"\u7c7b\u8def\u5f84: venv/lib/python3.7/site-packages/channels/exceptions.py class RequestAborted(Exception): class RequestTimeout(RequestAborted): class InvalidChannelLayerError(ValueError): class AcceptConnection(Exception): class DenyConnection(Exception): class ChannelFull(Exception): class MessageTooLarge(Exception): class StopConsumer(Exception):","title":"\u5f02\u5e38\u7c7b\u7684\u4f7f\u7528"},{"location":"project/websocket/#flutter","text":"web_socket_channel initWebsocket () { if ( channel == null ) { ///\u521d\u59cb\u5316WebSocket channel = IOWebSocketChannel . connect ( ws://127.0.0.1:8000/channels/rooms/ ); } ///\u8bbe\u7f6eWebSocket\u76d1\u542c channel . stream . listen (( data ) { print ( json . decode ( data )[ message ]); accetpMsg ( json . decode ( data )[ message ][ message ], json . decode ( data )[ message ][ type ]); }); } ///\u5904\u7406\u53d1\u9001 void _submitMsg ( String txt ) { _textController . clear (); setState (() { _isWriting = false ; }); Msg msg = new Msg ( txt: txt , animationController: new AnimationController ( vsync: this , duration: new Duration ( milliseconds: 800 )), ); setState (() { _messages . insert ( 0 , msg ); }); if ( txt . isNotEmpty ) { channel . sink . add ( json . encode ({ message : { message : txt , type : send } })); } msg . animationController . forward (); } ///\u5904\u7406\u63a5\u6536\u6d88\u606f void accetpMsg ( String txt , String type ) { if ( type == send ) { return ; } Msg msg = new Msg ( txt: txt , animationController: new AnimationController ( vsync: this , duration: new Duration ( milliseconds: 800 )), messageType: MessageType . accept , ); setState (() { _messages . insert ( 0 , msg ); }); msg . animationController . forward (); } @ override void dispose () { channel . sink . close (); super . dispose (); }","title":"Flutter \u4ee3\u7801"},{"location":"project/websocket/#_7","text":"Django Channels Channels\u662f\u4e00\u4e2a\u6269\u5c55Django\u5e76\u5c06\u5176\u80fd\u529b\u6269\u5c55\u5230HTTP\u4ee5\u5916\u7684\u9879\u76ee - \u7528\u4e8e\u5904\u7406WebSockets\uff0c\u804a\u5929\u534f\u8bae\uff0cIoT\u534f\u8bae\u7b49\u3002\u5b83\u5efa\u7acb\u5728\u4e00\u4e2a\u540d\u4e3aASGI\u7684Python\u89c4\u8303\u4e4b\u4e0a\u3002 \u5b83\u901a\u8fc7\u83b7\u53d6Django\u7684\u6838\u5fc3\u5e76\u5728\u4e0b\u9762\u5206\u5c42\u5b8c\u5168\u5f02\u6b65\u5c42\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\u8fd0\u884cDjango\u672c\u8eab\uff0c\u4f46\u5f02\u6b65\u5904\u7406\u8fde\u63a5\u548c\u5957\u63a5\u5b57\uff0c\u5e76\u5141\u8bb8\u60a8\u9009\u62e9\u4ee5\u4efb\u4e00\u6837\u5f0f\u7f16\u5199\u3002 \u8981\u5f00\u59cb\u4e86\u89e3Channels\uff0c\u8bf7\u9605\u8bfb\u6211\u4eec\u7684\u7b80\u4ecb\uff0c\u5176\u4e2d\u5c06\u4ecb\u7ecd\u5de5\u4f5c\u539f\u7406\u3002\u5982\u679c\u60a8\u4ece\u9891\u90531\u5347\u7ea7\uff0c\u8bf7\u67e5\u770b\u9891\u90532\u4e2d\u7684\u65b0\u529f\u80fd\uff1f\u4e86\u89e3\u53d8\u5316; \u4e8b\u60c5\u5927\u4e0d\u76f8\u540c\u3002 channels channels-redis","title":"\u9700\u8981\u7684\u7c7b\u5e93"},{"location":"project/websocket/#channels-1channels-2","text":"","title":"Channels 1\u548cChannels 2 \u6709\u4ec0\u4e48"},{"location":"project/websocket/#awsgi","text":"Python\u5b9e\u73b0WSGI\uff0c\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3Python\u5f02\u6b65\u6846\u67b6\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u901a\u4fe1\u6807\u51c6\u63a5\u53e3 \u5728WSGI\u4e3a\u540c\u6b65Python\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u6807\u51c6\u7684\u5730\u65b9\uff0cASGI\u4e3a\u5f02\u6b65\u548c\u540c\u6b65\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\uff0c\u5177\u6709WSGI\u5411\u540e\u517c\u5bb9\u6027\u5b9e\u73b0\u4ee5\u53ca\u591a\u4e2a\u670d\u52a1\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002","title":"AWsgi"},{"location":"project/websocket/#wsgi","text":"ASGI\u4e5f\u88ab\u8bbe\u8ba1\u4e3aWSGI\u7684\u8d85\u96c6\uff0c\u5e76\u4e14\u5728\u4e24\u8005\u4e4b\u95f4\u6709\u4e00\u79cd\u5b9a\u4e49\u7684\u8f6c\u6362\u65b9\u5f0f\uff0c\u5141\u8bb8WSGI\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u8f6c\u6362\u5305\u88c5\u5668\uff08\u5728asgiref \u5e93\u4e2d\u63d0\u4f9b\uff09\u5728ASGI\u670d\u52a1\u5668\u5185\u8fd0\u884c\u3002\u7ebf\u7a0b\u6c60\u53ef\u7528\u4e8e\u8fdc\u79bb\u5f02\u6b65\u4e8b\u4ef6\u5faa\u73af\u8fd0\u884c\u540c\u6b65WSGI\u5e94\u7528\u7a0b\u5e8f\u3002 AWSGI","title":"WSGI\u517c\u5bb9\u6027"},{"location":"project/websocket/#django-websocket-redis","text":"django-websocket-redis","title":"django-websocket-redis"},{"location":"project/websocket/#_8","text":"multichat","title":"\u53c2\u8003\u6848\u4f8b"},{"location":"project/websocket/#websocket_5","text":"https://www.npmjs.com/package/wscat http://coolaf.com:1010/tool/chattest","title":"websocket \u5f00\u53d1\u8c03\u8bd5\u5de5\u5177"},{"location":"project/websocket/#websocket_6","text":"websocket","title":"websocket\u5b98\u7f51"},{"location":"project/websocket/#usage","text":"","title":"Usage"},{"location":"project/websocket/#_9","text":"SkyRoad PythonProjectSample","title":"\u9879\u76ee\u5730\u5740"},{"location":"project/websocket/#install","text":"pip install -r requirements.txt Then, you'll need Redis running locally; the settings are configured to point to localhost , port 6379 , but you can change this in the CHANNEL_LAYERS setting in settings.py . Finally, run:: python manage.py migrate python manage.py runserver Make yourself a superuser account:: python manage.py createsuperuser \u7136\u540e\uff0c\u767b\u5f55http\uff1a// localhost\uff1a8000 / admin /\u5e76\u5236\u4f5c\u51e0\u4e2aRoom\u5bf9\u8c61\u3002\u4e00\u5b9a\u8981\u5236\u4f5c\u4e00\u4e2a\u8bbe\u7f6e\u4e3a\u201c\u4ec5\u9650\u5458\u5de5\u201d\u7684\uff0c \u6700\u540e\uff0c\u5728\u7ba1\u7406\u5458\u4e2d\u521b\u5efa\u4e00\u4e2a\u6ca1\u6709\u5458\u5de5\u6743\u9650\u7684\u7b2c\u4e8c\u4e2a\u7528\u6237\u5e10\u6237\u3002\u60a8\u5c06\u4f7f\u7528\u5b83\u5728\u7b2c\u4e8c\u4e2a\u7a97\u53e3\u4e2d\u767b\u5f55\u804a\u5929\uff0c\u5e76\u5728\u4ec5\u9650\u5458\u5de5\u7684\u623f\u95f4\u4e0a\u6d4b\u8bd5\u8eab\u4efd\u9a8c\u8bc1\u3002 \u73b0\u5728\uff0c\u5728\u53e6\u4e00\u4e2a\u6d4f\u89c8\u5668\u6216\u201c\u9690\u8eab\u201d\u6a21\u5f0f\u4e0b\u6253\u5f00\u7b2c\u4e8c\u4e2a\u7a97\u53e3 - \u60a8\u5c06\u4f7f\u7528\u4e24\u4e2a\u7528\u6237\u5e10\u6237\u767b\u5f55\u540c\u4e00\u7ad9\u70b9\u3002\u5728\u4e24\u4e2a\u6d4f\u89c8\u5668\u4e2d\u5bfc\u822a\u5230 http\uff1a// localhost\uff1a8000\u5e76\u6253\u5f00\u76f8\u540c\u7684\u804a\u5929\u5ba4\u3002 \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8f93\u5165\u6d88\u606f\u5e76\u7acb\u5373\u5728\u4e24\u4e2a\u5c4f\u5e55\u4e0a\u663e\u793a\u6d88\u606f\u3002\u60a8\u53ef\u4ee5\u52a0\u5165\u5176\u4ed6\u623f\u95f4\u5e76\u5728\u90a3\u91cc\u5c1d\u8bd5\uff0c\u770b\u770b\u60a8\u5982\u4f55\u4ece\u60a8\u76ee\u524d\u52a0\u5165\u7684\u6240\u6709\u623f\u95f4\u6536\u5230\u6d88\u606f\u3002 \u5982\u679c\u60a8\u5c1d\u8bd5\u8ba9\u975e\u5de5\u4f5c\u4eba\u5458\u7528\u6237\u52a0\u5165\u60a8\u7684\u5458\u5de5\u804a\u5929\u5ba4\uff0c\u5219\u5e94\u8be5\u770b\u5230\u670d\u52a1\u5668\u7aef\u8eab\u4efd\u9a8c\u8bc1\u4ee3\u7801\u542f\u52a8\u65f6\u51fa\u73b0\u9519\u8bef\u3002","title":"Install"},{"location":"project/websocket/#_10","text":"\u6709\u4e00\u4e2a\u666e\u901a\u7684Django\u89c6\u56fe\uff0c\u53ea\u63d0\u4f9b\u666e\u901a@login_required\u88c5\u9970\u5668\u540e\u9762\u7684HTML\u9875\u9762 \uff0c\u8fd9\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5355\u9875\u5e94\u7528\u7a0b\u5e8f\uff0c\u6240\u6709JS\u90fd\u52a0\u8f7d\u5230index.html\u6587\u4ef6\u4e2d\uff08\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4f8b\u5b50\uff09\u3002 \u6709\u4e00\u4e2a\u6d88\u8d39\u8005\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u8def\u7531\u5230multichat/routing.py\uff0c\u5b83\u5305\u542b\u5728\u6e20\u9053\u8ba4\u8bc1ASGI\u4e2d\u95f4\u4ef6\u4e2d\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u68c0\u67e5\u60a8\u7684\u7528\u6237\u662f\u5426\u5df2\u767b\u5f55\u5e76\u68c0\u7d22\u5b83\u4ee5\u68c0\u67e5\u60a8\u8981\u6c42\u52a0\u5165\u4f1a\u8bae\u5ba4\u65f6\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u60a8\u5728\u54ea\u4e2a\u623f\u95f4\u8ddf\u8e2aself.rooms\u6d88\u8d39\u8005\uff0c\u4ee5\u4fbf\u5728\u65ad\u5f00\u8fde\u63a5\u65f6\u53ef\u4ee5\u4fdd\u6301\u5e72\u51c0\u3002 \u6bcf\u5f53\u5ba2\u6237\u7aef\u8981\u6c42\u52a0\u5165\u623f\u95f4\uff0c\u79bb\u5f00\u623f\u95f4\u6216\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u5b83\u90fd\u4f1a\u53d1\u9001\u5e26\u6709JSON\u7f16\u7801\u547d\u4ee4\u7684WebSocket\u6587\u672c\u6846\u67b6\u3002\u6211\u4eec\u4f7f\u7528\u901a\u7528\u4f7f\u7528\u8005\u4e3a\u6211\u4eec\u5904\u7406JSON\u7684\u89e3\u7801\uff0c\u7136\u540e\u6839\u636e\u547d\u4ee4\u8c03\u5ea6\u5230\u4e09\u4e2a\u5904\u7406\u51fd\u6570\u4e4b\u4e00\u3002 \u6240\u6709\u623f\u95f4\u90fd\u6709\u4e00\u4e2a\u5173\u8054\u7684\u7ec4\uff0c\u5bf9\u4e8e\u8fde\u63a5\uff0c\u79bb\u5f00\u548c\u6d88\u606f\uff0c\u4e8b\u4ef6\u901a\u8fc7\u901a\u9053\u5c42\u53d1\u9001\u5230\u8be5\u7ec4\u3002\u7ec4\u4e2d\u7684\u6d88\u8d39\u8005\u5c06\u63a5\u6536\u8fd9\u4e9b\u6d88\u606f\uff0c\u5e76\u4e14\u6d88\u8d39\u8005\u8fd8\u5177\u6709\u7528\u4e8e\u90a3\u4e9b\uff08\u4f8b\u5982chat_join\uff09\u7684\u5904\u7406\u7a0b\u5e8f\u529f\u80fd\uff0c\u5176\u7528\u4e8e\u5728\u5c06\u4e8b\u4ef6\u53d1\u9001\u5230\u5ba2\u6237\u7aef\u4e4b\u524d\u5c06\u4e8b\u4ef6\u7f16\u7801\u4e3aWebSocket\u6709\u7ebf\u683c\u5f0f\u3002","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"project/websocket/#_11","text":"\u5982\u679c\u60a8\u60f3\u5c1d\u8bd5\u8fdb\u884c\u4e00\u4e9b\u66f4\u6539\u5e76\u4e86\u89e3\u9891\u9053\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u6709\u5173\u5982\u4f55\u8fdb\u884c\u64cd\u4f5c\u7684\u4e00\u4e9b\u60f3\u6cd5\u548c\u63d0\u793a\uff1a \u4f7f\u81ea\u5df1\u7684\u6d88\u606f\u5177\u6709\u4e0d\u540c\u7684\u6d88\u606f\u7c7b\u578b\u3002\u60a8\u9700\u8981\u7f16\u8f91\u8be5chat_message\u51fd\u6570\uff0c\u4ee5\u6839\u636echat.message\u5176\u83b7\u53d6\u7684\u4e8b\u4ef6\u662f\u5426\u6765\u81ea\u60a8\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4e0d\u540c\u7684\u6570\u636e\u5305\u3002 \u6dfb\u52a0\u6d88\u606f\u6301\u4e45\u6027\u3002\u5df2\u53d1\u9001\u6d88\u606f\u4ee5\u4f7f\u7528\u6237\u52a0\u5165\u623f\u95f4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u6d88\u606f\u53d1\u9001\u4e00\u4e9b\u4ee5\u524d\u7684\u6d88\u606f; \u4f46\u662f\uff0c\u4f60\u9700\u8981\u5236\u4f5c\u4e00\u4e2a\u6a21\u578b\u6765\u4fdd\u5b58\u6d88\u606f\u3002 \u5728\u6dfb\u52a0\u548c\u5220\u9664\u623f\u95f4\u65f6\uff0c\u4f7f\u623f\u95f4\u5217\u8868\u52a8\u6001\u66f4\u6539\u3002\u60a8\u53ef\u4ee5\u6dfb\u52a0\u6bcf\u4e2a\u5957\u63a5\u5b57\u52a0\u5165\u7684\u516c\u5171\u7ec4\uff0c\u5e76\u5728\u521b\u5efa/\u5220\u9664\u623f\u95f4\u65f6\u5411\u5176\u53d1\u9001\u4e8b\u4ef6\u3002 \u6dfb\u52a0\u90ae\u4ef6\u7f16\u8f91\u548c\u5220\u9664\u3002\u4f60\u9700\u8981\u5148\u8ba9\u5b83\u4eec\u6301\u4e45\u5316; \u786e\u4fdd\u60a8\u968f\u6bcf\u6761\u6d88\u606f\u53d1\u9001\u6d88\u606fID\uff0c\u4ee5\u4fbf\u5ba2\u6237\u7aef\u53ef\u4ee5\u8ddf\u8e2a\u5b83\u4eec\u3002\u7136\u540e\uff0c\u7f16\u5199\u4e00\u4e9b\u4ee3\u7801\u6765\u5904\u7406\u7f16\u8f91\uff0c\u5e76\u5728\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u65f6\u89e6\u53d1\u53d1\u9001\u65b0\u6d88\u606f\u7684\u6d88\u606fID\u3002","title":"\u5efa\u8bae\u7684\u7ec3\u4e60"},{"location":"project/websocket/#_12","text":"You can find the Channels documentation at http://channels.readthedocs.org","title":"\u8fdb\u4e00\u6b65\u9605\u8bfb"},{"location":"python/pythonTools/","text":"Python \u5f00\u53d1\u76f8\u5173\u5de5\u5177 \u5168\u6808Python\u5de5\u7a0b\u5e08\u7f51\u7ad9 \u5168\u6808\u5de5\u7a0b\u5e08\u7f51\u7ad9 Django\u5b98\u7f51 django-transaction-hooks \u7cfb\u7edf\u8fdb\u7a0b\u7ba1\u7406\u5de5\u5177 Supervisor Celery\u542f\u52a8\u8fdb\u7a0b Django3.0Setting\u914d\u7f6e Python \u7248\u672c\u7ba1\u7406\u5de5\u5177 pyenv Python\u73af\u5883\u914d\u7f6e \u534f\u8bae HTTP/2 HTTP/2youtube\u89c6\u9891 HTTP\u8fc1\u79fb\u5230HTTP2 Let\u2019s Encrypt\u514d\u8d39\u8bc1\u4e66\u7533\u8bf7\u673a\u6784 \u4efb\u52a1\u8c03\u5ea6\u5e93 \u5e38\u7528\u7684\u5b9a\u65f6\u4efb\u52a1:apscheduler/django-crontab/Linux\u5b9a\u65f6\u4efb\u52a1\u3001Celery\u5f02\u6b65\u4efb\u52a1 \u5b9a\u65f6\u4efb\u52a1\u53c2\u8003\u6559\u7a0b \u5b9a\u65f6\u4efb\u52a1\u53c2\u8003 \u9ad8\u7ea7Python\u8c03\u5ea6\u7a0b\u5e8f RabbitMQ RabbitMQ\u5b98\u7f51 RabbitMQ\u7b80\u5355\u7684\u4ecb\u7ecd Celery\u662f\u4e00\u4e2a\u7b80\u5355\u3001\u7075\u6d3b\u4e14\u53ef\u9760\u7684\uff0c\u5904\u7406\u5927\u91cf\u6d88\u606f\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf \u4e13\u6ce8\u4e8e\u5b9e\u65f6\u5904\u7406\u7684\u5f02\u6b65\u4efb\u52a1\u961f\u5217 \u540c\u65f6\u4e5f\u652f\u6301\u4efb\u52a1\u8c03\u5ea6 \u4f7f\u7528\u573a\u666f: \u5f02\u6b65\u4efb\u52a1:\u5c06\u8017\u65f6\u7684\u64cd\u4f5c\u4efb\u52a1\u63d0\u4ea4\u7ed9Celery\u53bb\u5f02\u6b65\u6267\u884c\uff0c\u6bd4\u5982\u53d1\u9001\u77ed\u4fe1\u3001\u90ae\u4ef6\u3001\u6d88\u606f\u63a8\u9001\u3001\u97f3\u89c6\u9891\u5904\u7406\u7b49 \u5b9a\u65f6\u4efb\u52a1\uff1a\u7c7b\u4f3c\u4e8ecrontab\uff0c\u6bd4\u5982\u6bcf\u65e5\u6570\u636e\u7edf\u8ba1 Celery\u6587\u6863 Celery\u6d88\u606f\u5206\u53d1\u540e\u7aefBrokers django-celery-results django-celery-beat \u5b9a\u65f6\u4efb\u52a1 \u5b9a\u65f6\u4efb\u52a1\u5f00\u53d1\u6848\u4f8b AMQP\u534f\u8bae \u5e76\u53d1\u4e8b\u4ef6\u5e93 eventlet gevent \u591a\u8fdb\u7a0b\u5e93 billiard aws Python\u7f51\u7ad9 \u5b66\u4e60\u8d44\u6599\u5e93 aws Python \u7f51\u7ad9 aws Python \u5f00\u53d1\u7ad9\u70b9 \u5e38\u7528\u7684\u5e93 \u5783\u573e\u7559\u8a00\u8fc7\u6ee4\u7cfb\u7edf akismet \u5b89\u5168\u76f8\u5173 \u5b89\u5168\u7b56\u7565 cryptography \u6587\u4ef6\u5b8c\u6574\u6027/\u57fa\u4e8e\u4e3b\u673a\u7684\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf \u6587\u4ef6\u5b8c\u6574\u6027/\u57fa\u4e8e\u4e3b\u673a\u7684\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf Open Source Tripwire \u5f00\u6e90\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf tox What is tox? tox is a generic virtualenv management and test command line tool you can use for: checking your package installs correctly with different Python versions and interpreters running your tests in each of the environments, configuring your test tool of choice acting as a frontend to Continuous Integration servers, greatly reducing boilerplate and merging CI and shell-based testing. tox \u8c03\u8bd5\u5de5\u5177 Debug\u5de5\u5177 LRU Cache LRUCache django-uniauth\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1 JWT\u8ba4\u8bc1\u65b9\u5f0f:JSON Web\u4ee4\u724c\uff08JWT\uff09 ServerLess AWS \u8fdc\u7a0b\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177 \u76d1\u63a7\u5de5\u5177 Prometheus django-prometheus \u5982\u4f55\u89e3\u91ca\u7f51\u7ad9\u6027\u80fd\u6d4b\u8bd5","title":"\u5f00\u53d1\u5de5\u5177"},{"location":"python/pythonTools/#python","text":"","title":"Python \u5f00\u53d1\u76f8\u5173\u5de5\u5177"},{"location":"python/pythonTools/#python_1","text":"\u5168\u6808\u5de5\u7a0b\u5e08\u7f51\u7ad9 Django\u5b98\u7f51 django-transaction-hooks","title":"\u5168\u6808Python\u5de5\u7a0b\u5e08\u7f51\u7ad9"},{"location":"python/pythonTools/#_1","text":"Supervisor Celery\u542f\u52a8\u8fdb\u7a0b Django3.0Setting\u914d\u7f6e","title":"\u7cfb\u7edf\u8fdb\u7a0b\u7ba1\u7406\u5de5\u5177"},{"location":"python/pythonTools/#python_2","text":"pyenv Python\u73af\u5883\u914d\u7f6e","title":"Python \u7248\u672c\u7ba1\u7406\u5de5\u5177"},{"location":"python/pythonTools/#_2","text":"HTTP/2 HTTP/2youtube\u89c6\u9891 HTTP\u8fc1\u79fb\u5230HTTP2 Let\u2019s Encrypt\u514d\u8d39\u8bc1\u4e66\u7533\u8bf7\u673a\u6784","title":"\u534f\u8bae"},{"location":"python/pythonTools/#_3","text":"\u5e38\u7528\u7684\u5b9a\u65f6\u4efb\u52a1:apscheduler/django-crontab/Linux\u5b9a\u65f6\u4efb\u52a1\u3001Celery\u5f02\u6b65\u4efb\u52a1 \u5b9a\u65f6\u4efb\u52a1\u53c2\u8003\u6559\u7a0b \u5b9a\u65f6\u4efb\u52a1\u53c2\u8003 \u9ad8\u7ea7Python\u8c03\u5ea6\u7a0b\u5e8f RabbitMQ RabbitMQ\u5b98\u7f51 RabbitMQ\u7b80\u5355\u7684\u4ecb\u7ecd Celery\u662f\u4e00\u4e2a\u7b80\u5355\u3001\u7075\u6d3b\u4e14\u53ef\u9760\u7684\uff0c\u5904\u7406\u5927\u91cf\u6d88\u606f\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf \u4e13\u6ce8\u4e8e\u5b9e\u65f6\u5904\u7406\u7684\u5f02\u6b65\u4efb\u52a1\u961f\u5217 \u540c\u65f6\u4e5f\u652f\u6301\u4efb\u52a1\u8c03\u5ea6 \u4f7f\u7528\u573a\u666f: \u5f02\u6b65\u4efb\u52a1:\u5c06\u8017\u65f6\u7684\u64cd\u4f5c\u4efb\u52a1\u63d0\u4ea4\u7ed9Celery\u53bb\u5f02\u6b65\u6267\u884c\uff0c\u6bd4\u5982\u53d1\u9001\u77ed\u4fe1\u3001\u90ae\u4ef6\u3001\u6d88\u606f\u63a8\u9001\u3001\u97f3\u89c6\u9891\u5904\u7406\u7b49 \u5b9a\u65f6\u4efb\u52a1\uff1a\u7c7b\u4f3c\u4e8ecrontab\uff0c\u6bd4\u5982\u6bcf\u65e5\u6570\u636e\u7edf\u8ba1 Celery\u6587\u6863 Celery\u6d88\u606f\u5206\u53d1\u540e\u7aefBrokers django-celery-results django-celery-beat \u5b9a\u65f6\u4efb\u52a1 \u5b9a\u65f6\u4efb\u52a1\u5f00\u53d1\u6848\u4f8b AMQP\u534f\u8bae","title":"\u4efb\u52a1\u8c03\u5ea6\u5e93"},{"location":"python/pythonTools/#_4","text":"eventlet gevent","title":"\u5e76\u53d1\u4e8b\u4ef6\u5e93"},{"location":"python/pythonTools/#_5","text":"billiard","title":"\u591a\u8fdb\u7a0b\u5e93"},{"location":"python/pythonTools/#aws-python","text":"\u5b66\u4e60\u8d44\u6599\u5e93 aws Python \u7f51\u7ad9 aws Python \u5f00\u53d1\u7ad9\u70b9","title":"aws Python\u7f51\u7ad9"},{"location":"python/pythonTools/#_6","text":"\u5783\u573e\u7559\u8a00\u8fc7\u6ee4\u7cfb\u7edf akismet","title":"\u5e38\u7528\u7684\u5e93"},{"location":"python/pythonTools/#_7","text":"\u5b89\u5168\u7b56\u7565 cryptography \u6587\u4ef6\u5b8c\u6574\u6027/\u57fa\u4e8e\u4e3b\u673a\u7684\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf \u6587\u4ef6\u5b8c\u6574\u6027/\u57fa\u4e8e\u4e3b\u673a\u7684\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf Open Source Tripwire \u5f00\u6e90\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf","title":"\u5b89\u5168\u76f8\u5173"},{"location":"python/pythonTools/#tox","text":"What is tox? tox is a generic virtualenv management and test command line tool you can use for: checking your package installs correctly with different Python versions and interpreters running your tests in each of the environments, configuring your test tool of choice acting as a frontend to Continuous Integration servers, greatly reducing boilerplate and merging CI and shell-based testing. tox","title":"tox"},{"location":"python/pythonTools/#_8","text":"Debug\u5de5\u5177","title":"\u8c03\u8bd5\u5de5\u5177"},{"location":"python/pythonTools/#lru-cache","text":"LRUCache django-uniauth\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1 JWT\u8ba4\u8bc1\u65b9\u5f0f:JSON Web\u4ee4\u724c\uff08JWT\uff09 ServerLess AWS \u8fdc\u7a0b\u5f00\u53d1\u8c03\u8bd5\u5de5\u5177","title":"LRU Cache"},{"location":"python/pythonTools/#_9","text":"Prometheus django-prometheus \u5982\u4f55\u89e3\u91ca\u7f51\u7ad9\u6027\u80fd\u6d4b\u8bd5","title":"\u76d1\u63a7\u5de5\u5177"},{"location":"python/security/","text":"Python \u5b89\u5168 \u5e38\u7528\u7684\u5bc6\u7801\u5904\u7406\u7b97\u6cd5 \u5bf9\u79f0\u5bc6\u7801 \u6d88\u606f\u6458\u8981 \u5bc6\u94a5\u6d3e\u751f\u51fd\u6570 \u63d0\u4f9b\u4e86\u89e3\u5b8c\u6574\u7cfb\u7edf\uff08\u5982SSL / TLS\uff09\u6240\u9700\u7684\u4e00\u5207\uff1a\u5206\u7ec4\u5bc6\u7801\uff0c\u6d41\u5bc6\u7801\uff0c\u6563\u5217\u51fd\u6570\uff0c\u6d88\u606f\u9a8c\u8bc1\u4ee3\u7801\uff0c\u516c\u94a5\u52a0\u5bc6\uff0c\u5bc6\u94a5\u534f\u5546\u534f\u8bae\u548c\u7b7e\u540d\u7b97\u6cd5\u3002 \u901a\u8fc7\u5b9e\u8df5\u5b66\u4e60\u3002 \u4e86\u89e3\u5982\u4f55\u5229\u7528\u5e38\u89c1\u7684\u52a0\u5bc6\u7f3a\u9677\uff0c\u53ea\u9700\u8981\u4e00\u70b9\u65f6\u95f4\u548c\u60a8\u6700\u559c\u6b22\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 \u4f2a\u9020\u7ba1\u7406\u5458cookie\uff0c\u6062\u590d\u5bc6\u7801\uff0c\u751a\u81f3\u540e\u95e8\u4f60\u81ea\u5df1\u7684\u968f\u673a\u6570\u751f\u6210\u5668\u3002 \u5230\u5904\u5de5\u4f5c\u3002 \u65e0DRM\uff0c\u5e76\u63d0\u4f9b\u6240\u6709\u5e38\u89c1\u683c\u5f0f\uff1a PDF\uff08\u9002\u7528\u4e8eMac\u548cPC\uff09 EPUB\uff08\u9002\u7528\u4e8e\u5927\u591a\u6570\u7535\u5b50\u4e66\u9605\u8bfb\u5668\uff0ciPad\u548ciPhone\uff09 Mobi\uff08\u9002\u7528\u4e8eKindle\uff09 \u5e38\u7528\u7684\u5bc6\u7801\u5904\u7406\u5e93 cryptography \u52a0\u5bc6101 Crypto 101\u662f\u4e00\u95e8\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u5165\u95e8\u8bfe\u7a0b\uff0c\u514d\u8d39\u63d0\u4f9b\u7ed9\u6240\u6709\u5e74\u9f84\u548c\u6280\u80fd\u6c34\u5e73\u7684\u7a0b\u5e8f\u5458\u3002 \u63d0\u4f9b\u4e86\u89e3\u5b8c\u6574\u7cfb\u7edf\uff08\u5982SSL / TLS\uff09\u6240\u9700\u7684\u4e00\u5207\uff1a\u5206\u7ec4\u5bc6\u7801\uff0c\u6d41\u5bc6\u7801\uff0c\u6563\u5217\u51fd\u6570\uff0c\u6d88\u606f\u9a8c\u8bc1\u4ee3\u7801\uff0c\u516c\u94a5\u52a0\u5bc6\uff0c\u5bc6\u94a5\u534f\u5546\u534f\u8bae\u548c\u7b7e\u540d\u7b97\u6cd5\u3002 \u901a\u8fc7\u5b9e\u8df5\u5b66\u4e60\u3002 \u4e86\u89e3\u5982\u4f55\u5229\u7528\u5e38\u89c1\u7684\u52a0\u5bc6\u7f3a\u9677\uff0c\u53ea\u9700\u8981\u4e00\u70b9\u65f6\u95f4\u548c\u60a8\u6700\u559c\u6b22\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 \u4f2a\u9020\u7ba1\u7406\u5458cookie\uff0c\u6062\u590d\u5bc6\u7801\uff0c\u751a\u81f3\u540e\u95e8\u4f60\u81ea\u5df1\u7684\u968f\u673a\u6570\u751f\u6210\u5668\u3002 \u5230\u5904\u5de5\u4f5c\u3002 \u65e0DRM\uff0c\u5e76\u63d0\u4f9b\u6240\u6709\u5e38\u89c1\u683c\u5f0f\uff1a PDF\uff08\u9002\u7528\u4e8eMac\u548cPC\uff09 EPUB\uff08\u9002\u7528\u4e8e\u5927\u591a\u6570\u7535\u5b50\u4e66\u9605\u8bfb\u5668\uff0ciPad\u548ciPhone\uff09 Mobi\uff08\u9002\u7528\u4e8eKindle\uff09 \u52a0\u5bc6101 \u5bc6\u7801\u6311\u6218\u7f51\u7ad9 This site will host all eight sets of our crypto challenges, with solutions in most mainstream languages. But: it doesn't yet. If we waited to hit \"publish\" until everything was here, we might be writing this in 2015. So we're publishing as we go. In particular: give us a little time on the challenge solutions. the cryptopals crypto challenges Oauth2\u8ba4\u8bc1 OAuth 2\u6bd4OAuth 1\u66f4\u5bb9\u6613\u4e3a\u5ba2\u6237\u7aef\u5b9e\u65bd\uff0c\u56e0\u4e3a\u4e0d\u518d\u9700\u8981\u52a0\u5bc6\u7b7e\u540d\u3002\u76f8\u53cd\uff0c\u5df2\u7ecf\u5f15\u5165\u4e86\u5bf9\u6240\u6709\u8fde\u63a5\u4f7f\u7528TLS\u7684\u4e25\u683c\u8981\u6c42\u3002 requests-oauthlib","title":"Python \u5b89\u5168"},{"location":"python/security/#python","text":"","title":"Python \u5b89\u5168"},{"location":"python/security/#_1","text":"\u5bf9\u79f0\u5bc6\u7801 \u6d88\u606f\u6458\u8981 \u5bc6\u94a5\u6d3e\u751f\u51fd\u6570 \u63d0\u4f9b\u4e86\u89e3\u5b8c\u6574\u7cfb\u7edf\uff08\u5982SSL / TLS\uff09\u6240\u9700\u7684\u4e00\u5207\uff1a\u5206\u7ec4\u5bc6\u7801\uff0c\u6d41\u5bc6\u7801\uff0c\u6563\u5217\u51fd\u6570\uff0c\u6d88\u606f\u9a8c\u8bc1\u4ee3\u7801\uff0c\u516c\u94a5\u52a0\u5bc6\uff0c\u5bc6\u94a5\u534f\u5546\u534f\u8bae\u548c\u7b7e\u540d\u7b97\u6cd5\u3002 \u901a\u8fc7\u5b9e\u8df5\u5b66\u4e60\u3002 \u4e86\u89e3\u5982\u4f55\u5229\u7528\u5e38\u89c1\u7684\u52a0\u5bc6\u7f3a\u9677\uff0c\u53ea\u9700\u8981\u4e00\u70b9\u65f6\u95f4\u548c\u60a8\u6700\u559c\u6b22\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 \u4f2a\u9020\u7ba1\u7406\u5458cookie\uff0c\u6062\u590d\u5bc6\u7801\uff0c\u751a\u81f3\u540e\u95e8\u4f60\u81ea\u5df1\u7684\u968f\u673a\u6570\u751f\u6210\u5668\u3002 \u5230\u5904\u5de5\u4f5c\u3002 \u65e0DRM\uff0c\u5e76\u63d0\u4f9b\u6240\u6709\u5e38\u89c1\u683c\u5f0f\uff1a PDF\uff08\u9002\u7528\u4e8eMac\u548cPC\uff09 EPUB\uff08\u9002\u7528\u4e8e\u5927\u591a\u6570\u7535\u5b50\u4e66\u9605\u8bfb\u5668\uff0ciPad\u548ciPhone\uff09 Mobi\uff08\u9002\u7528\u4e8eKindle\uff09","title":"\u5e38\u7528\u7684\u5bc6\u7801\u5904\u7406\u7b97\u6cd5"},{"location":"python/security/#_2","text":"cryptography","title":"\u5e38\u7528\u7684\u5bc6\u7801\u5904\u7406\u5e93"},{"location":"python/security/#101","text":"Crypto 101\u662f\u4e00\u95e8\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u5165\u95e8\u8bfe\u7a0b\uff0c\u514d\u8d39\u63d0\u4f9b\u7ed9\u6240\u6709\u5e74\u9f84\u548c\u6280\u80fd\u6c34\u5e73\u7684\u7a0b\u5e8f\u5458\u3002 \u63d0\u4f9b\u4e86\u89e3\u5b8c\u6574\u7cfb\u7edf\uff08\u5982SSL / TLS\uff09\u6240\u9700\u7684\u4e00\u5207\uff1a\u5206\u7ec4\u5bc6\u7801\uff0c\u6d41\u5bc6\u7801\uff0c\u6563\u5217\u51fd\u6570\uff0c\u6d88\u606f\u9a8c\u8bc1\u4ee3\u7801\uff0c\u516c\u94a5\u52a0\u5bc6\uff0c\u5bc6\u94a5\u534f\u5546\u534f\u8bae\u548c\u7b7e\u540d\u7b97\u6cd5\u3002 \u901a\u8fc7\u5b9e\u8df5\u5b66\u4e60\u3002 \u4e86\u89e3\u5982\u4f55\u5229\u7528\u5e38\u89c1\u7684\u52a0\u5bc6\u7f3a\u9677\uff0c\u53ea\u9700\u8981\u4e00\u70b9\u65f6\u95f4\u548c\u60a8\u6700\u559c\u6b22\u7684\u7f16\u7a0b\u8bed\u8a00\u3002 \u4f2a\u9020\u7ba1\u7406\u5458cookie\uff0c\u6062\u590d\u5bc6\u7801\uff0c\u751a\u81f3\u540e\u95e8\u4f60\u81ea\u5df1\u7684\u968f\u673a\u6570\u751f\u6210\u5668\u3002 \u5230\u5904\u5de5\u4f5c\u3002 \u65e0DRM\uff0c\u5e76\u63d0\u4f9b\u6240\u6709\u5e38\u89c1\u683c\u5f0f\uff1a PDF\uff08\u9002\u7528\u4e8eMac\u548cPC\uff09 EPUB\uff08\u9002\u7528\u4e8e\u5927\u591a\u6570\u7535\u5b50\u4e66\u9605\u8bfb\u5668\uff0ciPad\u548ciPhone\uff09 Mobi\uff08\u9002\u7528\u4e8eKindle\uff09 \u52a0\u5bc6101","title":"\u52a0\u5bc6101"},{"location":"python/security/#_3","text":"This site will host all eight sets of our crypto challenges, with solutions in most mainstream languages. But: it doesn't yet. If we waited to hit \"publish\" until everything was here, we might be writing this in 2015. So we're publishing as we go. In particular: give us a little time on the challenge solutions. the cryptopals crypto challenges","title":"\u5bc6\u7801\u6311\u6218\u7f51\u7ad9"},{"location":"python/security/#oauth2","text":"OAuth 2\u6bd4OAuth 1\u66f4\u5bb9\u6613\u4e3a\u5ba2\u6237\u7aef\u5b9e\u65bd\uff0c\u56e0\u4e3a\u4e0d\u518d\u9700\u8981\u52a0\u5bc6\u7b7e\u540d\u3002\u76f8\u53cd\uff0c\u5df2\u7ecf\u5f15\u5165\u4e86\u5bf9\u6240\u6709\u8fde\u63a5\u4f7f\u7528TLS\u7684\u4e25\u683c\u8981\u6c42\u3002 requests-oauthlib","title":"Oauth2\u8ba4\u8bc1"},{"location":"python/base/advancesPython/","text":"Python \u57fa\u7840 Python \u6587\u6863 global nolocal \u5206\u522b\u4ee3\u8868\u7684\u610f\u601d \u5173\u952e\u6280\u672f\u70b9 1.Python \u53c2\u6570\u89e3\u6790\u5e93: argparse 2.pkgutil \u5305\u7684\u904d\u5386\u89e3\u6790\u6a21\u5757 3.difflib \u5bf9\u8c61\u7684\u5dee\u5206\u6bd4\u8f83 4.importlib \u5bfc\u5165\u5e93\u7684\u4fbf\u6377\u51fd\u6570 5.vars \u5feb\u901f\u751f\u6210\u5b57\u5178 6.\u547d\u4ee4\u884c\u7684\u989c\u8272\u663e\u793a 7.itertools import functools import itertools import logging import os import pathlib import signal import subprocess import sys import threading import time import traceback import weakref from collections import defaultdict from pathlib import Path from types import ModuleType from zipimport import zipimporter import hashlib import json import os import posixpath import re import warnings from collections import OrderedDict from urllib.parse import unquote, urldefrag, urlsplit, urlunsplit os \u5305 \u6587\u4ef6\u8bfb\u53d6 \u52a0\u8f7dJSON\u6587\u4ef6 uuid \u65e5\u5fd7\u5e93\u7684\u4f7f\u7528log \u5b57\u7b26\u4e32format\u64cd\u4f5c \u53c2\u6570\u89e3\u6790\u5e93\u4f7f\u7528argparse threading \u7ebf\u7a0b\u521b\u5efa serializing/deserializing \u4ee3\u7801\u5206\u6790\u3001\u4f18\u5316\u6216\u9a8c\u8bc1\u5de5\u5177 itertools with enumerate \u4f60\u6784\u5efa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5bb9\u5668\u5bf9\u8c61\uff0c\u91cc\u9762\u5305\u542b\u6709\u5217\u8868\u3001\u5143\u7ec4\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 \u4f60\u60f3\u76f4\u63a5\u5728\u4f60\u7684\u8fd9\u4e2a\u65b0\u5bb9\u5668\u5bf9\u8c61\u4e0a\u6267\u884c\u8fed\u4ee3\u64cd\u4f5c\u3002 \u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u89e3\u538b\u8d4b\u503c\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e0a\u9762\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5217\u8868\u6216\u8005\u5143\u7ec4\u3002 \u5305\u62ec\u5b57\u7b26\u4e32\uff0c\u6587\u4ef6\u5bf9\u8c61\uff0c\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668\u3002 yield \u8868\u8fbe\u5f0f\u7684\u751f\u6210\u5668\u51fd\u6570 \u6211\u4eec\u5728\u5199\u67e5\u8be2\u5143\u7d20\u7684\u4ee3\u7801\u65f6\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u5305\u542b yield \u8868\u8fbe\u5f0f\u7684\u751f\u6210\u5668\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684\u90a3\u6837\u3002 \u8fd9\u6837\u53ef\u4ee5\u5c06\u641c\u7d22\u8fc7\u7a0b\u4ee3\u7801\u548c\u4f7f\u7528\u641c\u7d22\u7ed3\u679c\u4ee3\u7801\u89e3\u8026\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u6e05\u695a\u4ec0\u4e48\u662f\u751f\u6210\u5668\uff0c\u8bf7\u53c2\u770b 4.3 \u8282\u3002 \u6a21\u5757\u4e0e\u5305\u662f\u4efb\u4f55\u5927\u578b\u7a0b\u5e8f\u7684\u6838\u5fc3\uff0c\u5c31\u8fdePython\u5b89\u88c5\u7a0b\u5e8f\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5305\u3002\u672c\u7ae0\u91cd\u70b9\u6d89\u53ca\u6709\u5173\u6a21\u5757\u548c\u5305\u7684\u5e38\u7528\u7f16\u7a0b\u6280\u672f\uff0c\u4f8b\u5982\u5982\u4f55\u7ec4\u7ec7\u5305\u3001\u628a\u5927\u578b\u6a21\u5757\u5206\u5272\u6210\u591a\u4e2a\u6587\u4ef6\u3001\u521b\u5efa\u547d\u540d\u7a7a\u95f4\u5305\u3002\u540c\u65f6\uff0c\u4e5f\u7ed9\u51fa\u4e86\u8ba9\u4f60\u81ea\u5b9a\u4e49\u5bfc\u5165\u8bed\u53e5\u7684\u79d8\u7c4d\u3002 init .py \u4f1a\u5728\u6a21\u5757\u5bfc\u5165\u65f6\u9884\u5148\u5bfc\u5165 \u5ef6\u8fdf\u52a0\u8f7d\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u7ee7\u627f\u548c\u7c7b\u578b\u68c0\u67e5\u53ef\u80fd\u4f1a\u4e2d\u65ad \u5ef6\u8fdf\u52a0\u8f7d\u7684\u771f\u5b9e\u4f8b\u5b50, \u89c1\u6807\u51c6\u5e93 multiprocessing/ init .py \u7684\u6e90\u7801. \u4f7f\u7528python\u6587\u4ef6\u751f\u6210zip\u5305 bash % ls spam.py bar.py grok.py main .py bash % zip -r myapp.zip *.py bash % python3 myapp.zip ... output from main .py ... \u51fd\u6570 \u4f7f\u7528 def \u8bed\u53e5\u5b9a\u4e49\u51fd\u6570\u662f\u6240\u6709\u7a0b\u5e8f\u7684\u57fa\u7840\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u8bb2\u89e3\u4e00\u4e9b\u66f4\u52a0\u9ad8\u7ea7\u548c\u4e0d\u5e38\u89c1\u7684\u51fd\u6570\u5b9a\u4e49\u4e0e\u4f7f\u7528\u6a21\u5f0f\u3002 \u6d89\u53ca\u5230\u7684\u5185\u5bb9\u5305\u62ec\u9ed8\u8ba4\u53c2\u6570\u3001\u4efb\u610f\u6570\u91cf\u53c2\u6570\u3001\u5f3a\u5236\u5173\u952e\u5b57\u53c2\u6570\u3001\u6ce8\u89e3\u548c\u95ed\u5305\u3002 \u53e6\u5916\uff0c\u4e00\u4e9b\u9ad8\u7ea7\u7684\u63a7\u5236\u6d41\u548c\u5229\u7528\u56de\u8c03\u51fd\u6570\u4f20\u9012\u6570\u636e\u7684\u6280\u672f\u5728\u8fd9\u91cc\u4e5f\u4f1a\u8bb2\u89e3\u5230\u3002 \u4f7f\u7528\u4e00\u4e2a\u5185\u90e8\u51fd\u6570\u6216\u8005\u95ed\u5305\u7684\u65b9\u6848\u901a\u5e38\u4f1a\u66f4\u4f18\u96c5\u4e00\u4e9b\u3002\u7b80\u5355\u6765\u8bb2\uff0c\u4e00\u4e2a\u95ed\u5305\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c \u53ea\u4e0d\u8fc7\u5728\u51fd\u6570\u5185\u90e8\u5e26\u4e0a\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u53d8\u91cf\u73af\u5883\u3002\u95ed\u5305\u5173\u952e\u7279\u70b9\u5c31\u662f\u5b83\u4f1a\u8bb0\u4f4f\u81ea\u5df1\u88ab\u5b9a\u4e49\u65f6\u7684\u73af\u5883\u3002 \u56e0\u6b64\uff0c\u5728\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\uff0copener() \u51fd\u6570\u8bb0\u4f4f\u4e86 template \u53c2\u6570\u7684\u503c\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u8c03\u7528\u4e2d\u4f7f\u7528\u5b83\u3002 \u7c7b \u5305\u62ec\u8ba9\u5bf9\u8c61\u652f\u6301\u5e38\u89c1\u7684Python\u7279\u6027\u3001\u7279\u6b8a\u65b9\u6cd5\u7684\u4f7f\u7528\u3001 \u7c7b\u5c01\u88c5\u6280\u672f\u3001\u7ee7\u627f\u3001\u5185\u5b58\u7ba1\u7406\u4ee5\u53ca\u6709\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002 \u5143\u7c7b \u8f6f\u4ef6\u5f00\u53d1\u9886\u57df\u4e2d\u6700\u7ecf\u5178\u7684\u53e3\u5934\u7985\u5c31\u662f\u201cdon\u2019t repeat yourself\u201d\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u4f55\u65f6\u5019\u5f53\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5b58\u5728\u9ad8\u5ea6\u91cd\u590d(\u6216\u8005\u662f\u901a\u8fc7\u526a\u5207\u590d\u5236)\u7684\u4ee3\u7801\u65f6\uff0c\u90fd\u5e94\u8be5\u60f3\u60f3\u662f\u5426\u6709\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u5728Python\u5f53\u4e2d\uff0c\u901a\u5e38\u90fd\u53ef\u4ee5\u901a\u8fc7\u5143\u7f16\u7a0b\u6765\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5143\u7f16\u7a0b\u5c31\u662f\u5173\u4e8e\u521b\u5efa\u64cd\u4f5c\u6e90\u4ee3\u7801(\u6bd4\u5982\u4fee\u6539\u3001\u751f\u6210\u6216\u5305\u88c5\u539f\u6765\u7684\u4ee3\u7801)\u7684\u51fd\u6570\u548c\u7c7b\u3002 \u4e3b\u8981\u6280\u672f\u662f\u4f7f\u7528\u88c5\u9970\u5668\u3001\u7c7b\u88c5\u9970\u5668\u548c\u5143\u7c7b\u3002\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u6280\u672f\uff0c \u5305\u62ec\u7b7e\u540d\u5bf9\u8c61\u3001\u4f7f\u7528 exec() \u6267\u884c\u4ee3\u7801\u4ee5\u53ca\u5bf9\u5185\u90e8\u51fd\u6570\u548c\u7c7b\u7684\u53cd\u5c04\u6280\u672f\u7b49\u3002 \u672c\u7ae0\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5411\u5927\u5bb6\u4ecb\u7ecd\u8fd9\u4e9b\u5143\u7f16\u7a0b\u6280\u672f\uff0c\u5e76\u4e14\u7ed9\u51fa\u5b9e\u4f8b\u6765\u6f14\u793a\u5b83\u4eec\u662f\u600e\u6837\u5b9a\u5236\u5316\u4f60\u7684\u6e90\u4ee3\u7801\u884c\u4e3a\u7684 \u7ebf\u7a0b Python\u4e2d\u7684\u7ebf\u7a0b\u4f1a\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7cfb\u7edf\u7ea7\u7ebf\u7a0b\u4e2d\u6267\u884c\uff08\u6bd4\u5982\u8bf4\u4e00\u4e2a POSIX \u7ebf\u7a0b\u6216\u8005\u4e00\u4e2a Windows \u7ebf\u7a0b\uff09\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5c06\u7531\u64cd\u4f5c\u7cfb\u7edf\u6765\u5168\u6743\u7ba1\u7406\u3002 \u540e\u53f0\u7ebf\u7a0b\u65e0\u6cd5\u7b49\u5f85\uff0c\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u4f1a\u5728\u4e3b\u7ebf\u7a0b\u7ec8\u6b62\u65f6\u81ea\u52a8\u9500\u6bc1 \u6b7b\u9501\u7684\u68c0\u6d4b\u4e0e\u6062\u590d\u662f\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848\u7684\u6269\u5c55\u8bdd\u9898\u3002\u4e00\u4e2a\u6bd4\u8f83\u5e38\u7528\u7684\u6b7b\u9501\u68c0\u6d4b\u4e0e\u6062\u590d\u7684\u65b9\u6848\u662f\u5f15\u5165\u770b\u95e8\u72d7\u8ba1\u6570\u5668\u3002\u5f53\u7ebf\u7a0b\u6b63\u5e38 \u8fd0\u884c\u7684\u65f6\u5019\u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u91cd\u7f6e\u8ba1\u6570\u5668\uff0c\u5728\u6ca1\u6709\u53d1\u751f\u6b7b\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u5207\u90fd\u6b63\u5e38\u8fdb\u884c\u3002\u4e00\u65e6\u53d1\u751f\u6b7b\u9501\uff0c\u7531\u4e8e\u65e0\u6cd5\u91cd\u7f6e\u8ba1\u6570\u5668\u5bfc\u81f4\u5b9a\u65f6\u5668 \u8d85\u65f6\uff0c\u8fd9\u65f6\u7a0b\u5e8f\u4f1a\u901a\u8fc7\u91cd\u542f\u81ea\u8eab\u6062\u590d\u5230\u6b63\u5e38\u72b6\u6001\u3002 \u9700\u8981\u6574\u7406 \u5143\u7f16\u7a0b \u7b80\u800c\u8a00\u4e4b\uff0c\u5143\u7f16\u7a0b\u5c31\u662f\u5173\u4e8e\u521b\u5efa\u64cd\u4f5c\u6e90\u4ee3\u7801(\u6bd4\u5982\u4fee\u6539\u3001\u751f\u6210\u6216\u5305\u88c5\u539f\u6765\u7684\u4ee3\u7801)\u7684\u51fd\u6570\u548c\u7c7b\u3002 \u4e3b\u8981\u6280\u672f *\u88c5\u9970\u5668 *\u7c7b\u88c5\u9970\u5668 *\u5143\u7c7b *\u7b7e\u540d\u5bf9\u8c61 *\u4f7f\u7528 exec() \u6267\u884c\u4ee3\u7801 *\u5bf9\u5185\u90e8\u51fd\u6570\u548c\u7c7b\u7684\u53cd\u5c04\u6280\u672f @staticmethod @classMethod \u4f46\u662f\u901a\u8fc7\u4f8b\u5b50\u53d1\u73b0staticmethod\u4e0eclassmethod\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u8f93\u51fa\u7ed3\u679c\u76f8\u540c\uff0c\u518d\u770b\u770b\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u533a\u522b\u3002 \u65e2\u7136@staticmethod\u548c@classmethod\u90fd\u53ef\u4ee5\u76f4\u63a5\u7c7b\u540d.\u65b9\u6cd5\u540d()\u6765\u8c03\u7528\uff0c\u90a3\u4ed6\u4eec\u6709\u4ec0\u4e48\u533a\u522b\u5462 \u4ece\u5b83\u4eec\u7684\u4f7f\u7528\u4e0a\u6765\u770b, @staticmethod\u4e0d\u9700\u8981\u8868\u793a\u81ea\u8eab\u5bf9\u8c61\u7684self\u548c\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\uff0c\u5c31\u8ddf\u4f7f\u7528\u51fd\u6570\u4e00\u6837\u3002 @classmethod\u4e5f\u4e0d\u9700\u8981self\u53c2\u6570\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u662f\u8868\u793a\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\u3002 \u5982\u679c\u5728@staticmethod\u4e2d\u8981\u8c03\u7528\u5230\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e9b\u5c5e\u6027\u65b9\u6cd5\uff0c\u53ea\u80fd\u76f4\u63a5\u7c7b\u540d.\u5c5e\u6027\u540d\u6216\u7c7b\u540d.\u65b9\u6cd5\u540d\u3002 \u800c@classmethod\u56e0\u4e3a\u6301\u6709cls\u53c2\u6570\uff0c\u53ef\u4ee5\u6765\u8c03\u7528\u7c7b\u7684\u5c5e\u6027\uff0c\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7b49\uff0c\u907f\u514d\u786c\u7f16\u7801\u3002 Decorators for Functions and Methods pyton\u5bf9\u8c61\uff0c\u5728\u5185\u5b58\u4e2d\u5c31\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61,\u66f4\u50cfJSON\u5b57\u7b26\u4e32 Python\u88c5\u9970\u5668\u548c\u5143\u7c7b type\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u7c7b\u7684\u63cf\u8ff0\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u7c7b\u3002 \u5b98\u65b9\u6587\u6863 https://www.cnblogs.com/cicaday/p/python-decorator.html Python\u4e2d\u7684\u95ed\u5305 Python\u4e2d\u7684\u88c5\u9970\u5668 \u5143\u7c7b \u5143\u7c7b \u5143\u7c7b\u7684\u4f7f\u7528 \u5224\u65ad\u3001\u83b7\u53d6\u3001\u8bbe\u7f6e\u5c5e\u6027 Python\u88c5\u9970\u5668 Python\u4e2d\u7684\u9b54\u6cd5\u51fd\u6570 \u88c5\u9970\u5668 Python Typing \u6a21\u5757\u7684\u4f7f\u7528 https://docs.python.org/zh-cn/3/library/typing.html#generics python init__\u6587\u4ef6\u548c\u6784\u9020\u65b9\u6cd5__init https://www.cnblogs.com/Lands-ljk/p/5880483.html http://www.cnblogs.com/insane-Mr-Li/p/9758776.html \u6cdb\u578b(Generics) https://docs.python.org/zh-cn/3/library/typing.html#generics \u7406\u89e3Python\u7684Dynamic typing http://www.maixj.net/ict/python-dynamic-typing-13972 Python hashlib\u6a21\u5757 http://www.php.cn/python-tutorials-413249.html python\u4e4brandom\u6a21\u5757\u5206\u6790 https://www.cnblogs.com/cwp-bg/p/7468475.html \u5e38\u89c1\u7684\u7b97\u6cd5 https://www.cnblogs.com/cwp-bg/p/7476296.html \u65e5\u5fd7\u6a21\u5757 https://www.cnblogs.com/cwp-bg/p/8632519.html \u5355\u5143\u6d4b\u8bd5 https://www.cnblogs.com/cwp-bg/p/8761816.html \u96c6\u5408 https://www.cnblogs.com/cwp-bg/p/9524469.html \u6df1\u62f7\u8d1d 3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/copy.py","title":"\u9ad8\u7ea7\u5f00\u53d1"},{"location":"python/base/advancesPython/#python","text":"Python \u6587\u6863 global nolocal \u5206\u522b\u4ee3\u8868\u7684\u610f\u601d \u5173\u952e\u6280\u672f\u70b9 1.Python \u53c2\u6570\u89e3\u6790\u5e93: argparse 2.pkgutil \u5305\u7684\u904d\u5386\u89e3\u6790\u6a21\u5757 3.difflib \u5bf9\u8c61\u7684\u5dee\u5206\u6bd4\u8f83 4.importlib \u5bfc\u5165\u5e93\u7684\u4fbf\u6377\u51fd\u6570 5.vars \u5feb\u901f\u751f\u6210\u5b57\u5178 6.\u547d\u4ee4\u884c\u7684\u989c\u8272\u663e\u793a 7.itertools import functools import itertools import logging import os import pathlib import signal import subprocess import sys import threading import time import traceback import weakref from collections import defaultdict from pathlib import Path from types import ModuleType from zipimport import zipimporter import hashlib import json import os import posixpath import re import warnings from collections import OrderedDict from urllib.parse import unquote, urldefrag, urlsplit, urlunsplit","title":"Python \u57fa\u7840"},{"location":"python/base/advancesPython/#os","text":"","title":"os \u5305"},{"location":"python/base/advancesPython/#_1","text":"","title":"\u6587\u4ef6\u8bfb\u53d6"},{"location":"python/base/advancesPython/#json","text":"","title":"\u52a0\u8f7dJSON\u6587\u4ef6"},{"location":"python/base/advancesPython/#uuid","text":"","title":"uuid"},{"location":"python/base/advancesPython/#log","text":"","title":"\u65e5\u5fd7\u5e93\u7684\u4f7f\u7528log"},{"location":"python/base/advancesPython/#format","text":"","title":"\u5b57\u7b26\u4e32format\u64cd\u4f5c"},{"location":"python/base/advancesPython/#argparse","text":"","title":"\u53c2\u6570\u89e3\u6790\u5e93\u4f7f\u7528argparse"},{"location":"python/base/advancesPython/#threading","text":"","title":"threading \u7ebf\u7a0b\u521b\u5efa"},{"location":"python/base/advancesPython/#serializingdeserializing","text":"","title":"serializing/deserializing"},{"location":"python/base/advancesPython/#_2","text":"","title":"\u4ee3\u7801\u5206\u6790\u3001\u4f18\u5316\u6216\u9a8c\u8bc1\u5de5\u5177"},{"location":"python/base/advancesPython/#itertools","text":"","title":"itertools"},{"location":"python/base/advancesPython/#with","text":"","title":"with"},{"location":"python/base/advancesPython/#enumerate","text":"","title":"enumerate"},{"location":"python/base/advancesPython/#_3","text":"","title":"\u4f60\u6784\u5efa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5bb9\u5668\u5bf9\u8c61\uff0c\u91cc\u9762\u5305\u542b\u6709\u5217\u8868\u3001\u5143\u7ec4\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\u3002 \u4f60\u60f3\u76f4\u63a5\u5728\u4f60\u7684\u8fd9\u4e2a\u65b0\u5bb9\u5668\u5bf9\u8c61\u4e0a\u6267\u884c\u8fed\u4ee3\u64cd\u4f5c\u3002"},{"location":"python/base/advancesPython/#_4","text":"","title":"\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u89e3\u538b\u8d4b\u503c\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e0a\u9762\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5217\u8868\u6216\u8005\u5143\u7ec4\u3002 \u5305\u62ec\u5b57\u7b26\u4e32\uff0c\u6587\u4ef6\u5bf9\u8c61\uff0c\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668\u3002"},{"location":"python/base/advancesPython/#yield","text":"","title":"yield \u8868\u8fbe\u5f0f\u7684\u751f\u6210\u5668\u51fd\u6570"},{"location":"python/base/advancesPython/#yield-43","text":"\u6a21\u5757\u4e0e\u5305\u662f\u4efb\u4f55\u5927\u578b\u7a0b\u5e8f\u7684\u6838\u5fc3\uff0c\u5c31\u8fdePython\u5b89\u88c5\u7a0b\u5e8f\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5305\u3002\u672c\u7ae0\u91cd\u70b9\u6d89\u53ca\u6709\u5173\u6a21\u5757\u548c\u5305\u7684\u5e38\u7528\u7f16\u7a0b\u6280\u672f\uff0c\u4f8b\u5982\u5982\u4f55\u7ec4\u7ec7\u5305\u3001\u628a\u5927\u578b\u6a21\u5757\u5206\u5272\u6210\u591a\u4e2a\u6587\u4ef6\u3001\u521b\u5efa\u547d\u540d\u7a7a\u95f4\u5305\u3002\u540c\u65f6\uff0c\u4e5f\u7ed9\u51fa\u4e86\u8ba9\u4f60\u81ea\u5b9a\u4e49\u5bfc\u5165\u8bed\u53e5\u7684\u79d8\u7c4d\u3002 init .py \u4f1a\u5728\u6a21\u5757\u5bfc\u5165\u65f6\u9884\u5148\u5bfc\u5165 \u5ef6\u8fdf\u52a0\u8f7d\u7684\u4e3b\u8981\u7f3a\u70b9\u662f\u7ee7\u627f\u548c\u7c7b\u578b\u68c0\u67e5\u53ef\u80fd\u4f1a\u4e2d\u65ad \u5ef6\u8fdf\u52a0\u8f7d\u7684\u771f\u5b9e\u4f8b\u5b50, \u89c1\u6807\u51c6\u5e93 multiprocessing/ init .py \u7684\u6e90\u7801.","title":"\u6211\u4eec\u5728\u5199\u67e5\u8be2\u5143\u7d20\u7684\u4ee3\u7801\u65f6\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u5305\u542b yield \u8868\u8fbe\u5f0f\u7684\u751f\u6210\u5668\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684\u90a3\u6837\u3002 \u8fd9\u6837\u53ef\u4ee5\u5c06\u641c\u7d22\u8fc7\u7a0b\u4ee3\u7801\u548c\u4f7f\u7528\u641c\u7d22\u7ed3\u679c\u4ee3\u7801\u89e3\u8026\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u6e05\u695a\u4ec0\u4e48\u662f\u751f\u6210\u5668\uff0c\u8bf7\u53c2\u770b 4.3 \u8282\u3002"},{"location":"python/base/advancesPython/#pythonzip","text":"bash % ls spam.py bar.py grok.py main .py bash % zip -r myapp.zip *.py bash % python3 myapp.zip ... output from main .py ...","title":"\u4f7f\u7528python\u6587\u4ef6\u751f\u6210zip\u5305"},{"location":"python/base/advancesPython/#_5","text":"\u4f7f\u7528 def \u8bed\u53e5\u5b9a\u4e49\u51fd\u6570\u662f\u6240\u6709\u7a0b\u5e8f\u7684\u57fa\u7840\u3002 \u672c\u7ae0\u7684\u76ee\u6807\u662f\u8bb2\u89e3\u4e00\u4e9b\u66f4\u52a0\u9ad8\u7ea7\u548c\u4e0d\u5e38\u89c1\u7684\u51fd\u6570\u5b9a\u4e49\u4e0e\u4f7f\u7528\u6a21\u5f0f\u3002 \u6d89\u53ca\u5230\u7684\u5185\u5bb9\u5305\u62ec\u9ed8\u8ba4\u53c2\u6570\u3001\u4efb\u610f\u6570\u91cf\u53c2\u6570\u3001\u5f3a\u5236\u5173\u952e\u5b57\u53c2\u6570\u3001\u6ce8\u89e3\u548c\u95ed\u5305\u3002 \u53e6\u5916\uff0c\u4e00\u4e9b\u9ad8\u7ea7\u7684\u63a7\u5236\u6d41\u548c\u5229\u7528\u56de\u8c03\u51fd\u6570\u4f20\u9012\u6570\u636e\u7684\u6280\u672f\u5728\u8fd9\u91cc\u4e5f\u4f1a\u8bb2\u89e3\u5230\u3002 \u4f7f\u7528\u4e00\u4e2a\u5185\u90e8\u51fd\u6570\u6216\u8005\u95ed\u5305\u7684\u65b9\u6848\u901a\u5e38\u4f1a\u66f4\u4f18\u96c5\u4e00\u4e9b\u3002\u7b80\u5355\u6765\u8bb2\uff0c\u4e00\u4e2a\u95ed\u5305\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c \u53ea\u4e0d\u8fc7\u5728\u51fd\u6570\u5185\u90e8\u5e26\u4e0a\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u53d8\u91cf\u73af\u5883\u3002\u95ed\u5305\u5173\u952e\u7279\u70b9\u5c31\u662f\u5b83\u4f1a\u8bb0\u4f4f\u81ea\u5df1\u88ab\u5b9a\u4e49\u65f6\u7684\u73af\u5883\u3002 \u56e0\u6b64\uff0c\u5728\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4e2d\uff0copener() \u51fd\u6570\u8bb0\u4f4f\u4e86 template \u53c2\u6570\u7684\u503c\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u8c03\u7528\u4e2d\u4f7f\u7528\u5b83\u3002","title":"\u51fd\u6570"},{"location":"python/base/advancesPython/#_6","text":"\u5305\u62ec\u8ba9\u5bf9\u8c61\u652f\u6301\u5e38\u89c1\u7684Python\u7279\u6027\u3001\u7279\u6b8a\u65b9\u6cd5\u7684\u4f7f\u7528\u3001 \u7c7b\u5c01\u88c5\u6280\u672f\u3001\u7ee7\u627f\u3001\u5185\u5b58\u7ba1\u7406\u4ee5\u53ca\u6709\u7528\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002","title":"\u7c7b"},{"location":"python/base/advancesPython/#_7","text":"\u8f6f\u4ef6\u5f00\u53d1\u9886\u57df\u4e2d\u6700\u7ecf\u5178\u7684\u53e3\u5934\u7985\u5c31\u662f\u201cdon\u2019t repeat yourself\u201d\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4efb\u4f55\u65f6\u5019\u5f53\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5b58\u5728\u9ad8\u5ea6\u91cd\u590d(\u6216\u8005\u662f\u901a\u8fc7\u526a\u5207\u590d\u5236)\u7684\u4ee3\u7801\u65f6\uff0c\u90fd\u5e94\u8be5\u60f3\u60f3\u662f\u5426\u6709\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u5728Python\u5f53\u4e2d\uff0c\u901a\u5e38\u90fd\u53ef\u4ee5\u901a\u8fc7\u5143\u7f16\u7a0b\u6765\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5143\u7f16\u7a0b\u5c31\u662f\u5173\u4e8e\u521b\u5efa\u64cd\u4f5c\u6e90\u4ee3\u7801(\u6bd4\u5982\u4fee\u6539\u3001\u751f\u6210\u6216\u5305\u88c5\u539f\u6765\u7684\u4ee3\u7801)\u7684\u51fd\u6570\u548c\u7c7b\u3002 \u4e3b\u8981\u6280\u672f\u662f\u4f7f\u7528\u88c5\u9970\u5668\u3001\u7c7b\u88c5\u9970\u5668\u548c\u5143\u7c7b\u3002\u4e0d\u8fc7\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u6280\u672f\uff0c \u5305\u62ec\u7b7e\u540d\u5bf9\u8c61\u3001\u4f7f\u7528 exec() \u6267\u884c\u4ee3\u7801\u4ee5\u53ca\u5bf9\u5185\u90e8\u51fd\u6570\u548c\u7c7b\u7684\u53cd\u5c04\u6280\u672f\u7b49\u3002 \u672c\u7ae0\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5411\u5927\u5bb6\u4ecb\u7ecd\u8fd9\u4e9b\u5143\u7f16\u7a0b\u6280\u672f\uff0c\u5e76\u4e14\u7ed9\u51fa\u5b9e\u4f8b\u6765\u6f14\u793a\u5b83\u4eec\u662f\u600e\u6837\u5b9a\u5236\u5316\u4f60\u7684\u6e90\u4ee3\u7801\u884c\u4e3a\u7684","title":"\u5143\u7c7b"},{"location":"python/base/advancesPython/#_8","text":"Python\u4e2d\u7684\u7ebf\u7a0b\u4f1a\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7cfb\u7edf\u7ea7\u7ebf\u7a0b\u4e2d\u6267\u884c\uff08\u6bd4\u5982\u8bf4\u4e00\u4e2a POSIX \u7ebf\u7a0b\u6216\u8005\u4e00\u4e2a Windows \u7ebf\u7a0b\uff09\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5c06\u7531\u64cd\u4f5c\u7cfb\u7edf\u6765\u5168\u6743\u7ba1\u7406\u3002 \u540e\u53f0\u7ebf\u7a0b\u65e0\u6cd5\u7b49\u5f85\uff0c\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u4f1a\u5728\u4e3b\u7ebf\u7a0b\u7ec8\u6b62\u65f6\u81ea\u52a8\u9500\u6bc1 \u6b7b\u9501\u7684\u68c0\u6d4b\u4e0e\u6062\u590d\u662f\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u4f18\u96c5\u7684\u89e3\u51b3\u65b9\u6848\u7684\u6269\u5c55\u8bdd\u9898\u3002\u4e00\u4e2a\u6bd4\u8f83\u5e38\u7528\u7684\u6b7b\u9501\u68c0\u6d4b\u4e0e\u6062\u590d\u7684\u65b9\u6848\u662f\u5f15\u5165\u770b\u95e8\u72d7\u8ba1\u6570\u5668\u3002\u5f53\u7ebf\u7a0b\u6b63\u5e38 \u8fd0\u884c\u7684\u65f6\u5019\u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u91cd\u7f6e\u8ba1\u6570\u5668\uff0c\u5728\u6ca1\u6709\u53d1\u751f\u6b7b\u9501\u7684\u60c5\u51b5\u4e0b\uff0c\u4e00\u5207\u90fd\u6b63\u5e38\u8fdb\u884c\u3002\u4e00\u65e6\u53d1\u751f\u6b7b\u9501\uff0c\u7531\u4e8e\u65e0\u6cd5\u91cd\u7f6e\u8ba1\u6570\u5668\u5bfc\u81f4\u5b9a\u65f6\u5668 \u8d85\u65f6\uff0c\u8fd9\u65f6\u7a0b\u5e8f\u4f1a\u901a\u8fc7\u91cd\u542f\u81ea\u8eab\u6062\u590d\u5230\u6b63\u5e38\u72b6\u6001\u3002 \u9700\u8981\u6574\u7406","title":"\u7ebf\u7a0b"},{"location":"python/base/advancesPython/#_9","text":"\u7b80\u800c\u8a00\u4e4b\uff0c\u5143\u7f16\u7a0b\u5c31\u662f\u5173\u4e8e\u521b\u5efa\u64cd\u4f5c\u6e90\u4ee3\u7801(\u6bd4\u5982\u4fee\u6539\u3001\u751f\u6210\u6216\u5305\u88c5\u539f\u6765\u7684\u4ee3\u7801)\u7684\u51fd\u6570\u548c\u7c7b\u3002 \u4e3b\u8981\u6280\u672f *\u88c5\u9970\u5668 *\u7c7b\u88c5\u9970\u5668 *\u5143\u7c7b *\u7b7e\u540d\u5bf9\u8c61 *\u4f7f\u7528 exec() \u6267\u884c\u4ee3\u7801 *\u5bf9\u5185\u90e8\u51fd\u6570\u548c\u7c7b\u7684\u53cd\u5c04\u6280\u672f","title":"\u5143\u7f16\u7a0b"},{"location":"python/base/advancesPython/#staticmethod-classmethod","text":"\u4f46\u662f\u901a\u8fc7\u4f8b\u5b50\u53d1\u73b0staticmethod\u4e0eclassmethod\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u8f93\u51fa\u7ed3\u679c\u76f8\u540c\uff0c\u518d\u770b\u770b\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u533a\u522b\u3002 \u65e2\u7136@staticmethod\u548c@classmethod\u90fd\u53ef\u4ee5\u76f4\u63a5\u7c7b\u540d.\u65b9\u6cd5\u540d()\u6765\u8c03\u7528\uff0c\u90a3\u4ed6\u4eec\u6709\u4ec0\u4e48\u533a\u522b\u5462 \u4ece\u5b83\u4eec\u7684\u4f7f\u7528\u4e0a\u6765\u770b, @staticmethod\u4e0d\u9700\u8981\u8868\u793a\u81ea\u8eab\u5bf9\u8c61\u7684self\u548c\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\uff0c\u5c31\u8ddf\u4f7f\u7528\u51fd\u6570\u4e00\u6837\u3002 @classmethod\u4e5f\u4e0d\u9700\u8981self\u53c2\u6570\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u662f\u8868\u793a\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\u3002 \u5982\u679c\u5728@staticmethod\u4e2d\u8981\u8c03\u7528\u5230\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e9b\u5c5e\u6027\u65b9\u6cd5\uff0c\u53ea\u80fd\u76f4\u63a5\u7c7b\u540d.\u5c5e\u6027\u540d\u6216\u7c7b\u540d.\u65b9\u6cd5\u540d\u3002 \u800c@classmethod\u56e0\u4e3a\u6301\u6709cls\u53c2\u6570\uff0c\u53ef\u4ee5\u6765\u8c03\u7528\u7c7b\u7684\u5c5e\u6027\uff0c\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7b49\uff0c\u907f\u514d\u786c\u7f16\u7801\u3002","title":"@staticmethod @classMethod"},{"location":"python/base/advancesPython/#decorators-for-functions-and-methods","text":"pyton\u5bf9\u8c61\uff0c\u5728\u5185\u5b58\u4e2d\u5c31\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61,\u66f4\u50cfJSON\u5b57\u7b26\u4e32 Python\u88c5\u9970\u5668\u548c\u5143\u7c7b type\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u7c7b\u7684\u63cf\u8ff0\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u7c7b\u3002 \u5b98\u65b9\u6587\u6863 https://www.cnblogs.com/cicaday/p/python-decorator.html Python\u4e2d\u7684\u95ed\u5305 Python\u4e2d\u7684\u88c5\u9970\u5668 \u5143\u7c7b \u5143\u7c7b \u5143\u7c7b\u7684\u4f7f\u7528 \u5224\u65ad\u3001\u83b7\u53d6\u3001\u8bbe\u7f6e\u5c5e\u6027 Python\u88c5\u9970\u5668 Python\u4e2d\u7684\u9b54\u6cd5\u51fd\u6570 \u88c5\u9970\u5668","title":"Decorators for Functions and Methods"},{"location":"python/base/advancesPython/#python-typing","text":"https://docs.python.org/zh-cn/3/library/typing.html#generics","title":"Python Typing \u6a21\u5757\u7684\u4f7f\u7528"},{"location":"python/base/advancesPython/#python-init____init","text":"https://www.cnblogs.com/Lands-ljk/p/5880483.html http://www.cnblogs.com/insane-Mr-Li/p/9758776.html","title":"python init__\u6587\u4ef6\u548c\u6784\u9020\u65b9\u6cd5__init"},{"location":"python/base/advancesPython/#generics","text":"https://docs.python.org/zh-cn/3/library/typing.html#generics","title":"\u6cdb\u578b(Generics)"},{"location":"python/base/advancesPython/#pythondynamic-typing","text":"http://www.maixj.net/ict/python-dynamic-typing-13972","title":"\u7406\u89e3Python\u7684Dynamic typing"},{"location":"python/base/advancesPython/#python-hashlib","text":"http://www.php.cn/python-tutorials-413249.html","title":"Python hashlib\u6a21\u5757"},{"location":"python/base/advancesPython/#pythonrandom","text":"https://www.cnblogs.com/cwp-bg/p/7468475.html","title":"python\u4e4brandom\u6a21\u5757\u5206\u6790"},{"location":"python/base/advancesPython/#_10","text":"https://www.cnblogs.com/cwp-bg/p/7476296.html","title":"\u5e38\u89c1\u7684\u7b97\u6cd5"},{"location":"python/base/advancesPython/#_11","text":"https://www.cnblogs.com/cwp-bg/p/8632519.html","title":"\u65e5\u5fd7\u6a21\u5757"},{"location":"python/base/advancesPython/#_12","text":"https://www.cnblogs.com/cwp-bg/p/8761816.html","title":"\u5355\u5143\u6d4b\u8bd5"},{"location":"python/base/advancesPython/#_13","text":"https://www.cnblogs.com/cwp-bg/p/9524469.html","title":"\u96c6\u5408"},{"location":"python/base/advancesPython/#_14","text":"3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/copy.py","title":"\u6df1\u62f7\u8d1d"},{"location":"python/base/datapars/","text":"\u6570\u636e\u5e93\u7c7b\u578b mongodb Elasticsearch gaode_spider \u8c46\u74e3\u6e90\u5b89\u88c5Scrapy \u5f02\u6b65\u8c03\u5ea6\u548c\u5904\u7406\u7684 \u4f7f\u7528\u81ea\u52a8\u9650\u5236\u6269\u5c55 \u9009\u62e9\u5668\u63d0\u53d6\u6570\u636e Shell\u63a7\u5236\u53f0 [\u5b58\u50a8\u540e\u7aef] \u7ad9\u70b9\u5730\u5730\u56fe \u81ea\u52a8\u4e0b\u8f7d Telnet\u63a7\u5236\u53f0 \u4fe1\u53f7\u673a\u5236 \u6269\u5c55\u652f\u6301 \u5e38\u4f7f\u7528\u7684\u5e93 lxml , an efficient XML and HTML parser parsel , an HTML/XML data extraction library written on top of lxml, w3lib , a multi-purpose helper for dealing with URLs and web page encodings twisted , an asynchronous networking framework cryptography and pyOpenSSL , to deal with various network-level security needs cookie\u548c\u4f1a\u8bdd\u5904\u7406 HTTP\u529f\u80fd\uff0c\u5982\u538b\u7f29\uff0c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7f13\u5b58 \u7528\u6237\u4ee3\u7406\u6b3a\u9a97 \u7684robots.txt \u722c\u884c\u6df1\u5ea6\u9650\u5236 \u548c\u66f4\u591a \u8f93\u51fa\u683c\u5f0f \u5185\u7701\u548c\u8c03\u8bd5Scrapy Python \u5185\u5b58\u7ba1\u7406 Python Memory Management Python Memory Management Part 2 Python Memory Management Part 3: The Saga is Over \u5f00\u53d1\u5de5\u5177 web\u5143\u7d20\u9009\u62e9\u5668 Css Xpath JQJson\u547d\u4ee4\u884c\u89e3\u6790\u5668 \u8ddf\u8e2a\u5185\u5b58\u6cc4\u6f0f wgrep scrapy-splash Json-RPC \u4ee3\u7406\u5de5\u5177\u4f7f\u7528 youtube\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177 \u4ee3\u7801\u7247\u6bb5 from setuptools import setup , find_packages setup ( name = scrapy-mymodule , entry_points = { scrapy.commands : [ my_command=my_scrapy_module.commands:MyCommand , ], }, ) def __init__ ( self , * args , ** kwargs ): self . _values = {} if args or kwargs : # avoid creating dict for most common case for k , v in six . iteritems ( dict ( * args , ** kwargs )): self [ k ] = v https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.channels.list?part=snippet,contentDetails publishedAfter=2016-11-01T00:00:00Z publishedBefore=2017-12-31T00:00:00Z id='+ channel_id + ' key=AIzaSyA8vpkk5FE2ImCoZYK9SfApRyUZipQd0j0'","title":"\u6570\u636e\u5e93\u7c7b\u578b"},{"location":"python/base/datapars/#_1","text":"mongodb Elasticsearch gaode_spider \u8c46\u74e3\u6e90\u5b89\u88c5Scrapy \u5f02\u6b65\u8c03\u5ea6\u548c\u5904\u7406\u7684 \u4f7f\u7528\u81ea\u52a8\u9650\u5236\u6269\u5c55 \u9009\u62e9\u5668\u63d0\u53d6\u6570\u636e Shell\u63a7\u5236\u53f0 [\u5b58\u50a8\u540e\u7aef] \u7ad9\u70b9\u5730\u5730\u56fe \u81ea\u52a8\u4e0b\u8f7d Telnet\u63a7\u5236\u53f0 \u4fe1\u53f7\u673a\u5236 \u6269\u5c55\u652f\u6301","title":"\u6570\u636e\u5e93\u7c7b\u578b"},{"location":"python/base/datapars/#_2","text":"lxml , an efficient XML and HTML parser parsel , an HTML/XML data extraction library written on top of lxml, w3lib , a multi-purpose helper for dealing with URLs and web page encodings twisted , an asynchronous networking framework cryptography and pyOpenSSL , to deal with various network-level security needs cookie\u548c\u4f1a\u8bdd\u5904\u7406 HTTP\u529f\u80fd\uff0c\u5982\u538b\u7f29\uff0c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7f13\u5b58 \u7528\u6237\u4ee3\u7406\u6b3a\u9a97 \u7684robots.txt \u722c\u884c\u6df1\u5ea6\u9650\u5236 \u548c\u66f4\u591a \u8f93\u51fa\u683c\u5f0f \u5185\u7701\u548c\u8c03\u8bd5Scrapy","title":"\u5e38\u4f7f\u7528\u7684\u5e93"},{"location":"python/base/datapars/#python","text":"Python Memory Management Python Memory Management Part 2 Python Memory Management Part 3: The Saga is Over","title":"Python \u5185\u5b58\u7ba1\u7406"},{"location":"python/base/datapars/#_3","text":"web\u5143\u7d20\u9009\u62e9\u5668 Css Xpath JQJson\u547d\u4ee4\u884c\u89e3\u6790\u5668 \u8ddf\u8e2a\u5185\u5b58\u6cc4\u6f0f wgrep scrapy-splash Json-RPC \u4ee3\u7406\u5de5\u5177\u4f7f\u7528 youtube\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177","title":"\u5f00\u53d1\u5de5\u5177"},{"location":"python/base/datapars/#_4","text":"from setuptools import setup , find_packages setup ( name = scrapy-mymodule , entry_points = { scrapy.commands : [ my_command=my_scrapy_module.commands:MyCommand , ], }, ) def __init__ ( self , * args , ** kwargs ): self . _values = {} if args or kwargs : # avoid creating dict for most common case for k , v in six . iteritems ( dict ( * args , ** kwargs )): self [ k ] = v https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.channels.list?part=snippet,contentDetails publishedAfter=2016-11-01T00:00:00Z publishedBefore=2017-12-31T00:00:00Z id='+ channel_id + ' key=AIzaSyA8vpkk5FE2ImCoZYK9SfApRyUZipQd0j0'","title":"\u4ee3\u7801\u7247\u6bb5"},{"location":"python/base/pythonEnv/","text":"Python \u73af\u5883\u642d\u5efa pipenv \u5b89\u88c5\u4f7f\u7528 \u5feb\u901f\u5165\u95e8Python \u6700\u65b0\u6700\u6d41\u884c\u7684pipenv\u865a\u62df\u73af\u5883 Python Dev Workflow for Pipenv Virtual Environments virtualenv-burrito Pipenv\u7ba1\u7406Python\u865a\u62df\u73af\u5883 \u4e00\u3001pipenv\u4ecb\u7ecd \u7b80\u5355\u8bf4\uff0cpipenv\u5c31\u662f\u628apip\u548cvirtualenv\u5305\u88c5\u8d77\u6765\u7684\u4e00\u4e2a\u4fbf\u643a\u5de5\u5177\uff0c\u5b83\u4f1a\u81ea\u52a8\u4e3a\u60a8\u7684\u9879\u76ee\u521b\u5efa\u548c\u7ba1\u7406virtualenv\uff0c\u4ee5\u53ca\u5728\u5b89\u88c5/\u5378\u8f7d\u8f6f\u4ef6\u5305\u65f6\u6dfb\u52a0/\u5220\u9664Pipfile\u4e2d\u7684\u8f6f\u4ef6\u5305\u3002 \u4f7f\u7528pipenv\u7ba1\u7406python\u73af\u5883\u865a\u62df\u73af\u5883\u7684\u4f18\u52bf\uff1a \u4e0d\u518d\u9700\u8981\u5206\u5f00\u4f7f\u7528pip\u548cvirtualenv\uff0c\u5408\u5e76\u5230\u4e86\u4e00\u8d77 \u4e0d\u518d\u9700\u8981\u7ba1\u7406requirements.txt\uff0cpipenv install xxx\u5b89\u88c5\u5305\u65f6\u81ea\u52a8\u751f\u6210\u7248\u672c\u53f7\u3001Hash\u503c\u3001\u5305\u4f9d\u8d56\u5173\u7cfb\u5230Pipfile\u548cPipfile.lock\uff0c\u5e76\u4e14\u53ef\u4ee5\u624b\u5de5\u7f16\u8f91\u4ee5\u533a\u5206\u5f00\u53d1\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883 \u4f7f\u7528Hash\u6821\u9a8c\u5b89\u88c5\u7684\u5305\uff0c\u6709\u5229\u4e8e\u4e3b\u52a8\u66b4\u9732\u5b89\u5168\u95ee\u9898 \u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684\u4f9d\u8d56\u9879\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u964d\u4f4e\u8fc7\u65f6\u7ec4\u4ef6\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669 \u53ef\u4ee5\u56fe\u5f62\u5316\u663e\u793a\u5305\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff08pipenv graph\uff09 \u901a\u8fc7\u52a0\u8f7d.env\u6587\u4ef6\u7b80\u5316\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b \u4e8c\u3001\u5b89\u88c5pipenv \u9996\u5148\uff0c\u786e\u4fdd\u4f60\u5df2\u7ecf\u6b63\u786e\u5b89\u88c5python3\u548cpip3 [root@shiyanlou ~]# python3 -V Python 3.7.2 [root@shiyanlou ~]# pip3 -V pip 19.0.1 from /usr/local/python3/lib/python3.7/site-packages/pip (python 3.7) [root@shiyanlou ~]# \u7136\u540e\uff0cLinux\u4e0bpip3 install pipenv\uff0cMac\u4e0bbrew install pipenv [root@shiyanlou ~]# pip3 install pipenv Looking in indexes: http://mirrors.aliyun.com/pypi/simple/ Collecting pipenv Downloading http://mirrors.aliyun.com/pypi/packages/13/b4/3ffa55f77161cff9a5220f162670f7c5eb00df52e00939e203f601b0f579/pipenv-2018.11.26-py3-none-any.whl (5.2MB) 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5.2MB 4.0MB/s Requirement already satisfied: certifi in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (2018.11.29) Requirement already satisfied: setuptools =36.2.1 in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (40.6.2) Requirement already satisfied: pip =9.0.1 in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (18.1) Requirement already satisfied: virtualenv in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (16.2.0) Requirement already satisfied: virtualenv-clone =0.2.5 in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (0.4.0) Installing collected packages: pipenv Successfully installed pipenv-2018.11.26 [root@shiyanlou ~]# pipenv\u4f9d\u8d56psutil, virtualenv-clone, pew, certifi, urllib3, chardet, requests, mccabe, pyflakes, pycodestyle, flake8\u7b49\u7b2c\u4e09\u65b9\u6a21\u5757\uff0cpipenv\u6709\u5f88\u6f02\u4eae\u7684\u5f69\u8272\u7ec8\u7aef\u754c\u9762\u3002 \u4e09\u3001Pipfile\u548cPipfile.lock Pipfile, \u7b80\u660e\u5730\u663e\u793a\u9879\u76ee\u73af\u5883\u548c\u4f9d\u8d56\u5305 [[source]] name = \"pypi\" url = \" https://mirrors.aliyun.com/pypi/simple/ \" # \u6307\u5b9a\u56fd\u5185pip\u6e90\uff0c\u4e0d\u7136\u4f1a\u6162\u6b7b\u4eba\u7684 verify_ssl = true [dev-packages] # \u5f00\u53d1\u73af\u5883 [packages] # \u751f\u4ea7\u73af\u5883 requests = \" \" # *\u8868\u793a\u6700\u65b0\u7248\u672c django = \" \" [requires] python_version = \"3.7\" # python\u7248\u672c Pipfile.lock, \u8be6\u7ec6\u8bb0\u5f55\u73af\u5883\u4f9d\u8d56\uff0c\u5e76\u4e14\u5229\u7528\u4e86Hash\u7b97\u6cd5\u4fdd\u8bc1\u4e86\u5b83\u5b8c\u6574\u5bf9\u5e94\u5173\u7cfb { \"_meta\": { \"hash\": { \"sha256\": \"d737a1ef2f8b591f86cd0fa6a8cb48918f742d60df2a394ebc3d23aff4748999\" }, \"pipfile-spec\": 6, \"requires\": { \"python_version\": \"3.7\" }, \"sources\": [ { \"name\": \"pypi\", \"url\": \" https://pypi.org/simple \", \"verify_ssl\": true } ] }, \"default\": { \"certifi\": { \"hashes\": [ \"sha256:47f9c83ef4c0c621eaef743f133f09fa8a74a9b75f037e8624f83bd1b6626cb7\", \"sha256:993f830721089fef441cdfeb4b2c8c9df86f0c63239f06bd025a76a7daddb033\" ], \"version\": \"==2018.11.29\" }, \"chardet\": { \"hashes\": [ \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\", \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\" ], \"version\": \"==3.0.4\" }, \"django\": { \"hashes\": [ \"sha256:a32c22af23634e1d11425574dce756098e015a165be02e4690179889b207c7a8\", \"sha256:d6393918da830530a9516bbbcbf7f1214c3d733738779f06b0f649f49cc698c3\" ], \"index\": \"pypi\", \"version\": \"==2.1.5\" }, \"idna\": { \"hashes\": [ \"sha256:c357b3f628cf53ae2c4c05627ecc484553142ca23264e593d327bcde5e9c3407\", \"sha256:ea8b7f6188e6fa117537c3df7da9fc686d485087abf6ac197f9c46432f7e4a3c\" ], \"version\": \"==2.8\" }, \"pytz\": { \"hashes\": [ \"sha256:32b0891edff07e28efe91284ed9c31e123d84bea3fd98e1f72be2508f43ef8d9\", \"sha256:d5f05e487007e29e03409f9398d074e158d920d36eb82eaf66fb1136b0c5374c\" ], \"version\": \"==2018.9\" }, \"requests\": { \"hashes\": [ \"sha256:502a824f31acdacb3a35b6690b5fbf0bc41d63a24a45c4004352b0242707598e\", \"sha256:7bf2a778576d825600030a110f3c0e3e8edc51dfaafe1c146e39a2027784957b\" ], \"index\": \"pypi\", \"version\": \"==2.21.0\" }, \"urllib3\": { \"hashes\": [ \"sha256:61bf29cada3fc2fbefad4fdf059ea4bd1b4a86d2b6d15e1c7c0b582b9752fe39\", \"sha256:de9529817c93f27c8ccbfead6985011db27bd0ddfcdb2d86f3f663385c6a9c22\" ], \"version\": \"==1.24.1\" } }, \"develop\": {} } \u56db\u3001\u865a\u62df\u73af\u5883\u7ba1\u7406 4.1 \u521b\u5efa\u865a\u62df\u73af\u5883 \u8fdb\u5165\u9879\u76ee\u7684\u6587\u4ef6\u5939\uff0c\u76f4\u63a5pipenv install xxx\u5b89\u88c5\u4f60\u9700\u8981\u7684\u5305\uff0c\u5c31\u4f1a\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u751f\u6210Pipfile\u548cPipfile.lock [root@shiyanlou ~]# cd myproject/ [root@shiyanlou myproject]# pipenv install requests Creating a virtualenv for this project\u2026 Pipfile: /root/myproject/Pipfile Using /usr/local/python3/bin/python3.7 (3.7.2) to create virtualenv\u2026 \u2838 Creating virtual environment...Already using interpreter /usr/local/python3/bin/python3.7 Using base prefix '/usr/local/python3' New python executable in /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/python3.7 Also creating executable in /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/python Installing setuptools, pip, wheel... done. \u2714 Successfully created virtual environment! Virtualenv location: /root/.local/share/virtualenvs/myproject-zKJX12a5 Creating a Pipfile for this project\u2026 Installing requests\u2026 \u2714 Installation Succeeded Pipfile.lock not found, creating\u2026 Locking [dev-packages] dependencies\u2026 Locking [packages] dependencies\u2026 \u2714 Success! Updated Pipfile.lock (444a6d)! Installing dependencies from Pipfile.lock (444a6d)\u2026 \u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589 5/5 \u2014 00:00:04 To activate this project's virtualenv, run pipenv shell. Alternatively, run a command inside the virtualenv with pipenv run. [root@shiyanlou myproject]# ll -al total 12 drwxr-xr-x. 2 root root 39 Jan 31 14:09 . dr-xr-x---. 17 root root 4096 Jan 31 14:08 .. -rw-r--r--. 1 root root 153 Jan 31 14:09 Pipfile -rw-r--r--. 1 root root 1914 Jan 31 14:09 Pipfile.lock [root@shiyanlou myproject]# \u5982\u679c\u9700\u8981\u6307\u5b9apython\u7248\u672c\u7684\u8bdd $ pipenv --three # \u6cdb\u6307python\u7684\u7248\u672c $ pipenv --python 3.7 # \u6216\u8005\uff0c\u7279\u6307\u67d0\u4e2apython\u7248\u672c $ pipenv --python # \u6216\u8005\uff0c\u7279\u6307\u67d0\u4e2a\u4f4d\u7f6e\u7684python 4.2 \u8fdb\u5165/\u9000\u51fa/\u5220\u9664\u865a\u62df\u73af\u5883 [root@shiyanlou myproject]# pipenv shell # \u8fdb\u5165\u865a\u62df\u73af\u5883 Launching subshell in virtual environment\u2026 . /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/activate [root@shiyanlou myproject]# . /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/activate (myproject) [root@shiyanlou myproject]# exit # \u9000\u51fa\u865a\u62df\u73af\u5883 exit [root@shiyanlou myproject]# pipenv --rm # \u5220\u9664\u6574\u4e2a\u73af\u5883 Removing virtualenv (/root/.local/share/virtualenvs/myproject-zKJX12a5)\u2026 [root@shiyanlou myproject]# \u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\uff1a \u5e73\u65f6\u5b89\u88c5\u548c\u5378\u8f7d\u5305\u7684\u65f6\u5019\u4e0d\u9700\u8981\u5148\u8fdb\u5165\u6216\u9000\u51fa\u865a\u62df\u73af\u5883\uff0c\u76f4\u63a5\u5728\u9879\u76ee\u6587\u4ef6\u4e0bpipenv install/uninstall xxx\u5c31\u884c\u4e86 \u9000\u51fa\u865a\u62df\u73af\u5883\u4e0d\u8981deactivate\uff0c\u8bf7\u4f7f\u7528exit\uff0c\u5426\u5219\u4e0b\u6b21pipenv\u8fdb\u5165\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u5982\u4e0b\u9519 [root@shiyanlou myproject]# pipenv shell Shell for UNKNOWN_VIRTUAL_ENVIRONMENT already activated. No action taken to avoid nested environments. [root@shiyanlou myproject]# pipenv --rm\u5e76\u4e0d\u4f1a\u5220\u9664\u751f\u6210\u7684Pipfile\u548cPipfile.lock 4.3 \u7ba1\u7406\u5f00\u53d1\u73af\u5883 \u901a\u5e38\u6709\u4e00\u4e9bPython\u5305\u53ea\u5728\u4f60\u7684\u5f00\u53d1\u73af\u5883\u4e2d\u9700\u8981\uff0c\u800c\u4e0d\u662f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4f8b\u5982\u5355\u5143\u6d4b\u8bd5\u5305\u3002 Pipenv\u4f7f\u7528\u2013dev\u6807\u5fd7\u533a\u5206\u4e24\u4e2a\u73af\u5883\u3002\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u2013dev\u53c2\u6570\uff0c\u5e2e\u4f60\u5728\u540c\u4e00\u4e2a\u865a\u62df\u73af\u5883\u4e2d\u53c8\u533a\u5206\u51fa\u4e86\u5f00\u53d1\u548c\u975e\u5f00\u53d1\u73af\u5883\u3002 $ pipenv install --dev pytest \u5728\u865a\u62df\u73af\u5883\u4e2d\u8fd0\u884c\u547d\u4ee4\uff0c\u4f7f\u7528run\u53c2\u6570\uff0c\u63d0\u4f9b\u8981\u8fd0\u884c\u7684\u547d\u4ee4\uff1a $ pipenv run python manage.py runserver \u8fd9\u5c06\u4f7f\u7528\u5f53\u524d\u865a\u62df\u73af\u5883\u5173\u8054\u7684Python\u89e3\u91ca\u5668\uff0c\u6267\u884c\u547d\u4ee4\u3002\u6216\u8005\u7b80\u5355\u7684\u6267\u884c\u811a\u672c\uff1a $ pipenv run python your_script.py \u5982\u679c\u4f60\u4e0d\u60f3\u6bcf\u6b21\u8fd0\u884cPython\u65f6\u90fd\u8f93\u5165\u8fd9\u4e48\u591a\u5b57\u7b26\uff0c\u53ef\u4ee5\u5728shell\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u522b\u540d\uff0c\u4f8b\u5982\uff1a $ alias prp=\"pipenv run python\" \u51bb\u7ed3Pipfile\uff0c\u76f8\u5f53\u4e8e\u5c06\u9879\u76ee\u6240\u4f7f\u7528\u7684\u7b2c\u4e09\u65b9\u5e93\u5217\u8868\u8fdb\u884c\u6253\u5305\u8f93\u51fa\uff0c\u7c7b\u4f3c\u4e8evirtualenv\u4e2d\u751f\u6210requirements.txt\u6587\u4ef6\u3002\u901a\u8fc7\u66f4\u65b0Pipfile.lock\u6765\u51bb\u7ed3\u5e93\u540d\u79f0\u53ca\u5176\u7248\u672c\uff0c\u4ee5\u53ca\u5176\u4f9d\u8d56\u5173\u7cfb\u7684\u5217\u8868\u3002\u9700\u8981\u4f7f\u7528lock\u53c2\u6570\uff1a [root@shiyanlou myproject]# pipenv lock Locking [dev-packages] dependencies\u2026 Locking [packages] dependencies\u2026 \u2714 Success! Updated Pipfile.lock (748999)! [root@shiyanlou myproject]# \u5b9a\u4f4d\u9879\u76ee\u8def\u5f84\u3001\u865a\u62df\u73af\u5883\u3001Python\u89e3\u91ca\u5668\uff0c\u663e\u793a\u4f9d\u8d56\u5173\u7cfb\uff0c\u5378\u8f7d\u5305 [root@shiyanlou myproject]# pipenv --where # \u5b9a\u4f4d\u9879\u76ee\u8def\u5f84 /root/myproject [root@shiyanlou myproject]# pipenv --venv # \u5b9a\u4f4d\u865a\u62df\u73af\u5883 /root/.local/share/virtualenvs/myproject-zKJX12a5 [root@shiyanlou myproject]# pipenv --py # \u5b9a\u4f4dPython\u89e3\u91ca\u5668 /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/python [root@shiyanlou myproject]# pipenv graph # \u663e\u793a\u4f9d\u8d56\u5173\u7cfb atomicwrites==1.2.1 attrs==18.2.0 Django==2.1.5 - pytz [required: Any, installed: 2018.9] more-itertools==5.0.0 - six [required: =1.0.0, 2.0.0, installed: 1.12.0] py==1.7.0 requests==2.21.0 - certifi [required: =2017.4.17, installed: 2018.11.29] - chardet [required: =3.0.2, 3.1.0, installed: 3.0.4] - idna [required: =2.5, 2.9, installed: 2.8] - urllib3 [required: =1.21.1, 1.25, installed: 1.24.1] [root@shiyanlou myproject]# pipenv uninstall --all # \u5378\u8f7d\u6240\u6709\u5305 Un-installing all [dev-packages] and [packages]\u2026 Found 12 installed package(s), purging\u2026 Uninstalling Django-2.1.5: Successfully uninstalled Django-2.1.5 ...\u7565... Environment now purged and fresh! [root@shiyanlou myproject]# 4.4 \u6709\u4e2a\u5927\u5751\u7b49\u4f60\u8df3 pipenv\u6709\u4e2a\u7f3a\u70b9\uff0clock\u4e0d\u7a33\u5b9a\u800c\u4e14\u65f6\u95f4\u975e\u5e38\u957f\uff0c\u6240\u4ee5\u5b89\u88c5\u5305\u7684\u65f6\u5019\u8bb0\u5f97\u52a0\u4e0a--skip-lock\uff0c\u5728\u6700\u540e\u5f00\u53d1\u5b8c\u6210\u8981\u63d0\u4ea4\u5230\u4ed3\u5e93\u7684\u65f6\u5019\u518dpipenv lock\u3002\u5e0c\u671b\u5c06\u6765\u7684\u7248\u672c\u80fd\u591f\u4f18\u5316\u3002 [root@shiyanlou myproject]# pipenv install django --skip-lock Installing django\u2026 \u2714 Installation Succeeded Installing dependencies from Pipfile\u2026 \u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589 2/2 \u2014 00:00:02 [root@shiyanlou myproject]# \u4e94\u3001\u5e38\u7528\u547d\u4ee4\u6c47\u603b pipenv\u5177\u6709\u4e0b\u5217\u7684\u9009\u9879\uff1a $ pipenv Usage: pipenv [OPTIONS] COMMAND [ARGS]... Options: --where \u663e\u793a\u9879\u76ee\u6587\u4ef6\u6240\u5728\u8def\u5f84 --venv \u663e\u793a\u865a\u62df\u73af\u5883\u5b9e\u9645\u6587\u4ef6\u6240\u5728\u8def\u5f84 --py \u663e\u793a\u865a\u62df\u73af\u5883Python\u89e3\u91ca\u5668\u6240\u5728\u8def\u5f84 --envs \u663e\u793a\u865a\u62df\u73af\u5883\u7684\u9009\u9879\u53d8\u91cf --rm \u5220\u9664\u865a\u62df\u73af\u5883 --bare \u6700\u5c0f\u5316\u8f93\u51fa --completion \u5b8c\u6574\u8f93\u51fa --man \u663e\u793a\u5e2e\u52a9\u9875\u9762 --three / --two \u4f7f\u7528Python 3/2\u521b\u5efa\u865a\u62df\u73af\u5883\uff08\u6ce8\u610f\u672c\u673a\u5df2\u5b89\u88c5\u7684Python\u7248\u672c\uff09 --python TEXT \u6307\u5b9a\u67d0\u4e2aPython\u7248\u672c\u4f5c\u4e3a\u865a\u62df\u73af\u5883\u7684\u5b89\u88c5\u6e90 --site-packages \u9644\u5e26\u5b89\u88c5\u539fPython\u89e3\u91ca\u5668\u4e2d\u7684\u7b2c\u4e09\u65b9\u5e93 --jumbotron An easter egg, effectively. --version \u7248\u672c\u4fe1\u606f -h, --help \u5e2e\u52a9\u4fe1\u606f pipenv\u53ef\u4f7f\u7528\u7684\u547d\u4ee4\u53c2\u6570\uff1a Commands: check \u68c0\u67e5\u5b89\u5168\u6f0f\u6d1e graph \u663e\u793a\u5f53\u524d\u4f9d\u8d56\u5173\u7cfb\u56fe\u4fe1\u606f install \u5b89\u88c5\u865a\u62df\u73af\u5883\u6216\u8005\u7b2c\u4e09\u65b9\u5e93 lock \u9501\u5b9a\u5e76\u751f\u6210Pipfile.lock\u6587\u4ef6 open \u5728\u7f16\u8f91\u5668\u4e2d\u67e5\u770b\u4e00\u4e2a\u5e93 run \u5728\u865a\u62df\u73af\u5883\u4e2d\u8fd0\u884c\u547d\u4ee4 shell \u8fdb\u5165\u865a\u62df\u73af\u5883 uninstall \u5378\u8f7d\u4e00\u4e2a\u5e93 update \u5378\u8f7d\u5f53\u524d\u6240\u6709\u7684\u5305\uff0c\u5e76\u5b89\u88c5\u5b83\u4eec\u7684\u6700\u65b0\u7248\u672c \u516d\u3001\u5728\u7ebf\u7ec3\u4e60 Pipenv playground\u662f\u5b98\u65b9\u7684\u5728\u7ebf\u7ec3\u4e60\u7f51\u7ad9\uff1a https://rootnroll.com/d/pipenv/ \uff0c\u975e\u5e38\u68d2\uff01 \u4f7f\u7528Cookiecutter\u5b89\u88c5Django\u5f00\u53d1\u73af\u5883 2.\u81ea\u5b9a\u4e49\u7528\u6237\u6a21\u578b 3.\u4f18\u5316\u4f7f\u7528\u901a\u7528\u89c6\u56fe\u7c7b 4.\u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u4fdd\u5b58\u654f\u611f\u4fe1\u606f 5.\u4e3a\u4e0d\u540c\u73af\u5883\u5206\u522b\u914d\u7f6esettings.py\u6587\u4ef6 6.\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4e3a\u89c6\u56fe\u548c\u6a21\u578b\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b","title":"\u73af\u5883"},{"location":"python/base/pythonEnv/#python","text":"","title":"Python \u73af\u5883\u642d\u5efa"},{"location":"python/base/pythonEnv/#pipenv","text":"\u5feb\u901f\u5165\u95e8Python \u6700\u65b0\u6700\u6d41\u884c\u7684pipenv\u865a\u62df\u73af\u5883 Python Dev Workflow for Pipenv Virtual Environments virtualenv-burrito Pipenv\u7ba1\u7406Python\u865a\u62df\u73af\u5883 \u4e00\u3001pipenv\u4ecb\u7ecd \u7b80\u5355\u8bf4\uff0cpipenv\u5c31\u662f\u628apip\u548cvirtualenv\u5305\u88c5\u8d77\u6765\u7684\u4e00\u4e2a\u4fbf\u643a\u5de5\u5177\uff0c\u5b83\u4f1a\u81ea\u52a8\u4e3a\u60a8\u7684\u9879\u76ee\u521b\u5efa\u548c\u7ba1\u7406virtualenv\uff0c\u4ee5\u53ca\u5728\u5b89\u88c5/\u5378\u8f7d\u8f6f\u4ef6\u5305\u65f6\u6dfb\u52a0/\u5220\u9664Pipfile\u4e2d\u7684\u8f6f\u4ef6\u5305\u3002 \u4f7f\u7528pipenv\u7ba1\u7406python\u73af\u5883\u865a\u62df\u73af\u5883\u7684\u4f18\u52bf\uff1a \u4e0d\u518d\u9700\u8981\u5206\u5f00\u4f7f\u7528pip\u548cvirtualenv\uff0c\u5408\u5e76\u5230\u4e86\u4e00\u8d77 \u4e0d\u518d\u9700\u8981\u7ba1\u7406requirements.txt\uff0cpipenv install xxx\u5b89\u88c5\u5305\u65f6\u81ea\u52a8\u751f\u6210\u7248\u672c\u53f7\u3001Hash\u503c\u3001\u5305\u4f9d\u8d56\u5173\u7cfb\u5230Pipfile\u548cPipfile.lock\uff0c\u5e76\u4e14\u53ef\u4ee5\u624b\u5de5\u7f16\u8f91\u4ee5\u533a\u5206\u5f00\u53d1\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883 \u4f7f\u7528Hash\u6821\u9a8c\u5b89\u88c5\u7684\u5305\uff0c\u6709\u5229\u4e8e\u4e3b\u52a8\u66b4\u9732\u5b89\u5168\u95ee\u9898 \u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684\u4f9d\u8d56\u9879\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u964d\u4f4e\u8fc7\u65f6\u7ec4\u4ef6\u5e26\u6765\u7684\u5b89\u5168\u98ce\u9669 \u53ef\u4ee5\u56fe\u5f62\u5316\u663e\u793a\u5305\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff08pipenv graph\uff09 \u901a\u8fc7\u52a0\u8f7d.env\u6587\u4ef6\u7b80\u5316\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b \u4e8c\u3001\u5b89\u88c5pipenv \u9996\u5148\uff0c\u786e\u4fdd\u4f60\u5df2\u7ecf\u6b63\u786e\u5b89\u88c5python3\u548cpip3 [root@shiyanlou ~]# python3 -V Python 3.7.2 [root@shiyanlou ~]# pip3 -V pip 19.0.1 from /usr/local/python3/lib/python3.7/site-packages/pip (python 3.7) [root@shiyanlou ~]# \u7136\u540e\uff0cLinux\u4e0bpip3 install pipenv\uff0cMac\u4e0bbrew install pipenv [root@shiyanlou ~]# pip3 install pipenv Looking in indexes: http://mirrors.aliyun.com/pypi/simple/ Collecting pipenv Downloading http://mirrors.aliyun.com/pypi/packages/13/b4/3ffa55f77161cff9a5220f162670f7c5eb00df52e00939e203f601b0f579/pipenv-2018.11.26-py3-none-any.whl (5.2MB) 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5.2MB 4.0MB/s Requirement already satisfied: certifi in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (2018.11.29) Requirement already satisfied: setuptools =36.2.1 in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (40.6.2) Requirement already satisfied: pip =9.0.1 in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (18.1) Requirement already satisfied: virtualenv in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (16.2.0) Requirement already satisfied: virtualenv-clone =0.2.5 in /usr/local/python3/lib/python3.7/site-packages (from pipenv) (0.4.0) Installing collected packages: pipenv Successfully installed pipenv-2018.11.26 [root@shiyanlou ~]# pipenv\u4f9d\u8d56psutil, virtualenv-clone, pew, certifi, urllib3, chardet, requests, mccabe, pyflakes, pycodestyle, flake8\u7b49\u7b2c\u4e09\u65b9\u6a21\u5757\uff0cpipenv\u6709\u5f88\u6f02\u4eae\u7684\u5f69\u8272\u7ec8\u7aef\u754c\u9762\u3002 \u4e09\u3001Pipfile\u548cPipfile.lock Pipfile, \u7b80\u660e\u5730\u663e\u793a\u9879\u76ee\u73af\u5883\u548c\u4f9d\u8d56\u5305 [[source]] name = \"pypi\" url = \" https://mirrors.aliyun.com/pypi/simple/ \" # \u6307\u5b9a\u56fd\u5185pip\u6e90\uff0c\u4e0d\u7136\u4f1a\u6162\u6b7b\u4eba\u7684 verify_ssl = true [dev-packages] # \u5f00\u53d1\u73af\u5883 [packages] # \u751f\u4ea7\u73af\u5883 requests = \" \" # *\u8868\u793a\u6700\u65b0\u7248\u672c django = \" \" [requires] python_version = \"3.7\" # python\u7248\u672c Pipfile.lock, \u8be6\u7ec6\u8bb0\u5f55\u73af\u5883\u4f9d\u8d56\uff0c\u5e76\u4e14\u5229\u7528\u4e86Hash\u7b97\u6cd5\u4fdd\u8bc1\u4e86\u5b83\u5b8c\u6574\u5bf9\u5e94\u5173\u7cfb { \"_meta\": { \"hash\": { \"sha256\": \"d737a1ef2f8b591f86cd0fa6a8cb48918f742d60df2a394ebc3d23aff4748999\" }, \"pipfile-spec\": 6, \"requires\": { \"python_version\": \"3.7\" }, \"sources\": [ { \"name\": \"pypi\", \"url\": \" https://pypi.org/simple \", \"verify_ssl\": true } ] }, \"default\": { \"certifi\": { \"hashes\": [ \"sha256:47f9c83ef4c0c621eaef743f133f09fa8a74a9b75f037e8624f83bd1b6626cb7\", \"sha256:993f830721089fef441cdfeb4b2c8c9df86f0c63239f06bd025a76a7daddb033\" ], \"version\": \"==2018.11.29\" }, \"chardet\": { \"hashes\": [ \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\", \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\" ], \"version\": \"==3.0.4\" }, \"django\": { \"hashes\": [ \"sha256:a32c22af23634e1d11425574dce756098e015a165be02e4690179889b207c7a8\", \"sha256:d6393918da830530a9516bbbcbf7f1214c3d733738779f06b0f649f49cc698c3\" ], \"index\": \"pypi\", \"version\": \"==2.1.5\" }, \"idna\": { \"hashes\": [ \"sha256:c357b3f628cf53ae2c4c05627ecc484553142ca23264e593d327bcde5e9c3407\", \"sha256:ea8b7f6188e6fa117537c3df7da9fc686d485087abf6ac197f9c46432f7e4a3c\" ], \"version\": \"==2.8\" }, \"pytz\": { \"hashes\": [ \"sha256:32b0891edff07e28efe91284ed9c31e123d84bea3fd98e1f72be2508f43ef8d9\", \"sha256:d5f05e487007e29e03409f9398d074e158d920d36eb82eaf66fb1136b0c5374c\" ], \"version\": \"==2018.9\" }, \"requests\": { \"hashes\": [ \"sha256:502a824f31acdacb3a35b6690b5fbf0bc41d63a24a45c4004352b0242707598e\", \"sha256:7bf2a778576d825600030a110f3c0e3e8edc51dfaafe1c146e39a2027784957b\" ], \"index\": \"pypi\", \"version\": \"==2.21.0\" }, \"urllib3\": { \"hashes\": [ \"sha256:61bf29cada3fc2fbefad4fdf059ea4bd1b4a86d2b6d15e1c7c0b582b9752fe39\", \"sha256:de9529817c93f27c8ccbfead6985011db27bd0ddfcdb2d86f3f663385c6a9c22\" ], \"version\": \"==1.24.1\" } }, \"develop\": {} } \u56db\u3001\u865a\u62df\u73af\u5883\u7ba1\u7406 4.1 \u521b\u5efa\u865a\u62df\u73af\u5883 \u8fdb\u5165\u9879\u76ee\u7684\u6587\u4ef6\u5939\uff0c\u76f4\u63a5pipenv install xxx\u5b89\u88c5\u4f60\u9700\u8981\u7684\u5305\uff0c\u5c31\u4f1a\u5728\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u751f\u6210Pipfile\u548cPipfile.lock [root@shiyanlou ~]# cd myproject/ [root@shiyanlou myproject]# pipenv install requests Creating a virtualenv for this project\u2026 Pipfile: /root/myproject/Pipfile Using /usr/local/python3/bin/python3.7 (3.7.2) to create virtualenv\u2026 \u2838 Creating virtual environment...Already using interpreter /usr/local/python3/bin/python3.7 Using base prefix '/usr/local/python3' New python executable in /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/python3.7 Also creating executable in /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/python Installing setuptools, pip, wheel... done. \u2714 Successfully created virtual environment! Virtualenv location: /root/.local/share/virtualenvs/myproject-zKJX12a5 Creating a Pipfile for this project\u2026 Installing requests\u2026 \u2714 Installation Succeeded Pipfile.lock not found, creating\u2026 Locking [dev-packages] dependencies\u2026 Locking [packages] dependencies\u2026 \u2714 Success! Updated Pipfile.lock (444a6d)! Installing dependencies from Pipfile.lock (444a6d)\u2026 \u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589 5/5 \u2014 00:00:04 To activate this project's virtualenv, run pipenv shell. Alternatively, run a command inside the virtualenv with pipenv run. [root@shiyanlou myproject]# ll -al total 12 drwxr-xr-x. 2 root root 39 Jan 31 14:09 . dr-xr-x---. 17 root root 4096 Jan 31 14:08 .. -rw-r--r--. 1 root root 153 Jan 31 14:09 Pipfile -rw-r--r--. 1 root root 1914 Jan 31 14:09 Pipfile.lock [root@shiyanlou myproject]# \u5982\u679c\u9700\u8981\u6307\u5b9apython\u7248\u672c\u7684\u8bdd $ pipenv --three # \u6cdb\u6307python\u7684\u7248\u672c $ pipenv --python 3.7 # \u6216\u8005\uff0c\u7279\u6307\u67d0\u4e2apython\u7248\u672c $ pipenv --python # \u6216\u8005\uff0c\u7279\u6307\u67d0\u4e2a\u4f4d\u7f6e\u7684python 4.2 \u8fdb\u5165/\u9000\u51fa/\u5220\u9664\u865a\u62df\u73af\u5883 [root@shiyanlou myproject]# pipenv shell # \u8fdb\u5165\u865a\u62df\u73af\u5883 Launching subshell in virtual environment\u2026 . /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/activate [root@shiyanlou myproject]# . /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/activate (myproject) [root@shiyanlou myproject]# exit # \u9000\u51fa\u865a\u62df\u73af\u5883 exit [root@shiyanlou myproject]# pipenv --rm # \u5220\u9664\u6574\u4e2a\u73af\u5883 Removing virtualenv (/root/.local/share/virtualenvs/myproject-zKJX12a5)\u2026 [root@shiyanlou myproject]# \u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\uff1a \u5e73\u65f6\u5b89\u88c5\u548c\u5378\u8f7d\u5305\u7684\u65f6\u5019\u4e0d\u9700\u8981\u5148\u8fdb\u5165\u6216\u9000\u51fa\u865a\u62df\u73af\u5883\uff0c\u76f4\u63a5\u5728\u9879\u76ee\u6587\u4ef6\u4e0bpipenv install/uninstall xxx\u5c31\u884c\u4e86 \u9000\u51fa\u865a\u62df\u73af\u5883\u4e0d\u8981deactivate\uff0c\u8bf7\u4f7f\u7528exit\uff0c\u5426\u5219\u4e0b\u6b21pipenv\u8fdb\u5165\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u5982\u4e0b\u9519 [root@shiyanlou myproject]# pipenv shell Shell for UNKNOWN_VIRTUAL_ENVIRONMENT already activated. No action taken to avoid nested environments. [root@shiyanlou myproject]# pipenv --rm\u5e76\u4e0d\u4f1a\u5220\u9664\u751f\u6210\u7684Pipfile\u548cPipfile.lock 4.3 \u7ba1\u7406\u5f00\u53d1\u73af\u5883 \u901a\u5e38\u6709\u4e00\u4e9bPython\u5305\u53ea\u5728\u4f60\u7684\u5f00\u53d1\u73af\u5883\u4e2d\u9700\u8981\uff0c\u800c\u4e0d\u662f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4f8b\u5982\u5355\u5143\u6d4b\u8bd5\u5305\u3002 Pipenv\u4f7f\u7528\u2013dev\u6807\u5fd7\u533a\u5206\u4e24\u4e2a\u73af\u5883\u3002\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u2013dev\u53c2\u6570\uff0c\u5e2e\u4f60\u5728\u540c\u4e00\u4e2a\u865a\u62df\u73af\u5883\u4e2d\u53c8\u533a\u5206\u51fa\u4e86\u5f00\u53d1\u548c\u975e\u5f00\u53d1\u73af\u5883\u3002 $ pipenv install --dev pytest \u5728\u865a\u62df\u73af\u5883\u4e2d\u8fd0\u884c\u547d\u4ee4\uff0c\u4f7f\u7528run\u53c2\u6570\uff0c\u63d0\u4f9b\u8981\u8fd0\u884c\u7684\u547d\u4ee4\uff1a $ pipenv run python manage.py runserver \u8fd9\u5c06\u4f7f\u7528\u5f53\u524d\u865a\u62df\u73af\u5883\u5173\u8054\u7684Python\u89e3\u91ca\u5668\uff0c\u6267\u884c\u547d\u4ee4\u3002\u6216\u8005\u7b80\u5355\u7684\u6267\u884c\u811a\u672c\uff1a $ pipenv run python your_script.py \u5982\u679c\u4f60\u4e0d\u60f3\u6bcf\u6b21\u8fd0\u884cPython\u65f6\u90fd\u8f93\u5165\u8fd9\u4e48\u591a\u5b57\u7b26\uff0c\u53ef\u4ee5\u5728shell\u4e2d\u8bbe\u7f6e\u4e00\u4e2a\u522b\u540d\uff0c\u4f8b\u5982\uff1a $ alias prp=\"pipenv run python\" \u51bb\u7ed3Pipfile\uff0c\u76f8\u5f53\u4e8e\u5c06\u9879\u76ee\u6240\u4f7f\u7528\u7684\u7b2c\u4e09\u65b9\u5e93\u5217\u8868\u8fdb\u884c\u6253\u5305\u8f93\u51fa\uff0c\u7c7b\u4f3c\u4e8evirtualenv\u4e2d\u751f\u6210requirements.txt\u6587\u4ef6\u3002\u901a\u8fc7\u66f4\u65b0Pipfile.lock\u6765\u51bb\u7ed3\u5e93\u540d\u79f0\u53ca\u5176\u7248\u672c\uff0c\u4ee5\u53ca\u5176\u4f9d\u8d56\u5173\u7cfb\u7684\u5217\u8868\u3002\u9700\u8981\u4f7f\u7528lock\u53c2\u6570\uff1a [root@shiyanlou myproject]# pipenv lock Locking [dev-packages] dependencies\u2026 Locking [packages] dependencies\u2026 \u2714 Success! Updated Pipfile.lock (748999)! [root@shiyanlou myproject]# \u5b9a\u4f4d\u9879\u76ee\u8def\u5f84\u3001\u865a\u62df\u73af\u5883\u3001Python\u89e3\u91ca\u5668\uff0c\u663e\u793a\u4f9d\u8d56\u5173\u7cfb\uff0c\u5378\u8f7d\u5305 [root@shiyanlou myproject]# pipenv --where # \u5b9a\u4f4d\u9879\u76ee\u8def\u5f84 /root/myproject [root@shiyanlou myproject]# pipenv --venv # \u5b9a\u4f4d\u865a\u62df\u73af\u5883 /root/.local/share/virtualenvs/myproject-zKJX12a5 [root@shiyanlou myproject]# pipenv --py # \u5b9a\u4f4dPython\u89e3\u91ca\u5668 /root/.local/share/virtualenvs/myproject-zKJX12a5/bin/python [root@shiyanlou myproject]# pipenv graph # \u663e\u793a\u4f9d\u8d56\u5173\u7cfb atomicwrites==1.2.1 attrs==18.2.0 Django==2.1.5 - pytz [required: Any, installed: 2018.9] more-itertools==5.0.0 - six [required: =1.0.0, 2.0.0, installed: 1.12.0] py==1.7.0 requests==2.21.0 - certifi [required: =2017.4.17, installed: 2018.11.29] - chardet [required: =3.0.2, 3.1.0, installed: 3.0.4] - idna [required: =2.5, 2.9, installed: 2.8] - urllib3 [required: =1.21.1, 1.25, installed: 1.24.1] [root@shiyanlou myproject]# pipenv uninstall --all # \u5378\u8f7d\u6240\u6709\u5305 Un-installing all [dev-packages] and [packages]\u2026 Found 12 installed package(s), purging\u2026 Uninstalling Django-2.1.5: Successfully uninstalled Django-2.1.5 ...\u7565... Environment now purged and fresh! [root@shiyanlou myproject]# 4.4 \u6709\u4e2a\u5927\u5751\u7b49\u4f60\u8df3 pipenv\u6709\u4e2a\u7f3a\u70b9\uff0clock\u4e0d\u7a33\u5b9a\u800c\u4e14\u65f6\u95f4\u975e\u5e38\u957f\uff0c\u6240\u4ee5\u5b89\u88c5\u5305\u7684\u65f6\u5019\u8bb0\u5f97\u52a0\u4e0a--skip-lock\uff0c\u5728\u6700\u540e\u5f00\u53d1\u5b8c\u6210\u8981\u63d0\u4ea4\u5230\u4ed3\u5e93\u7684\u65f6\u5019\u518dpipenv lock\u3002\u5e0c\u671b\u5c06\u6765\u7684\u7248\u672c\u80fd\u591f\u4f18\u5316\u3002 [root@shiyanlou myproject]# pipenv install django --skip-lock Installing django\u2026 \u2714 Installation Succeeded Installing dependencies from Pipfile\u2026 \u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589 2/2 \u2014 00:00:02 [root@shiyanlou myproject]# \u4e94\u3001\u5e38\u7528\u547d\u4ee4\u6c47\u603b pipenv\u5177\u6709\u4e0b\u5217\u7684\u9009\u9879\uff1a $ pipenv Usage: pipenv [OPTIONS] COMMAND [ARGS]... Options: --where \u663e\u793a\u9879\u76ee\u6587\u4ef6\u6240\u5728\u8def\u5f84 --venv \u663e\u793a\u865a\u62df\u73af\u5883\u5b9e\u9645\u6587\u4ef6\u6240\u5728\u8def\u5f84 --py \u663e\u793a\u865a\u62df\u73af\u5883Python\u89e3\u91ca\u5668\u6240\u5728\u8def\u5f84 --envs \u663e\u793a\u865a\u62df\u73af\u5883\u7684\u9009\u9879\u53d8\u91cf --rm \u5220\u9664\u865a\u62df\u73af\u5883 --bare \u6700\u5c0f\u5316\u8f93\u51fa --completion \u5b8c\u6574\u8f93\u51fa --man \u663e\u793a\u5e2e\u52a9\u9875\u9762 --three / --two \u4f7f\u7528Python 3/2\u521b\u5efa\u865a\u62df\u73af\u5883\uff08\u6ce8\u610f\u672c\u673a\u5df2\u5b89\u88c5\u7684Python\u7248\u672c\uff09 --python TEXT \u6307\u5b9a\u67d0\u4e2aPython\u7248\u672c\u4f5c\u4e3a\u865a\u62df\u73af\u5883\u7684\u5b89\u88c5\u6e90 --site-packages \u9644\u5e26\u5b89\u88c5\u539fPython\u89e3\u91ca\u5668\u4e2d\u7684\u7b2c\u4e09\u65b9\u5e93 --jumbotron An easter egg, effectively. --version \u7248\u672c\u4fe1\u606f -h, --help \u5e2e\u52a9\u4fe1\u606f pipenv\u53ef\u4f7f\u7528\u7684\u547d\u4ee4\u53c2\u6570\uff1a Commands: check \u68c0\u67e5\u5b89\u5168\u6f0f\u6d1e graph \u663e\u793a\u5f53\u524d\u4f9d\u8d56\u5173\u7cfb\u56fe\u4fe1\u606f install \u5b89\u88c5\u865a\u62df\u73af\u5883\u6216\u8005\u7b2c\u4e09\u65b9\u5e93 lock \u9501\u5b9a\u5e76\u751f\u6210Pipfile.lock\u6587\u4ef6 open \u5728\u7f16\u8f91\u5668\u4e2d\u67e5\u770b\u4e00\u4e2a\u5e93 run \u5728\u865a\u62df\u73af\u5883\u4e2d\u8fd0\u884c\u547d\u4ee4 shell \u8fdb\u5165\u865a\u62df\u73af\u5883 uninstall \u5378\u8f7d\u4e00\u4e2a\u5e93 update \u5378\u8f7d\u5f53\u524d\u6240\u6709\u7684\u5305\uff0c\u5e76\u5b89\u88c5\u5b83\u4eec\u7684\u6700\u65b0\u7248\u672c \u516d\u3001\u5728\u7ebf\u7ec3\u4e60 Pipenv playground\u662f\u5b98\u65b9\u7684\u5728\u7ebf\u7ec3\u4e60\u7f51\u7ad9\uff1a https://rootnroll.com/d/pipenv/ \uff0c\u975e\u5e38\u68d2\uff01","title":"pipenv \u5b89\u88c5\u4f7f\u7528"},{"location":"python/base/pythonEnv/#cookiecutterdjango","text":"2.\u81ea\u5b9a\u4e49\u7528\u6237\u6a21\u578b 3.\u4f18\u5316\u4f7f\u7528\u901a\u7528\u89c6\u56fe\u7c7b 4.\u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u4fdd\u5b58\u654f\u611f\u4fe1\u606f 5.\u4e3a\u4e0d\u540c\u73af\u5883\u5206\u522b\u914d\u7f6esettings.py\u6587\u4ef6 6.\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4e3a\u89c6\u56fe\u548c\u6a21\u578b\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b","title":"\u4f7f\u7528Cookiecutter\u5b89\u88c5Django\u5f00\u53d1\u73af\u5883"},{"location":"python/base/pythoninspect/","text":"Python\u53cd\u5c04\u673a\u5236 \u6982\u8ff0 \u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d,\u5e38\u5e38\u4f1a\u9047\u5230\u8fd9\u6837\u7684\u9700\u6c42:\u5728\u6267\u884c\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5,\u6216\u8005\u5728\u8c03\u7528\u5bf9\u8c61\u7684\u67d0\u4e2a\u53d8\u91cf,\u4f46\u662f\u7531\u4e8e\u4e00\u4e9b\u539f\u56e0,\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u6216\u8005\u5e76\u4e0d\u77e5\u9053\u8be5\u65b9\u6cd5\u6216\u8005\u53d8\u91cf\u662f\u5426\u5b58\u5728,\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5\u6216\u8005\u673a\u5236\u6765\u8bbf\u95ee\u6216\u64cd\u4f5c\u8be5\u672a\u77e5\u7684\u65b9\u6cd5\u6216\u53d8\u91cf,\u8fd9\u79cd\u673a\u5236\u5c31\u88ab\u79f0\u4e4b\u4e3a\u53cd\u5c04. \u53cd\u5c04\u673a\u5236\uff1a\u53cd\u5c04\u5c31\u662f\u901a\u8fc7\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f,\u5bfc\u5165\u6a21\u5757.\u901a\u8fc7\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f,\u53bb\u6a21\u5757\u4e2d\u5bfb\u627e\u6307\u5b9a\u51fd\u6570,\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c,\u4e5f\u5c31\u662f\u5229\u7528\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u53bb\u5bf9\u8c61(\u6a21\u5757)\u4e2d\u64cd\u4f5c\u6210\u5458,\u4e00\u79cd\u57fa\u4e8e\u5b57\u7b26\u4e32\u7684\u4e8b\u4ef6\u9a71\u52a8,\u8fd9\u79cd\u673a\u5236\u5c31\u53eb\u505a\u53cd\u5c04\u673a\u5236. Python \u4e2d\u7684\u53cd\u5c04\u529f\u80fd\u662f\u7531\u4ee5\u4e0b\u56db\u4e2a\u5185\u7f6e\u51fd\u6570\u63d0\u4f9b\uff1ahasattr\u3001getattr\u3001setattr\u3001delattr,\u8fd9\u56db\u4e2a\u51fd\u6570\u5206\u522b\u7528\u4e8e\u5728\u5bf9\u8c61\u5185\u90e8\u6267\u884c\uff1a\u68c0\u67e5\u662f\u5426\u542b\u6709\u67d0\u6210\u5458\u3001\u83b7\u53d6\u6210\u5458\u3001\u8bbe\u7f6e\u6210\u5458\u3001\u5220\u9664\u6210\u5458\u3001\u5bfc\u5165\u6a21\u5757\u4ee5\u5b57\u7b26\u4e32\u65b9\u5f0f\u5bfc\u5165,\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5177\u4f53\u4ecb\u7ecd\u5b83\u4eec\u7684\u5e94\u7528\u573a\u666f. hasattr: \u68c0\u67e5\u6307\u5b9a\u7c7b\u4e2d\u662f\u5426\u6709\u6307\u5b9a\u6210\u5458,\u4e5f\u5c31\u662f\u68c0\u67e5\u662f\u5426\u542b\u6709\u6307\u5b9a\u6210\u5458\u51fd\u6570. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self): print( %s \u5728\u5403\u4e1c\u897f... %self.name) d = dog( dogging ) choice = input( \u8f93\u5165\u6570\u636e: ).strip() # (d=\u7c7b\u7684\u5b9e\u4f8b\u540d\u79f0) (choice=\u6570\u636e\u4fdd\u5b58\u4f4d\u7f6e) print(hasattr(d,choice)) #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:eat True getattr: \u83b7\u53d6\u6307\u5b9a\u7c7b\u4e2d\u662f\u5426\u6709\u6307\u5b9a\u7684\u6210\u5458,\u7ed3\u679c\u6253\u5370\u51fa1\u4e2a\u5b57\u7b26\u4e32,\u6620\u5c04\u51fa\u51fd\u6570\u6240\u5728\u5185\u5b58\u5730\u5740. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self): print( %s \u5728\u5403\u4e1c\u897f... ,self.names) d= dog( dogging ) choice = input( \u8f93\u5165\u6570\u636e: ).strip() # (d=\u7c7b\u7684\u5b9e\u4f8b\u540d\u79f0) (choice=\u6570\u636e\u4fdd\u5b58\u4f4d\u7f6e) print(getattr(d,choice)) # \u540c\u6837\u7684,\u5728getattr\u540e\u9762\u52a0\u4e0a\u62ec\u53f7,\u5219\u53ef\u8c03\u7528\u6307\u5b9a\u65b9\u6cd5. getattr(d,choice)() #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:eat lt;bound method dog.eat of lt;__main__.dog object at 0x000001D71FD47128 gt; gt; dogging \u5728\u5403\u4e1c\u897f.. getattr: getattr\u4e00\u822c\u7684\u901a\u7528\u5199\u6cd5,\u6620\u5c04\u51fa\u51fd\u6570\u6240\u5728\u5185\u5b58\u5730\u5740\u540e,\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self,food): print( %s \u5728\u5403\u4e1c\u897f... %self.name,food) d= dog( dogging ) choice=input( \u8f93\u5165\u6570\u636e: ).strip() func=getattr(d,choice) func( \u8c03\u7528\u4f20\u9012\u53c2\u6570.. ) #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:eat dogging \u5728\u5403\u4e1c\u897f... \u8c03\u7528\u4f20\u9012\u53c2\u6570.. setattr: \u52a8\u6001\u88c5\u914d\u51fd\u6570,\u5728\u5916\u90e8\u521b\u5efa\u51fd\u6570,\u7136\u540e\u5c06\u5916\u90e8\u51fd\u6570,\u52a8\u6001\u7684\u88c5\u914d\u5230\u6307\u5b9a\u7c7b\u7684\u5185\u90e8. import os import sys def bulk(self): #\u5b9a\u4e49\u4e00\u4e2a\u5916\u90e8\u51fd\u6570. print( %s \u5728\u5927\u53eb... %self.name) class dog(object): def __init__(self,name): self.name=name def eat(self,food): print( %s \u5728\u5403\u4e1c\u897f... %self.name,food) d= dog( dogging ) choice=input( \u8f93\u5165\u6570\u636e: ).strip() #\u4f20\u9012\u5b57\u7b26\u4e32 setattr(d,choice,bulk) #\u5c06bulk()\u5916\u90e8\u65b9\u6cd5,\u52a8\u6001\u6dfb\u52a0\u5230dog\u7c7b\u4e2d. d.bulk(d) #\u8c03\u7528bulk()\u65b9\u6cd5,\u8fd9\u91cc\u8981\u5c06d\u81ea\u5df1\u4f20\u9012\u8fdb\u53bb. #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:bulk #\u8c03\u7528\u6210\u529f,\u8bf4\u660e\u88c5\u914d\u6210\u529f\u5566. dogging \u5728\u5927\u53eb... setattr: \u52a8\u6001\u88c5\u914d\u5c5e\u6027,\u5728\u5916\u90e8\u52a8\u6001\u88c5\u914d\u5c5e\u6027,\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3a22. import os import sys def bulk(self): print( %s \u5728\u5927\u53eb... %self.name) class dog(object): def __init__(self,name): self.name=name def eat(self,food): print( %s \u5728\u5403\u4e1c\u897f... %self.name,food) d= dog( dogging ) choice=input( \u8f93\u5165\u88c5\u914d\u53d8\u91cf: ).strip() #\u8f93\u5165\u88c5\u914d\u53d8\u91cf\u540d setattr(d,choice,22) #\u8bbe\u7f6e\u521d\u59cb\u503c\u4e3a22 print(getattr(d,choice)) #\u6253\u5370\u88c5\u914d\u7684\u53d8\u91cf\u503c #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u88c5\u914d\u53d8\u91cf:temp 22 delattr: \u52a8\u6001\u5220\u9664\u51fd\u6570,\u4ee5\u4e0b\u6f14\u793a\u52a8\u6001\u7684\u5220\u9664dog\u7c7b\u4e2d\u7684,eat\u8fd9\u4e2a\u51fd\u6570,\u540e\u671f\u518d\u6b21\u8c03\u7528\u4f1a\u53d1\u73b0\u4e0d\u5b58\u5728\u4e86. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self): print( %s \u5728\u5403\u4e1c\u897f... %self.name) d= dog( dogging ) choice=input( \u8f93\u5165\u5185\u5bb9: ).strip() #\u8f93\u5165\u8981\u5220\u9664\u7684\u65b9\u6cd5\u540d delattr(d,choice,eat) #\u901a\u8fc7\u6b64\u65b9\u6cd5,\u5220\u9664eat\u51fd\u6570 d.eat() #\u518d\u6b21\u8c03\u7528\u4f1a\u9519\u8bef,\u5df2\u7ecf\u52a8\u6001\u5220\u9664\u4e86 #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u5185\u5bb9:eat Traceback (most recent call last): File test.py , line 15, in lt;module gt; delattr(d,choice,eat) NameError: name eat is not defined python\u57fa\u7840-\u5bf9\u8c61_\u7c7b\u53cd\u5c04\u3001\u6a21\u5757\u53cd\u5c04 python\u57fa\u7840-\u5bf9\u8c61_\u7c7b\u53cd\u5c04\u3001\u6a21\u5757\u53cd\u5c04 Python \u5f02\u5e38\u5904\u7406\u4e0e\u53cd\u5c04\u673a\u5236","title":"Python\u53cd\u5c04"},{"location":"python/base/pythoninspect/#python","text":"","title":"Python\u53cd\u5c04\u673a\u5236"},{"location":"python/base/pythoninspect/#_1","text":"\u5728\u7a0b\u5e8f\u5f00\u53d1\u4e2d,\u5e38\u5e38\u4f1a\u9047\u5230\u8fd9\u6837\u7684\u9700\u6c42:\u5728\u6267\u884c\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5,\u6216\u8005\u5728\u8c03\u7528\u5bf9\u8c61\u7684\u67d0\u4e2a\u53d8\u91cf,\u4f46\u662f\u7531\u4e8e\u4e00\u4e9b\u539f\u56e0,\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u6216\u8005\u5e76\u4e0d\u77e5\u9053\u8be5\u65b9\u6cd5\u6216\u8005\u53d8\u91cf\u662f\u5426\u5b58\u5728,\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u7684\u65b9\u6cd5\u6216\u8005\u673a\u5236\u6765\u8bbf\u95ee\u6216\u64cd\u4f5c\u8be5\u672a\u77e5\u7684\u65b9\u6cd5\u6216\u53d8\u91cf,\u8fd9\u79cd\u673a\u5236\u5c31\u88ab\u79f0\u4e4b\u4e3a\u53cd\u5c04. \u53cd\u5c04\u673a\u5236\uff1a\u53cd\u5c04\u5c31\u662f\u901a\u8fc7\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f,\u5bfc\u5165\u6a21\u5757.\u901a\u8fc7\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f,\u53bb\u6a21\u5757\u4e2d\u5bfb\u627e\u6307\u5b9a\u51fd\u6570,\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c,\u4e5f\u5c31\u662f\u5229\u7528\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u53bb\u5bf9\u8c61(\u6a21\u5757)\u4e2d\u64cd\u4f5c\u6210\u5458,\u4e00\u79cd\u57fa\u4e8e\u5b57\u7b26\u4e32\u7684\u4e8b\u4ef6\u9a71\u52a8,\u8fd9\u79cd\u673a\u5236\u5c31\u53eb\u505a\u53cd\u5c04\u673a\u5236. Python \u4e2d\u7684\u53cd\u5c04\u529f\u80fd\u662f\u7531\u4ee5\u4e0b\u56db\u4e2a\u5185\u7f6e\u51fd\u6570\u63d0\u4f9b\uff1ahasattr\u3001getattr\u3001setattr\u3001delattr,\u8fd9\u56db\u4e2a\u51fd\u6570\u5206\u522b\u7528\u4e8e\u5728\u5bf9\u8c61\u5185\u90e8\u6267\u884c\uff1a\u68c0\u67e5\u662f\u5426\u542b\u6709\u67d0\u6210\u5458\u3001\u83b7\u53d6\u6210\u5458\u3001\u8bbe\u7f6e\u6210\u5458\u3001\u5220\u9664\u6210\u5458\u3001\u5bfc\u5165\u6a21\u5757\u4ee5\u5b57\u7b26\u4e32\u65b9\u5f0f\u5bfc\u5165,\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u5177\u4f53\u4ecb\u7ecd\u5b83\u4eec\u7684\u5e94\u7528\u573a\u666f.","title":"\u6982\u8ff0"},{"location":"python/base/pythoninspect/#hasattr","text":"\u68c0\u67e5\u6307\u5b9a\u7c7b\u4e2d\u662f\u5426\u6709\u6307\u5b9a\u6210\u5458,\u4e5f\u5c31\u662f\u68c0\u67e5\u662f\u5426\u542b\u6709\u6307\u5b9a\u6210\u5458\u51fd\u6570. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self): print( %s \u5728\u5403\u4e1c\u897f... %self.name) d = dog( dogging ) choice = input( \u8f93\u5165\u6570\u636e: ).strip() # (d=\u7c7b\u7684\u5b9e\u4f8b\u540d\u79f0) (choice=\u6570\u636e\u4fdd\u5b58\u4f4d\u7f6e) print(hasattr(d,choice)) #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:eat True","title":"hasattr:"},{"location":"python/base/pythoninspect/#getattr","text":"\u83b7\u53d6\u6307\u5b9a\u7c7b\u4e2d\u662f\u5426\u6709\u6307\u5b9a\u7684\u6210\u5458,\u7ed3\u679c\u6253\u5370\u51fa1\u4e2a\u5b57\u7b26\u4e32,\u6620\u5c04\u51fa\u51fd\u6570\u6240\u5728\u5185\u5b58\u5730\u5740. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self): print( %s \u5728\u5403\u4e1c\u897f... ,self.names) d= dog( dogging ) choice = input( \u8f93\u5165\u6570\u636e: ).strip() # (d=\u7c7b\u7684\u5b9e\u4f8b\u540d\u79f0) (choice=\u6570\u636e\u4fdd\u5b58\u4f4d\u7f6e) print(getattr(d,choice)) # \u540c\u6837\u7684,\u5728getattr\u540e\u9762\u52a0\u4e0a\u62ec\u53f7,\u5219\u53ef\u8c03\u7528\u6307\u5b9a\u65b9\u6cd5. getattr(d,choice)() #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:eat lt;bound method dog.eat of lt;__main__.dog object at 0x000001D71FD47128 gt; gt; dogging \u5728\u5403\u4e1c\u897f..","title":"getattr:"},{"location":"python/base/pythoninspect/#getattr_1","text":"getattr\u4e00\u822c\u7684\u901a\u7528\u5199\u6cd5,\u6620\u5c04\u51fa\u51fd\u6570\u6240\u5728\u5185\u5b58\u5730\u5740\u540e,\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self,food): print( %s \u5728\u5403\u4e1c\u897f... %self.name,food) d= dog( dogging ) choice=input( \u8f93\u5165\u6570\u636e: ).strip() func=getattr(d,choice) func( \u8c03\u7528\u4f20\u9012\u53c2\u6570.. ) #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:eat dogging \u5728\u5403\u4e1c\u897f... \u8c03\u7528\u4f20\u9012\u53c2\u6570..","title":"getattr:"},{"location":"python/base/pythoninspect/#setattr","text":"\u52a8\u6001\u88c5\u914d\u51fd\u6570,\u5728\u5916\u90e8\u521b\u5efa\u51fd\u6570,\u7136\u540e\u5c06\u5916\u90e8\u51fd\u6570,\u52a8\u6001\u7684\u88c5\u914d\u5230\u6307\u5b9a\u7c7b\u7684\u5185\u90e8. import os import sys def bulk(self): #\u5b9a\u4e49\u4e00\u4e2a\u5916\u90e8\u51fd\u6570. print( %s \u5728\u5927\u53eb... %self.name) class dog(object): def __init__(self,name): self.name=name def eat(self,food): print( %s \u5728\u5403\u4e1c\u897f... %self.name,food) d= dog( dogging ) choice=input( \u8f93\u5165\u6570\u636e: ).strip() #\u4f20\u9012\u5b57\u7b26\u4e32 setattr(d,choice,bulk) #\u5c06bulk()\u5916\u90e8\u65b9\u6cd5,\u52a8\u6001\u6dfb\u52a0\u5230dog\u7c7b\u4e2d. d.bulk(d) #\u8c03\u7528bulk()\u65b9\u6cd5,\u8fd9\u91cc\u8981\u5c06d\u81ea\u5df1\u4f20\u9012\u8fdb\u53bb. #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u6570\u636e:bulk #\u8c03\u7528\u6210\u529f,\u8bf4\u660e\u88c5\u914d\u6210\u529f\u5566. dogging \u5728\u5927\u53eb...","title":"setattr:"},{"location":"python/base/pythoninspect/#setattr_1","text":"\u52a8\u6001\u88c5\u914d\u5c5e\u6027,\u5728\u5916\u90e8\u52a8\u6001\u88c5\u914d\u5c5e\u6027,\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3a22. import os import sys def bulk(self): print( %s \u5728\u5927\u53eb... %self.name) class dog(object): def __init__(self,name): self.name=name def eat(self,food): print( %s \u5728\u5403\u4e1c\u897f... %self.name,food) d= dog( dogging ) choice=input( \u8f93\u5165\u88c5\u914d\u53d8\u91cf: ).strip() #\u8f93\u5165\u88c5\u914d\u53d8\u91cf\u540d setattr(d,choice,22) #\u8bbe\u7f6e\u521d\u59cb\u503c\u4e3a22 print(getattr(d,choice)) #\u6253\u5370\u88c5\u914d\u7684\u53d8\u91cf\u503c #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u88c5\u914d\u53d8\u91cf:temp 22","title":"setattr:"},{"location":"python/base/pythoninspect/#delattr","text":"\u52a8\u6001\u5220\u9664\u51fd\u6570,\u4ee5\u4e0b\u6f14\u793a\u52a8\u6001\u7684\u5220\u9664dog\u7c7b\u4e2d\u7684,eat\u8fd9\u4e2a\u51fd\u6570,\u540e\u671f\u518d\u6b21\u8c03\u7528\u4f1a\u53d1\u73b0\u4e0d\u5b58\u5728\u4e86. import os import sys class dog(object): def __init__(self,name): self.name=name def eat(self): print( %s \u5728\u5403\u4e1c\u897f... %self.name) d= dog( dogging ) choice=input( \u8f93\u5165\u5185\u5bb9: ).strip() #\u8f93\u5165\u8981\u5220\u9664\u7684\u65b9\u6cd5\u540d delattr(d,choice,eat) #\u901a\u8fc7\u6b64\u65b9\u6cd5,\u5220\u9664eat\u51fd\u6570 d.eat() #\u518d\u6b21\u8c03\u7528\u4f1a\u9519\u8bef,\u5df2\u7ecf\u52a8\u6001\u5220\u9664\u4e86 #--\u8f93\u51fa\u7ed3\u679c----------------------------------- \u8f93\u5165\u5185\u5bb9:eat Traceback (most recent call last): File test.py , line 15, in lt;module gt; delattr(d,choice,eat) NameError: name eat is not defined","title":"delattr:"},{"location":"python/base/pythoninspect/#python-_","text":"python\u57fa\u7840-\u5bf9\u8c61_\u7c7b\u53cd\u5c04\u3001\u6a21\u5757\u53cd\u5c04 Python \u5f02\u5e38\u5904\u7406\u4e0e\u53cd\u5c04\u673a\u5236","title":"python\u57fa\u7840-\u5bf9\u8c61_\u7c7b\u53cd\u5c04\u3001\u6a21\u5757\u53cd\u5c04"},{"location":"python/base/pythonlang/","text":"Python\u5f00\u53d1\u57fa\u7840\u77e5\u8bc6 Python\u5185\u5efa\u7684\u4e00\u4e9b\u9b54\u6cd5\u65b9\u6cd5 Python\u5168\u6808 Python oauth2 Webhooks Python\u9b54\u6cd5\u65b9\u6cd5 Python\u591a\u8fdb\u7a0b\u7f16\u7a0b Python\u8fdb\u7a0b\u548c\u7ebf\u7a0b python \u5185\u5efa\u7c7b\u578b\u548c\u65b9\u6cd5: /Users/cuco/Library/Caches/PyCharm2018.1/python_stubs/-1556761322/builtins.py Python Decorator\u88c5\u9970\u5668 \u5168\u6587\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u88c5\u9970\u5668\u7406\u8bba\u77e5\u8bc6\u3001\u88c5\u9970\u5668\u5e94\u7528\u3001\u88c5\u9970\u5668\u5ef6\u7533 \u88c5\u9970\u7406\u57fa\u7840\uff1a\u65e0\u53c2\u88c5\u9970\u5668\u3001\u6709\u53c2\u88c5\u9970\u5668\u3001functiontools\u3001\u88c5\u9970\u5668\u94fe \u88c5\u9970\u5668\u8fdb\u9636\uff1aproperty\u3001staticmethod\u3001classmethod\u6e90\u7801\u5206\u6790\uff08python\u4ee3\u7801\u5b9e\u73b0\uff09 \u51fd\u6570\u5f0f\u7f16\u7a0b\u4e4bDecorator\uff08\u88c5\u9970\u5668\uff09 \u8be6\u89e3Python\u7684\u88c5\u9970\u5668 Introduction to Python Decorators \u89e3\u6790 python decorator Understanding Python Decorators in 12 Easy Steps! \u6df1\u5ea6\u89e3\u6790Python\u88c5\u9970\u5668 python\u88c5\u9970\u5668\u3001\u63cf\u8ff0\u7b26\u6a21\u62df\u6e90\u7801\u5b9e\u73b0 Python yield \u4f7f\u7528\u6d45\u6790 XML and HTML with Python Python \u9ad8\u7ea7\u6e90\u7801\u89e3\u6790 \u9700\u8981\u914d\u5408Python\u6e90\u7801\u4e66\u7c4d\u4e00\u8d77\u63a2\u8ba8 Python\u6e90\u7801\u5256\u6790\u7b14\u8bb0 Python\u5f00\u53d1\u6982\u8ff0 Python\u5e76\u884c\u7f16\u7a0b \u4e2d\u6587\u7248 1. \u7b2c\u4e00\u7ae0 \u8ba4\u8bc6\u5e76\u884c\u8ba1\u7b97\u548cPython 2. \u7b2c\u4e8c\u7ae0 \u57fa\u4e8e\u7ebf\u7a0b\u7684\u5e76\u884c 3. \u7b2c\u4e09\u7ae0 \u57fa\u4e8e\u8fdb\u7a0b\u7684\u5e76\u884c 4. \u7b2c\u56db\u7ae0 \u5f02\u6b65\u7f16\u7a0b 5. \u7b2c\u4e94\u7ae0 \u5206\u5e03\u5f0fPython\u7f16\u7a0b 6. \u7b2c\u516d\u7ae0 Python GPU\u7f16\u7a0b","title":"\u8bed\u8a00\u57fa\u7840"},{"location":"python/base/pythonlang/#python","text":"","title":"Python\u5f00\u53d1\u57fa\u7840\u77e5\u8bc6"},{"location":"python/base/pythonlang/#python_1","text":"Python\u5168\u6808 Python oauth2 Webhooks Python\u9b54\u6cd5\u65b9\u6cd5 Python\u591a\u8fdb\u7a0b\u7f16\u7a0b Python\u8fdb\u7a0b\u548c\u7ebf\u7a0b","title":"Python\u5185\u5efa\u7684\u4e00\u4e9b\u9b54\u6cd5\u65b9\u6cd5"},{"location":"python/base/pythonlang/#python_2","text":"/Users/cuco/Library/Caches/PyCharm2018.1/python_stubs/-1556761322/builtins.py","title":"python \u5185\u5efa\u7c7b\u578b\u548c\u65b9\u6cd5:"},{"location":"python/base/pythonlang/#python-decorator","text":"\u5168\u6587\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\u88c5\u9970\u5668\u7406\u8bba\u77e5\u8bc6\u3001\u88c5\u9970\u5668\u5e94\u7528\u3001\u88c5\u9970\u5668\u5ef6\u7533 \u88c5\u9970\u7406\u57fa\u7840\uff1a\u65e0\u53c2\u88c5\u9970\u5668\u3001\u6709\u53c2\u88c5\u9970\u5668\u3001functiontools\u3001\u88c5\u9970\u5668\u94fe \u88c5\u9970\u5668\u8fdb\u9636\uff1aproperty\u3001staticmethod\u3001classmethod\u6e90\u7801\u5206\u6790\uff08python\u4ee3\u7801\u5b9e\u73b0\uff09 \u51fd\u6570\u5f0f\u7f16\u7a0b\u4e4bDecorator\uff08\u88c5\u9970\u5668\uff09 \u8be6\u89e3Python\u7684\u88c5\u9970\u5668 Introduction to Python Decorators \u89e3\u6790 python decorator Understanding Python Decorators in 12 Easy Steps! \u6df1\u5ea6\u89e3\u6790Python\u88c5\u9970\u5668 python\u88c5\u9970\u5668\u3001\u63cf\u8ff0\u7b26\u6a21\u62df\u6e90\u7801\u5b9e\u73b0 Python yield \u4f7f\u7528\u6d45\u6790 XML and HTML with Python","title":"Python Decorator\u88c5\u9970\u5668"},{"location":"python/base/pythonlang/#python_3","text":"\u9700\u8981\u914d\u5408Python\u6e90\u7801\u4e66\u7c4d\u4e00\u8d77\u63a2\u8ba8 Python\u6e90\u7801\u5256\u6790\u7b14\u8bb0","title":"Python \u9ad8\u7ea7\u6e90\u7801\u89e3\u6790"},{"location":"python/base/pythonlang/#python_4","text":"","title":"Python\u5f00\u53d1\u6982\u8ff0"},{"location":"python/base/pythonlang/#python_5","text":"1. \u7b2c\u4e00\u7ae0 \u8ba4\u8bc6\u5e76\u884c\u8ba1\u7b97\u548cPython 2. \u7b2c\u4e8c\u7ae0 \u57fa\u4e8e\u7ebf\u7a0b\u7684\u5e76\u884c 3. \u7b2c\u4e09\u7ae0 \u57fa\u4e8e\u8fdb\u7a0b\u7684\u5e76\u884c 4. \u7b2c\u56db\u7ae0 \u5f02\u6b65\u7f16\u7a0b 5. \u7b2c\u4e94\u7ae0 \u5206\u5e03\u5f0fPython\u7f16\u7a0b 6. \u7b2c\u516d\u7ae0 Python GPU\u7f16\u7a0b","title":"Python\u5e76\u884c\u7f16\u7a0b \u4e2d\u6587\u7248"},{"location":"python/django/form/","text":"Django \u8868\u5355 \u94fe\u63a5 The Forms API Form fields Form and field validation","title":"Django \u8868\u5355"},{"location":"python/django/form/#django","text":"","title":"Django \u8868\u5355"},{"location":"python/django/form/#_1","text":"The Forms API Form fields Form and field validation","title":"\u94fe\u63a5"},{"location":"python/django/manage/","text":"Python Manage \u7c7b\u6e90\u7801\u89e3\u6790 \u6982\u8ff0 The base class from which all management commands ultimately derive. Use this class if you want access to all of the mechanisms which parse the command-line arguments and work out what code to call in response; if you don't need to change any of that behavior, consider using one of the subclasses defined in this file. If you are interested in overriding/customizing various aspects of the command-parsing and -execution behavior, the normal flow works as follows: django-admin or manage.py loads the command class and calls its run_from_argv() method. The run_from_argv() method calls create_parser() to get an ArgumentParser for the arguments, parses them, performs any environment changes requested by options like pythonpath , and then calls the execute() method, passing the parsed arguments. The execute() method attempts to carry out the command by calling the handle() method with the parsed arguments; any output produced by handle() will be printed to standard output and, if the command is intended to produce a block of SQL statements, will be wrapped in BEGIN and COMMIT . If handle() or execute() raised any exception (e.g. CommandError ), run_from_argv() will instead print an error message to stderr . Thus, the handle() method is typically the starting point for subclasses; many built-in commands and command types either place all of their logic in handle() , or perform some additional parsing work in handle() and then delegate from it to more specialized methods as needed. Several attributes affect behavior at various steps along the way: help A short description of the command, which will be printed in help messages. output_transaction A boolean indicating whether the command outputs SQL statements; if True , the output will automatically be wrapped with BEGIN; and COMMIT; . Default value is False . requires_migrations_checks A boolean; if True , the command prints a warning if the set of migrations on disk don't match the migrations in the database. requires_system_checks A boolean; if True , entire Django project will be checked for errors prior to executing the command. Default value is True . To validate an individual application's models rather than all applications' models, call self.check(app_configs) from handle() , where app_configs is the list of application's configuration provided by the app registry. stealth_options A tuple of any options the command uses which aren't defined by the argument parser. \u5173\u952e\u6280\u672f \u5173\u952e\u6280\u672f\u70b9 1.Python \u53c2\u6570\u89e3\u6790\u5e93: argparse 2.pkgutil \u5305\u7684\u904d\u5386\u89e3\u6790\u6a21\u5757 3.difflib \u5bf9\u8c61\u7684\u5dee\u5206\u6bd4\u8f83 4.importlib \u5bfc\u5165\u5e93\u7684\u4fbf\u6377\u51fd\u6570 5.vars \u5feb\u901f\u751f\u6210\u5b57\u5178 6.\u547d\u4ee4\u884c\u7684\u989c\u8272\u663e\u793a \u6e90\u7801\u89e3\u6790 Python manage.py --help \u6253\u5370\u7cfb\u7edf\u4e2d\u652f\u6301\u7684\u7c7b django.core.management \u5305\u4e2d\u5305\u542b\u76f8\u5173\u7684\u547d\u4ee4 def main (): # \u6dfb\u52a0\u8bbe\u7f6e\u6a21\u5757\u7684\u547d\u4ee4\u5230\u73af\u5883\u53d8\u91cf\u4e2d os . environ . setdefault ( DJANGO_SETTINGS_MODULE , web_project.settings ) try : from django.core.management import execute_from_command_line except ImportError as exc : raise ImportError ( Couldn t import Django. Are you sure it s installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment? ) from exc execute_from_command_line ( sys . argv ) if __name__ == __main__ : main () django.core.management`\u4e2d\u5305\u542b\u4e86\u5168\u5c40\u7684\u51fd\u6570\uff0c\u5904\u7406\u547d\u4ee4\u5165\u53e3 def execute_from_command_line ( argv = None ): Run a ManagementUtility. utility = ManagementUtility ( argv ) utility . execute () \u4f7f\u7528\u5f53\u524d find_commands \u51fd\u6570\u904d\u5386 django/core/management/commands \u76ee\u5f55\u4e0b\u7684\u6a21\u5757\u540d\u79f0\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u5904\u7406\u4e00\u4e2a\u547d\u4ee4\u53c2\u6570 def find_commands ( management_dir ): Given a path to a management directory, return a list of all the command names that are available. command_dir = os . path . join ( management_dir , commands ) return [ name for _ , name , is_pkg in pkgutil . iter_modules ([ command_dir ]) if not is_pkg and not name . startswith ( _ )] #\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u679c [ check , compilemessages , createcachetable , dbshell , diffsettings , dumpdata , flush , inspectdb , loaddata , makemessages , makemigrations , migrate , runserver , sendtestemail , shell , showmigrations , sqlflush , sqlmigrate , sqlsequencereset , squashmigrations , startapp , startproject , test , testserver ] \u8c03\u7528execute\u6267\u884c\u51fd\u6570 1.\u8c03\u7528\u7cfb\u7edfparser\u6784\u5efa\u53c2\u6570\u548c\u53c2\u6570\u7684\u89e3\u6790 2.\u5904\u7406\u7cfb\u7edf\u81ea\u52a8\u52a0\u8f7dautoreload 3.\u8c03\u7528 self.fetch_command(subcommand).run_from_argv(self.argv) \u67e5\u627e\u5e76\u6267\u884c\u51fd\u6570 def execute ( self ): Given the command-line arguments, figure out which subcommand is being run, create a parser appropriate to that command, and run it. try : subcommand = self . argv [ 1 ] except IndexError : subcommand = help # Display help if no arguments were given. # Preprocess options to extract --settings and --pythonpath. # These options could affect the commands that are available, so they # must be processed early. parser = CommandParser ( usage = %(prog)s subcommand [options] [args] , add_help = False , allow_abbrev = False ) parser . add_argument ( --settings ) parser . add_argument ( --pythonpath ) parser . add_argument ( args , nargs = * ) # catch-all try : options , args = parser . parse_known_args ( self . argv [ 2 :]) handle_default_options ( options ) except CommandError : pass # Ignore any option errors at this point. try : settings . INSTALLED_APPS except ImproperlyConfigured as exc : self . settings_exception = exc except ImportError as exc : self . settings_exception = exc if settings . configured : # Start the auto-reloading dev server even if the code is broken. # The hardcoded condition is a code smell but we can t rely on a # flag on the command class because we haven t located it yet. if subcommand == runserver and --noreload not in self . argv : try : autoreload . check_errors ( django . setup )() except Exception : # The exception will be raised later in the child process # started by the autoreloader. Pretend it didn t happen by # loading an empty list of applications. apps . all_models = defaultdict ( OrderedDict ) apps . app_configs = OrderedDict () apps . apps_ready = apps . models_ready = apps . ready = True # Remove options not compatible with the built-in runserver # (e.g. options for the contrib.staticfiles runserver). # Changes here require manually testing as described in # #27522. _parser = self . fetch_command ( runserver ) . create_parser ( django , runserver ) _options , _args = _parser . parse_known_args ( self . argv [ 2 :]) for _arg in _args : self . argv . remove ( _arg ) # In all other cases, django.setup() is required to succeed. else : django . setup () self . autocomplete () if subcommand == help : if --commands in args : sys . stdout . write ( self . main_help_text ( commands_only = True ) + \\n ) elif not options . args : sys . stdout . write ( self . main_help_text () + \\n ) else : self . fetch_command ( options . args [ 0 ]) . print_help ( self . prog_name , options . args [ 0 ]) # Special-cases: We want django-admin --version and # django-admin --help to work, for backwards compatibility. elif subcommand == version or self . argv [ 1 :] == [ --version ]: sys . stdout . write ( django . get_version () + \\n ) elif self . argv [ 1 :] in ([ --help ], [ -h ]): sys . stdout . write ( self . main_help_text () + \\n ) else : self . fetch_command ( subcommand ) . run_from_argv ( self . argv ) \u4f7f\u7528 load_command_class \u51fd\u6570\u8c03\u7528\u7cfb\u7edf\u4e2d\u7684\u547d\u4ee4\u5b57\u7b26\u4e32\u5b9e\u4f8b\u5316\u4e3a\u7c7b import_module def load_command_class ( app_name , name ): Given a command name and an application name, return the Command class instance. Allow all errors raised by the import process (ImportError, AttributeError) to propagate. module = import_module ( %s .management.commands. %s % ( app_name , name )) return module . Command () BaseCommand \u8c03\u7528 run_from_argv \u771f\u6b63\u53bb\u6267\u884c\u547d\u4ee4 def run_from_argv ( self , argv ): Set up any environment changes requested (e.g., Python path and Django settings), then run this command. If the command raises a ``CommandError``, intercept it and print it sensibly to stderr. If the ``--traceback`` option is present or the raised ``Exception`` is not ``CommandError``, raise it. self . _called_from_command_line = True parser = self . create_parser ( argv [ 0 ], argv [ 1 ]) options = parser . parse_args ( argv [ 2 :]) cmd_options = vars ( options ) # Move positional args out of options to mimic legacy optparse args = cmd_options . pop ( args , ()) handle_default_options ( options ) try : self . execute ( * args , ** cmd_options ) except Exception as e : if options . traceback or not isinstance ( e , CommandError ): raise # SystemCheckError takes care of its own formatting. if isinstance ( e , SystemCheckError ): self . stderr . write ( str ( e ), lambda x : x ) else : self . stderr . write ( %s : %s % ( e . __class__ . __name__ , e )) sys . exit ( 1 ) finally : 1.\u4e3b\u8981\u5904\u7406\u7ec8\u7aef\u989c\u8272\u8f93\u51fa\u65b9\u6848 2.\u8c03\u7528handle\u51fd\u6570\u6267\u884c def execute ( self , * args , ** options ): Try to execute this command, performing system checks if needed (as controlled by the ``requires_system_checks`` attribute, except if force-skipped). if options [ force_color ] and options [ no_color ]: raise CommandError ( The --no-color and --force-color options can t be used together. ) if options [ force_color ]: self . style = color_style ( force_color = True ) elif options [ no_color ]: self . style = no_style () self . stderr . style_func = None if options . get ( stdout ): self . stdout = OutputWrapper ( options [ stdout ]) if options . get ( stderr ): self . stderr = OutputWrapper ( options [ stderr ], self . stderr . style_func ) if self . requires_system_checks and not options . get ( skip_checks ): self . check () if self . requires_migrations_checks : self . check_migrations () output = self . handle ( * args , ** options ) if output : if self . output_transaction : connection = connections [ options . get ( database , DEFAULT_DB_ALIAS )] output = %s \\n %s \\n %s % ( self . style . SQL_KEYWORD ( connection . ops . start_transaction_sql ()), output , self . style . SQL_KEYWORD ( connection . ops . end_transaction_sql ()), ) self . stdout . write ( output ) return output test\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4e3b\u8981\u5904\u7406\u7684\u76f8\u5173\u7684\u65b9\u6cd5\u8c03\u7528testRunner\u8c03\u7528\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u4e14\u6267\u884c\u6d4b\u8bd5\u51fd\u6570 def handle ( self , * test_labels , ** options ): TestRunner = get_runner ( settings , options [ testrunner ]) test_runner = TestRunner ( ** options ) failures = test_runner . run_tests ( test_labels ) if failures : sys . exit ( 1 )","title":"Python Manage \u7c7b\u6e90\u7801\u89e3\u6790"},{"location":"python/django/manage/#python-manage","text":"","title":"Python Manage \u7c7b\u6e90\u7801\u89e3\u6790"},{"location":"python/django/manage/#_1","text":"The base class from which all management commands ultimately derive. Use this class if you want access to all of the mechanisms which parse the command-line arguments and work out what code to call in response; if you don't need to change any of that behavior, consider using one of the subclasses defined in this file. If you are interested in overriding/customizing various aspects of the command-parsing and -execution behavior, the normal flow works as follows: django-admin or manage.py loads the command class and calls its run_from_argv() method. The run_from_argv() method calls create_parser() to get an ArgumentParser for the arguments, parses them, performs any environment changes requested by options like pythonpath , and then calls the execute() method, passing the parsed arguments. The execute() method attempts to carry out the command by calling the handle() method with the parsed arguments; any output produced by handle() will be printed to standard output and, if the command is intended to produce a block of SQL statements, will be wrapped in BEGIN and COMMIT . If handle() or execute() raised any exception (e.g. CommandError ), run_from_argv() will instead print an error message to stderr . Thus, the handle() method is typically the starting point for subclasses; many built-in commands and command types either place all of their logic in handle() , or perform some additional parsing work in handle() and then delegate from it to more specialized methods as needed. Several attributes affect behavior at various steps along the way: help A short description of the command, which will be printed in help messages. output_transaction A boolean indicating whether the command outputs SQL statements; if True , the output will automatically be wrapped with BEGIN; and COMMIT; . Default value is False . requires_migrations_checks A boolean; if True , the command prints a warning if the set of migrations on disk don't match the migrations in the database. requires_system_checks A boolean; if True , entire Django project will be checked for errors prior to executing the command. Default value is True . To validate an individual application's models rather than all applications' models, call self.check(app_configs) from handle() , where app_configs is the list of application's configuration provided by the app registry. stealth_options A tuple of any options the command uses which aren't defined by the argument parser.","title":"\u6982\u8ff0"},{"location":"python/django/manage/#_2","text":"\u5173\u952e\u6280\u672f\u70b9 1.Python \u53c2\u6570\u89e3\u6790\u5e93: argparse 2.pkgutil \u5305\u7684\u904d\u5386\u89e3\u6790\u6a21\u5757 3.difflib \u5bf9\u8c61\u7684\u5dee\u5206\u6bd4\u8f83 4.importlib \u5bfc\u5165\u5e93\u7684\u4fbf\u6377\u51fd\u6570 5.vars \u5feb\u901f\u751f\u6210\u5b57\u5178 6.\u547d\u4ee4\u884c\u7684\u989c\u8272\u663e\u793a","title":"\u5173\u952e\u6280\u672f"},{"location":"python/django/manage/#_3","text":"Python manage.py --help \u6253\u5370\u7cfb\u7edf\u4e2d\u652f\u6301\u7684\u7c7b django.core.management \u5305\u4e2d\u5305\u542b\u76f8\u5173\u7684\u547d\u4ee4 def main (): # \u6dfb\u52a0\u8bbe\u7f6e\u6a21\u5757\u7684\u547d\u4ee4\u5230\u73af\u5883\u53d8\u91cf\u4e2d os . environ . setdefault ( DJANGO_SETTINGS_MODULE , web_project.settings ) try : from django.core.management import execute_from_command_line except ImportError as exc : raise ImportError ( Couldn t import Django. Are you sure it s installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment? ) from exc execute_from_command_line ( sys . argv ) if __name__ == __main__ : main () django.core.management`\u4e2d\u5305\u542b\u4e86\u5168\u5c40\u7684\u51fd\u6570\uff0c\u5904\u7406\u547d\u4ee4\u5165\u53e3 def execute_from_command_line ( argv = None ): Run a ManagementUtility. utility = ManagementUtility ( argv ) utility . execute () \u4f7f\u7528\u5f53\u524d find_commands \u51fd\u6570\u904d\u5386 django/core/management/commands \u76ee\u5f55\u4e0b\u7684\u6a21\u5757\u540d\u79f0\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u5904\u7406\u4e00\u4e2a\u547d\u4ee4\u53c2\u6570 def find_commands ( management_dir ): Given a path to a management directory, return a list of all the command names that are available. command_dir = os . path . join ( management_dir , commands ) return [ name for _ , name , is_pkg in pkgutil . iter_modules ([ command_dir ]) if not is_pkg and not name . startswith ( _ )] #\u8fd4\u56de\u7684\u6570\u636e\u7ed3\u679c [ check , compilemessages , createcachetable , dbshell , diffsettings , dumpdata , flush , inspectdb , loaddata , makemessages , makemigrations , migrate , runserver , sendtestemail , shell , showmigrations , sqlflush , sqlmigrate , sqlsequencereset , squashmigrations , startapp , startproject , test , testserver ] \u8c03\u7528execute\u6267\u884c\u51fd\u6570 1.\u8c03\u7528\u7cfb\u7edfparser\u6784\u5efa\u53c2\u6570\u548c\u53c2\u6570\u7684\u89e3\u6790 2.\u5904\u7406\u7cfb\u7edf\u81ea\u52a8\u52a0\u8f7dautoreload 3.\u8c03\u7528 self.fetch_command(subcommand).run_from_argv(self.argv) \u67e5\u627e\u5e76\u6267\u884c\u51fd\u6570 def execute ( self ): Given the command-line arguments, figure out which subcommand is being run, create a parser appropriate to that command, and run it. try : subcommand = self . argv [ 1 ] except IndexError : subcommand = help # Display help if no arguments were given. # Preprocess options to extract --settings and --pythonpath. # These options could affect the commands that are available, so they # must be processed early. parser = CommandParser ( usage = %(prog)s subcommand [options] [args] , add_help = False , allow_abbrev = False ) parser . add_argument ( --settings ) parser . add_argument ( --pythonpath ) parser . add_argument ( args , nargs = * ) # catch-all try : options , args = parser . parse_known_args ( self . argv [ 2 :]) handle_default_options ( options ) except CommandError : pass # Ignore any option errors at this point. try : settings . INSTALLED_APPS except ImproperlyConfigured as exc : self . settings_exception = exc except ImportError as exc : self . settings_exception = exc if settings . configured : # Start the auto-reloading dev server even if the code is broken. # The hardcoded condition is a code smell but we can t rely on a # flag on the command class because we haven t located it yet. if subcommand == runserver and --noreload not in self . argv : try : autoreload . check_errors ( django . setup )() except Exception : # The exception will be raised later in the child process # started by the autoreloader. Pretend it didn t happen by # loading an empty list of applications. apps . all_models = defaultdict ( OrderedDict ) apps . app_configs = OrderedDict () apps . apps_ready = apps . models_ready = apps . ready = True # Remove options not compatible with the built-in runserver # (e.g. options for the contrib.staticfiles runserver). # Changes here require manually testing as described in # #27522. _parser = self . fetch_command ( runserver ) . create_parser ( django , runserver ) _options , _args = _parser . parse_known_args ( self . argv [ 2 :]) for _arg in _args : self . argv . remove ( _arg ) # In all other cases, django.setup() is required to succeed. else : django . setup () self . autocomplete () if subcommand == help : if --commands in args : sys . stdout . write ( self . main_help_text ( commands_only = True ) + \\n ) elif not options . args : sys . stdout . write ( self . main_help_text () + \\n ) else : self . fetch_command ( options . args [ 0 ]) . print_help ( self . prog_name , options . args [ 0 ]) # Special-cases: We want django-admin --version and # django-admin --help to work, for backwards compatibility. elif subcommand == version or self . argv [ 1 :] == [ --version ]: sys . stdout . write ( django . get_version () + \\n ) elif self . argv [ 1 :] in ([ --help ], [ -h ]): sys . stdout . write ( self . main_help_text () + \\n ) else : self . fetch_command ( subcommand ) . run_from_argv ( self . argv ) \u4f7f\u7528 load_command_class \u51fd\u6570\u8c03\u7528\u7cfb\u7edf\u4e2d\u7684\u547d\u4ee4\u5b57\u7b26\u4e32\u5b9e\u4f8b\u5316\u4e3a\u7c7b import_module def load_command_class ( app_name , name ): Given a command name and an application name, return the Command class instance. Allow all errors raised by the import process (ImportError, AttributeError) to propagate. module = import_module ( %s .management.commands. %s % ( app_name , name )) return module . Command () BaseCommand \u8c03\u7528 run_from_argv \u771f\u6b63\u53bb\u6267\u884c\u547d\u4ee4 def run_from_argv ( self , argv ): Set up any environment changes requested (e.g., Python path and Django settings), then run this command. If the command raises a ``CommandError``, intercept it and print it sensibly to stderr. If the ``--traceback`` option is present or the raised ``Exception`` is not ``CommandError``, raise it. self . _called_from_command_line = True parser = self . create_parser ( argv [ 0 ], argv [ 1 ]) options = parser . parse_args ( argv [ 2 :]) cmd_options = vars ( options ) # Move positional args out of options to mimic legacy optparse args = cmd_options . pop ( args , ()) handle_default_options ( options ) try : self . execute ( * args , ** cmd_options ) except Exception as e : if options . traceback or not isinstance ( e , CommandError ): raise # SystemCheckError takes care of its own formatting. if isinstance ( e , SystemCheckError ): self . stderr . write ( str ( e ), lambda x : x ) else : self . stderr . write ( %s : %s % ( e . __class__ . __name__ , e )) sys . exit ( 1 ) finally : 1.\u4e3b\u8981\u5904\u7406\u7ec8\u7aef\u989c\u8272\u8f93\u51fa\u65b9\u6848 2.\u8c03\u7528handle\u51fd\u6570\u6267\u884c def execute ( self , * args , ** options ): Try to execute this command, performing system checks if needed (as controlled by the ``requires_system_checks`` attribute, except if force-skipped). if options [ force_color ] and options [ no_color ]: raise CommandError ( The --no-color and --force-color options can t be used together. ) if options [ force_color ]: self . style = color_style ( force_color = True ) elif options [ no_color ]: self . style = no_style () self . stderr . style_func = None if options . get ( stdout ): self . stdout = OutputWrapper ( options [ stdout ]) if options . get ( stderr ): self . stderr = OutputWrapper ( options [ stderr ], self . stderr . style_func ) if self . requires_system_checks and not options . get ( skip_checks ): self . check () if self . requires_migrations_checks : self . check_migrations () output = self . handle ( * args , ** options ) if output : if self . output_transaction : connection = connections [ options . get ( database , DEFAULT_DB_ALIAS )] output = %s \\n %s \\n %s % ( self . style . SQL_KEYWORD ( connection . ops . start_transaction_sql ()), output , self . style . SQL_KEYWORD ( connection . ops . end_transaction_sql ()), ) self . stdout . write ( output ) return output test\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4e3b\u8981\u5904\u7406\u7684\u76f8\u5173\u7684\u65b9\u6cd5\u8c03\u7528testRunner\u8c03\u7528\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u4e14\u6267\u884c\u6d4b\u8bd5\u51fd\u6570 def handle ( self , * test_labels , ** options ): TestRunner = get_runner ( settings , options [ testrunner ]) test_runner = TestRunner ( ** options ) failures = test_runner . run_tests ( test_labels ) if failures : sys . exit ( 1 )","title":"\u6e90\u7801\u89e3\u6790"},{"location":"python/django/project/","text":"Django \u5b9e\u6218\u9879\u76ee \u73af\u5883\u642d\u5efa pycharm vscode mysql/navicat virturlenv\u548cvirtualenvwrapper ver\u9879\u76ee\u73af\u5883\u642d\u5efa \u8d44\u6e90\u83b7\u53d6\uff0c\u7248\u6743\u8bf4\u660e Python pip \u5b89\u88c5\u5305\u7684\u4f7f\u7528\u65b9\u6cd5 \u6d4f\u89c8\u5668JSONView \u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1 1.app\u3001pc\u3001pad\u591a\u7aef\u9002\u914d 2.SPA\u5f00\u53d1\u6a21\u5f0f 3.\u524d\u540e\u7aef\u804c\u8d23\u4e0d\u6e05 4.\u5f00\u53d1\u6548\u7387\u4f4e\uff0c\u5b58\u5728\u7b49\u5f85\u7684\u73b0\u8c61 5.\u524d\u7aef\u4e00\u76f4\u914d\u5408\u7740\u540e\u7aef\uff0c\u80fd\u529b\u6709\u9650 6.\u540e\u53f0\u5f00\u53d1\u6a21\u677f\u9ad8\u5ea6\u8026\u5408\uff0c\u5bfc\u81f4\u5f00\u53d1\u8bed\u8a00\u4f9d\u8d56\u4e25\u91cd \u7f3a\u70b9 1.\u524d\u7aef\u5b66\u4e60\u95e8\u69db\u589e\u52a0 2.\u6570\u636e\u4f9d\u8d56\u5bfc\u81f4\u6587\u6863\u4f9d\u8d56\u589e\u52a0 3.\u524d\u7aef\u5de5\u4f5c\u91cf\u589e\u52a0 4.SEO\u7684\u96be\u5ea6\u589e\u52a0(ssr\u63d0\u9ad8\u6392\u540d) 5.\u540e\u7aef\u5f00\u53d1\u8fc1\u79fb\u6a21\u677f Restful api \u524d\u540e\u7aef\u5206\u79bb\u7684\u6700\u4f73\u5b9e\u8df5 \u6587\u7ae0 \u7406\u89e3Restful api\u67b6\u6784 Restful Api\u8bbe\u8ba1\u6307\u5357 \u524d\u7aefVue\uff0cVue\u63d2\u4ef6 1.\u524d\u7aef\u5de5\u7a0b\u5316 2.\u6570\u636e\u53cc\u5411\u7ed1\u5b9a 3.\u7ec4\u4ef6\u5f00\u53d1 webpack vue\uff0cvuex\uff0cvue-router\uff0caxios ES6\uff0cbabel \u67e5\u770bmysql\u662f\u5426\u5df2\u7ecf\u542f\u52a8 ps aux|grep mysqld (env) \u279c MxShop pip list Package Version ------------------- -------- certifi 2019.3.9 chardet 3.0.4 coreapi 2.3.3 coreschema 0.0.4 Django 2.2.1 django-crispy-forms 1.7.2 django-filter 2.1.0 django-guardian 1.5.1 djangorestframework 3.9.4 idna 2.8 itypes 1.1.0 Jinja2 2.10.1 Markdown 3.1 MarkupSafe 1.1.1 pip 18.1 pytz 2019.1 requests 2.21.0 setuptools 40.6.2 sqlparse 0.3.0 uritemplate 3.0.0 urllib3 1.24.3 You are using pip version 18.1, however version 19.1.1 is available. You should consider upgrading via the pip install --upgrade pip command. vscodevscode\u5f00\u53d1Django vsCode Django Debug \u521b\u5efaPython\u865a\u62df\u8fd0\u884c\u73af\u5883 # macOS/Linux sudo apt-get install python3-venv # If needed python3 -m venv env # Windows python -m venv env Vue.js\u7684\u5b89\u88c5 npm install npm run dev #\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u76f8\u5173\u7684\u7c7b \u76ee\u5f55\u6587\u4ef6 apps\uff1a\u4fdd\u5b58\u6240\u6709\u7684app Build paths inside the project like this: os.path.join(BASE_DIR, ...) BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath( file ))) \u6dfb\u52a0\u66f4\u76ee\u5f55\u4e0b\u7684app\u3001extras_app\u5230\u67e5\u627e\u8def\u5f84\u4e2d sys.path.insert(0, BASE_DIR) sys.path.insert(0, os.path.join(BASE_DIR, 'apps')) sys.path.insert(0, os.path.join(BASE_DIR, 'extras_app')) vscode Django \u5f00\u53d1 Vscode \u5f00\u53d1Django RestApi\u5b89\u88c5 xadmin Xadmin xadmin\u5f00\u53d1\u6587\u6863 \u4fee\u6539xadmin\u8bed\u8a00\uff1a 1.\u4fee\u6539Django\u4e2d\u7684\u8bed\u8a00\u73af\u5883 #\u8bbe\u7f6e\u65f6\u533a LANGUAGE_CODE = zh-hans # \u4e2d\u6587\u652f\u6301\uff0cdjango1.8\u4ee5\u540e\u652f\u6301\uff1b1.8\u4ee5\u524d\u662fzh-cn TIME_ZONE = Asia/Shanghai USE_I18N = True USE_L10N = True USE_TZ = False # \u9ed8\u8ba4\u662fTure\uff0c\u65f6\u95f4\u662futc\u65f6\u95f4\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u7528\u672c\u5730\u65f6\u95f4\uff0c\u6240\u7528\u624b\u52a8\u4fee\u6539\u4e3afalse\uff01\uff01\uff01\uff01 2.\u4fee\u6539app\u4e2d\u7684config\uff1a class GoodsConfig(AppConfig): name = goods verbose_name = \u5546\u54c1 pip install mysqlclient pip install pillow # \u4f5c\u4e3a\u56fe\u7247\u5904\u7406\u7684\u5305 pip install djangorestframework pip install markdown # Markdown support for the browsable API. pip install django-filter # Filtering support \u8de8\u57df\u89e3\u51b3\u95ee\u9898: Django cors headers \u5e93\u53bb\u89e3\u51b3 \u524d\u7aef\u4f7f\u7528Proxy.js \u4ee3\u7406\u7c7b\u6765\u89e3\u51b3 \u524d\u540e\u7aef\u5206\u79bb\u4e4bJWT DjangoUediter \u5bcc\u6587\u672c\u7f16\u8f91\u5668 (env) \u279c MxShop pip install DjangoUeditor GitHub\u4e0a\u53ef\u4ee5\u627e\u5230 \u6269\u5c55User\u7c7b navigate \u767b\u5f55\u9519\u8bef\u4fee\u590d \u5b89\u88c5\u6570\u636e\u5e93Mysql\u8fde\u63a5\uff1a (env) \u279c MxShop pip install mysqlclient \u5904\u7406\u6570\u636e\u5e93\u8fde\u63a5\u9519\u8bef\u95ee\u9898: \u8bbe\u7f6e\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce Django \u6570\u636e\u5e93\u5904\u7406 \u6570\u636e\u5e93\u914d\u7f6e: DATABASES = { 'default':{ 'ENGINE':'django.db.backends.mysql', 'NAME':'mxshop', 'PASSWORD':'root', 'HOST':\"127.0.0.1\", 'OPTIONS':{ 'init_command':'SET storage_engine=INNODB;' } } } \u63d0\u793a\u9519\u8bef Authentication plugin caching_sha2_password cannot be loaded: dlopen(/usr/local/mysql/lib/plugin/caching_sha2_password.so, 2): image not found ALTER USER root@localhost IDENTIFIED WITH mysql_native_password BY @Cangck123 ;","title":"Django \u5b9e\u6218\u9879\u76ee"},{"location":"python/django/project/#django","text":"","title":"Django \u5b9e\u6218\u9879\u76ee"},{"location":"python/django/project/#_1","text":"pycharm vscode mysql/navicat virturlenv\u548cvirtualenvwrapper ver\u9879\u76ee\u73af\u5883\u642d\u5efa \u8d44\u6e90\u83b7\u53d6\uff0c\u7248\u6743\u8bf4\u660e Python pip \u5b89\u88c5\u5305\u7684\u4f7f\u7528\u65b9\u6cd5 \u6d4f\u89c8\u5668JSONView","title":"\u73af\u5883\u642d\u5efa"},{"location":"python/django/project/#_2","text":"1.app\u3001pc\u3001pad\u591a\u7aef\u9002\u914d 2.SPA\u5f00\u53d1\u6a21\u5f0f 3.\u524d\u540e\u7aef\u804c\u8d23\u4e0d\u6e05 4.\u5f00\u53d1\u6548\u7387\u4f4e\uff0c\u5b58\u5728\u7b49\u5f85\u7684\u73b0\u8c61 5.\u524d\u7aef\u4e00\u76f4\u914d\u5408\u7740\u540e\u7aef\uff0c\u80fd\u529b\u6709\u9650 6.\u540e\u53f0\u5f00\u53d1\u6a21\u677f\u9ad8\u5ea6\u8026\u5408\uff0c\u5bfc\u81f4\u5f00\u53d1\u8bed\u8a00\u4f9d\u8d56\u4e25\u91cd \u7f3a\u70b9 1.\u524d\u7aef\u5b66\u4e60\u95e8\u69db\u589e\u52a0 2.\u6570\u636e\u4f9d\u8d56\u5bfc\u81f4\u6587\u6863\u4f9d\u8d56\u589e\u52a0 3.\u524d\u7aef\u5de5\u4f5c\u91cf\u589e\u52a0 4.SEO\u7684\u96be\u5ea6\u589e\u52a0(ssr\u63d0\u9ad8\u6392\u540d) 5.\u540e\u7aef\u5f00\u53d1\u8fc1\u79fb\u6a21\u677f Restful api \u524d\u540e\u7aef\u5206\u79bb\u7684\u6700\u4f73\u5b9e\u8df5 \u6587\u7ae0 \u7406\u89e3Restful api\u67b6\u6784 Restful Api\u8bbe\u8ba1\u6307\u5357 \u524d\u7aefVue\uff0cVue\u63d2\u4ef6 1.\u524d\u7aef\u5de5\u7a0b\u5316 2.\u6570\u636e\u53cc\u5411\u7ed1\u5b9a 3.\u7ec4\u4ef6\u5f00\u53d1 webpack vue\uff0cvuex\uff0cvue-router\uff0caxios ES6\uff0cbabel \u67e5\u770bmysql\u662f\u5426\u5df2\u7ecf\u542f\u52a8 ps aux|grep mysqld (env) \u279c MxShop pip list Package Version ------------------- -------- certifi 2019.3.9 chardet 3.0.4 coreapi 2.3.3 coreschema 0.0.4 Django 2.2.1 django-crispy-forms 1.7.2 django-filter 2.1.0 django-guardian 1.5.1 djangorestframework 3.9.4 idna 2.8 itypes 1.1.0 Jinja2 2.10.1 Markdown 3.1 MarkupSafe 1.1.1 pip 18.1 pytz 2019.1 requests 2.21.0 setuptools 40.6.2 sqlparse 0.3.0 uritemplate 3.0.0 urllib3 1.24.3 You are using pip version 18.1, however version 19.1.1 is available. You should consider upgrading via the pip install --upgrade pip command. vscodevscode\u5f00\u53d1Django vsCode Django Debug \u521b\u5efaPython\u865a\u62df\u8fd0\u884c\u73af\u5883 # macOS/Linux sudo apt-get install python3-venv # If needed python3 -m venv env # Windows python -m venv env","title":"\u524d\u540e\u7aef\u5206\u79bb\u5f00\u53d1"},{"location":"python/django/project/#vuejs","text":"npm install npm run dev #\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u76f8\u5173\u7684\u7c7b \u76ee\u5f55\u6587\u4ef6 apps\uff1a\u4fdd\u5b58\u6240\u6709\u7684app","title":"Vue.js\u7684\u5b89\u88c5"},{"location":"python/django/project/#build-paths-inside-the-project-like-this-ospathjoinbase_dir","text":"BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath( file )))","title":"Build paths inside the project like this: os.path.join(BASE_DIR, ...)"},{"location":"python/django/project/#appextras_app","text":"sys.path.insert(0, BASE_DIR) sys.path.insert(0, os.path.join(BASE_DIR, 'apps')) sys.path.insert(0, os.path.join(BASE_DIR, 'extras_app'))","title":"\u6dfb\u52a0\u66f4\u76ee\u5f55\u4e0b\u7684app\u3001extras_app\u5230\u67e5\u627e\u8def\u5f84\u4e2d"},{"location":"python/django/project/#vscode-django","text":"Vscode \u5f00\u53d1Django RestApi\u5b89\u88c5","title":"vscode Django \u5f00\u53d1"},{"location":"python/django/project/#xadmin","text":"Xadmin xadmin\u5f00\u53d1\u6587\u6863 \u4fee\u6539xadmin\u8bed\u8a00\uff1a 1.\u4fee\u6539Django\u4e2d\u7684\u8bed\u8a00\u73af\u5883 #\u8bbe\u7f6e\u65f6\u533a LANGUAGE_CODE = zh-hans # \u4e2d\u6587\u652f\u6301\uff0cdjango1.8\u4ee5\u540e\u652f\u6301\uff1b1.8\u4ee5\u524d\u662fzh-cn TIME_ZONE = Asia/Shanghai USE_I18N = True USE_L10N = True USE_TZ = False # \u9ed8\u8ba4\u662fTure\uff0c\u65f6\u95f4\u662futc\u65f6\u95f4\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u7528\u672c\u5730\u65f6\u95f4\uff0c\u6240\u7528\u624b\u52a8\u4fee\u6539\u4e3afalse\uff01\uff01\uff01\uff01 2.\u4fee\u6539app\u4e2d\u7684config\uff1a class GoodsConfig(AppConfig): name = goods verbose_name = \u5546\u54c1 pip install mysqlclient pip install pillow # \u4f5c\u4e3a\u56fe\u7247\u5904\u7406\u7684\u5305 pip install djangorestframework pip install markdown # Markdown support for the browsable API. pip install django-filter # Filtering support \u8de8\u57df\u89e3\u51b3\u95ee\u9898: Django cors headers \u5e93\u53bb\u89e3\u51b3 \u524d\u7aef\u4f7f\u7528Proxy.js \u4ee3\u7406\u7c7b\u6765\u89e3\u51b3 \u524d\u540e\u7aef\u5206\u79bb\u4e4bJWT DjangoUediter \u5bcc\u6587\u672c\u7f16\u8f91\u5668 (env) \u279c MxShop pip install DjangoUeditor GitHub\u4e0a\u53ef\u4ee5\u627e\u5230","title":"xadmin"},{"location":"python/django/project/#user","text":"","title":"\u6269\u5c55User\u7c7b"},{"location":"python/django/project/#navigate","text":"\u5b89\u88c5\u6570\u636e\u5e93Mysql\u8fde\u63a5\uff1a (env) \u279c MxShop pip install mysqlclient \u5904\u7406\u6570\u636e\u5e93\u8fde\u63a5\u9519\u8bef\u95ee\u9898: \u8bbe\u7f6e\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce Django \u6570\u636e\u5e93\u5904\u7406","title":"navigate \u767b\u5f55\u9519\u8bef\u4fee\u590d"},{"location":"python/django/project/#_3","text":"DATABASES = { 'default':{ 'ENGINE':'django.db.backends.mysql', 'NAME':'mxshop', 'PASSWORD':'root', 'HOST':\"127.0.0.1\", 'OPTIONS':{ 'init_command':'SET storage_engine=INNODB;' } } } \u63d0\u793a\u9519\u8bef Authentication plugin caching_sha2_password cannot be loaded: dlopen(/usr/local/mysql/lib/plugin/caching_sha2_password.so, 2): image not found ALTER USER root@localhost IDENTIFIED WITH mysql_native_password BY @Cangck123 ;","title":"\u6570\u636e\u5e93\u914d\u7f6e:"},{"location":"python/django/staticmanage/","text":"","title":"Staticmanage"},{"location":"python/project/DjangoProject/","text":"Django \u5f00\u53d1 \u5f00\u53d1\u6b65\u9aa4 1.\u9700\u6c42\u5206\u6790 2.Django\u9ad8\u7ea7\u7528\u6cd5 3.\u7b97\u6cd5 4.\u8bbe\u8ba1\u6a21\u5f0f 5.TestCase\u6d4b\u8bd5 6.\u4e91\u8ba1\u7b97\u670d\u52a1 Django 1.\u7b97\u6cd5 2.\u5b9e\u73b0\u6548\u679c 3.\u8bbe\u8ba1\u6a21\u5f0f 4.\u6846\u67b6\u539f\u7406 \u6587\u6863\u7f51\u7ad9 1.\u77e5\u4e4e 2.segmentfault 3.Quora 4.stackoverflow \u638c\u63e1\u7684\u8ba1\u7b97 1.Django\u9ad8\u7ea7\u7528\u6cd5 2.Channels\u5b9e\u65f6\u6d88\u606f\u63a8\u9001 3.testCase \u6d4b\u8bd5\u7528\u4f8b 4.\u6570\u636e\u5e93\u8bbe\u8ba1 \u7f51\u7ad9\u4f18\u5316 5.\u7b97\u6cd5\u3001\u8bbe\u8ba1\u6a21\u5f0f+\u878d\u5408\u9879\u76ee 6.\u4e91\u8ba1\u7b97\u670d\u52a1 \u73af\u5883\u642d\u5efa 1.\u4f7f\u7528pipenv\u7ba1\u7406\u9879\u76ee\u73af\u5883 2.\u81ea\u5b9a\u4e49\u7528\u6237\u6a21\u578b 3.\u4f18\u5148\u4f7f\u7528\u901a\u7528\u7c7b\u89c6\u56fe 4.\u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u4fdd\u5b58\u654f\u611f\u4fe1\u606f 5.\u4e3a\u4e0d\u540c\u73af\u5883\u5206\u522b\u914d\u7f6esettings.py\u6587\u4ef6 6.\u4e00\u5b9a\u8981\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b(\u6d4b\u8bd5\u8986\u76d6\u5ea6) pipenv\u73af\u5883\u7ba1\u7406\u5de5\u5177\u5b89\u88c5 pipenv\u73af\u5883\u5b89\u88c5 pipenv\u5b98\u7f51 \u89c6\u56fe 1.\u4e4b\u5b9a\u4e49\u7528\u6237\u89c6\u56fe 2.\u51fd\u6570\u89c6\u56fe(FBV) 3.\u7c7b\u89c6\u56fe(CBV) 4.\u901a\u7528\u89c6\u56fe(CBGV) Python\u7c7b\u89c6\u56fe\u5b9a\u4e49\u7ee7\u627f\u5173\u7cfb \u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u4fdd\u5b58\u654f\u611f\u4fe1\u606f \u4f9d\u636eTwelve-Factor\u65b9\u6cd5\u8bba\u4e3aDjango\u5e94\u7528\u914d\u7f6e\u73af\u5883\u53d8\u91cf 12factor\u6700\u4f73\u5b9e\u9645 [\u66f4\u597d\u7684\u7248\u672c\u63a7\u5236] \u9700\u6c42\u5206\u6790\u3001\u529f\u80fd\u8bbe\u8ba1\u3001\u6280\u672f\u9009\u578b \u4f7f\u7528\u767e\u5ea6\u8111\u56fe \u9700\u6c42\u5206\u6790 \u89c4\u683c\u8bf4\u660e\u4e66\u4f7f\u7528mkdown\u7f16\u5199\u89c4\u683c\u8bf4\u660e\u4e66 \u529f\u80fd\u8bbe\u8ba1 \u6280\u672f\u9009\u578b \u6280\u672f\u9009\u578b--- \u524d\u7aef\u4f7f\u7528\u7684\u8ba1\u7b97 \u540e\u7aef\u4f7f\u7528\u7684\u6280\u672f \u90e8\u7f72\u548c\u8fd0\u7ef4 \u6570\u636e\u5e93 \u7f51\u7ad9\u4f18\u5316 Cookiecutter\u73af\u5883\u5b89\u88c5 \u8ba9\u4f60\u7684\u9879\u76ee\u6a21\u677f\u5316\u548c\u4e13\u4e1a\u5316 \u5982\u4f55\u521b\u5efaCookiecutter\u5728Django\u6587\u6863\u4e2d How to Install PostgreSQL Relational Databases on CentOS 7 Python \u90e8\u7f72\u539f\u7406 parallels desktop \u5b89\u88c5centos7\u9ed8\u8ba4\u5bc6\u7801\u548croot\u95ee\u9898 parallels desktop\u4e0b\u8f7d\u7684centos7 \u9ed8\u8ba4\u7528\u6237\u540d\u662fparallels \u5bc6\u7801\u662f\u9700\u8981\u8bbe\u7f6e\u7684\u3002\u8f6f\u4ef6\u6ca1\u6709\u81ea\u52a8\u8bbe\u7f6e\u3002\u5bc6\u7801\u5fc5\u987b\u5927\u4e8e8\u4f4d\uff1b \u5e76\u4e14\u65e0\u6cd5\u8fdb\u884csu\u547d\u4ee4\uff0c\u63d0\u793a Authentication failure\u3002 \u8fd9\u4e2a\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u662f\u7531\u4e8e\u7cfb\u7edf\u9ed8\u8ba4\u662f\u6ca1\u6709\u6fc0\u6d3broot\u7528\u6237\u7684\uff0c\u9700\u8981\u6211\u4eec\u624b\u5de5\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u547d\u4ee4\u884c\u754c\u9762\u4e0b\uff0c\u6216\u8005\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a sudo passwd Password\uff1a\u4f60\u5f53\u524d\u7684\u5bc6\u7801 Enter new UNIX password\uff1a\u8fd9\u4e2a\u662froot\u7684\u5bc6\u7801 Retype new UNIX password\uff1a\u91cd\u590droot\u7684\u5bc6\u7801 \u7136\u540e\u4f1a\u63d0\u793a\u6210\u529f\u7684\u4fe1\u606f\u3002 \u5728\u8bf4\u660e\u4e00\u70b9\uff0c\u4f7f\u7528su\u548csudo\u662f\u6709\u533a\u522b\u7684\uff0c\u4f7f\u7528su\u5207\u6362\u7528\u6237\u9700\u8981\u8f93\u5165\u6240\u5207\u6362\u5230\u7684\u7528\u6237\u7684\u5bc6\u7801\uff0c\u800c\u4f7f\u7528sudo\u5219\u662f\u5f53\u524d\u7528\u6237\u7684\u5bc6\u7801\u3002 CentOS7 CentOS\u5f00\u53d1\u5305\u7684\u4f7f\u7528 Paralle\u5b89\u88c5CentOS7 Python3\u5b89\u88c5 CentOS Redis\u5b89\u88c5\u914d\u7f6e CentOS Nginx\u5b89\u88c5 \u6dfb\u52a0pip\u8bbf\u95ee\u6e90","title":"Django \u5f00\u53d1"},{"location":"python/project/DjangoProject/#django","text":"","title":"Django \u5f00\u53d1"},{"location":"python/project/DjangoProject/#_1","text":"1.\u9700\u6c42\u5206\u6790 2.Django\u9ad8\u7ea7\u7528\u6cd5 3.\u7b97\u6cd5 4.\u8bbe\u8ba1\u6a21\u5f0f 5.TestCase\u6d4b\u8bd5 6.\u4e91\u8ba1\u7b97\u670d\u52a1","title":"\u5f00\u53d1\u6b65\u9aa4"},{"location":"python/project/DjangoProject/#django_1","text":"1.\u7b97\u6cd5 2.\u5b9e\u73b0\u6548\u679c 3.\u8bbe\u8ba1\u6a21\u5f0f 4.\u6846\u67b6\u539f\u7406","title":"Django"},{"location":"python/project/DjangoProject/#_2","text":"1.\u77e5\u4e4e 2.segmentfault 3.Quora 4.stackoverflow","title":"\u6587\u6863\u7f51\u7ad9"},{"location":"python/project/DjangoProject/#_3","text":"1.Django\u9ad8\u7ea7\u7528\u6cd5 2.Channels\u5b9e\u65f6\u6d88\u606f\u63a8\u9001 3.testCase \u6d4b\u8bd5\u7528\u4f8b 4.\u6570\u636e\u5e93\u8bbe\u8ba1 \u7f51\u7ad9\u4f18\u5316 5.\u7b97\u6cd5\u3001\u8bbe\u8ba1\u6a21\u5f0f+\u878d\u5408\u9879\u76ee 6.\u4e91\u8ba1\u7b97\u670d\u52a1","title":"\u638c\u63e1\u7684\u8ba1\u7b97"},{"location":"python/project/DjangoProject/#_4","text":"1.\u4f7f\u7528pipenv\u7ba1\u7406\u9879\u76ee\u73af\u5883 2.\u81ea\u5b9a\u4e49\u7528\u6237\u6a21\u578b 3.\u4f18\u5148\u4f7f\u7528\u901a\u7528\u7c7b\u89c6\u56fe 4.\u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u4fdd\u5b58\u654f\u611f\u4fe1\u606f 5.\u4e3a\u4e0d\u540c\u73af\u5883\u5206\u522b\u914d\u7f6esettings.py\u6587\u4ef6 6.\u4e00\u5b9a\u8981\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b(\u6d4b\u8bd5\u8986\u76d6\u5ea6)","title":"\u73af\u5883\u642d\u5efa"},{"location":"python/project/DjangoProject/#pipenv","text":"pipenv\u73af\u5883\u5b89\u88c5 pipenv\u5b98\u7f51","title":"pipenv\u73af\u5883\u7ba1\u7406\u5de5\u5177\u5b89\u88c5"},{"location":"python/project/DjangoProject/#_5","text":"1.\u4e4b\u5b9a\u4e49\u7528\u6237\u89c6\u56fe 2.\u51fd\u6570\u89c6\u56fe(FBV) 3.\u7c7b\u89c6\u56fe(CBV) 4.\u901a\u7528\u89c6\u56fe(CBGV) Python\u7c7b\u89c6\u56fe\u5b9a\u4e49\u7ee7\u627f\u5173\u7cfb","title":"\u89c6\u56fe"},{"location":"python/project/DjangoProject/#_6","text":"\u4f9d\u636eTwelve-Factor\u65b9\u6cd5\u8bba\u4e3aDjango\u5e94\u7528\u914d\u7f6e\u73af\u5883\u53d8\u91cf 12factor\u6700\u4f73\u5b9e\u9645 [\u66f4\u597d\u7684\u7248\u672c\u63a7\u5236]","title":"\u5728\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u4fdd\u5b58\u654f\u611f\u4fe1\u606f"},{"location":"python/project/DjangoProject/#_7","text":"\u4f7f\u7528\u767e\u5ea6\u8111\u56fe \u9700\u6c42\u5206\u6790 \u89c4\u683c\u8bf4\u660e\u4e66\u4f7f\u7528mkdown\u7f16\u5199\u89c4\u683c\u8bf4\u660e\u4e66 \u529f\u80fd\u8bbe\u8ba1 \u6280\u672f\u9009\u578b \u6280\u672f\u9009\u578b--- \u524d\u7aef\u4f7f\u7528\u7684\u8ba1\u7b97 \u540e\u7aef\u4f7f\u7528\u7684\u6280\u672f \u90e8\u7f72\u548c\u8fd0\u7ef4 \u6570\u636e\u5e93 \u7f51\u7ad9\u4f18\u5316","title":"\u9700\u6c42\u5206\u6790\u3001\u529f\u80fd\u8bbe\u8ba1\u3001\u6280\u672f\u9009\u578b"},{"location":"python/project/DjangoProject/#cookiecutter","text":"\u8ba9\u4f60\u7684\u9879\u76ee\u6a21\u677f\u5316\u548c\u4e13\u4e1a\u5316 \u5982\u4f55\u521b\u5efaCookiecutter\u5728Django\u6587\u6863\u4e2d How to Install PostgreSQL Relational Databases on CentOS 7","title":"Cookiecutter\u73af\u5883\u5b89\u88c5"},{"location":"python/project/DjangoProject/#python","text":"","title":"Python \u90e8\u7f72\u539f\u7406"},{"location":"python/project/DjangoProject/#parallels-desktop-centos7root","text":"parallels desktop\u4e0b\u8f7d\u7684centos7 \u9ed8\u8ba4\u7528\u6237\u540d\u662fparallels \u5bc6\u7801\u662f\u9700\u8981\u8bbe\u7f6e\u7684\u3002\u8f6f\u4ef6\u6ca1\u6709\u81ea\u52a8\u8bbe\u7f6e\u3002\u5bc6\u7801\u5fc5\u987b\u5927\u4e8e8\u4f4d\uff1b \u5e76\u4e14\u65e0\u6cd5\u8fdb\u884csu\u547d\u4ee4\uff0c\u63d0\u793a Authentication failure\u3002 \u8fd9\u4e2a\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u662f\u7531\u4e8e\u7cfb\u7edf\u9ed8\u8ba4\u662f\u6ca1\u6709\u6fc0\u6d3broot\u7528\u6237\u7684\uff0c\u9700\u8981\u6211\u4eec\u624b\u5de5\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u547d\u4ee4\u884c\u754c\u9762\u4e0b\uff0c\u6216\u8005\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a sudo passwd Password\uff1a\u4f60\u5f53\u524d\u7684\u5bc6\u7801 Enter new UNIX password\uff1a\u8fd9\u4e2a\u662froot\u7684\u5bc6\u7801 Retype new UNIX password\uff1a\u91cd\u590droot\u7684\u5bc6\u7801 \u7136\u540e\u4f1a\u63d0\u793a\u6210\u529f\u7684\u4fe1\u606f\u3002 \u5728\u8bf4\u660e\u4e00\u70b9\uff0c\u4f7f\u7528su\u548csudo\u662f\u6709\u533a\u522b\u7684\uff0c\u4f7f\u7528su\u5207\u6362\u7528\u6237\u9700\u8981\u8f93\u5165\u6240\u5207\u6362\u5230\u7684\u7528\u6237\u7684\u5bc6\u7801\uff0c\u800c\u4f7f\u7528sudo\u5219\u662f\u5f53\u524d\u7528\u6237\u7684\u5bc6\u7801\u3002","title":"parallels desktop \u5b89\u88c5centos7\u9ed8\u8ba4\u5bc6\u7801\u548croot\u95ee\u9898"},{"location":"python/project/DjangoProject/#centos7","text":"CentOS\u5f00\u53d1\u5305\u7684\u4f7f\u7528 Paralle\u5b89\u88c5CentOS7 Python3\u5b89\u88c5 CentOS Redis\u5b89\u88c5\u914d\u7f6e CentOS Nginx\u5b89\u88c5 \u6dfb\u52a0pip\u8bbf\u95ee\u6e90","title":"CentOS7"},{"location":"python/scrapy/scrapyBase/","text":"","title":"\u722c\u866b\u57fa\u7840"},{"location":"python/scrapy/scrapylib/","text":"8\u4e2a\u6700\u9ad8\u6548\u7684Python\u722c\u866b\u6846\u67b6\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f Scrapy Scrapy\u662f\u4e00\u4e2a\u4e3a\u4e86\u722c\u53d6\u7f51\u7ad9\u6570\u636e\uff0c\u63d0\u53d6\u7ed3\u6784\u6027\u6570\u636e\u800c\u7f16\u5199\u7684\u5e94\u7528\u6846\u67b6\u3002 \u53ef\u4ee5\u5e94\u7528\u5728\u5305\u62ec\u6570\u636e\u6316\u6398\uff0c\u4fe1\u606f\u5904\u7406\u6216\u5b58\u50a8\u5386\u53f2\u6570\u636e\u7b49\u4e00\u7cfb\u5217\u7684\u7a0b\u5e8f\u4e2d\u3002\u3002\u7528\u8fd9\u4e2a\u6846\u67b6\u53ef\u4ee5\u8f7b\u677e\u722c\u4e0b\u6765\u5982\u4e9a\u9a6c\u900a\u5546\u54c1\u4fe1\u606f\u4e4b\u7c7b\u7684\u6570\u636e\u3002 \u9879\u76ee\u5730\u5740: https://scrapy.org/ PySpider pyspider \u662f\u4e00\u4e2a\u7528python\u5b9e\u73b0\u7684\u529f\u80fd\u5f3a\u5927\u7684\u7f51\u7edc\u722c\u866b\u7cfb\u7edf\uff0c\u80fd\u5728\u6d4f\u89c8\u5668\u754c\u9762\u4e0a\u8fdb\u884c\u811a\u672c\u7684\u7f16\u5199\uff0c\u529f\u80fd\u7684\u8c03\u5ea6\u548c\u722c\u53d6\u7ed3\u679c\u7684\u5b9e\u65f6\u67e5\u770b\uff0c\u540e\u7aef\u4f7f\u7528\u5e38\u7528\u7684\u6570\u636e\u5e93\u8fdb\u884c\u722c\u53d6\u7ed3\u679c\u7684\u5b58\u50a8\uff0c\u8fd8\u80fd\u5b9a\u65f6\u8bbe\u7f6e\u4efb\u52a1\u4e0e\u4efb\u52a1\u4f18\u5148\u7ea7\u7b49\u3002 \u9879\u76ee\u5730\u5740: https://github.com/binux/pyspider Crawley Crawley\u53ef\u4ee5\u9ad8\u901f\u722c\u53d6\u5bf9\u5e94\u7f51\u7ad9\u7684\u5185\u5bb9\uff0c\u652f\u6301\u5173\u7cfb\u548c\u975e\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u6570\u636e\u53ef\u4ee5\u5bfc\u51fa\u4e3aJSON\u3001XML\u7b49\u3002 \u9879\u76ee\u5730\u5740: http://project.crawley-cloud.com/ Portia Portia\u662f\u4e00\u4e2a\u5f00\u6e90\u53ef\u89c6\u5316\u722c\u866b\u5de5\u5177\uff0c\u53ef\u8ba9\u60a8\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u7f16\u7a0b\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\u722c\u53d6\u7f51\u7ad9\uff01\u7b80\u5355\u5730\u6ce8\u91ca\u60a8\u611f\u5174\u8da3\u7684\u9875\u9762\uff0cPortia\u5c06\u521b\u5efa\u4e00\u4e2a\u8718\u86db\u6765\u4ece\u7c7b\u4f3c\u7684\u9875\u9762\u63d0\u53d6\u6570\u636e\u3002 \u9879\u76ee\u5730\u5740\uff1a https://github.com/scrapinghub/portia Newspaper Newspaper\u53ef\u4ee5\u7528\u6765\u63d0\u53d6\u65b0\u95fb\u3001\u6587\u7ae0\u548c\u5185\u5bb9\u5206\u6790\u3002\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u652f\u630110\u591a\u79cd\u8bed\u8a00\u7b49\u3002 \u9879\u76ee\u5730\u5740\uff1a https://github.com/codelucas/newspaper Beautiful Soup Beautiful Soup \u662f\u4e00\u4e2a\u53ef\u4ee5\u4eceHTML\u6216XML\u6587\u4ef6\u4e2d\u63d0\u53d6\u6570\u636e\u7684Python\u5e93.\u5b83\u80fd\u591f\u901a\u8fc7\u4f60\u559c\u6b22\u7684\u8f6c\u6362\u5668\u5b9e\u73b0\u60ef\u7528\u7684\u6587\u6863\u5bfc\u822a,\u67e5\u627e,\u4fee\u6539\u6587\u6863\u7684\u65b9\u5f0f.Beautiful Soup\u4f1a\u5e2e\u4f60\u8282\u7701\u6570\u5c0f\u65f6\u751a\u81f3\u6570\u5929\u7684\u5de5\u4f5c\u65f6\u95f4\u3002 \u9879\u76ee\u5730\u5740\uff1a https://www.crummy.com/software/BeautifulSoup/bs4/doc/ Grab Grab\u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efaWeb\u522e\u677f\u7684Python\u6846\u67b6\u3002\u501f\u52a9Grab\uff0c\u60a8\u53ef\u4ee5\u6784\u5efa\u5404\u79cd\u590d\u6742\u7684\u7f51\u9875\u6293\u53d6\u5de5\u5177\uff0c\u4ece\u7b80\u5355\u76845\u884c\u811a\u672c\u5230\u5904\u7406\u6570\u767e\u4e07\u4e2a\u7f51\u9875\u7684\u590d\u6742\u5f02\u6b65\u7f51\u7ad9\u6293\u53d6\u5de5\u5177\u3002Grab\u63d0\u4f9b\u4e00\u4e2aAPI\u7528\u4e8e\u6267\u884c\u7f51\u7edc\u8bf7\u6c42\u548c\u5904\u7406\u63a5\u6536\u5230\u7684\u5185\u5bb9\uff0c\u4f8b\u5982\u4e0eHTML\u6587\u6863\u7684DOM\u6811\u8fdb\u884c\u4ea4\u4e92\u3002 \u9879\u76ee\u5730\u5740\uff1a http://docs.grablib.org/en/latest/#grab-spider-user-manual Cola Cola\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u722c\u866b\u6846\u67b6\uff0c\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u53ea\u9700\u7f16\u5199\u51e0\u4e2a\u7279\u5b9a\u7684\u51fd\u6570\uff0c\u800c\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u8fd0\u884c\u7684\u7ec6\u8282\u3002\u4efb\u52a1\u4f1a\u81ea\u52a8\u5206\u914d\u5230\u591a\u53f0\u673a\u5668\u4e0a\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5bf9\u7528\u6237\u662f\u900f\u660e\u7684\u3002 \u9879\u76ee\u5730\u5740\uff1a https://github.com/chineking/cola Python \u722c\u866b\u9879\u76ee 23\u4e2aPython\u722c\u866b\u5f00\u6e90\u9879\u76ee\u4ee3\u7801\uff1a\u722c\u53d6\u5fae\u4fe1\u3001\u6dd8\u5b9d\u3001\u8c46\u74e3\u3001\u77e5 scrapy\u6846\u67b6\u7684\u4f7f\u7528\u65b9\u6cd5 \u4f7f\u7528python\u6293\u53d6\u4eac\u4e1c\u5168\u7ad9\u6570\u636e\uff08\u5546\u54c1\uff0c\u5e97\u94fa\uff0c\u5206\u7c7b\uff0c\u8bc4\u8bba\uff09 \u5c0f\u767d\u8fdb\u9636\u4e4bScrapy\u7b2c\u4e00\u7bc7 \u57fa\u4e8e Python \u5b9e\u73b0\u5fae\u4fe1\u516c\u4f17\u53f7\u722c\u866b","title":"\u722c\u866b\u5e93"},{"location":"python/scrapy/scrapylib/#8python","text":"","title":"8\u4e2a\u6700\u9ad8\u6548\u7684Python\u722c\u866b\u6846\u67b6\uff0c\u4f60\u7528\u8fc7\u51e0\u4e2a\uff1f"},{"location":"python/scrapy/scrapylib/#scrapy","text":"Scrapy\u662f\u4e00\u4e2a\u4e3a\u4e86\u722c\u53d6\u7f51\u7ad9\u6570\u636e\uff0c\u63d0\u53d6\u7ed3\u6784\u6027\u6570\u636e\u800c\u7f16\u5199\u7684\u5e94\u7528\u6846\u67b6\u3002 \u53ef\u4ee5\u5e94\u7528\u5728\u5305\u62ec\u6570\u636e\u6316\u6398\uff0c\u4fe1\u606f\u5904\u7406\u6216\u5b58\u50a8\u5386\u53f2\u6570\u636e\u7b49\u4e00\u7cfb\u5217\u7684\u7a0b\u5e8f\u4e2d\u3002\u3002\u7528\u8fd9\u4e2a\u6846\u67b6\u53ef\u4ee5\u8f7b\u677e\u722c\u4e0b\u6765\u5982\u4e9a\u9a6c\u900a\u5546\u54c1\u4fe1\u606f\u4e4b\u7c7b\u7684\u6570\u636e\u3002 \u9879\u76ee\u5730\u5740: https://scrapy.org/","title":"Scrapy"},{"location":"python/scrapy/scrapylib/#pyspider","text":"pyspider \u662f\u4e00\u4e2a\u7528python\u5b9e\u73b0\u7684\u529f\u80fd\u5f3a\u5927\u7684\u7f51\u7edc\u722c\u866b\u7cfb\u7edf\uff0c\u80fd\u5728\u6d4f\u89c8\u5668\u754c\u9762\u4e0a\u8fdb\u884c\u811a\u672c\u7684\u7f16\u5199\uff0c\u529f\u80fd\u7684\u8c03\u5ea6\u548c\u722c\u53d6\u7ed3\u679c\u7684\u5b9e\u65f6\u67e5\u770b\uff0c\u540e\u7aef\u4f7f\u7528\u5e38\u7528\u7684\u6570\u636e\u5e93\u8fdb\u884c\u722c\u53d6\u7ed3\u679c\u7684\u5b58\u50a8\uff0c\u8fd8\u80fd\u5b9a\u65f6\u8bbe\u7f6e\u4efb\u52a1\u4e0e\u4efb\u52a1\u4f18\u5148\u7ea7\u7b49\u3002 \u9879\u76ee\u5730\u5740: https://github.com/binux/pyspider","title":"PySpider"},{"location":"python/scrapy/scrapylib/#crawley","text":"Crawley\u53ef\u4ee5\u9ad8\u901f\u722c\u53d6\u5bf9\u5e94\u7f51\u7ad9\u7684\u5185\u5bb9\uff0c\u652f\u6301\u5173\u7cfb\u548c\u975e\u5173\u7cfb\u6570\u636e\u5e93\uff0c\u6570\u636e\u53ef\u4ee5\u5bfc\u51fa\u4e3aJSON\u3001XML\u7b49\u3002 \u9879\u76ee\u5730\u5740: http://project.crawley-cloud.com/","title":"Crawley"},{"location":"python/scrapy/scrapylib/#portia","text":"Portia\u662f\u4e00\u4e2a\u5f00\u6e90\u53ef\u89c6\u5316\u722c\u866b\u5de5\u5177\uff0c\u53ef\u8ba9\u60a8\u5728\u4e0d\u9700\u8981\u4efb\u4f55\u7f16\u7a0b\u77e5\u8bc6\u7684\u60c5\u51b5\u4e0b\u722c\u53d6\u7f51\u7ad9\uff01\u7b80\u5355\u5730\u6ce8\u91ca\u60a8\u611f\u5174\u8da3\u7684\u9875\u9762\uff0cPortia\u5c06\u521b\u5efa\u4e00\u4e2a\u8718\u86db\u6765\u4ece\u7c7b\u4f3c\u7684\u9875\u9762\u63d0\u53d6\u6570\u636e\u3002 \u9879\u76ee\u5730\u5740\uff1a https://github.com/scrapinghub/portia","title":"Portia"},{"location":"python/scrapy/scrapylib/#newspaper","text":"Newspaper\u53ef\u4ee5\u7528\u6765\u63d0\u53d6\u65b0\u95fb\u3001\u6587\u7ae0\u548c\u5185\u5bb9\u5206\u6790\u3002\u4f7f\u7528\u591a\u7ebf\u7a0b\uff0c\u652f\u630110\u591a\u79cd\u8bed\u8a00\u7b49\u3002 \u9879\u76ee\u5730\u5740\uff1a https://github.com/codelucas/newspaper","title":"Newspaper"},{"location":"python/scrapy/scrapylib/#beautiful-soup","text":"Beautiful Soup \u662f\u4e00\u4e2a\u53ef\u4ee5\u4eceHTML\u6216XML\u6587\u4ef6\u4e2d\u63d0\u53d6\u6570\u636e\u7684Python\u5e93.\u5b83\u80fd\u591f\u901a\u8fc7\u4f60\u559c\u6b22\u7684\u8f6c\u6362\u5668\u5b9e\u73b0\u60ef\u7528\u7684\u6587\u6863\u5bfc\u822a,\u67e5\u627e,\u4fee\u6539\u6587\u6863\u7684\u65b9\u5f0f.Beautiful Soup\u4f1a\u5e2e\u4f60\u8282\u7701\u6570\u5c0f\u65f6\u751a\u81f3\u6570\u5929\u7684\u5de5\u4f5c\u65f6\u95f4\u3002 \u9879\u76ee\u5730\u5740\uff1a https://www.crummy.com/software/BeautifulSoup/bs4/doc/","title":"Beautiful Soup"},{"location":"python/scrapy/scrapylib/#grab","text":"Grab\u662f\u4e00\u4e2a\u7528\u4e8e\u6784\u5efaWeb\u522e\u677f\u7684Python\u6846\u67b6\u3002\u501f\u52a9Grab\uff0c\u60a8\u53ef\u4ee5\u6784\u5efa\u5404\u79cd\u590d\u6742\u7684\u7f51\u9875\u6293\u53d6\u5de5\u5177\uff0c\u4ece\u7b80\u5355\u76845\u884c\u811a\u672c\u5230\u5904\u7406\u6570\u767e\u4e07\u4e2a\u7f51\u9875\u7684\u590d\u6742\u5f02\u6b65\u7f51\u7ad9\u6293\u53d6\u5de5\u5177\u3002Grab\u63d0\u4f9b\u4e00\u4e2aAPI\u7528\u4e8e\u6267\u884c\u7f51\u7edc\u8bf7\u6c42\u548c\u5904\u7406\u63a5\u6536\u5230\u7684\u5185\u5bb9\uff0c\u4f8b\u5982\u4e0eHTML\u6587\u6863\u7684DOM\u6811\u8fdb\u884c\u4ea4\u4e92\u3002 \u9879\u76ee\u5730\u5740\uff1a http://docs.grablib.org/en/latest/#grab-spider-user-manual","title":"Grab"},{"location":"python/scrapy/scrapylib/#cola","text":"Cola\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u722c\u866b\u6846\u67b6\uff0c\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u53ea\u9700\u7f16\u5199\u51e0\u4e2a\u7279\u5b9a\u7684\u51fd\u6570\uff0c\u800c\u65e0\u9700\u5173\u6ce8\u5206\u5e03\u5f0f\u8fd0\u884c\u7684\u7ec6\u8282\u3002\u4efb\u52a1\u4f1a\u81ea\u52a8\u5206\u914d\u5230\u591a\u53f0\u673a\u5668\u4e0a\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5bf9\u7528\u6237\u662f\u900f\u660e\u7684\u3002 \u9879\u76ee\u5730\u5740\uff1a https://github.com/chineking/cola","title":"Cola"},{"location":"python/scrapy/scrapylib/#python","text":"23\u4e2aPython\u722c\u866b\u5f00\u6e90\u9879\u76ee\u4ee3\u7801\uff1a\u722c\u53d6\u5fae\u4fe1\u3001\u6dd8\u5b9d\u3001\u8c46\u74e3\u3001\u77e5 scrapy\u6846\u67b6\u7684\u4f7f\u7528\u65b9\u6cd5 \u4f7f\u7528python\u6293\u53d6\u4eac\u4e1c\u5168\u7ad9\u6570\u636e\uff08\u5546\u54c1\uff0c\u5e97\u94fa\uff0c\u5206\u7c7b\uff0c\u8bc4\u8bba\uff09 \u5c0f\u767d\u8fdb\u9636\u4e4bScrapy\u7b2c\u4e00\u7bc7 \u57fa\u4e8e Python \u5b9e\u73b0\u5fae\u4fe1\u516c\u4f17\u53f7\u722c\u866b","title":"Python \u722c\u866b\u9879\u76ee"},{"location":"python/scrapy/spiderdemo/","text":"scrapy\u76f8\u5173\u77e5\u8bc6\u70b9 Scrapy \u5b98\u7f51: https://doc.scrapy.org/en/latest/index.html Scrapy github\u4ed3\u5e93: https://github.com/scrapy/scrapy Github\u4ed3\u5e93: https://github.com/cangchengkun/ScrapyDemo settings \u7c7b\u7684\u4f7f\u7528: Scrapy \u4e8b\u4ef6\u9a71\u52a8\u7684\u7f51\u7edc\u5e93:Twisted https://twistedmatrix.com/trac/ \u8fd0\u884cScrapy\u811a\u672c: https://www.cnblogs.com/lawlietfans/p/7475742.html \u4f7f\u7528\u811a\u672c\u65b9\u5f0f\u542f\u52a8spider: https://www.cnblogs.com/lawlietfans/p/7475742.html Python\u722c\u866bscrapy-redis\u5206\u5e03\u5f0f\u5b9e\u4f8b https://www.cnblogs.com/xinyangsdut/p/7631222.html Python\u6a21\u62df\u767b\u9646\u4eac\u4e1c https://blog.csdn.net/qq_34288630/article/details/80669052 python\u722c\u866bselenium+firefox\u6293\u53d6\u4eac\u4e1c\u5546\u54c1\u8bc4\u8bba https://blog.csdn.net/castingA3T/article/details/79099468 \u4f7f\u7528python\u6293\u53d6\u4eac\u4e1c\u5168\u7ad9\u6570\u636e\uff08\u5546\u54c1\uff0c\u5e97\u94fa\uff0c\u5206\u7c7b\uff0c\u8bc4\u8bba\uff09 https://blog.csdn.net/Kandy_Ye/article/details/70183110 Pyton\u4f7f\u7528\u6587\u4ef6\u8bfb\u53d6\u7cfb\u7edf\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6 /Users/cuco/PycharmProjects/ScrapyJindong/test/test.py \u8c03\u7528\u547d\u4ee4\u884c\u5de5\u5177\u6267\u884c scrapy.commands.shell.Command \u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7c7b\u6765\u6784\u9020\u7c7b\u6269\u5c55 scrapy genspider -t crawl tencentcrawl tencent.com \u4fe1\u53f7\u673a\u5236: /Users/cuco/PycharmProjects/ScrapyJindong/venv/lib/python3.7/site-packages/scrapy/utils/signal.py \u7cfb\u7edf\u8b66\u544a\u4fe1\u606f: /usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/warnings.py scrapy\u8f93\u51fa\u683c\u5f0f: \u65b0\u6d6a\u5fae\u535a\u6293\u53d6 https://www.cnblogs.com/xinyangsdut/p/7631163.html 1.\u521b\u5efa\u5de5\u7a0b scrapy startproject sinaNews #scrapy/templates/project \u4f7f\u7528\u7684\u521b\u5efa\u6a21\u677f \u5207\u6362\u5230\u5de5\u7a0b\u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u722c\u866b\u7c7b cd sinaNews scrapy genspider example example.com \u6587\u4ef6\u91cc\u9762\u8bbe\u7f6e\u8fd0\u884c\u73af\u5883\u7f16\u7801: import sys reload(sys) sys.setdefaultencoding( utf-8 ) \u6570\u636e\u4fdd\u5b58\u5230Mogodb https://www.cnblogs.com/xinyangsdut/p/7688130.html \u722c\u866b\u6a21\u62df\u7f51\u7ad9\u767b\u5f55: \u4e0b\u8f7d\u4e2d\u95f4\u4ef6\u8bbe\u7f6e \uff1a\u8bbe\u7f6e\u52a8\u6001Uesr-Agent\u548c\u4ee3\u7406IP https://www.cnblogs.com/xinyangsdut/p/7755438.html \u4f7f\u7528\u963f\u91cc\u670d\u52a1\u8bc6\u522b\u722c\u866b\u9a8c\u8bc1\u7801 \u722c\u866b\u5b9e\u6218\u7bc7---\u4f7f\u7528Scrapy\u6846\u67b6\u8fdb\u884c\u6a21\u62df\u767b\u5f55(\u5305\u62ec\u501f\u52a9\u963f\u91cc\u4e91\u670d\u52a1\u81ea\u52a8\u8bc6\u522b\u9a8c\u8bc1\u7801) https://www.cnblogs.com/518894-lu/p/9178043.html urllib\u5e93\u7684\u4f7f\u7528 \u722c\u53d6\u94fe\u5bb6\u7f51\u6210\u4ea4\u623f\u6e90\u6570\u636e\uff08\u4e0a\uff09 https://www.cnblogs.com/cnkai/p/7404972.html \u4f7f\u7528\u4e24\u6b3e\u706b\u72d0\u63d2\u4ef6: 1.firebug 2.firepath \u7528\u6237\u4ee3\u7406:\u300a\u7279\u6027\u68c0\u6d4b\u5e76\u975e\u6d4f\u89c8\u5668\u68c0\u6d4b\u300b https://www.cnblogs.com/hykun/p/Ua.html \u670d\u52a1\u5668\u5904\u7406User-agent: http://www.2zzt.com/jianzhan/7347.html","title":"\u722c\u866b\u5b9e\u6218"},{"location":"python/scrapy/spiderdemo/#scrapy","text":"Scrapy \u5b98\u7f51: https://doc.scrapy.org/en/latest/index.html Scrapy github\u4ed3\u5e93: https://github.com/scrapy/scrapy Github\u4ed3\u5e93: https://github.com/cangchengkun/ScrapyDemo settings \u7c7b\u7684\u4f7f\u7528: Scrapy \u4e8b\u4ef6\u9a71\u52a8\u7684\u7f51\u7edc\u5e93:Twisted https://twistedmatrix.com/trac/ \u8fd0\u884cScrapy\u811a\u672c: https://www.cnblogs.com/lawlietfans/p/7475742.html \u4f7f\u7528\u811a\u672c\u65b9\u5f0f\u542f\u52a8spider: https://www.cnblogs.com/lawlietfans/p/7475742.html Python\u722c\u866bscrapy-redis\u5206\u5e03\u5f0f\u5b9e\u4f8b https://www.cnblogs.com/xinyangsdut/p/7631222.html Python\u6a21\u62df\u767b\u9646\u4eac\u4e1c https://blog.csdn.net/qq_34288630/article/details/80669052 python\u722c\u866bselenium+firefox\u6293\u53d6\u4eac\u4e1c\u5546\u54c1\u8bc4\u8bba https://blog.csdn.net/castingA3T/article/details/79099468 \u4f7f\u7528python\u6293\u53d6\u4eac\u4e1c\u5168\u7ad9\u6570\u636e\uff08\u5546\u54c1\uff0c\u5e97\u94fa\uff0c\u5206\u7c7b\uff0c\u8bc4\u8bba\uff09 https://blog.csdn.net/Kandy_Ye/article/details/70183110 Pyton\u4f7f\u7528\u6587\u4ef6\u8bfb\u53d6\u7cfb\u7edf\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6 /Users/cuco/PycharmProjects/ScrapyJindong/test/test.py \u8c03\u7528\u547d\u4ee4\u884c\u5de5\u5177\u6267\u884c scrapy.commands.shell.Command","title":"scrapy\u76f8\u5173\u77e5\u8bc6\u70b9"},{"location":"python/scrapy/spiderdemo/#_1","text":"scrapy genspider -t crawl tencentcrawl tencent.com \u4fe1\u53f7\u673a\u5236: /Users/cuco/PycharmProjects/ScrapyJindong/venv/lib/python3.7/site-packages/scrapy/utils/signal.py \u7cfb\u7edf\u8b66\u544a\u4fe1\u606f: /usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/warnings.py scrapy\u8f93\u51fa\u683c\u5f0f:","title":"\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u7684\u7c7b\u6765\u6784\u9020\u7c7b\u6269\u5c55"},{"location":"python/scrapy/spiderdemo/#_2","text":"https://www.cnblogs.com/xinyangsdut/p/7631163.html 1.\u521b\u5efa\u5de5\u7a0b scrapy startproject sinaNews #scrapy/templates/project \u4f7f\u7528\u7684\u521b\u5efa\u6a21\u677f \u5207\u6362\u5230\u5de5\u7a0b\u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u722c\u866b\u7c7b cd sinaNews scrapy genspider example example.com \u6587\u4ef6\u91cc\u9762\u8bbe\u7f6e\u8fd0\u884c\u73af\u5883\u7f16\u7801: import sys reload(sys) sys.setdefaultencoding( utf-8 )","title":"\u65b0\u6d6a\u5fae\u535a\u6293\u53d6"},{"location":"python/scrapy/spiderdemo/#mogodb","text":"https://www.cnblogs.com/xinyangsdut/p/7688130.html","title":"\u6570\u636e\u4fdd\u5b58\u5230Mogodb"},{"location":"python/scrapy/spiderdemo/#_3","text":"","title":"\u722c\u866b\u6a21\u62df\u7f51\u7ad9\u767b\u5f55:"},{"location":"python/scrapy/spiderdemo/#uesr-agentip","text":"https://www.cnblogs.com/xinyangsdut/p/7755438.html","title":"\u4e0b\u8f7d\u4e2d\u95f4\u4ef6\u8bbe\u7f6e \uff1a\u8bbe\u7f6e\u52a8\u6001Uesr-Agent\u548c\u4ee3\u7406IP"},{"location":"python/scrapy/spiderdemo/#_4","text":"\u722c\u866b\u5b9e\u6218\u7bc7---\u4f7f\u7528Scrapy\u6846\u67b6\u8fdb\u884c\u6a21\u62df\u767b\u5f55(\u5305\u62ec\u501f\u52a9\u963f\u91cc\u4e91\u670d\u52a1\u81ea\u52a8\u8bc6\u522b\u9a8c\u8bc1\u7801) https://www.cnblogs.com/518894-lu/p/9178043.html","title":"\u4f7f\u7528\u963f\u91cc\u670d\u52a1\u8bc6\u522b\u722c\u866b\u9a8c\u8bc1\u7801"},{"location":"python/scrapy/spiderdemo/#urllib","text":"","title":"urllib\u5e93\u7684\u4f7f\u7528"},{"location":"python/scrapy/spiderdemo/#_5","text":"https://www.cnblogs.com/cnkai/p/7404972.html \u4f7f\u7528\u4e24\u6b3e\u706b\u72d0\u63d2\u4ef6: 1.firebug 2.firepath \u7528\u6237\u4ee3\u7406:\u300a\u7279\u6027\u68c0\u6d4b\u5e76\u975e\u6d4f\u89c8\u5668\u68c0\u6d4b\u300b https://www.cnblogs.com/hykun/p/Ua.html \u670d\u52a1\u5668\u5904\u7406User-agent: http://www.2zzt.com/jianzhan/7347.html","title":"\u722c\u53d6\u94fe\u5bb6\u7f51\u6210\u4ea4\u623f\u6e90\u6570\u636e\uff08\u4e0a\uff09"},{"location":"python/server/pythonOauth/","text":"Oauth\u89e3\u51b3\u65b9\u6848 The authorization server asks resource owners for their consensus to let client applications access their data. It also manages and issues the tokens needed for all the authorization flows supported by OAuth2 spec. Usually the same application offering resources through an OAuth2-protected API also behaves like an authorization server. \u6d4b\u8bd5\u5de5\u5177 django-oauth-toolkit Django \u4f7f\u7528Oauth2\u8ba4\u8bc1\u670d\u52a1\u5668 1.\u5b89\u88c5 pip install django-oauth-toolkit djangorestframework \u914d\u7f6e: INSTALLED_APPS = ( django.contrib.admin , ... oauth2_provider , rest_framework , ) \u6dfb\u52a0\u8ba4\u8bc1\u65b9\u5f0f: REST_FRAMEWORK = { DEFAULT_AUTHENTICATION_CLASSES : ( oauth2_provider.contrib.rest_framework.OAuth2Authentication , ) } \u63d2\u4ef6\u7b80\u5355\u7684API from django.urls import path, include from django.contrib.auth.models import User, Group from django.contrib import admin admin.autodiscover() from rest_framework import generics, permissions, serializers from oauth2_provider.contrib.rest_framework import TokenHasReadWriteScope, TokenHasScope # first we define the serializers class UserSerializer(serializers.ModelSerializer): class Meta: model = User fields = ( username , email , first_name , last_name ) class GroupSerializer(serializers.ModelSerializer): class Meta: model = Group fields = ( name , ) # Create the API views class UserList(generics.ListCreateAPIView): permission_classes = [permissions.IsAuthenticated, TokenHasReadWriteScope] queryset = User.objects.all() serializer_class = UserSerializer class UserDetails(generics.RetrieveAPIView): permission_classes = [permissions.IsAuthenticated, TokenHasReadWriteScope] queryset = User.objects.all() serializer_class = UserSerializer class GroupList(generics.ListAPIView): permission_classes = [permissions.IsAuthenticated, TokenHasScope] required_scopes = [ groups ] queryset = Group.objects.all() serializer_class = GroupSerializer # Setup the URLs and include login URLs for the browsable API. urlpatterns = [ path( admin/ , admin.site.urls), path( o/ , include( oauth2_provider.urls , namespace= oauth2_provider )), path( users/ , UserList.as_view()), path( users/ lt;pk gt;/ , UserDetails.as_view()), path( groups/ , GroupList.as_view()), # ... ] \u6dfb\u52a0\u4e0e\u6a21\u578b OAUTH2_PROVIDER = { # this is the list of available scopes SCOPES : { read : Read scope , write : Write scope , groups : Access to your groups } } REST_FRAMEWORK = { # ... DEFAULT_PERMISSION_CLASSES : ( rest_framework.permissions.IsAuthenticated , ) } \u6388\u6743\u7c7b\u578b Authorization Code Grant The authorization code grant type is used to obtain both access tokens and refresh tokens and is optimized for confidential clients. Since this is a redirection-based flow, the client must be capable of interacting with the resource owner\u2019s user-agent (typically a web browser) and capable of receiving incoming requests (via redirection) from the authorization server: +----------+ | Resource | | Owner | | | +----------+ ^ | (B) +----|-----+ Client Identifier +---------------+ | -+----(A)-- amp; Redirection URI ---- gt;| | | User- | | Authorization | | Agent -+----(B)-- User authenticates --- gt;| Server | | | | | | -+----(C)-- Authorization Code --- lt;| | +-|----|---+ +---------------+ | | ^ v (A) (C) | | | | | | ^ v | | +---------+ | | | | gt;---(D)-- Authorization Code --------- | | Client | amp; Redirection URI | | | | | | lt;---(E)----- Access Token ------------------- +---------+ (w/ Optional Refresh Token) Implicit Grant The implicit grant type is used to obtain access tokens (it does not support the issuance of refresh tokens) and is optimized for public clients known to operate a particular redirection URI. These clients are typically implemented in a browser using a scripting language such as JavaScript. Unlike the authorization code grant type, in which the client makes separate requests for authorization and for an access token, the client receives the access token as the result of the authorization request. The implicit grant type does not include client authentication, and relies on the presence of the resource owner and the registration of the redirection URI. Because the access token is encoded into the redirection URI, it may be exposed to the resource owner and other applications residing on the same device: +----------+ | Resource | | Owner | | | +----------+ ^ | (B) +----|-----+ Client Identifier +---------------+ | -+----(A)-- amp; Redirection URI --- gt;| | | User- | | Authorization | | Agent -|----(B)-- User authenticates -- gt;| Server | | | | | | | lt;---(C)--- Redirection URI ---- lt;| | | | with Access Token +---------------+ | | in Fragment | | +---------------+ | |----(D)--- Redirection URI ---- gt;| Web-Hosted | | | without Fragment | Client | | | | Resource | | (F) | lt;---(E)------- Script --------- lt;| | | | +---------------+ +-|--------+ | | (A) (G) Access Token | | ^ v +---------+ | | | Client | | | +---------+ Resource Owner Password Credentials Grant The resource owner password credentials grant type is suitable in cases where the resource owner has a trust relationship with the client, such as the device operating system or a highly privileged application. The authorization server should take special care when enabling this grant type and only allow it when other flows are not viable. This grant type is suitable for clients capable of obtaining the resource owner\u2019s credentials (username and password, typically using an interactive form). It is also used to migrate existing clients using direct authentication schemes such as HTTP Basic or Digest authentication to OAuth by converting the stored credentials to an access token: +----------+ | Resource | | Owner | | | +----------+ v | Resource Owner (A) Password Credentials | v +---------+ +---------------+ | | gt;--(B)---- Resource Owner ------- gt;| | | | Password Credentials | Authorization | | Client | | Server | | | lt;--(C)---- Access Token --------- lt;| | | | (w/ Optional Refresh Token) | | +---------+ +---------------+ Client Credentials Grant The client can request an access token using only its client credentials (or other supported means of authentication) when the client is requesting access to the protected resources under its control, or those of another resource owner that have been previously arranged with the authorization server (the method of which is beyond the scope of this specification). The client credentials grant type MUST only be used by confidential clients: +---------+ +---------------+ : : : : : : gt;-- A - Client Authentication --- gt;: Authorization : : Client : : Server : : : lt;-- B ---- Access Token --------- lt;: : : : : : +---------+ +---------------+ JWT Profile for Client Authentication and Authorization Grants If you\u2019re looking at JWT Tokens, please see Bearer Tokens instead. The JWT Profile RFC7523 implements the RFC7521 abstract assertion protocol. It aims to extend the OAuth2 protocol to use JWT as an additional authorization grant. Currently, this is not implemented but all PRs are welcome. See how to Contribute. Bearer Tokens The most common OAuth 2 token type. Bearer tokens is the default setting for all configured endpoints. Generally you will not need to ever construct a token yourself as the provided servers will do so for you. By default, *Server generate Bearer tokens as random strings. However, you can change the default behavior to generate JWT instead. All preconfigured servers take as parameters token_generator and refresh_token_generator to fit your needs. Bearer Tokens \u8de8\u57df\u63d0\u4ea4\u95ee\u9898 XHR POST:\u63d0\u4ea4\u6570\u636e: \u89e3\u51b3\u65b9\u6848:\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u6765\u89e3\u51b3\u8de8\u57df\u8bbf\u95ee\u95ee\u9898: Python\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u73af\u5883\u642d\u5efa: oauthlib Django REST_FRAMEWORK \u6846\u67b6 Django REST framework \u8de8\u57df\u8bbf\u95ee wiki\u767e\u79d1 \u5bf9\u8de8\u57df\u95ee\u9898\u7684\u8bf4 Cross-origin_resource_sharing Django\u540e\u7aef\u89e3\u51b3\u8de8\u57df\u8bbf\u95ee\u95ee\u9898 django-cors-middleware Ajax\u8bbf\u95ee\u670d\u52a1\u5668 XMLHttpRequest \u7b2c\u4e09\u65b9\u4f7f\u7528\u7684\u6388\u6743\u65b9\u6848: \u63a5\u5165\u65b9\u5f0f\u53ca\u6d41\u7a0b \u6388\u6743\u65b9\u6848","title":"Oauth2\u670d\u52a1\u5668\u642d\u5efa"},{"location":"python/server/pythonOauth/#oauth","text":"The authorization server asks resource owners for their consensus to let client applications access their data. It also manages and issues the tokens needed for all the authorization flows supported by OAuth2 spec. Usually the same application offering resources through an OAuth2-protected API also behaves like an authorization server.","title":"Oauth\u89e3\u51b3\u65b9\u6848"},{"location":"python/server/pythonOauth/#_1","text":"django-oauth-toolkit","title":"\u6d4b\u8bd5\u5de5\u5177"},{"location":"python/server/pythonOauth/#django-oauth2","text":"1.\u5b89\u88c5 pip install django-oauth-toolkit djangorestframework \u914d\u7f6e: INSTALLED_APPS = ( django.contrib.admin , ... oauth2_provider , rest_framework , ) \u6dfb\u52a0\u8ba4\u8bc1\u65b9\u5f0f: REST_FRAMEWORK = { DEFAULT_AUTHENTICATION_CLASSES : ( oauth2_provider.contrib.rest_framework.OAuth2Authentication , ) } \u63d2\u4ef6\u7b80\u5355\u7684API from django.urls import path, include from django.contrib.auth.models import User, Group from django.contrib import admin admin.autodiscover() from rest_framework import generics, permissions, serializers from oauth2_provider.contrib.rest_framework import TokenHasReadWriteScope, TokenHasScope # first we define the serializers class UserSerializer(serializers.ModelSerializer): class Meta: model = User fields = ( username , email , first_name , last_name ) class GroupSerializer(serializers.ModelSerializer): class Meta: model = Group fields = ( name , ) # Create the API views class UserList(generics.ListCreateAPIView): permission_classes = [permissions.IsAuthenticated, TokenHasReadWriteScope] queryset = User.objects.all() serializer_class = UserSerializer class UserDetails(generics.RetrieveAPIView): permission_classes = [permissions.IsAuthenticated, TokenHasReadWriteScope] queryset = User.objects.all() serializer_class = UserSerializer class GroupList(generics.ListAPIView): permission_classes = [permissions.IsAuthenticated, TokenHasScope] required_scopes = [ groups ] queryset = Group.objects.all() serializer_class = GroupSerializer # Setup the URLs and include login URLs for the browsable API. urlpatterns = [ path( admin/ , admin.site.urls), path( o/ , include( oauth2_provider.urls , namespace= oauth2_provider )), path( users/ , UserList.as_view()), path( users/ lt;pk gt;/ , UserDetails.as_view()), path( groups/ , GroupList.as_view()), # ... ] \u6dfb\u52a0\u4e0e\u6a21\u578b OAUTH2_PROVIDER = { # this is the list of available scopes SCOPES : { read : Read scope , write : Write scope , groups : Access to your groups } } REST_FRAMEWORK = { # ... DEFAULT_PERMISSION_CLASSES : ( rest_framework.permissions.IsAuthenticated , ) }","title":"Django \u4f7f\u7528Oauth2\u8ba4\u8bc1\u670d\u52a1\u5668"},{"location":"python/server/pythonOauth/#_2","text":"","title":"\u6388\u6743\u7c7b\u578b"},{"location":"python/server/pythonOauth/#authorization-code-grant","text":"The authorization code grant type is used to obtain both access tokens and refresh tokens and is optimized for confidential clients. Since this is a redirection-based flow, the client must be capable of interacting with the resource owner\u2019s user-agent (typically a web browser) and capable of receiving incoming requests (via redirection) from the authorization server: +----------+ | Resource | | Owner | | | +----------+ ^ | (B) +----|-----+ Client Identifier +---------------+ | -+----(A)-- amp; Redirection URI ---- gt;| | | User- | | Authorization | | Agent -+----(B)-- User authenticates --- gt;| Server | | | | | | -+----(C)-- Authorization Code --- lt;| | +-|----|---+ +---------------+ | | ^ v (A) (C) | | | | | | ^ v | | +---------+ | | | | gt;---(D)-- Authorization Code --------- | | Client | amp; Redirection URI | | | | | | lt;---(E)----- Access Token ------------------- +---------+ (w/ Optional Refresh Token)","title":"Authorization Code Grant"},{"location":"python/server/pythonOauth/#implicit-grant","text":"The implicit grant type is used to obtain access tokens (it does not support the issuance of refresh tokens) and is optimized for public clients known to operate a particular redirection URI. These clients are typically implemented in a browser using a scripting language such as JavaScript. Unlike the authorization code grant type, in which the client makes separate requests for authorization and for an access token, the client receives the access token as the result of the authorization request. The implicit grant type does not include client authentication, and relies on the presence of the resource owner and the registration of the redirection URI. Because the access token is encoded into the redirection URI, it may be exposed to the resource owner and other applications residing on the same device: +----------+ | Resource | | Owner | | | +----------+ ^ | (B) +----|-----+ Client Identifier +---------------+ | -+----(A)-- amp; Redirection URI --- gt;| | | User- | | Authorization | | Agent -|----(B)-- User authenticates -- gt;| Server | | | | | | | lt;---(C)--- Redirection URI ---- lt;| | | | with Access Token +---------------+ | | in Fragment | | +---------------+ | |----(D)--- Redirection URI ---- gt;| Web-Hosted | | | without Fragment | Client | | | | Resource | | (F) | lt;---(E)------- Script --------- lt;| | | | +---------------+ +-|--------+ | | (A) (G) Access Token | | ^ v +---------+ | | | Client | | | +---------+","title":"Implicit Grant"},{"location":"python/server/pythonOauth/#resource-owner-password-credentials-grant","text":"The resource owner password credentials grant type is suitable in cases where the resource owner has a trust relationship with the client, such as the device operating system or a highly privileged application. The authorization server should take special care when enabling this grant type and only allow it when other flows are not viable. This grant type is suitable for clients capable of obtaining the resource owner\u2019s credentials (username and password, typically using an interactive form). It is also used to migrate existing clients using direct authentication schemes such as HTTP Basic or Digest authentication to OAuth by converting the stored credentials to an access token: +----------+ | Resource | | Owner | | | +----------+ v | Resource Owner (A) Password Credentials | v +---------+ +---------------+ | | gt;--(B)---- Resource Owner ------- gt;| | | | Password Credentials | Authorization | | Client | | Server | | | lt;--(C)---- Access Token --------- lt;| | | | (w/ Optional Refresh Token) | | +---------+ +---------------+","title":"Resource Owner Password Credentials Grant"},{"location":"python/server/pythonOauth/#client-credentials-grant","text":"The client can request an access token using only its client credentials (or other supported means of authentication) when the client is requesting access to the protected resources under its control, or those of another resource owner that have been previously arranged with the authorization server (the method of which is beyond the scope of this specification). The client credentials grant type MUST only be used by confidential clients: +---------+ +---------------+ : : : : : : gt;-- A - Client Authentication --- gt;: Authorization : : Client : : Server : : : lt;-- B ---- Access Token --------- lt;: : : : : : +---------+ +---------------+","title":"Client Credentials Grant"},{"location":"python/server/pythonOauth/#jwt-profile-for-client-authentication-and-authorization-grants","text":"If you\u2019re looking at JWT Tokens, please see Bearer Tokens instead. The JWT Profile RFC7523 implements the RFC7521 abstract assertion protocol. It aims to extend the OAuth2 protocol to use JWT as an additional authorization grant. Currently, this is not implemented but all PRs are welcome. See how to Contribute.","title":"JWT Profile for Client Authentication and Authorization Grants"},{"location":"python/server/pythonOauth/#bearer-tokens","text":"The most common OAuth 2 token type. Bearer tokens is the default setting for all configured endpoints. Generally you will not need to ever construct a token yourself as the provided servers will do so for you. By default, *Server generate Bearer tokens as random strings. However, you can change the default behavior to generate JWT instead. All preconfigured servers take as parameters token_generator and refresh_token_generator to fit your needs. Bearer Tokens","title":"Bearer Tokens"},{"location":"python/server/pythonOauth/#_3","text":"XHR POST:\u63d0\u4ea4\u6570\u636e: \u89e3\u51b3\u65b9\u6848:\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u6765\u89e3\u51b3\u8de8\u57df\u8bbf\u95ee\u95ee\u9898: Python\u7b2c\u4e09\u65b9\u8ba4\u8bc1\u73af\u5883\u642d\u5efa: oauthlib Django REST_FRAMEWORK \u6846\u67b6 Django REST framework \u8de8\u57df\u8bbf\u95ee wiki\u767e\u79d1 \u5bf9\u8de8\u57df\u95ee\u9898\u7684\u8bf4 Cross-origin_resource_sharing Django\u540e\u7aef\u89e3\u51b3\u8de8\u57df\u8bbf\u95ee\u95ee\u9898 django-cors-middleware Ajax\u8bbf\u95ee\u670d\u52a1\u5668 XMLHttpRequest \u7b2c\u4e09\u65b9\u4f7f\u7528\u7684\u6388\u6743\u65b9\u6848: \u63a5\u5165\u65b9\u5f0f\u53ca\u6d41\u7a0b \u6388\u6743\u65b9\u6848","title":"\u8de8\u57df\u63d0\u4ea4\u95ee\u9898"},{"location":"python/server/pythonweb/","text":"Python Web \u4e09\u5927\u4e3b\u6d41\u6846\u67b6 Python \u8bed\u8a00\u80fd\u591f\u505a\u4ec0\u4e48 Python\u8bed\u8a00\u9002\u7528\u6027\u5e7f\u3001\u7b80\u5355\u6613\u61c2\uff0c\u5728\u5404\u9886\u57df\u4e2d\u5168\u80fd\u53d1\u5c55\uff1a\u56fe\u5f62\u5904\u7406\u3001\u6570\u5b66\u5904\u7406\u3001\u6587\u672c\u5904\u7406\u3001\u6570\u636e\u5e93\u7f16\u7a0b\u3001\u7f51\u7edc\u7f16\u7a0b\u3001Web\u7f16\u7a0b\u3001\u591a\u5a92\u4f53\u5e94\u7528\u3001pymo\u5f15\u64ce\u3001\u9ed1\u5ba2\u7f16\u7a0b\u3001\u722c\u866b\u7f16\u5199\u3001\u4eba\u5de5\u667a\u80fd\u7b49 Google \u7684tenserflow\u4e5f\u662f\u4f7f\u7528Python\u4f5c\u4e3a\u4e0a\u5c42\u5f00\u53d1\u8bed\u8a00\b,\u5b66\u4e60\u4ec0\u4e48\b\u8bed\u8a00\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u80fd\u591f\u4f7f\u7528\u8bed\u8a00\u6765\b\u5b8c\u6210\b\u81ea\u5df1\u7684\u60f3\u6cd5\u3002 Python \bWeb \u76ee\u524d\u4e3b\u6d41\u7684\u6846\u67b6\u4e3b\u8981\u6709\b\u4e09\u5927\u6846\u67b6\u3002\u5404\u6709\u4f18\u52bf: Flask\u3001Django\u3001Tornado Django:\u5927\u800c\u5168\u4f7f\u7528\u7684\u7ec4\u5408: Django/Flask + Celery + Redis/Memchaned/RabbitMQ Flask\uff1a\u5c0f\u800c\u7cbe Tornado\uff1a\u9ad8\u6027\u80fd\uff0c\u9700\u8981\u81ea\u5df1\u5904\u7406\u7684\b\u4e1c\u897f\b\u6bd4\u8f83\u591a \u8fd9\u91cc\u4f7f\u7528 2016 \u5e74 6 \u6708 9 \u65e5\u7684\u62a5\u544a\u6570\u636e\uff1a Python's Web Framework Benchmarks \u3002\u672c\u6587\u4ec5\u5173\u6ce8\u76ee\u524d\u6700\u5e38\u7528\u7684\u4e09\u5927 Python \u6846\u67b6\uff1aDjango\u3001 Flask \u4ee5\u53ca Tornado\u3002 \u62a5\u544a\u4e3b\u8981\u6bd4\u8f83\u4e09\u70b9\uff1a JSON\uff1a\u5e8f\u5217\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a json\u3002 \u8fdc\u7a0b\u6027\u80fd\uff1a\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u8fd4\u56de http response \u7684\u65f6\u95f4 \u6570\u636e\u5e93\u6027\u80fd\uff1a\u4f7f\u7528 ORM\uff08\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u6e32\u67d3\u5230\u6a21\u677f\u4e0a\u7684\u65f6\u95f4 \u6700\u57fa\u672c\u7684 json \u6d4b\u8bd5\uff1aDjango \u4e0e Flask \u5360\u4f18 \u5355\u7eaf\u5728\u672c\u5730\u6d4b\u8bd5 json \u7684\u5e8f\u5217\u5316\uff0cDjango \u5b8c\u6210\u4e00\u6b21 json \u5e8f\u5217\u5316\u7684\u5e73\u5747\u65f6\u95f4 42.52 \u6beb\u79d2\uff0c\u6bcf\u79d2\u8bf7\u6c42\u91cf 4762 \u6b21\u3002Flask \u5728\u6b64\u9879\u6d4b\u8bd5\u4e2d\uff0c\u4e0e Django \u7684\u6bd4\u8f83\u4e0d\u76f8\u4e0a\u4e0b\uff0cFlask \u5e73\u5747\u65f6\u95f4 43.33 \u6beb\u79d2\uff0c\u6bcf\u79d2\u8bf7\u6c42\u91cf 4630 \u6b21\u3002Tornado \u5b8c\u6210 json \u5e8f\u5217\u5316\u7684\u5e73\u5747\u65f6\u95f4\u9ad8\u8fbe 77.51 \u6beb\u79d2\uff0c\u662f\u6240\u6709\u6846\u67b6\u4e2d\u8017\u65f6\u6700\u957f\u7684\uff0c\u6bcf\u79d2\u8bf7\u6c42\u6570\u662f 2578 \u6b21\uff0c\u4e5f\u662f\u4f4e\u4e8e Django \u4e0e Flask \u7684\u6c34\u51c6\u3002\u8fd9\u4ec5\u4ec5\u8bf4\u660e\u6846\u67b6\u5728\u672c\u5730\u5904\u7406 json \u7684\u901f\u5ea6\u3002\u6846\u67b6\u8fd8\u6d89\u53ca http request/response \u4ee5\u53ca\u6570\u636e\u5e93\u7684\u8bfb\u5199\uff0c\u540e\u9762\u8fd8\u9700\u8981\u7efc\u5408\u6765\u5206\u6790\u6846\u67b6\u7684\u6027\u80fd\u3002 \u5904\u7406\u8fdc\u7a0b http \u8bf7\u6c42\u7684\u80fd\u529b\uff1aTornado \u5360\u7edd\u5bf9\u4f18\u52bf \u4ece\u8fd9\u9879\u6d4b\u8bd5\u5f00\u59cb\uff0cTornado \u7684\u5f3a\u608d\u5f00\u59cb\u663e\u73b0\u3002Tornado \u5b8c\u6210 http \u8bf7\u6c42\u7684\u5e73\u5747\u65f6\u95f4\u662f 1.04 \u79d2\uff0c\u800c Flask \u662f 3.34 \u79d2\uff0cDjango \u662f 3.48 \u79d2\uff0chttp \u54cd\u5e94\u901f\u5ea6 Tornado \u6bd4 Flask \u4ee5\u53ca Django \u5feb\u4e09\u500d\u3002 \u503c\u5f97\u6ce8\u610f\u662f\uff0c\u5982\u679c\u7efc\u5408\u8003\u8651 http \u76f8\u5e94\u901f\u5ea6\u4ee5\u53cajson \u5904\u7406\u901f\u5ea6\uff0c\u5982\u679c\u628a\u4e24\u9879\u6307\u6807\u7684\u5e73\u5747\u65f6\u95f4\u76f8\u52a0\uff1aTornado \u8017\u65f6 1114.48 \u6beb\u79d2\uff0cFlask \u662f 3387.60 \u6beb\u79d2\uff0cDjango \u662f 3519.88 \u6beb\u79d2\u3002 Tornado \u7684\u597d\u6210\u7ee9\u5f97\u76ca\u4e8e\u5176\u81ea\u5e26\u7684\u5f02\u6b65\u7279\u6027\uff0c\u800c Django \u4e0e Flask \u662f\u540c\u6b65\u6846\u67b6\uff0c\u5728\u5904\u7406\u8bf7\u6c42\u65f6\u6027\u80fd\u53d7\u9650\u3002\u4f46\u662f\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e00\u822c\u662f Django/Flask + Celery + Redis/Memchaned/RabbitMQ \u7684\u6a21\u5f0f\uff0c\u7531\u6b64\u5e26\u4e0a\u4e86\u5f02\u6b65\u5904\u7406\u7684\u80fd\u529b\u3002 \u6570\u636e\u5e93\u4e0e\u6a21\u677f\u5904\u7406\u6027\u80fd\uff1aTornado \u4e0e Flask \u65d7\u9f13\u76f8\u5f53 Django \u9971\u53d7\u8bdf\u75c5\u7684\u5730\u65b9\u5c31\u662f Django ORM \u786e\u5b9e\u5f88\u6162\uff0c\u52a0\u4e0a\u6a21\u677f\u5904\u7406\u65f6\u95f4\uff0cDjango \u7684\u5e73\u5747\u65f6\u95f4 2904.04 \u6beb\u79d2\uff0c\u6bcf\u79d2\u5904\u7406\u8bf7\u6c42\u91cf 42.9 \u6b21\u3002\u7136\u800c Django \u7684\u5927\u90e8\u5206\u529f\u80fd\u662f\u5efa\u7acb\u5728\u5176 Django ORM \u57fa\u7840\u4e0a\uff0c\u6bd4\u5982 models, admin, forms \u751a\u81f3\u7b2c\u4e09\u65b9\u6846\u67b6 django-rest-framework\u3002Django \u7684\u5f00\u53d1\u6548\u7387\u4e0e\u7ef4\u62a4\u975e\u5e38\u68d2\uff0c\u7136\u800c Django ORM \u6df1\u5ea6\u7ed1\u5b9a\u4e86\u8be5\u6846\u67b6\uff0c\u5982\u679c\u4f60\u9700\u8981\u628a Django ORM \u6362\u6210\u5176\u5b83\u8f6e\u5b50\uff0c\u90a3\u4e48\u4e5f\u610f\u5473\u7740 Django \u7684\u8bf8\u591a\u4f18\u79c0\u7279\u6027\u5c06\u4ece\u6b64\u544a\u522b\u3002 Flask \u4e8b\u5b9e\u4e0a\u7684 ORM \u662f SQLAlchemy\uff0c\u6839\u636e \u8463\u4f1f\u660e \u7684\u4f30\u8ba1\uff0cSQLAlchemy \u6bd4 MySQLdb \u7684\u8017\u65f6\u591a 5% \u5de6\u53f3\uff0c\u6240\u4ee5\u662f\u6027\u80fd\u76f8\u5f53\u4e0d\u9519\u7684\u6570\u636e\u5e93 ORM\u3002\u5f97\u76ca\u4e8e SQLAlchemy \u7684\u4f18\u5f02\u6027\u80fd\uff0cFlask \u7684\u6bcf\u79d2\u5904\u7406\u8bf7\u6c42\u6570\u4e3a 123 \u6b21\uff0c\u5e73\u5747\u5904\u7406\u65f6\u95f4 1440.24 \u79d2\uff0c\u4e0e Tornado \u6027\u80fd\u76f8\u5f53\u3002 Tornado \u7684\u6bcf\u79d2\u5904\u7406\u8bf7\u6c42\u6570\u4e3a 143 \u6b21\uff0c\u5e73\u5747\u5904\u7406\u65f6\u95f4 1344.69 \u79d2\u3002\u5bf9\u4e8e\u6570\u636e\u5e93\u4e0e\u6a21\u677f\u7684\u5904\u7406\uff0cTornado \u4e0e Flask \u4e0d\u76f8\u4e0a\u4e0b\u3002 Django\uff1aPython \u754c\u6700\u5168\u80fd\u7684 web \u5f00\u53d1\u6846\u67b6\uff0cbattery-include \u5404\u79cd\u529f\u80fd\u5b8c\u5907\uff0c\u53ef\u7ef4\u62a4\u6027\u548c\u5f00\u53d1\u901f\u5ea6\u4e00\u7ea7\u68d2\u3002\u5e38\u6709\u4eba\u8bf4 Django \u6162\uff0c\u5176\u5b9e\u4e3b\u8981\u6162\u5728 Django ORM \u4e0e\u6570\u636e\u5e93\u7684\u4ea4\u4e92\u4e0a\uff0c\u6240\u4ee5\u662f\u5426\u9009\u7528 Django\uff0c\u53d6\u51b3\u4e8e\u9879\u76ee\u5bf9\u6570\u636e\u5e93\u4ea4\u4e92\u7684\u8981\u6c42\u4ee5\u53ca\u5404\u79cd\u4f18\u5316\u3002\u800c\u5bf9\u4e8e Django \u7684\u540c\u6b65\u7279\u6027\u5bfc\u81f4\u541e\u5410\u91cf\u5c0f\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7 Celery \u7b49\u89e3\u51b3\uff0c\u5012\u4e0d\u662f\u4e00\u4e2a\u6839\u672c\u95ee\u9898\u3002Django \u7684\u9879\u76ee\u4ee3\u8868\uff1aInstagram\uff0cGuardian\u3002 Flask\uff1a\u5fae\u6846\u67b6\u7684\u5178\u8303\uff0c\u53f7\u79f0 Python \u4ee3\u7801\u5199\u5f97\u6700\u597d\u7684\u9879\u76ee\u4e4b\u4e00\u3002Flask \u7684\u7075\u6d3b\u6027\uff0c\u4e5f\u662f\u53cc\u5203\u5251\uff1a\u80fd\u7528\u597d Flask \u7684\uff0c\u53ef\u4ee5\u505a\u6210 Pinterest\uff0c\u7528\u4e0d\u597d\u5c31\u662f\u707e\u96be\uff08\u663e\u7136\u5bf9\u4efb\u4f55\u6846\u67b6\u90fd\u662f\u8fd9\u6837\uff09\u3002Flask \u867d\u7136\u662f\u5fae\u6846\u67b6\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u505a\u6210\u89c4\u6a21\u5316\u7684 Flask\u3002\u52a0\u4e0a Flask \u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u81ea\u5df1\u7684\u6570\u636e\u5e93\u4ea4\u4e92\u7ec4\u4ef6\uff08\u901a\u5e38\u662f Flask-SQLAlchemy\uff09\uff0c\u800c\u4e14\u52a0\u4e0a celery +redis \u7b49\u5f02\u6b65\u7279\u6027\u4ee5\u540e\uff0cFlask \u7684\u6027\u80fd\u76f8\u5bf9 Tornado \u4e5f\u4e0d\u901e\u591a\u8ba9\uff0c\u4e5f\u8bb8Flask \u7684\u7075\u6d3b\u6027\u53ef\u80fd\u662f\u67d0\u4e9b\u56e2\u961f\u66f4\u9700\u8981\u7684\u3002 Tornado\uff1a\u5929\u751f\u5f02\u6b65\uff0c\u6027\u80fd\u5f3a\u608d\u662f Tornado \u7684\u540d\u7247\uff0c\u7136\u800c Tornado \u76f8\u6bd4 Django \u662f\u8f83\u4e3a\u539f\u59cb\u7684\u6846\u67b6\uff0c\u8bf8\u591a\u5185\u5bb9\u9700\u8981\u81ea\u5df1\u53bb\u5904\u7406\u3002\u5f53\u7136\uff0c\u968f\u7740\u9879\u76ee\u8d8a\u6765\u8d8a\u5927\uff0c\u6846\u67b6\u80fd\u591f\u63d0\u4f9b\u7684\u529f\u80fd\u5360\u6bd4\u8d8a\u6765\u8d8a\u5c0f\uff0c\u66f4\u591a\u7684\u5185\u5bb9\u9700\u8981\u56e2\u961f\u81ea\u5df1\u53bb\u5b9e\u73b0\uff0c\u800c\u5927\u9879\u76ee\u5f80\u5f80\u9700\u8981\u6027\u80fd\u7684\u4fdd\u8bc1\uff0c\u8fd9\u65f6\u5019 Tornado \u5c31\u662f\u6bd4\u8f83\u597d\u7684\u9009\u62e9\u3002Tornado\u9879\u76ee\u4ee3\u8868\uff1a\u77e5\u4e4e\u3002","title":"\u4e3b\u6d41\u670d\u52a1\u5668\u4ecb\u7ecd"},{"location":"python/server/pythonweb/#python-web","text":"","title":"Python Web \u4e09\u5927\u4e3b\u6d41\u6846\u67b6"},{"location":"python/server/pythonweb/#python","text":"Python\u8bed\u8a00\u9002\u7528\u6027\u5e7f\u3001\u7b80\u5355\u6613\u61c2\uff0c\u5728\u5404\u9886\u57df\u4e2d\u5168\u80fd\u53d1\u5c55\uff1a\u56fe\u5f62\u5904\u7406\u3001\u6570\u5b66\u5904\u7406\u3001\u6587\u672c\u5904\u7406\u3001\u6570\u636e\u5e93\u7f16\u7a0b\u3001\u7f51\u7edc\u7f16\u7a0b\u3001Web\u7f16\u7a0b\u3001\u591a\u5a92\u4f53\u5e94\u7528\u3001pymo\u5f15\u64ce\u3001\u9ed1\u5ba2\u7f16\u7a0b\u3001\u722c\u866b\u7f16\u5199\u3001\u4eba\u5de5\u667a\u80fd\u7b49 Google \u7684tenserflow\u4e5f\u662f\u4f7f\u7528Python\u4f5c\u4e3a\u4e0a\u5c42\u5f00\u53d1\u8bed\u8a00\b,\u5b66\u4e60\u4ec0\u4e48\b\u8bed\u8a00\u5e76\u4e0d\u91cd\u8981\uff0c\u91cd\u8981\u7684\u662f\u80fd\u591f\u4f7f\u7528\u8bed\u8a00\u6765\b\u5b8c\u6210\b\u81ea\u5df1\u7684\u60f3\u6cd5\u3002","title":"Python \u8bed\u8a00\u80fd\u591f\u505a\u4ec0\u4e48"},{"location":"python/server/pythonweb/#python-web_1","text":"Flask\u3001Django\u3001Tornado Django:\u5927\u800c\u5168\u4f7f\u7528\u7684\u7ec4\u5408: Django/Flask + Celery + Redis/Memchaned/RabbitMQ Flask\uff1a\u5c0f\u800c\u7cbe Tornado\uff1a\u9ad8\u6027\u80fd\uff0c\u9700\u8981\u81ea\u5df1\u5904\u7406\u7684\b\u4e1c\u897f\b\u6bd4\u8f83\u591a \u8fd9\u91cc\u4f7f\u7528 2016 \u5e74 6 \u6708 9 \u65e5\u7684\u62a5\u544a\u6570\u636e\uff1a Python's Web Framework Benchmarks \u3002\u672c\u6587\u4ec5\u5173\u6ce8\u76ee\u524d\u6700\u5e38\u7528\u7684\u4e09\u5927 Python \u6846\u67b6\uff1aDjango\u3001 Flask \u4ee5\u53ca Tornado\u3002 \u62a5\u544a\u4e3b\u8981\u6bd4\u8f83\u4e09\u70b9\uff1a JSON\uff1a\u5e8f\u5217\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a json\u3002 \u8fdc\u7a0b\u6027\u80fd\uff1a\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u8fd4\u56de http response \u7684\u65f6\u95f4 \u6570\u636e\u5e93\u6027\u80fd\uff1a\u4f7f\u7528 ORM\uff08\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u6e32\u67d3\u5230\u6a21\u677f\u4e0a\u7684\u65f6\u95f4","title":"Python \bWeb \u76ee\u524d\u4e3b\u6d41\u7684\u6846\u67b6\u4e3b\u8981\u6709\b\u4e09\u5927\u6846\u67b6\u3002\u5404\u6709\u4f18\u52bf:"},{"location":"python/server/pythonweb/#json-django-flask","text":"\u5355\u7eaf\u5728\u672c\u5730\u6d4b\u8bd5 json \u7684\u5e8f\u5217\u5316\uff0cDjango \u5b8c\u6210\u4e00\u6b21 json \u5e8f\u5217\u5316\u7684\u5e73\u5747\u65f6\u95f4 42.52 \u6beb\u79d2\uff0c\u6bcf\u79d2\u8bf7\u6c42\u91cf 4762 \u6b21\u3002Flask \u5728\u6b64\u9879\u6d4b\u8bd5\u4e2d\uff0c\u4e0e Django \u7684\u6bd4\u8f83\u4e0d\u76f8\u4e0a\u4e0b\uff0cFlask \u5e73\u5747\u65f6\u95f4 43.33 \u6beb\u79d2\uff0c\u6bcf\u79d2\u8bf7\u6c42\u91cf 4630 \u6b21\u3002Tornado \u5b8c\u6210 json \u5e8f\u5217\u5316\u7684\u5e73\u5747\u65f6\u95f4\u9ad8\u8fbe 77.51 \u6beb\u79d2\uff0c\u662f\u6240\u6709\u6846\u67b6\u4e2d\u8017\u65f6\u6700\u957f\u7684\uff0c\u6bcf\u79d2\u8bf7\u6c42\u6570\u662f 2578 \u6b21\uff0c\u4e5f\u662f\u4f4e\u4e8e Django \u4e0e Flask \u7684\u6c34\u51c6\u3002\u8fd9\u4ec5\u4ec5\u8bf4\u660e\u6846\u67b6\u5728\u672c\u5730\u5904\u7406 json \u7684\u901f\u5ea6\u3002\u6846\u67b6\u8fd8\u6d89\u53ca http request/response \u4ee5\u53ca\u6570\u636e\u5e93\u7684\u8bfb\u5199\uff0c\u540e\u9762\u8fd8\u9700\u8981\u7efc\u5408\u6765\u5206\u6790\u6846\u67b6\u7684\u6027\u80fd\u3002","title":"\u6700\u57fa\u672c\u7684 json \u6d4b\u8bd5\uff1aDjango \u4e0e Flask \u5360\u4f18"},{"location":"python/server/pythonweb/#http-tornado","text":"\u4ece\u8fd9\u9879\u6d4b\u8bd5\u5f00\u59cb\uff0cTornado \u7684\u5f3a\u608d\u5f00\u59cb\u663e\u73b0\u3002Tornado \u5b8c\u6210 http \u8bf7\u6c42\u7684\u5e73\u5747\u65f6\u95f4\u662f 1.04 \u79d2\uff0c\u800c Flask \u662f 3.34 \u79d2\uff0cDjango \u662f 3.48 \u79d2\uff0chttp \u54cd\u5e94\u901f\u5ea6 Tornado \u6bd4 Flask \u4ee5\u53ca Django \u5feb\u4e09\u500d\u3002 \u503c\u5f97\u6ce8\u610f\u662f\uff0c\u5982\u679c\u7efc\u5408\u8003\u8651 http \u76f8\u5e94\u901f\u5ea6\u4ee5\u53cajson \u5904\u7406\u901f\u5ea6\uff0c\u5982\u679c\u628a\u4e24\u9879\u6307\u6807\u7684\u5e73\u5747\u65f6\u95f4\u76f8\u52a0\uff1aTornado \u8017\u65f6 1114.48 \u6beb\u79d2\uff0cFlask \u662f 3387.60 \u6beb\u79d2\uff0cDjango \u662f 3519.88 \u6beb\u79d2\u3002 Tornado \u7684\u597d\u6210\u7ee9\u5f97\u76ca\u4e8e\u5176\u81ea\u5e26\u7684\u5f02\u6b65\u7279\u6027\uff0c\u800c Django \u4e0e Flask \u662f\u540c\u6b65\u6846\u67b6\uff0c\u5728\u5904\u7406\u8bf7\u6c42\u65f6\u6027\u80fd\u53d7\u9650\u3002\u4f46\u662f\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u4e00\u822c\u662f Django/Flask + Celery + Redis/Memchaned/RabbitMQ \u7684\u6a21\u5f0f\uff0c\u7531\u6b64\u5e26\u4e0a\u4e86\u5f02\u6b65\u5904\u7406\u7684\u80fd\u529b\u3002","title":"\u5904\u7406\u8fdc\u7a0b http \u8bf7\u6c42\u7684\u80fd\u529b\uff1aTornado \u5360\u7edd\u5bf9\u4f18\u52bf"},{"location":"python/server/pythonweb/#tornado-flask","text":"Django \u9971\u53d7\u8bdf\u75c5\u7684\u5730\u65b9\u5c31\u662f Django ORM \u786e\u5b9e\u5f88\u6162\uff0c\u52a0\u4e0a\u6a21\u677f\u5904\u7406\u65f6\u95f4\uff0cDjango \u7684\u5e73\u5747\u65f6\u95f4 2904.04 \u6beb\u79d2\uff0c\u6bcf\u79d2\u5904\u7406\u8bf7\u6c42\u91cf 42.9 \u6b21\u3002\u7136\u800c Django \u7684\u5927\u90e8\u5206\u529f\u80fd\u662f\u5efa\u7acb\u5728\u5176 Django ORM \u57fa\u7840\u4e0a\uff0c\u6bd4\u5982 models, admin, forms \u751a\u81f3\u7b2c\u4e09\u65b9\u6846\u67b6 django-rest-framework\u3002Django \u7684\u5f00\u53d1\u6548\u7387\u4e0e\u7ef4\u62a4\u975e\u5e38\u68d2\uff0c\u7136\u800c Django ORM \u6df1\u5ea6\u7ed1\u5b9a\u4e86\u8be5\u6846\u67b6\uff0c\u5982\u679c\u4f60\u9700\u8981\u628a Django ORM \u6362\u6210\u5176\u5b83\u8f6e\u5b50\uff0c\u90a3\u4e48\u4e5f\u610f\u5473\u7740 Django \u7684\u8bf8\u591a\u4f18\u79c0\u7279\u6027\u5c06\u4ece\u6b64\u544a\u522b\u3002 Flask \u4e8b\u5b9e\u4e0a\u7684 ORM \u662f SQLAlchemy\uff0c\u6839\u636e \u8463\u4f1f\u660e \u7684\u4f30\u8ba1\uff0cSQLAlchemy \u6bd4 MySQLdb \u7684\u8017\u65f6\u591a 5% \u5de6\u53f3\uff0c\u6240\u4ee5\u662f\u6027\u80fd\u76f8\u5f53\u4e0d\u9519\u7684\u6570\u636e\u5e93 ORM\u3002\u5f97\u76ca\u4e8e SQLAlchemy \u7684\u4f18\u5f02\u6027\u80fd\uff0cFlask \u7684\u6bcf\u79d2\u5904\u7406\u8bf7\u6c42\u6570\u4e3a 123 \u6b21\uff0c\u5e73\u5747\u5904\u7406\u65f6\u95f4 1440.24 \u79d2\uff0c\u4e0e Tornado \u6027\u80fd\u76f8\u5f53\u3002 Tornado \u7684\u6bcf\u79d2\u5904\u7406\u8bf7\u6c42\u6570\u4e3a 143 \u6b21\uff0c\u5e73\u5747\u5904\u7406\u65f6\u95f4 1344.69 \u79d2\u3002\u5bf9\u4e8e\u6570\u636e\u5e93\u4e0e\u6a21\u677f\u7684\u5904\u7406\uff0cTornado \u4e0e Flask \u4e0d\u76f8\u4e0a\u4e0b\u3002 Django\uff1aPython \u754c\u6700\u5168\u80fd\u7684 web \u5f00\u53d1\u6846\u67b6\uff0cbattery-include \u5404\u79cd\u529f\u80fd\u5b8c\u5907\uff0c\u53ef\u7ef4\u62a4\u6027\u548c\u5f00\u53d1\u901f\u5ea6\u4e00\u7ea7\u68d2\u3002\u5e38\u6709\u4eba\u8bf4 Django \u6162\uff0c\u5176\u5b9e\u4e3b\u8981\u6162\u5728 Django ORM \u4e0e\u6570\u636e\u5e93\u7684\u4ea4\u4e92\u4e0a\uff0c\u6240\u4ee5\u662f\u5426\u9009\u7528 Django\uff0c\u53d6\u51b3\u4e8e\u9879\u76ee\u5bf9\u6570\u636e\u5e93\u4ea4\u4e92\u7684\u8981\u6c42\u4ee5\u53ca\u5404\u79cd\u4f18\u5316\u3002\u800c\u5bf9\u4e8e Django \u7684\u540c\u6b65\u7279\u6027\u5bfc\u81f4\u541e\u5410\u91cf\u5c0f\u7684\u95ee\u9898\uff0c\u5176\u5b9e\u53ef\u4ee5\u901a\u8fc7 Celery \u7b49\u89e3\u51b3\uff0c\u5012\u4e0d\u662f\u4e00\u4e2a\u6839\u672c\u95ee\u9898\u3002Django \u7684\u9879\u76ee\u4ee3\u8868\uff1aInstagram\uff0cGuardian\u3002 Flask\uff1a\u5fae\u6846\u67b6\u7684\u5178\u8303\uff0c\u53f7\u79f0 Python \u4ee3\u7801\u5199\u5f97\u6700\u597d\u7684\u9879\u76ee\u4e4b\u4e00\u3002Flask \u7684\u7075\u6d3b\u6027\uff0c\u4e5f\u662f\u53cc\u5203\u5251\uff1a\u80fd\u7528\u597d Flask \u7684\uff0c\u53ef\u4ee5\u505a\u6210 Pinterest\uff0c\u7528\u4e0d\u597d\u5c31\u662f\u707e\u96be\uff08\u663e\u7136\u5bf9\u4efb\u4f55\u6846\u67b6\u90fd\u662f\u8fd9\u6837\uff09\u3002Flask \u867d\u7136\u662f\u5fae\u6846\u67b6\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u505a\u6210\u89c4\u6a21\u5316\u7684 Flask\u3002\u52a0\u4e0a Flask \u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u81ea\u5df1\u7684\u6570\u636e\u5e93\u4ea4\u4e92\u7ec4\u4ef6\uff08\u901a\u5e38\u662f Flask-SQLAlchemy\uff09\uff0c\u800c\u4e14\u52a0\u4e0a celery +redis \u7b49\u5f02\u6b65\u7279\u6027\u4ee5\u540e\uff0cFlask \u7684\u6027\u80fd\u76f8\u5bf9 Tornado \u4e5f\u4e0d\u901e\u591a\u8ba9\uff0c\u4e5f\u8bb8Flask \u7684\u7075\u6d3b\u6027\u53ef\u80fd\u662f\u67d0\u4e9b\u56e2\u961f\u66f4\u9700\u8981\u7684\u3002 Tornado\uff1a\u5929\u751f\u5f02\u6b65\uff0c\u6027\u80fd\u5f3a\u608d\u662f Tornado \u7684\u540d\u7247\uff0c\u7136\u800c Tornado \u76f8\u6bd4 Django \u662f\u8f83\u4e3a\u539f\u59cb\u7684\u6846\u67b6\uff0c\u8bf8\u591a\u5185\u5bb9\u9700\u8981\u81ea\u5df1\u53bb\u5904\u7406\u3002\u5f53\u7136\uff0c\u968f\u7740\u9879\u76ee\u8d8a\u6765\u8d8a\u5927\uff0c\u6846\u67b6\u80fd\u591f\u63d0\u4f9b\u7684\u529f\u80fd\u5360\u6bd4\u8d8a\u6765\u8d8a\u5c0f\uff0c\u66f4\u591a\u7684\u5185\u5bb9\u9700\u8981\u56e2\u961f\u81ea\u5df1\u53bb\u5b9e\u73b0\uff0c\u800c\u5927\u9879\u76ee\u5f80\u5f80\u9700\u8981\u6027\u80fd\u7684\u4fdd\u8bc1\uff0c\u8fd9\u65f6\u5019 Tornado \u5c31\u662f\u6bd4\u8f83\u597d\u7684\u9009\u62e9\u3002Tornado\u9879\u76ee\u4ee3\u8868\uff1a\u77e5\u4e4e\u3002","title":"\u6570\u636e\u5e93\u4e0e\u6a21\u677f\u5904\u7406\u6027\u80fd\uff1aTornado \u4e0e Flask \u65d7\u9f13\u76f8\u5f53"},{"location":"python/server/serverbase/","text":"xadmin xadmin\u8bbe\u7f6e xadmin\u9ad8\u7ea7\u8bbe\u7f6e xadmin\u9ad8\u7ea7\u5f00\u53d1 xadmin\u76f8\u5173\u5b57\u6bb5\u8bbe\u7f6e Python\u540e\u7aef\u8ba4\u8bc1\u65b9\u6cd5 \u524d\u540e\u7aef\u5206\u79bb\u4e4bJWT\u7528\u6237\u8ba4\u8bc1 Django\u7528\u6237\u7ec4\u53ca\u767b\u5f55\u3001\u6ce8\u518c\u3001\u6ce8\u9500\u3001JWT REST framework JWT Auth 0_python_email.md uWSGI Emperor \u2014\u2014 \u591a\u5e94\u7528\u90e8\u7f72 uWSGI \u7ba1\u7406\u6807\u5fd7 xadmin\u524d\u540e\u53f0\u6a21\u677f xadmin\u524d\u540e\u53f0\u6a21\u677f VsVisualCode Python\u6559\u7a0b Cool URIs don't change","title":"\u670d\u52a1\u5668\u5e38\u7528\u8f6f\u4ef6"},{"location":"python/server/serverbase/#xadmin","text":"xadmin\u8bbe\u7f6e xadmin\u9ad8\u7ea7\u8bbe\u7f6e xadmin\u9ad8\u7ea7\u5f00\u53d1 xadmin\u76f8\u5173\u5b57\u6bb5\u8bbe\u7f6e","title":"xadmin"},{"location":"python/server/serverbase/#python","text":"\u524d\u540e\u7aef\u5206\u79bb\u4e4bJWT\u7528\u6237\u8ba4\u8bc1 Django\u7528\u6237\u7ec4\u53ca\u767b\u5f55\u3001\u6ce8\u518c\u3001\u6ce8\u9500\u3001JWT REST framework JWT Auth 0_python_email.md uWSGI Emperor \u2014\u2014 \u591a\u5e94\u7528\u90e8\u7f72 uWSGI \u7ba1\u7406\u6807\u5fd7 xadmin\u524d\u540e\u53f0\u6a21\u677f xadmin\u524d\u540e\u53f0\u6a21\u677f VsVisualCode Python\u6559\u7a0b Cool URIs don't change","title":"Python\u540e\u7aef\u8ba4\u8bc1\u65b9\u6cd5"},{"location":"python/server/zappa/","text":"\u6559\u7a0b\u8d44\u6e90 \u5e38\u89c1\u9519\u8bef Error: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 502 response code. \u4f7f\u7528Django\u7248\u672c\u5c0f\u4e8e2.2\u7684\u7248\u672c Django-zappa \u865a\u62df\u73af\u5883\u642d\u5efa Python web\u6846\u67b6\u4f7f\u7528 \u53d1\u5e03Django\u65e0\u670d\u52a1\u5e94\u7528 12\u4e2a\u5f00\u53d1app\u5efa\u8bae Django-env\u73af\u5883\u53d8\u91cf\u5904\u7406\u5e93 Alexa\u914d\u7f6e\u6559\u7a0b \u4e9a\u9a6c\u900a\u8bc1\u4e66\u7ba1\u7406\u7cfb\u7edf Flask\u8de8\u57df\u5904\u7406\u5e93 Simplified AWS Lambda Deployments with Docker and Zappa \u5341\u5927\u6700\u53d7\u6b22\u8fce\u7684\u8f6f\u4ef6\u5e93 \u4f7f\u7528\u5230\u7684\u641c\u7d22\u5e93 whoosh AWS \u7f51\u7edc\u5904\u7406 Accessing the Internet and other AWS Resources in your VPC from AWS Lambda Https \u54cd\u5e94\u5f0f\u7f51\u7ad9 \u57df\u540d\u67e5\u770b\u5de5\u5177 Lambda\u64cd\u4f5c\u6570\u636e\u5e93 accessing-mysql-databases zappa-Django-utils Djangoc\u5b58\u50a8\u540e\u7aef Django\u8de8\u57df\u5904\u7406\u5e93 Django\u9759\u6001\u6587\u4ef6\u5904\u7406 \u901a\u8fc7\u51e0\u884c\u914d\u7f6e\uff0cWhiteNoise\u5141\u8bb8\u60a8\u7684Web\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u81ea\u5df1\u7684\u9759\u6001\u6587\u4ef6\uff0c\u4f7f\u5176\u6210\u4e3a\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u90e8\u7f72\u7684\u72ec\u7acb\u5355\u5143\uff0c\u800c\u65e0\u9700\u4f9d\u8d56nginx\uff0cAmazon S3\u6216\u4efb\u4f55\u5176\u4ed6\u5916\u90e8\u670d\u52a1\u3002\uff08\u7279\u522b\u9002\u7528\u4e8eHeroku\uff0cOpenShift\u548c\u5176\u4ed6PaaS\u63d0\u4f9b\u5546\u3002\uff09 whitenoise Django \u53d1\u5e03\u9759\u6001\u6587\u4ef6 Django\u53d1\u5e03\u9759\u6001\u6587\u4ef6 Django\u53d1\u5e03\u9759\u6001\u6587\u4ef6\u5728\u540c\u4e00\u5929\u670d\u52a1\u5668\u4e0a django-s3-storage \u90e8\u7f72\u9759\u6001\u6587\u4ef6 Using Amazon S3 to Store your Django Site's Static and Media Files Django\u4e2d\u9ad8\u7ea7\u6587\u4ef6\u64cd\u4f5c","title":"zappa"},{"location":"python/server/zappa/#_1","text":"","title":"\u6559\u7a0b\u8d44\u6e90"},{"location":"python/server/zappa/#_2","text":"Error: Warning! Status check on the deployed lambda failed. A GET request to '/' yielded a 502 response code. \u4f7f\u7528Django\u7248\u672c\u5c0f\u4e8e2.2\u7684\u7248\u672c Django-zappa \u865a\u62df\u73af\u5883\u642d\u5efa Python web\u6846\u67b6\u4f7f\u7528 \u53d1\u5e03Django\u65e0\u670d\u52a1\u5e94\u7528 12\u4e2a\u5f00\u53d1app\u5efa\u8bae Django-env\u73af\u5883\u53d8\u91cf\u5904\u7406\u5e93 Alexa\u914d\u7f6e\u6559\u7a0b \u4e9a\u9a6c\u900a\u8bc1\u4e66\u7ba1\u7406\u7cfb\u7edf Flask\u8de8\u57df\u5904\u7406\u5e93 Simplified AWS Lambda Deployments with Docker and Zappa \u5341\u5927\u6700\u53d7\u6b22\u8fce\u7684\u8f6f\u4ef6\u5e93","title":"\u5e38\u89c1\u9519\u8bef"},{"location":"python/server/zappa/#_3","text":"whoosh","title":"\u4f7f\u7528\u5230\u7684\u641c\u7d22\u5e93"},{"location":"python/server/zappa/#aws","text":"Accessing the Internet and other AWS Resources in your VPC from AWS Lambda Https \u54cd\u5e94\u5f0f\u7f51\u7ad9 \u57df\u540d\u67e5\u770b\u5de5\u5177","title":"AWS \u7f51\u7edc\u5904\u7406"},{"location":"python/server/zappa/#lambda","text":"accessing-mysql-databases zappa-Django-utils Djangoc\u5b58\u50a8\u540e\u7aef Django\u8de8\u57df\u5904\u7406\u5e93","title":"Lambda\u64cd\u4f5c\u6570\u636e\u5e93"},{"location":"python/server/zappa/#django","text":"\u901a\u8fc7\u51e0\u884c\u914d\u7f6e\uff0cWhiteNoise\u5141\u8bb8\u60a8\u7684Web\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u81ea\u5df1\u7684\u9759\u6001\u6587\u4ef6\uff0c\u4f7f\u5176\u6210\u4e3a\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u90e8\u7f72\u7684\u72ec\u7acb\u5355\u5143\uff0c\u800c\u65e0\u9700\u4f9d\u8d56nginx\uff0cAmazon S3\u6216\u4efb\u4f55\u5176\u4ed6\u5916\u90e8\u670d\u52a1\u3002\uff08\u7279\u522b\u9002\u7528\u4e8eHeroku\uff0cOpenShift\u548c\u5176\u4ed6PaaS\u63d0\u4f9b\u5546\u3002\uff09 whitenoise Django \u53d1\u5e03\u9759\u6001\u6587\u4ef6 Django\u53d1\u5e03\u9759\u6001\u6587\u4ef6 Django\u53d1\u5e03\u9759\u6001\u6587\u4ef6\u5728\u540c\u4e00\u5929\u670d\u52a1\u5668\u4e0a django-s3-storage \u90e8\u7f72\u9759\u6001\u6587\u4ef6 Using Amazon S3 to Store your Django Site's Static and Media Files Django\u4e2d\u9ad8\u7ea7\u6587\u4ef6\u64cd\u4f5c","title":"Django\u9759\u6001\u6587\u4ef6\u5904\u7406"},{"location":"python/server/aws/pyaws/","text":"Python \u64cd\u4f5c\u4e9a\u9a6c\u900a\u670d\u52a1\u5668\u76f8\u5173\u7684\u670d\u52a1 DynamoDB for Python \u60a8\u4e5f\u53ef\u4ee5\u6784\u5efa\u7531\u4e8b\u4ef6\u89e6\u53d1\u7684\u51fd\u6570\u7ec4\u6210\u7684\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u7528 CodePipeline \u548c AWS CodeBuild \u81ea\u52a8\u90e8\u7f72\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f AWS Lambda \u7ba1\u7406\u63d0\u4f9b\u5185\u5b58\u3001CPU\u3001\u7f51\u7edc\u548c\u5176\u4ed6\u8d44\u6e90\u5747\u8861\u7684\u8ba1\u7b97\u673a\u7fa4 Profile PynamoDB uses botocore to interact with the DynamoDB API. Thus, any method of configuration supported by botocore works with PynamoDB. For local development the use of environment variables such as AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY is probably preferable. You can of course use IAM users, as recommended by AWS. In addition EC2 roles will work as well and would be recommended when running on EC2. Profile botocore DynamoDB API AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY \u76f8\u5173\u7684\u6982\u5ff5 High Level API Low Level API Exceptions Migration API Default Configuration Default settings may be overridden by providing a Python module which exports the desired new values. Set the PYNAMODB_CONFIG environment variable to an absolute path to this module or write it to /etc/pynamodb/global_default_settings.py to have it automatically discovered. Python Signals Signals allow certain senders to notify subscribers that something happened. PynamoDB currently sends signals before and after every DynamoDB API call. PynamoDB\u652f\u6301\u4e24\u4e2a\u4fe1\u53f7: User Arguments\uff1a The callback must taking the following arguments: Arguments Description sender The object that fired that method. operation_name The string name of the DynamoDB action _ table_name The name of the table the operation is called upon. req_uuid A unique identifer so subscribers can correlate the before and after events. Tow Method pre_dynamodb_send post_dynamodb_send from pynamodb.signals import pre_dynamodb_send , post_dynamodb_send def record_pre_dynamodb_send ( sender , operation_name , table_name , req_uuid ): pre_recorded . append (( operation_name , table_name , req_uuid )) def record_post_dynamodb_send ( sender , operation_name , table_name , req_uuid ): post_recorded . append (( operation_name , table_name , req_uuid )) pre_dynamodb_send . connect ( record_pre_dynamodb_send ) post_dynamodb_send . connect ( record_post_dynamodb_send ) Set AccessKey from pynamodb.models import Model class MyModel ( Model ): class Meta : aws_access_key_id = my_access_key_id aws_secret_access_key = my_secret_access_key Link GitHub Source Java environment DynamoDB Local Developer Debug DynamoDB Local Debug pynamoDB Docs dynalite aws DynamoDB Libs Python\u4fe1\u53f7\u5e93","title":"AWSpython\u4f7f\u7528"},{"location":"python/server/aws/pyaws/#python","text":"","title":"Python \u64cd\u4f5c\u4e9a\u9a6c\u900a\u670d\u52a1\u5668\u76f8\u5173\u7684\u670d\u52a1"},{"location":"python/server/aws/pyaws/#dynamodb-for-python","text":"\u60a8\u4e5f\u53ef\u4ee5\u6784\u5efa\u7531\u4e8b\u4ef6\u89e6\u53d1\u7684\u51fd\u6570\u7ec4\u6210\u7684\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4f7f\u7528 CodePipeline \u548c AWS CodeBuild \u81ea\u52a8\u90e8\u7f72\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f AWS Lambda \u7ba1\u7406\u63d0\u4f9b\u5185\u5b58\u3001CPU\u3001\u7f51\u7edc\u548c\u5176\u4ed6\u8d44\u6e90\u5747\u8861\u7684\u8ba1\u7b97\u673a\u7fa4","title":"DynamoDB for Python"},{"location":"python/server/aws/pyaws/#profile","text":"PynamoDB uses botocore to interact with the DynamoDB API. Thus, any method of configuration supported by botocore works with PynamoDB. For local development the use of environment variables such as AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY is probably preferable. You can of course use IAM users, as recommended by AWS. In addition EC2 roles will work as well and would be recommended when running on EC2. Profile botocore DynamoDB API AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY","title":"Profile"},{"location":"python/server/aws/pyaws/#_1","text":"High Level API Low Level API Exceptions Migration API","title":"\u76f8\u5173\u7684\u6982\u5ff5"},{"location":"python/server/aws/pyaws/#default-configuration","text":"Default settings may be overridden by providing a Python module which exports the desired new values. Set the PYNAMODB_CONFIG environment variable to an absolute path to this module or write it to /etc/pynamodb/global_default_settings.py to have it automatically discovered.","title":"Default Configuration"},{"location":"python/server/aws/pyaws/#python-signals","text":"Signals allow certain senders to notify subscribers that something happened. PynamoDB currently sends signals before and after every DynamoDB API call.","title":"Python Signals"},{"location":"python/server/aws/pyaws/#pynamodb","text":"User Arguments\uff1a The callback must taking the following arguments: Arguments Description sender The object that fired that method. operation_name The string name of the DynamoDB action _ table_name The name of the table the operation is called upon. req_uuid A unique identifer so subscribers can correlate the before and after events.","title":"PynamoDB\u652f\u6301\u4e24\u4e2a\u4fe1\u53f7:"},{"location":"python/server/aws/pyaws/#tow-method","text":"pre_dynamodb_send post_dynamodb_send from pynamodb.signals import pre_dynamodb_send , post_dynamodb_send def record_pre_dynamodb_send ( sender , operation_name , table_name , req_uuid ): pre_recorded . append (( operation_name , table_name , req_uuid )) def record_post_dynamodb_send ( sender , operation_name , table_name , req_uuid ): post_recorded . append (( operation_name , table_name , req_uuid )) pre_dynamodb_send . connect ( record_pre_dynamodb_send ) post_dynamodb_send . connect ( record_post_dynamodb_send )","title":"Tow Method"},{"location":"python/server/aws/pyaws/#set-accesskey","text":"from pynamodb.models import Model class MyModel ( Model ): class Meta : aws_access_key_id = my_access_key_id aws_secret_access_key = my_secret_access_key","title":"Set AccessKey"},{"location":"python/server/aws/pyaws/#link","text":"GitHub Source Java environment DynamoDB Local Developer Debug DynamoDB Local Debug pynamoDB Docs dynalite aws DynamoDB Libs Python\u4fe1\u53f7\u5e93","title":"Link"},{"location":"python/server/aws/serverless/","text":"\u65e0\u670d\u52a1\u67b6\u6784 \u65e0\u670d\u52a1\u5e94\u7528\u6a21\u677f aws\u5f00\u53d1\u6a21\u677f Pycharm \u6838\u5fc3\u5b89\u88c5 aws Pycharm\u914d\u7f6e AWS Toolkit for JetBrains IDEs\uff1f aws\u65e0\u670d\u52a1\u5e94\u7528 Pycharm aws Toolskit\u5b89\u88c5 \u5b89\u88c5SAM\u67b6\u6784 serverless\u67b6\u6784 aws\u63d0\u4f9b\u7684\u5f00\u53d1\u5de5\u5177 jetbean\u4e0b\u8f7d \u63d2\u4ef6\u6e90\u4ee3\u7801\u6e90\u4ee3\u7801 serverless\u65e0\u670d\u52a1\u53d1\u5e03\u7ba1\u7406\u5de5\u5177 Creating a Chat App with Serverless, WebSockets, and Python: A Tutorial aws websocket","title":"\u65e0\u670d\u52a1"},{"location":"python/server/aws/serverless/#_1","text":"\u65e0\u670d\u52a1\u5e94\u7528\u6a21\u677f aws\u5f00\u53d1\u6a21\u677f Pycharm \u6838\u5fc3\u5b89\u88c5 aws Pycharm\u914d\u7f6e AWS Toolkit for JetBrains IDEs\uff1f aws\u65e0\u670d\u52a1\u5e94\u7528 Pycharm aws Toolskit\u5b89\u88c5 \u5b89\u88c5SAM\u67b6\u6784 serverless\u67b6\u6784 aws\u63d0\u4f9b\u7684\u5f00\u53d1\u5de5\u5177 jetbean\u4e0b\u8f7d \u63d2\u4ef6\u6e90\u4ee3\u7801\u6e90\u4ee3\u7801 serverless\u65e0\u670d\u52a1\u53d1\u5e03\u7ba1\u7406\u5de5\u5177 Creating a Chat App with Serverless, WebSockets, and Python: A Tutorial aws websocket","title":"\u65e0\u670d\u52a1\u67b6\u6784"},{"location":"python/server/django/JSONEncoder/","text":"Python JsonEncoder \u6982\u8ff0 \u5e8f\u5217\u5316Django\u5bf9\u8c61 Django\u7684\u5e8f\u5217\u5316\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06Django\u6a21\u578b\u201c\u8f6c\u6362\u201d\u4e3a\u5176\u4ed6\u683c\u5f0f\u7684\u673a\u5236\u3002\u901a\u5e38\u8fd9\u4e9b\u5176\u4ed6\u683c\u5f0f\u5c06\u57fa\u4e8e\u6587\u672c\u5e76\u7528\u4e8e\u901a\u8fc7\u7ebf\u8def\u53d1\u9001Django\u6570\u636e\uff0c\u4f46\u5e8f\u5217\u5316\u7a0b\u5e8f\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u683c\u5f0f\uff08\u57fa\u4e8e\u6587\u672c\u6216\u4e0d\u57fa\u4e8e\u6587\u672c Django \u9ed8\u8ba4\u5e8f\u5217\u5316 Interfaces for serializing Django objects. \u6587\u4ef6\u8def\u5f84:env/lib/python3.7/site-packages/django/core/serializers/ init .py \u4f7f\u7528\u65b9\u6cd5 from django.core import serializers json = serializers.serialize( json , some_queryset) objects = list(serializers.deserialize( json , json)) \u6dfb\u52a0\u81ea\u5df1\u7684\u5e8f\u5217\u5316\u5668 To add your own serializers, use the SERIALIZATION_MODULES setting:: SERIALIZATION_MODULES = { csv : path.to.csv.serializer , txt : path.to.txt.serializer , } \u5185\u5efa\u7684\u5e8f\u5217\u5316\u5668 BUILTIN_SERIALIZERS = { xml : django.core.serializers.xml_serializer , python : django.core.serializers.python , json : django.core.serializers.json , yaml : django.core.serializers.pyyaml , } \u7b2c\u4e09\u65b9\u5f00\u6e90\u5e93 Json\u5e93 pickle marshal \u7cfb\u7edf\u5e93\u8def\u5f84 \u5e93\u6587\u4ef6\u8def\u5f84 \u5e8f\u5217\u5316Django\u5bf9\u8c61","title":"JsonEncoder"},{"location":"python/server/django/JSONEncoder/#python-jsonencoder","text":"","title":"Python JsonEncoder"},{"location":"python/server/django/JSONEncoder/#_1","text":"\u5e8f\u5217\u5316Django\u5bf9\u8c61 Django\u7684\u5e8f\u5217\u5316\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06Django\u6a21\u578b\u201c\u8f6c\u6362\u201d\u4e3a\u5176\u4ed6\u683c\u5f0f\u7684\u673a\u5236\u3002\u901a\u5e38\u8fd9\u4e9b\u5176\u4ed6\u683c\u5f0f\u5c06\u57fa\u4e8e\u6587\u672c\u5e76\u7528\u4e8e\u901a\u8fc7\u7ebf\u8def\u53d1\u9001Django\u6570\u636e\uff0c\u4f46\u5e8f\u5217\u5316\u7a0b\u5e8f\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u683c\u5f0f\uff08\u57fa\u4e8e\u6587\u672c\u6216\u4e0d\u57fa\u4e8e\u6587\u672c","title":"\u6982\u8ff0"},{"location":"python/server/django/JSONEncoder/#django","text":"Interfaces for serializing Django objects. \u6587\u4ef6\u8def\u5f84:env/lib/python3.7/site-packages/django/core/serializers/ init .py","title":"Django \u9ed8\u8ba4\u5e8f\u5217\u5316"},{"location":"python/server/django/JSONEncoder/#_2","text":"from django.core import serializers json = serializers.serialize( json , some_queryset) objects = list(serializers.deserialize( json , json))","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"python/server/django/JSONEncoder/#_3","text":"To add your own serializers, use the SERIALIZATION_MODULES setting:: SERIALIZATION_MODULES = { csv : path.to.csv.serializer , txt : path.to.txt.serializer , }","title":"\u6dfb\u52a0\u81ea\u5df1\u7684\u5e8f\u5217\u5316\u5668"},{"location":"python/server/django/JSONEncoder/#_4","text":"BUILTIN_SERIALIZERS = { xml : django.core.serializers.xml_serializer , python : django.core.serializers.python , json : django.core.serializers.json , yaml : django.core.serializers.pyyaml , }","title":"\u5185\u5efa\u7684\u5e8f\u5217\u5316\u5668"},{"location":"python/server/django/JSONEncoder/#_5","text":"Json\u5e93 pickle marshal","title":"\u7b2c\u4e09\u65b9\u5f00\u6e90\u5e93"},{"location":"python/server/django/JSONEncoder/#_6","text":"\u5e93\u6587\u4ef6\u8def\u5f84 \u5e8f\u5217\u5316Django\u5bf9\u8c61","title":"\u7cfb\u7edf\u5e93\u8def\u5f84"},{"location":"python/server/django/djangoLogger/","text":"Djnago \u65e5\u5fd7\u5904\u7406 \u7981\u7528Django\u65e5\u5fd7 setting\u6587\u4ef6\u4e2d: LOGGING_CONFIG = None \u81ea\u5b9a\u4e49\u65e5\u5fd7 \u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u65e5\u5fd7Logging #!/usr/bin/env python # -*- coding: utf-8 -*- # # author: AigeCang # from __future__ import unicode_literals , absolute_import import logging import logging.config import logging.handlers from datetime import datetime import os class _InfoFilter ( logging . Filter ): def filter ( self , record ): only use INFO \u7b5b\u9009, \u53ea\u9700\u8981 INFO \u7ea7\u522b\u7684log :param record: :return: if logging . INFO = record . levelno logging . ERROR : # \u5df2\u7ecf\u662fINFO\u7ea7\u522b\u4e86 # \u7136\u540e\u5229\u7528\u7236\u7c7b, \u8fd4\u56de 1 return super () . filter ( record ) else : return 0 def _get_filename ( * , basename = app.log , log_level = info ): date_str = datetime . today () . strftime ( %Y%m %d ) pidstr = str ( os . getpid ()) return . join (( date_str , - , pidstr , - , log_level , - , basename ,)) class _LogFactory : # \u6bcf\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u4f7f\u7528 2GB _SINGLE_FILE_MAX_BYTES = 2 * 1024 * 1024 * 1024 # \u8f6e\u8f6c\u6570\u91cf\u662f 10 \u4e2a _BACKUP_COUNT = 10 # \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u5939 LOGGING_DIR = web_project/log/ # \u5982\u679c\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u6587\u4ef6\u5939 if not os . path . exists ( LOGGING_DIR ): os . mkdir ( LOGGING_DIR ) EMAIL_BACKEND = django.core.mail.backends.smtp.EmailBackend # \u914d\u7f6e\u53d1\u9001\u7684\u90ae\u4ef6\u4fe1\u606f SERVER_EMAIL = sender@qq.com DEFAULT_FROM_EMAIL = sender@qq.com ADMINS = (( receiver , shenzhencuco@gmail.com ),) EMAIL_HOST = smtp.exmail.qq.com EMAIL_HOST_USER = sender@qq.com EMAIL_HOST_PASSWORD = 123456 EMAIL_BACKEND = django.core.mail.backends.smtp.EmailBackend # \u57fa\u4e8e dictConfig\uff0c\u505a\u518d\u6b21\u5c01\u88c5 _LOG_CONFIG_DICT = { version : 1 , disable_existing_loggers : False , formatters : { # \u5f00\u53d1\u73af\u5883\u4e0b\u7684\u914d\u7f6e dev : { class : logging.Formatter , format : ( %(levelname)s %(asctime)s %(created)f %(name)s %(module)s [ %(processName)s %(threadName)s ] [ %(filename)s %(lineno)s %(funcName)s ] %(message)s ) }, # \u751f\u4ea7\u73af\u5883\u4e0b\u7684\u683c\u5f0f(\u8d8a\u8be6\u7ec6\u8d8a\u597d) prod : { class : logging.Formatter , format : ( %(levelname)s %(asctime)s %(created)f %(name)s %(module)s %(process)d %(thread)d %(filename)s %(lineno)s %(funcName)s %(message)s ) } # ? \u4f7f\u7528UTC\u65f6\u95f4!!! }, filters : { # \u9488\u5bf9 LogRecord \u7684\u7b5b\u9009\u5668 info_filter : { () : _InfoFilter , } }, handlers : { # \u5904\u7406\u5668(\u88abloggers\u4f7f\u7528) console : { # \u6309\u7406\u6765\u8bf4, console\u53ea\u6536\u96c6ERROR\u7ea7\u522b\u7684\u8f83\u597d class : logging.StreamHandler , level : ERROR , formatter : dev }, file : { level : INFO , class : logging.handlers.RotatingFileHandler , filename : LOGGING_DIR + _get_filename ( log_level = info ), maxBytes : _SINGLE_FILE_MAX_BYTES , # 2GB encoding : UTF-8 , backupCount : _BACKUP_COUNT , formatter : dev , delay : True , filters : [ info_filter , ] # only INFO, no ERROR }, file_error : { level : ERROR , class : logging.handlers.RotatingFileHandler , filename : LOGGING_DIR + _get_filename ( log_level = error ), maxBytes : _SINGLE_FILE_MAX_BYTES , # 2GB encoding : UTF-8 , backupCount : _BACKUP_COUNT , formatter : dev , delay : True , }, }, loggers : { # \u771f\u6b63\u7684logger(by name), \u53ef\u4ee5\u6709\u4e30\u5bcc\u7684\u914d\u7f6e SAMPLE_LOGGER : { # \u8f93\u9001\u52303\u4e2ahandler\uff0c\u5b83\u4eec\u7684\u4f5c\u7528\u5206\u522b\u5982\u4e0b # 1. console\uff1a\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u67e5\u770b\uff0c\u53ea\u8bb0\u5f55ERROR\u4ee5\u4e0a\u7684\u65e5\u5fd7\u5c31\u597d # 2. file\uff1a \u8f93\u9001\u5230\u6587\u4ef6\uff0c\u8bb0\u5f55INFO\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u65e5\u540e\u56de\u6eaf\u5206\u6790 # 3. file_error\uff1a\u8f93\u9001\u5230\u6587\u4ef6\uff08\u4e0e\u4e0a\u9762\u76f8\u540c\uff09\uff0c\u4f46\u662f\u53ea\u8bb0\u5f55ERROR\u7ea7\u522b\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u7814\u53d1\u4eba\u5458\u6392\u9519 handlers : [ console , file , file_error ], level : INFO , }, DEBUG_LOGGER : { # \u8f93\u9001\u52303\u4e2ahandler\uff0c\u5b83\u4eec\u7684\u4f5c\u7528\u5206\u522b\u5982\u4e0b # 1. console\uff1a\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u67e5\u770b\uff0c\u53ea\u8bb0\u5f55ERROR\u4ee5\u4e0a\u7684\u65e5\u5fd7\u5c31\u597d # 2. file\uff1a \u8f93\u9001\u5230\u6587\u4ef6\uff0c\u8bb0\u5f55INFO\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u65e5\u540e\u56de\u6eaf\u5206\u6790 # 3. file_error\uff1a\u8f93\u9001\u5230\u6587\u4ef6\uff08\u4e0e\u4e0a\u9762\u76f8\u540c\uff09\uff0c\u4f46\u662f\u53ea\u8bb0\u5f55ERROR\u7ea7\u522b\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u7814\u53d1\u4eba\u5458\u6392\u9519 handlers : [ console , file , file_error ], level : DEBUG , }, }, } logging . config . dictConfig ( _LOG_CONFIG_DICT ) @classmethod def get_logger ( cls , logger_name ): return logging . getLogger ( logger_name ) \u4f7f\u7528\u914d\u7f6e\u7684\u65e5\u5fd7\u5904\u7406\u5668\u8bb0\u5f55\u65e5\u5fd7\u4fe1\u606f from hello.log_.log_factory.logger_factory import _LogFactory logger1 = _LogFactory . get_logger ( DEBUG_LOGGER ) logger1 . info ( This is a info log. ) logger1 . warn ( This is a warning log. ) logger1 . error ( This is a error log. ) logger1 . critical ( This is a critical log. ) \u4f7f\u7528\u6ce8\u89e3\u53d1\u9001\u53d1\u9001\u90ae\u4ef6 \u4f7f\u7528\u6ce8\u89e3\u65b9\u6cd5\u5b9e\u73b0\u53d1\u9001\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6 def decorator_error_monitor ( title ): def wrap ( f ): def wrapped_f ( * args , ** kwargs ): try : result = f ( * args , ** kwargs ) return result except : exc = traceback . format_exc () utils . send_exception_email ( email_list , title , exc ) raise Exception ( exc ) return wrapped_f return wrap \u5728\u4ee3\u7801\u4e2d\u5b9e\u73b0\u6ce8\u89e3 @decorator_error_monitor ( \u6e05\u7b97\u9519\u8bef ) def do_settlement ( users ): for user in users : process_settlement_for_one_user ( user ) \u4f7f\u7528\u4ee3\u7801\u914d\u7f6e\u65e5\u5fd7\u6587\u4ef6 import logging import logging.handlers import datetime import os from web_project.settings import DEBUG # \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u5939 LOGGING_DIR = web_project/log/ # \u5982\u679c\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u6587\u4ef6\u5939 if not os . path . exists ( LOGGING_DIR ): os . mkdir ( LOGGING_DIR ) # \u6307\u5b9a\u4e0d\u540c\u7ea7\u522b\u7684\u65e5\u5fd7\u7b49\u7ea7 FILE_ERROR = LOGGING_DIR + error.log FILE_ALL = LOGGING_DIR + all.log FILE_DEBUG = LOGGING_DIR + debug.log # \u8bbe\u7f6e\u7edf\u4e00\u7684\u65e5\u5fd7\u683c\u5f0f LOG_FORMAT = %(asctime)s - %(levelname)s - %(message)s DATE_FORMAT = %m/ %d /%Y %H:%M:%S %p # logging.basicConfig(level=logging.DEBUG, # filename=FILE_DEBUG, # format=LOG_FORMAT, # datefmt=DATE_FORMAT, # ) logging . warning ( Some one delete the log file. , exc_info = True , stack_info = True , extra = { user : Tom , ip : 47.98.53.222 }) logger = logging . getLogger ( mylogger ) logger . setLevel ( DEBUG ) rf_handler = logging . handlers . TimedRotatingFileHandler ( FILE_ALL , when = midnight , interval = 1 , backupCount = 7 , atTime = datetime . time ( 0 , 0 , 0 , 0 )) rf_handler . setFormatter ( logging . Formatter ( LOG_FORMAT )) f_handler = logging . FileHandler ( FILE_ERROR ) f_handler . setLevel ( logging . WARN ) f_handler . setFormatter ( logging . Formatter ( %(asctime)s - %(levelname)s - %(filename)s [: %(lineno)d ] - %(message)s )) logger . addHandler ( rf_handler ) logger . addHandler ( f_handler ) \u94fe\u63a5 Python\u65e5\u5fd7\u6587\u4ef6 Python \u65e5\u5fd7\u5904\u7406 \u65e5\u5fd7\u5904\u7406 \u81ea\u5b9a\u4e49\u65e5\u5fd7\u5e93 Django\u7cfb\u7edf\u9519\u8bef\u76d1\u63a7","title":"\u65e5\u5fd7\u914d\u7f6e"},{"location":"python/server/django/djangoLogger/#djnago","text":"","title":"Djnago \u65e5\u5fd7\u5904\u7406"},{"location":"python/server/django/djangoLogger/#django","text":"setting\u6587\u4ef6\u4e2d: LOGGING_CONFIG = None","title":"\u7981\u7528Django\u65e5\u5fd7"},{"location":"python/server/django/djangoLogger/#_1","text":"\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u65e5\u5fd7Logging #!/usr/bin/env python # -*- coding: utf-8 -*- # # author: AigeCang # from __future__ import unicode_literals , absolute_import import logging import logging.config import logging.handlers from datetime import datetime import os class _InfoFilter ( logging . Filter ): def filter ( self , record ): only use INFO \u7b5b\u9009, \u53ea\u9700\u8981 INFO \u7ea7\u522b\u7684log :param record: :return: if logging . INFO = record . levelno logging . ERROR : # \u5df2\u7ecf\u662fINFO\u7ea7\u522b\u4e86 # \u7136\u540e\u5229\u7528\u7236\u7c7b, \u8fd4\u56de 1 return super () . filter ( record ) else : return 0 def _get_filename ( * , basename = app.log , log_level = info ): date_str = datetime . today () . strftime ( %Y%m %d ) pidstr = str ( os . getpid ()) return . join (( date_str , - , pidstr , - , log_level , - , basename ,)) class _LogFactory : # \u6bcf\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u4f7f\u7528 2GB _SINGLE_FILE_MAX_BYTES = 2 * 1024 * 1024 * 1024 # \u8f6e\u8f6c\u6570\u91cf\u662f 10 \u4e2a _BACKUP_COUNT = 10 # \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u5939 LOGGING_DIR = web_project/log/ # \u5982\u679c\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u6587\u4ef6\u5939 if not os . path . exists ( LOGGING_DIR ): os . mkdir ( LOGGING_DIR ) EMAIL_BACKEND = django.core.mail.backends.smtp.EmailBackend # \u914d\u7f6e\u53d1\u9001\u7684\u90ae\u4ef6\u4fe1\u606f SERVER_EMAIL = sender@qq.com DEFAULT_FROM_EMAIL = sender@qq.com ADMINS = (( receiver , shenzhencuco@gmail.com ),) EMAIL_HOST = smtp.exmail.qq.com EMAIL_HOST_USER = sender@qq.com EMAIL_HOST_PASSWORD = 123456 EMAIL_BACKEND = django.core.mail.backends.smtp.EmailBackend # \u57fa\u4e8e dictConfig\uff0c\u505a\u518d\u6b21\u5c01\u88c5 _LOG_CONFIG_DICT = { version : 1 , disable_existing_loggers : False , formatters : { # \u5f00\u53d1\u73af\u5883\u4e0b\u7684\u914d\u7f6e dev : { class : logging.Formatter , format : ( %(levelname)s %(asctime)s %(created)f %(name)s %(module)s [ %(processName)s %(threadName)s ] [ %(filename)s %(lineno)s %(funcName)s ] %(message)s ) }, # \u751f\u4ea7\u73af\u5883\u4e0b\u7684\u683c\u5f0f(\u8d8a\u8be6\u7ec6\u8d8a\u597d) prod : { class : logging.Formatter , format : ( %(levelname)s %(asctime)s %(created)f %(name)s %(module)s %(process)d %(thread)d %(filename)s %(lineno)s %(funcName)s %(message)s ) } # ? \u4f7f\u7528UTC\u65f6\u95f4!!! }, filters : { # \u9488\u5bf9 LogRecord \u7684\u7b5b\u9009\u5668 info_filter : { () : _InfoFilter , } }, handlers : { # \u5904\u7406\u5668(\u88abloggers\u4f7f\u7528) console : { # \u6309\u7406\u6765\u8bf4, console\u53ea\u6536\u96c6ERROR\u7ea7\u522b\u7684\u8f83\u597d class : logging.StreamHandler , level : ERROR , formatter : dev }, file : { level : INFO , class : logging.handlers.RotatingFileHandler , filename : LOGGING_DIR + _get_filename ( log_level = info ), maxBytes : _SINGLE_FILE_MAX_BYTES , # 2GB encoding : UTF-8 , backupCount : _BACKUP_COUNT , formatter : dev , delay : True , filters : [ info_filter , ] # only INFO, no ERROR }, file_error : { level : ERROR , class : logging.handlers.RotatingFileHandler , filename : LOGGING_DIR + _get_filename ( log_level = error ), maxBytes : _SINGLE_FILE_MAX_BYTES , # 2GB encoding : UTF-8 , backupCount : _BACKUP_COUNT , formatter : dev , delay : True , }, }, loggers : { # \u771f\u6b63\u7684logger(by name), \u53ef\u4ee5\u6709\u4e30\u5bcc\u7684\u914d\u7f6e SAMPLE_LOGGER : { # \u8f93\u9001\u52303\u4e2ahandler\uff0c\u5b83\u4eec\u7684\u4f5c\u7528\u5206\u522b\u5982\u4e0b # 1. console\uff1a\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u67e5\u770b\uff0c\u53ea\u8bb0\u5f55ERROR\u4ee5\u4e0a\u7684\u65e5\u5fd7\u5c31\u597d # 2. file\uff1a \u8f93\u9001\u5230\u6587\u4ef6\uff0c\u8bb0\u5f55INFO\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u65e5\u540e\u56de\u6eaf\u5206\u6790 # 3. file_error\uff1a\u8f93\u9001\u5230\u6587\u4ef6\uff08\u4e0e\u4e0a\u9762\u76f8\u540c\uff09\uff0c\u4f46\u662f\u53ea\u8bb0\u5f55ERROR\u7ea7\u522b\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u7814\u53d1\u4eba\u5458\u6392\u9519 handlers : [ console , file , file_error ], level : INFO , }, DEBUG_LOGGER : { # \u8f93\u9001\u52303\u4e2ahandler\uff0c\u5b83\u4eec\u7684\u4f5c\u7528\u5206\u522b\u5982\u4e0b # 1. console\uff1a\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u65b9\u4fbf\u6211\u4eec\u76f4\u63a5\u67e5\u770b\uff0c\u53ea\u8bb0\u5f55ERROR\u4ee5\u4e0a\u7684\u65e5\u5fd7\u5c31\u597d # 2. file\uff1a \u8f93\u9001\u5230\u6587\u4ef6\uff0c\u8bb0\u5f55INFO\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u65e5\u540e\u56de\u6eaf\u5206\u6790 # 3. file_error\uff1a\u8f93\u9001\u5230\u6587\u4ef6\uff08\u4e0e\u4e0a\u9762\u76f8\u540c\uff09\uff0c\u4f46\u662f\u53ea\u8bb0\u5f55ERROR\u7ea7\u522b\u4ee5\u4e0a\u7684\u65e5\u5fd7\uff0c\u65b9\u4fbf\u7814\u53d1\u4eba\u5458\u6392\u9519 handlers : [ console , file , file_error ], level : DEBUG , }, }, } logging . config . dictConfig ( _LOG_CONFIG_DICT ) @classmethod def get_logger ( cls , logger_name ): return logging . getLogger ( logger_name ) \u4f7f\u7528\u914d\u7f6e\u7684\u65e5\u5fd7\u5904\u7406\u5668\u8bb0\u5f55\u65e5\u5fd7\u4fe1\u606f from hello.log_.log_factory.logger_factory import _LogFactory logger1 = _LogFactory . get_logger ( DEBUG_LOGGER ) logger1 . info ( This is a info log. ) logger1 . warn ( This is a warning log. ) logger1 . error ( This is a error log. ) logger1 . critical ( This is a critical log. )","title":"\u81ea\u5b9a\u4e49\u65e5\u5fd7"},{"location":"python/server/django/djangoLogger/#_2","text":"\u4f7f\u7528\u6ce8\u89e3\u65b9\u6cd5\u5b9e\u73b0\u53d1\u9001\u9519\u8bef\u65e5\u5fd7\u6587\u4ef6 def decorator_error_monitor ( title ): def wrap ( f ): def wrapped_f ( * args , ** kwargs ): try : result = f ( * args , ** kwargs ) return result except : exc = traceback . format_exc () utils . send_exception_email ( email_list , title , exc ) raise Exception ( exc ) return wrapped_f return wrap \u5728\u4ee3\u7801\u4e2d\u5b9e\u73b0\u6ce8\u89e3 @decorator_error_monitor ( \u6e05\u7b97\u9519\u8bef ) def do_settlement ( users ): for user in users : process_settlement_for_one_user ( user )","title":"\u4f7f\u7528\u6ce8\u89e3\u53d1\u9001\u53d1\u9001\u90ae\u4ef6"},{"location":"python/server/django/djangoLogger/#_3","text":"import logging import logging.handlers import datetime import os from web_project.settings import DEBUG # \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u5939 LOGGING_DIR = web_project/log/ # \u5982\u679c\u6587\u4ef6\u5939\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u6587\u4ef6\u5939 if not os . path . exists ( LOGGING_DIR ): os . mkdir ( LOGGING_DIR ) # \u6307\u5b9a\u4e0d\u540c\u7ea7\u522b\u7684\u65e5\u5fd7\u7b49\u7ea7 FILE_ERROR = LOGGING_DIR + error.log FILE_ALL = LOGGING_DIR + all.log FILE_DEBUG = LOGGING_DIR + debug.log # \u8bbe\u7f6e\u7edf\u4e00\u7684\u65e5\u5fd7\u683c\u5f0f LOG_FORMAT = %(asctime)s - %(levelname)s - %(message)s DATE_FORMAT = %m/ %d /%Y %H:%M:%S %p # logging.basicConfig(level=logging.DEBUG, # filename=FILE_DEBUG, # format=LOG_FORMAT, # datefmt=DATE_FORMAT, # ) logging . warning ( Some one delete the log file. , exc_info = True , stack_info = True , extra = { user : Tom , ip : 47.98.53.222 }) logger = logging . getLogger ( mylogger ) logger . setLevel ( DEBUG ) rf_handler = logging . handlers . TimedRotatingFileHandler ( FILE_ALL , when = midnight , interval = 1 , backupCount = 7 , atTime = datetime . time ( 0 , 0 , 0 , 0 )) rf_handler . setFormatter ( logging . Formatter ( LOG_FORMAT )) f_handler = logging . FileHandler ( FILE_ERROR ) f_handler . setLevel ( logging . WARN ) f_handler . setFormatter ( logging . Formatter ( %(asctime)s - %(levelname)s - %(filename)s [: %(lineno)d ] - %(message)s )) logger . addHandler ( rf_handler ) logger . addHandler ( f_handler )","title":"\u4f7f\u7528\u4ee3\u7801\u914d\u7f6e\u65e5\u5fd7\u6587\u4ef6"},{"location":"python/server/django/djangoLogger/#_4","text":"Python\u65e5\u5fd7\u6587\u4ef6 Python \u65e5\u5fd7\u5904\u7406 \u65e5\u5fd7\u5904\u7406 \u81ea\u5b9a\u4e49\u65e5\u5fd7\u5e93 Django\u7cfb\u7edf\u9519\u8bef\u76d1\u63a7","title":"\u94fe\u63a5"},{"location":"python/server/django/djangomessage/","text":"Django message uwsgi's default configuration enforces a maximum size of 4kb for all the HTTP headers. In order to leave some room for other cookies and headers, restrict the session cookie to of 4kb. See #18781 . Uwsgi \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u7684\u9ed8\u8ba4\u4fe1\u606f\u5217\u8868,\u4e3b\u8981\u5305\u62ec\u8bf7\u6c42\u4fe1\u606f { TMPDIR : /var/folders/96/lqx674_55nn4hw_3vvdxqbcc0000gn/T/ , __CF_USER_TEXT_ENCODING : 0x1F5:0x19:0x34 , SHELL : /bin/zsh , HOME : /Users/cangck , Apple_PubSub_Socket_Render : /private/tmp/com.apple.launchd.pGPFSHWK0a/Render , SSH_AUTH_SOCK : /private/tmp/com.apple.launchd.mhtrkiZCub/Listeners , PATH : /Users/cangck/PycharmProjects/hello_django/env/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Users/cangck/.rvm/bin , LOGNAME : cangck , XPC_SERVICE_NAME : 0 , USER : cangck , XPC_FLAGS : 0x0 , LC_CTYPE : zh_CN.UTF-8 , LESS : -R , LSCOLORS : Gxfxcxdxbxegedabagacad , OLDPWD : /Users/cangck/PycharmProjects/hello_django , PAGER : less , PWD : /Users/cangck/PycharmProjects/hello_django , SHLVL : 1 , ZSH : /Users/cangck/.oh-my-zsh , rvm_bin_path : /Users/cangck/.rvm/bin , rvm_path : /Users/cangck/.rvm , rvm_prefix : /Users/cangck , rvm_version : 1.29.3 () , TERM_PROGRAM : vscode , TERM_PROGRAM_VERSION : 1.33.1 , LANG : zh_CN.UTF-8 , TERM : xterm-256color , _system_type : Darwin , _system_name : OSX , _system_version : 10.14 , _system_arch : x86_64 , VIRTUAL_ENV : /Users/cangck/PycharmProjects/hello_django/env , PS1 : (env) ${ret_status } % { $fg[cyan]% } %c% { $reset_color% } $(git_prompt_info) , rvm_alias_expanded : , rvm_bin_flag : , rvm_docs_type : , rvm_gemstone_package_file : , rvm_gemstone_url : , rvm_niceness : , rvm_nightly_flag : , rvm_only_path_flag : , rvm_pretty_print_flag : , rvm_proxy : , rvm_quiet_flag : , rvm_ruby_bits : , rvm_ruby_file : , rvm_ruby_make : , rvm_ruby_make_install : , rvm_ruby_mode : , rvm_script_name : , rvm_sdk : , rvm_silent_flag : , rvm_use_flag : , rvm_wrapper_name : , rvm_hook : , _ : /Users/cangck/PycharmProjects/hello_django/env/bin/python , __PYVENV_LAUNCHER__ : /Users/cangck/PycharmProjects/hello_django/env/bin/python , DJANGO_SETTINGS_MODULE : web_project.settings , TZ : UTC , RUN_MAIN : true , SERVER_NAME : 1.0 . 0.127 .in-addr.arpa , GATEWAY_INTERFACE : CGI/ 1.1 , SERVER_PORT : 8003 , REMOTE_HOST : , CONTENT_LENGTH : , SCRIPT_NAME : , SERVER_PROTOCOL : HTTP/ 1.1 , SERVER_SOFTWARE : WSGIServer/ 0.2 , REQUEST_METHOD : GET , PATH_INFO : /hello/current_time/ , QUERY_STRING : , REMOTE_ADDR : 127.0 . 0.1 , CONTENT_TYPE : text/plain , HTTP_HOST : 127.0 . 0.1 : 8003 , HTTP_CONNECTION : keep-alive , HTTP_CACHE_CONTROL : max-age= 0 , HTTP_UPGRADE_INSECURE_REQUESTS : 1 , HTTP_USER_AGENT : Mozilla/ 5.0 (Macintosh; Intel Mac OS X 10 _ 14 _ 0 ) AppleWebKit/ 537.36 (KHTML, like Gecko) Chrome/ 73.0 . 3683.103 Safari/ 537.36 , HTTP_ACCEPT : text/html,application/xhtml+xml,application/xml;q= 0.9 ,image/webp,image/apng,*/*;q= 0.8 ,application/signed-exchange;v=b 3 , HTTP_ACCEPT_ENCODING : gzip, deflate, br , HTTP_ACCEPT_LANGUAGE : en-US,en;q= 0.9 ,zh-CN;q= 0.8 ,zh;q= 0.7 , HTTP_COOKIE : _ga=GA 1.1 . 990647925.1517999642 ; csrftoken=XYsCozyDARDQwLnztaLrpX 47 fdPbB 93 cR 71 ehOIJXvJ 0 MxSQzSCJl 6 tUjVU 8 xXWd; sessionid=pmkov 2 tmpfieugfbbl 8 t 74 lr 8 wk 8 dkbb; _gid=GA 1.1 . 1186369822.1556894918 ; __lfcc= 1 ; messages= aaaec40dc811d4ff7019b51ba217c91e594493e7$[[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]] , wsgi.input : django.core.handlers.wsgi.LimitedStream object at 0 x 1083e8978 , wsgi.errors : _io.TextIOWrapper name = stderr mode = w encoding = UTF -8 , wsgi.version : ( 1 , 0 ), wsgi.run_once : False, wsgi.url_scheme : http , wsgi.multithread : True, wsgi.multiprocess : False, wsgi.file_wrapper : class wsgiref.util.FileWrapper } { Content-Length : , Content-Type : text/plain , Host : 127.0.0.1:8003 , Connection : keep-alive , Cache-Control : max-age=0 , Upgrade-Insecure-Requests : 1 , User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 , Accept : text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3 , Accept-Encoding : gzip, deflate, br , Accept-Language : en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7 , Cookie : _ga=GA1.1.990647925.1517999642; csrftoken=XYsCozyDARDQwLnztaLrpX47fdPbB93cR71ehOIJXvJ0MxSQzSCJl6tUjVU8xXWd; sessionid=pmkov2tmpfieugfbbl8t74lr8wk8dkbb; _gid=GA1.1.1186369822.1556894918; __lfcc=1; 313442014.cache-source=[%220%20Stars%22%2C%220%20Forks%22] } \u5173\u8054 DjangoMessage","title":"Django message"},{"location":"python/server/django/djangomessage/#django-message","text":"uwsgi's default configuration enforces a maximum size of 4kb for all the HTTP headers. In order to leave some room for other cookies and headers, restrict the session cookie to of 4kb. See #18781 .","title":"Django message"},{"location":"python/server/django/djangomessage/#uwsgi","text":"{ TMPDIR : /var/folders/96/lqx674_55nn4hw_3vvdxqbcc0000gn/T/ , __CF_USER_TEXT_ENCODING : 0x1F5:0x19:0x34 , SHELL : /bin/zsh , HOME : /Users/cangck , Apple_PubSub_Socket_Render : /private/tmp/com.apple.launchd.pGPFSHWK0a/Render , SSH_AUTH_SOCK : /private/tmp/com.apple.launchd.mhtrkiZCub/Listeners , PATH : /Users/cangck/PycharmProjects/hello_django/env/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/usr/local/share/dotnet:~/.dotnet/tools:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/Users/cangck/.rvm/bin , LOGNAME : cangck , XPC_SERVICE_NAME : 0 , USER : cangck , XPC_FLAGS : 0x0 , LC_CTYPE : zh_CN.UTF-8 , LESS : -R , LSCOLORS : Gxfxcxdxbxegedabagacad , OLDPWD : /Users/cangck/PycharmProjects/hello_django , PAGER : less , PWD : /Users/cangck/PycharmProjects/hello_django , SHLVL : 1 , ZSH : /Users/cangck/.oh-my-zsh , rvm_bin_path : /Users/cangck/.rvm/bin , rvm_path : /Users/cangck/.rvm , rvm_prefix : /Users/cangck , rvm_version : 1.29.3 () , TERM_PROGRAM : vscode , TERM_PROGRAM_VERSION : 1.33.1 , LANG : zh_CN.UTF-8 , TERM : xterm-256color , _system_type : Darwin , _system_name : OSX , _system_version : 10.14 , _system_arch : x86_64 , VIRTUAL_ENV : /Users/cangck/PycharmProjects/hello_django/env , PS1 : (env) ${ret_status } % { $fg[cyan]% } %c% { $reset_color% } $(git_prompt_info) , rvm_alias_expanded : , rvm_bin_flag : , rvm_docs_type : , rvm_gemstone_package_file : , rvm_gemstone_url : , rvm_niceness : , rvm_nightly_flag : , rvm_only_path_flag : , rvm_pretty_print_flag : , rvm_proxy : , rvm_quiet_flag : , rvm_ruby_bits : , rvm_ruby_file : , rvm_ruby_make : , rvm_ruby_make_install : , rvm_ruby_mode : , rvm_script_name : , rvm_sdk : , rvm_silent_flag : , rvm_use_flag : , rvm_wrapper_name : , rvm_hook : , _ : /Users/cangck/PycharmProjects/hello_django/env/bin/python , __PYVENV_LAUNCHER__ : /Users/cangck/PycharmProjects/hello_django/env/bin/python , DJANGO_SETTINGS_MODULE : web_project.settings , TZ : UTC , RUN_MAIN : true , SERVER_NAME : 1.0 . 0.127 .in-addr.arpa , GATEWAY_INTERFACE : CGI/ 1.1 , SERVER_PORT : 8003 , REMOTE_HOST : , CONTENT_LENGTH : , SCRIPT_NAME : , SERVER_PROTOCOL : HTTP/ 1.1 , SERVER_SOFTWARE : WSGIServer/ 0.2 , REQUEST_METHOD : GET , PATH_INFO : /hello/current_time/ , QUERY_STRING : , REMOTE_ADDR : 127.0 . 0.1 , CONTENT_TYPE : text/plain , HTTP_HOST : 127.0 . 0.1 : 8003 , HTTP_CONNECTION : keep-alive , HTTP_CACHE_CONTROL : max-age= 0 , HTTP_UPGRADE_INSECURE_REQUESTS : 1 , HTTP_USER_AGENT : Mozilla/ 5.0 (Macintosh; Intel Mac OS X 10 _ 14 _ 0 ) AppleWebKit/ 537.36 (KHTML, like Gecko) Chrome/ 73.0 . 3683.103 Safari/ 537.36 , HTTP_ACCEPT : text/html,application/xhtml+xml,application/xml;q= 0.9 ,image/webp,image/apng,*/*;q= 0.8 ,application/signed-exchange;v=b 3 , HTTP_ACCEPT_ENCODING : gzip, deflate, br , HTTP_ACCEPT_LANGUAGE : en-US,en;q= 0.9 ,zh-CN;q= 0.8 ,zh;q= 0.7 , HTTP_COOKIE : _ga=GA 1.1 . 990647925.1517999642 ; csrftoken=XYsCozyDARDQwLnztaLrpX 47 fdPbB 93 cR 71 ehOIJXvJ 0 MxSQzSCJl 6 tUjVU 8 xXWd; sessionid=pmkov 2 tmpfieugfbbl 8 t 74 lr 8 wk 8 dkbb; _gid=GA 1.1 . 1186369822.1556894918 ; __lfcc= 1 ; messages= aaaec40dc811d4ff7019b51ba217c91e594493e7$[[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]\\\\054[\\\\ __json_message\\\\ \\\\0540\\\\05420\\\\054\\\\ hello world\\\\ ]] , wsgi.input : django.core.handlers.wsgi.LimitedStream object at 0 x 1083e8978 , wsgi.errors : _io.TextIOWrapper name = stderr mode = w encoding = UTF -8 , wsgi.version : ( 1 , 0 ), wsgi.run_once : False, wsgi.url_scheme : http , wsgi.multithread : True, wsgi.multiprocess : False, wsgi.file_wrapper : class wsgiref.util.FileWrapper } { Content-Length : , Content-Type : text/plain , Host : 127.0.0.1:8003 , Connection : keep-alive , Cache-Control : max-age=0 , Upgrade-Insecure-Requests : 1 , User-Agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36 , Accept : text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3 , Accept-Encoding : gzip, deflate, br , Accept-Language : en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7 , Cookie : _ga=GA1.1.990647925.1517999642; csrftoken=XYsCozyDARDQwLnztaLrpX47fdPbB93cR71ehOIJXvJ0MxSQzSCJl6tUjVU8xXWd; sessionid=pmkov2tmpfieugfbbl8t74lr8wk8dkbb; _gid=GA1.1.1186369822.1556894918; __lfcc=1; 313442014.cache-source=[%220%20Stars%22%2C%220%20Forks%22] }","title":"Uwsgi \u6bcf\u4e00\u4e2a\u8bf7\u6c42\u7684\u9ed8\u8ba4\u4fe1\u606f\u5217\u8868,\u4e3b\u8981\u5305\u62ec\u8bf7\u6c42\u4fe1\u606f"},{"location":"python/server/django/djangomessage/#_1","text":"DjangoMessage","title":"\u5173\u8054"},{"location":"python/server/django/djangosignals/","text":"Django signals Django\u5305\u542b\u4e00\u4e2a\u201c\u4fe1\u53f7\u8c03\u5ea6\u7a0b\u5e8f\u201d\uff0c\u5b83\u6709\u52a9\u4e8e\u5728\u6846\u67b6\u4e2d\u7684\u5176\u4ed6\u4f4d\u7f6e\u53d1\u751f\u64cd\u4f5c\u65f6\u901a\u77e5\u5206\u79bb\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4fe1\u53f7\u5141\u8bb8\u67d0\u4e9b\u53d1\u9001\u8005\u901a\u77e5\u4e00\u7ec4\u63a5\u6536\u5668\u5df2\u7ecf\u53d1\u751f\u4e86\u67d0\u4e9b\u52a8\u4f5c\u3002\u5f53\u8bb8\u591a\u4ee3\u7801\u7247\u6bb5\u53ef\u80fd\u5bf9\u76f8\u540c\u7684\u4e8b\u4ef6\u611f\u5174\u8da3\u65f6\uff0c\u5b83\u4eec\u7279\u522b\u6709\u7528\u3002 Django signals \u6709\u4e09\u90e8\u5206\u7ec4\u6210 class Signal receiver \u4fe1\u53f7 \u6ce8\u518c\u4fe1\u53f7\u7684\u4e24\u79cd\u65b9\u5f0f 1.\u4f7f\u7528Singal connect\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c 2.\u4f7f\u7528\u6ce8\u89e3\u51fd\u6570\u8fdb\u884c\u6ce8\u518c \u53ef\u4ee5\u901a\u8fc7 sender \u6765\u6807\u8bb0\u5904\u7406\u51fd\u6570\u5904\u7406\u7684\u662f\u54ea\u4e00\u4e2a\u65b9\u5f0f\u8005\u4f20\u9012\u7684\u4fe1\u606f \u4f8b\u5b50: from django.core.signals import request_finished from django.dispatch import receiver from django.dispatch import Signal /* \u6ce8\u518c\u4e00\u4e2a\u4fe1\u53f7 */ pizz_done = Signal ( providing_args = [ toppings , size ]) # \u4f7f\u7528\u4e00\u4e2a\u6ce8\u89e3\u65b9\u5f0f\u6ce8\u518c\u4e00\u4e2a\u8bf7\u6c42\u5b8c\u6210\u4fe1\u53f7\uff0c\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5b8c\u6210\u662f\u90fd\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5(\u7cfb\u7edf\u5185\u7f6e\u7684\u4fe1\u53f7) # @receiver(request_finished) def my_callback ( sender , ** kwargs ): #\u8fd9\u4e2a\u662f\u4e0a\u9762\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7,\u8c03\u7528`send`\u65b9\u6cd5\u53d1\u9001\u4fe1\u53f7 pizz_done . send ( sender = ABC , toppings = pizza , size = 20 ) print ( Request finished! ) @receiver ( pizz_done , sender = ABC ) def pizz_done_receiver ( sender , ** kwargs ): print ( \u6211\u5728 %s \u65f6\u95f4\u6536\u5230\u6765\u81ea %s \u7684\u4fe1\u53f7\uff0c\u8bf7\u6c42size\u4e3a %s % ( kwargs [ toppings ], sender , kwargs [ size ])) print ( id ( pizz_done_receiver )) def pizaa_done_receive ( sender , ** kwargs ): print ( \u4f7f\u7528connect\u8fde\u63a5 ) #\u4f7f\u7528`connect`\u65b9\u6cd5\u6dfb\u52a0\u63a5\u6536\u51fd\u6570\u5230Singal\u63a5\u6536\u5217\u8868\u4e2d pizz_done . connect ( pizaa_done_receive ) /* \u5728URL\u4e2d\u5bfc\u5165\u4e0a\u8ff0\u7684\u5e26\u5185\u5bb9,\u5728\u6d4f\u89c8\u5668\u4e2d\u670d\u52a1\u4e00\u4e0b\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8c03\u7528\u4e0a\u9762\u7684\u4fe1\u53f7\u673a\u5236 */ \u6211\u5728pizza\u65f6\u95f4\u6536\u5230\u6765\u81eaABC\u7684\u4fe1\u53f7\uff0c\u8bf7\u6c42url\u4e3a20 \u4f7f\u7528connect\u8fde\u63a5 Request finished! \u6e90\u7801\u89e3\u6790 \u4f7f\u7528\u5230\u7684\u5173\u952e\u6280\u672f\u548c\u65b9\u6cd5: 1.threading:\u4e3b\u8981\u662f\u4f7f\u7528\u7ebf\u7a0b\u4e2d\u7684\u9501\u673a\u5236\uff0c\u4fdd\u8bc1Signal\u7c7b\u80fd\u591f\u5bf9\u7c7b\u4e2d\u7684\u63a5\u6536\u8005\u8fdb\u884c\u5904\u7406\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u64cd\u4f5c\u63a5\u6536\u8005\u76f8\u5173\u7684\u4fe1\u606f\u64cd\u4f5c\u7684\u539f\u5b50\u6027 2.weakref:\u5f31\u5f15\u7528\uff0c\u4fdd\u8bc1\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u53ef\u4ee5\u88ab\u56de\u6536 3.inspect:\u4f7f\u7528Python\u7684\u6a21\u5757\uff0c\u5bf9\u4f20\u5165\u53c2\u6570\u7684\u68c0\u67e5(\u5185\u7701\u9ad8\u7ea7\u64cd\u4f5c) 4. init : __init__ \u65b9\u6cd5\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e00\u4e2a list \u5217\u8868\u6765\u4fdd\u5b58\u8fde\u63a5\u5230\u4fe1\u53f7\u7684\u63a5\u6536\u8005\u3001\u4f7f\u7528 providing_args \u5217\u8868\u6765\u4fdd\u5b58\u81ea\u5b9a\u4e49\u7684\u53c2\u6570 5.connect:\u4e3b\u8981\u662f\u5173\u8054\u63a5\u6536\u8005\u548c\u53d1\u9001\u8005\u7684\u5173\u7cfb\u5e76\u4e14\u4f7f\u7528\u5f31\u5f15\u7528\u4fdd\u5b58\u63a5\u6536\u8005\u65b9\u6cd5 6.disconnect 7.has_listeners 8.send:\u4e3b\u8981\u7528\u6765\u53d1\u9001\u4fe1\u606f\u5230\u63a5\u6536\u8005 9.send_robust \u4e00\u4e0b\u51e0\u4e2a\u65b9\u6cd5\u662f\u5bf9\u5f31\u5f15\u7528\u4e2d\u7684\u63a5\u6536\u8005\u8fdb\u884c\u6e05\u7406\u64cd\u4f5c 10._clear_dead_receivers 11._live_receivers 12._remove_receiver import threading import weakref from django.utils.inspect import func_accepts_kwargs def _make_id ( target ): if hasattr ( target , __func__ ): return ( id ( target . __self__ ), id ( target . __func__ )) return id ( target ) NONE_ID = _make_id ( None ) # A marker for caching NO_RECEIVERS = object () class Signal : Base class for all signals Internal attributes: receivers { receiverkey (id) : weakref(receiver) } def __init__ ( self , providing_args = None , use_caching = False ): Create a new signal. providing_args A list of the arguments this signal can pass along in a send() call. self . receivers = [] if providing_args is None : providing_args = [] self . providing_args = set ( providing_args ) self . lock = threading . Lock () self . use_caching = use_caching # For convenience we create empty caches even if they are not used. # A note about caching: if use_caching is defined, then for each # distinct sender we cache the receivers that sender has in # sender_receivers_cache . The cache is cleaned when .connect() or # .disconnect() is called and populated on send(). self . sender_receivers_cache = weakref . WeakKeyDictionary () if use_caching else {} self . _dead_receivers = False def connect ( self , receiver , sender = None , weak = True , dispatch_uid = None ): Connect receiver to sender for signal. Arguments: receiver A function or an instance method which is to receive signals. Receivers must be hashable objects. If weak is True, then receiver must be weak referenceable. Receivers must be able to accept keyword arguments. If a receiver is connected with a dispatch_uid argument, it will not be added if another receiver was already connected with that dispatch_uid. sender The sender to which the receiver should respond. Must either be a Python object, or None to receive events from any sender. weak Whether to use weak references to the receiver. By default, the module will attempt to use weak references to the receiver objects. If this parameter is false, then strong references will be used. dispatch_uid An identifier used to uniquely identify a particular instance of a receiver. This will usually be a string, though it may be anything hashable. from django.conf import settings # If DEBUG is on, check that we got a good receiver if settings . configured and settings . DEBUG : assert callable ( receiver ), Signal receivers must be callable. # Check for **kwargs if not func_accepts_kwargs ( receiver ): raise ValueError ( Signal receivers must accept keyword arguments (**kwargs). ) if dispatch_uid : lookup_key = ( dispatch_uid , _make_id ( sender )) else : lookup_key = ( _make_id ( receiver ), _make_id ( sender )) if weak : ref = weakref . ref receiver_object = receiver # Check for bound methods if hasattr ( receiver , __self__ ) and hasattr ( receiver , __func__ ): ref = weakref . WeakMethod receiver_object = receiver . __self__ receiver = ref ( receiver ) weakref . finalize ( receiver_object , self . _remove_receiver ) with self . lock : self . _clear_dead_receivers () if not any ( r_key == lookup_key for r_key , _ in self . receivers ): self . receivers . append (( lookup_key , receiver )) self . sender_receivers_cache . clear () def disconnect ( self , receiver = None , sender = None , dispatch_uid = None ): Disconnect receiver from sender for signal. If weak references are used, disconnect need not be called. The receiver will be removed from dispatch automatically. Arguments: receiver The registered receiver to disconnect. May be none if dispatch_uid is specified. sender The registered sender to disconnect dispatch_uid the unique identifier of the receiver to disconnect if dispatch_uid : lookup_key = ( dispatch_uid , _make_id ( sender )) else : lookup_key = ( _make_id ( receiver ), _make_id ( sender )) disconnected = False with self . lock : self . _clear_dead_receivers () for index in range ( len ( self . receivers )): ( r_key , _ ) = self . receivers [ index ] if r_key == lookup_key : disconnected = True del self . receivers [ index ] break self . sender_receivers_cache . clear () return disconnected def has_listeners ( self , sender = None ): return bool ( self . _live_receivers ( sender )) def send ( self , sender , ** named ): Send signal from sender to all connected receivers. If any receiver raises an error, the error propagates back through send, terminating the dispatch loop. So it s possible that all receivers won t be called if an error is raised. Arguments: sender The sender of the signal. Either a specific object or None. named Named arguments which will be passed to receivers. Return a list of tuple pairs [(receiver, response), ... ]. if not self . receivers or self . sender_receivers_cache . get ( sender ) is NO_RECEIVERS : return [] return [ ( receiver , receiver ( signal = self , sender = sender , ** named )) for receiver in self . _live_receivers ( sender ) ] def send_robust ( self , sender , ** named ): Send signal from sender to all connected receivers catching errors. Arguments: sender The sender of the signal. Can be any Python object (normally one registered with a connect if you actually want something to occur). named Named arguments which will be passed to receivers. These arguments must be a subset of the argument names defined in providing_args. Return a list of tuple pairs [(receiver, response), ... ]. If any receiver raises an error (specifically any subclass of Exception), return the error instance as the result for that receiver. if not self . receivers or self . sender_receivers_cache . get ( sender ) is NO_RECEIVERS : return [] # Call each receiver with whatever arguments it can accept. # Return a list of tuple pairs [(receiver, response), ... ]. responses = [] for receiver in self . _live_receivers ( sender ): try : response = receiver ( signal = self , sender = sender , ** named ) except Exception as err : responses . append (( receiver , err )) else : responses . append (( receiver , response )) return responses def _clear_dead_receivers ( self ): # Note: caller is assumed to hold self.lock. if self . _dead_receivers : self . _dead_receivers = False self . receivers = [ r for r in self . receivers if not ( isinstance ( r [ 1 ], weakref . ReferenceType ) and r [ 1 ]() is None ) ] def _live_receivers ( self , sender ): Filter sequence of receivers to get resolved, live receivers. This checks for weak references and resolves them, then returning only live receivers. receivers = None if self . use_caching and not self . _dead_receivers : receivers = self . sender_receivers_cache . get ( sender ) # We could end up here with NO_RECEIVERS even if we do check this case in # .send() prior to calling _live_receivers() due to concurrent .send() call. if receivers is NO_RECEIVERS : return [] if receivers is None : with self . lock : self . _clear_dead_receivers () senderkey = _make_id ( sender ) receivers = [] for ( receiverkey , r_senderkey ), receiver in self . receivers : if r_senderkey == NONE_ID or r_senderkey == senderkey : receivers . append ( receiver ) if self . use_caching : if not receivers : self . sender_receivers_cache [ sender ] = NO_RECEIVERS else : # Note, we must cache the weakref versions. self . sender_receivers_cache [ sender ] = receivers non_weak_receivers = [] for receiver in receivers : if isinstance ( receiver , weakref . ReferenceType ): # Dereference the weak reference. receiver = receiver () if receiver is not None : non_weak_receivers . append ( receiver ) else : non_weak_receivers . append ( receiver ) return non_weak_receivers def _remove_receiver ( self , receiver = None ): # Mark that the self.receivers list has dead weakrefs. If so, we will # clean those up in connect, disconnect and _live_receivers while # holding self.lock. Note that doing the cleanup here isn t a good # idea, _remove_receiver() will be called as side effect of garbage # collection, and so the call can happen while we are already holding # self.lock. self . _dead_receivers = True @receiver \u4f7f\u7528\u6ce8\u89e3\u7684\u65b9\u6cd5\u628a\u9700\u8981\u6ce8\u518c\u7684\u65b9\u6cd5\u6dfb\u52a0\u5230\u63a5\u6536\u5217\u8868\u4e2d def receiver ( signal , ** kwargs ): A decorator for connecting receivers to signals. Used by passing in the signal (or list of signals) and keyword arguments to connect:: @receiver(post_save, sender=MyModel) def signal_receiver(sender, **kwargs): ... @receiver([post_save, post_delete], sender=MyModel) def signals_receiver(sender, **kwargs): ... def _decorator ( func ): if isinstance ( signal , ( list , tuple )): for s in signal : s . connect ( func , ** kwargs ) else : signal . connect ( func , ** kwargs ) return func return _decorator \u53c2\u8003: Django\u4fe1\u53f7\u6587\u6863 Django \u5185\u7f6e\u4fe1\u53f7\u6587\u6863 Django \u6e90\u7801\u89e3\u6790 functools\u6a21\u5757 update_wrapper() and wraps() decorator total_ordering class decorator cmp_to_key() function converter partial() argument application LRU Cache function decorator singledispatch() - single-dispatch generic function decorator \u4e0b\u5217\u5305\u7684\u4f7f\u7528: import collections.abc import inspect import warnings from math import ceil /usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/functools.py Django\u6a21\u677f Django\u4f5c\u4e3a\u4e00\u4e2aWeb\u6846\u67b6\uff0c\u9700\u8981\u52a8\u6001\u8f93\u51faHTML\u6587\u4ef6\uff0c\u9700\u8981\u52a8\u6001\u7684\u6e32\u67d3HTML\u6587\u4ef6\u548c\u63d2\u4ef6\u52a8\u6001\u7684\u5185\u5bb9\u5230HTML\u6807\u7b7e\u4e2d Django\u652f\u6301\u5185\u7f6e\u7684\u6a21\u677f\u5f15\u64ce\u548c\u7b2c\u4e09\u65b9\u6a21\u677f\u5f15\u64ce jinja2 Django\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6807\u51c6API\uff0c\u7528\u4e8e\u52a0\u8f7d\u548c\u5448\u73b0\u6a21\u677f\uff0c\u65e0\u8bba\u540e\u7aef\u5982\u4f55\u3002\u52a0\u8f7d\u5305\u62ec\u67e5\u627e\u7ed9\u5b9a\u6807\u8bc6\u7b26\u7684\u6a21\u677f\u5e76\u5bf9\u5176\u8fdb\u884c\u9884\u5904\u7406\uff0c\u901a\u5e38\u5c06\u5176\u7f16\u8bd1\u4e3a\u5185\u5b58\u4e2d\u8868\u793a\u3002\u6e32\u67d3\u610f\u5473\u7740\u4f7f\u7528\u4e0a\u4e0b\u6587\u6570\u636e\u63d2\u5165\u6a21\u677f\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u914d\u7f6e \u4f7f\u7528\u8be5TEMPLATES\u8bbe\u7f6e\u914d\u7f6e\u6a21\u677f\u5f15\u64ce\u3002\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u5217\u8868\uff0c\u6bcf\u4e2a\u5f15\u64ce\u4e00\u4e2a\u3002\u9ed8\u8ba4\u503c\u4e3a\u7a7a\u3002\u5728 settings.py\u7531\u6240\u4ea7\u751f\u7684startproject\u547d\u4ee4\u5b9a\u4e49\u4e00\u4e2a\u66f4\u6709\u7528\u7684\u503c\uff1a TEMPLATES = [ { BACKEND : django.template.backends.django.DjangoTemplates , DIRS : [] , APP_DIRS : True, OPTIONS : { # ... some options here ... } , } , ] BACKEND\u662f\u5b9e\u73b0Django\u6a21\u677f\u540e\u7aefAPI\u7684\u6a21\u677f\u5f15\u64ce\u7c7b\u7684\u865a\u7ebfPython\u8def\u5f84\u3002\u5185\u7f6e\u540e\u7aef\u662fdjango.template.backends.django.DjangoTemplates\u548c django.template.backends.jinja2.Jinja2\u3002 \u7531\u4e8e\u5927\u591a\u6570\u5f15\u64ce\u4ece\u6587\u4ef6\u52a0\u8f7d\u6a21\u677f\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5f15\u64ce\u7684\u9876\u7ea7\u914d\u7f6e\u5305\u542b\u4e24\u4e2a\u5e38\u7528\u8bbe\u7f6e\uff1a DIRS \u5b9a\u4e49\u5f15\u64ce\u5e94\u6309\u641c\u7d22\u987a\u5e8f\u67e5\u627e\u6a21\u677f\u6e90\u6587\u4ef6\u7684\u76ee\u5f55\u5217\u8868\u3002 APP_DIRS\u544a\u8bc9\u5f15\u64ce\u662f\u5426\u5e94\u8be5\u5728\u5df2\u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u67e5\u627e\u6a21\u677f\u3002\u6bcf\u4e2a\u540e\u7aef\u90fd\u5b9a\u4e49\u4e86\u5e94\u8be5\u5b58\u50a8\u5176\u6a21\u677f\u7684\u5e94\u7528\u7a0b\u5e8f\u5185\u7684\u5b50\u76ee\u5f55\u7684\u5e38\u89c4\u540d\u79f0\u3002 \u867d\u7136\u4e0d\u5e38\u89c1\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u9009\u9879\u914d\u7f6e\u540c\u4e00\u540e\u7aef\u7684\u591a\u4e2a\u5b9e\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e94\u8be5NAME\u4e3a\u6bcf\u4e2a\u5f15\u64ce\u5b9a\u4e49\u552f\u4e00 \u7684\u3002 OPTIONS \u5305\u542b\u7279\u5b9a\u4e8e\u540e\u7aef\u7684\u8bbe\u7f6e\u3002 \u5173\u952e\u7c7b 1.Engine:env/lib/python3.7/site-packages/django/template/engine.py 2.Loader 3.Template 4.EngineHandler:env/lib/python3.7/site-packages/django/template/utils.py 5.BaseEngine:env/lib/python3.7/site-packages/django/template/backends/base.py \u8868\u5355 \u8868\u5355\u5de5\u5177 Comment\u5de5\u5177 Django\u6a21\u677f\u8bed\u8a00 Django\u6a21\u677f\u8bed\u8a00 Django\u6a21\u677f\u8bed\u8a00 Django\u5185\u5efa\u6807\u7b7e\u548c\u8fc7\u6ee4 \u81ea\u5b9a\u4e49\u6807\u7b7e\u548c\u8fc7\u6ee4\u5668 \u57fa\u4e8e\u7c7b\u7684\u89c6\u56fe Django\u57fa\u4e8e\u7c7b\u7684\u89c6\u56fe \u6761\u4ef6\u5904\u7406 HTTP\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u9001\u8bb8\u591a\u6807\u5934\uff0c\u4ee5\u544a\u77e5\u670d\u52a1\u5668\u6709\u5173\u4ed6\u4eec\u5df2\u7ecf\u770b\u8fc7\u7684\u8d44\u6e90\u7684\u526f\u672c\u3002\u8fd9\u901a\u5e38\u5728\u68c0\u7d22\u7f51\u9875\uff08\u4f7f\u7528HTTP GET\u8bf7\u6c42\uff09\u65f6\u4f7f\u7528\uff0c\u4ee5\u907f\u514d\u53d1\u9001\u5ba2\u6237\u7aef\u5df2\u68c0\u7d22\u7684\u5185\u5bb9\u7684\u6240\u6709\u6570\u636e\u3002\u7136\u800c\uff0c\u76f8\u540c\u7684\u6807\u5934\u53ef\u7528\u4e8e\u6240\u6709HTTP\u65b9\u6cd5\uff08POST\uff0cPUT\uff0cDELETE\u7b49\u7b49\uff09\u3002 ConditionalGetMiddleware django.views.decorators.http.condition\u88c5\u9970\u5668 \u5c0f\u5fc3\u88c5\u9970\u5668\u7684\u987a\u5e8f \u5f53condition()\u8fd4\u56de\u6761\u4ef6\u54cd\u5e94\u65f6\uff0c\u5b83\u4e0b\u9762\u7684\u4efb\u4f55\u88c5\u9970\u5668\u90fd\u5c06\u88ab\u8df3\u8fc7\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5e94\u7528\u4e8e\u54cd\u5e94\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u9700\u8981\u5e94\u7528\u4e8e\u5e38\u89c4\u89c6\u56fe\u54cd\u5e94\u548c\u6761\u4ef6\u54cd\u5e94\u7684\u88c5\u9970\u5668\u5fc5\u987b\u5728\u4e0a\u9762condition()\u3002\u7279\u522b\u662f vary_on_cookie() vary_on_headers()\u548c cache_control()\u5e94\u8be5\u662f\u7b2c\u4e00\u4f4d\u7684\uff0c\u56e0\u4e3aRFC 7232\u8981\u6c42\u5b83\u4eec\u8bbe\u7f6e\u7684\u6807\u5934\u51fa\u73b0\u5728304\u54cd\u5e94\u4e2d\u3002 \u56fd\u9645\u5316\u548c\u672c\u5730\u5316 \u5728http\u5934\u90e8\u4f7f\u7528 Accept-Language \u6765\u6807\u8bb0\u8f93\u5165\u7684\u8bed\u8a00\u7c7b\u578b \u8b66\u544a\" \u7ffb\u8bd1\u548c\u683c\u5f0f\u5206\u522b\u7531USE_I18N\u548c USE_L10N\u8bbe\u7f6e\u63a7\u5236\u3002\u4f46\u662f\uff0c\u8fd9\u4e24\u4e2a\u7279\u5f81\u90fd\u6d89\u53ca\u56fd\u9645\u5316\u548c\u672c\u5730\u5316\u3002\u8bbe\u7f6e\u7684\u540d\u79f0\u662fDjango\u5386\u53f2\u7684\u4e0d\u5e78\u7ed3\u679c\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u52a9\u4e8e\u6211\u4eec\u5904\u7406\u5171\u540c\u8bed\u8a00\u7684\u5176\u4ed6\u672f\u8bed\uff1a \u533a\u57df\u8bbe\u7f6e\u540d\u79f0 \u533a\u57df\u8bbe\u7f6e\u540d\u79f0\uff0c\u8868\u5355\u7684\u8bed\u8a00\u89c4\u8303ll\u6216\u8868\u5355\u7684\u7ec4\u5408\u8bed\u8a00\u548c\u56fd\u5bb6/\u5730\u533a\u89c4\u8303ll_CC\u3002\u4f8b\u5982\uff1ait\uff0cde_AT\uff0ces\uff0cpt_BR\u3002\u8bed\u8a00\u90e8\u5206\u59cb\u7ec8\u4e3a\u5c0f\u5199\uff0c\u800c\u56fd\u5bb6/\u5730\u533a\u90e8\u5206\u4e3a\u5927\u5199\u3002\u5206\u9694\u7b26\u662f\u4e0b\u5212\u7ebf\u3002 \u8bed\u8a00\u4ee3\u7801 \u8868\u793a\u8bed\u8a00\u7684\u540d\u79f0\u3002\u6d4f\u89c8\u5668Accept-Language\u4f7f\u7528\u6b64\u683c\u5f0f\u53d1\u9001\u5b83\u4eec\u5728HTTP\u6807\u5934\u4e2d\u63a5\u53d7\u7684\u8bed\u8a00\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff1ait\uff0cde-at\uff0ces\uff0cpt-br\u3002\u8bed\u8a00\u4ee3\u7801\u901a\u5e38\u4ee5\u5c0f\u5199\u5f62\u5f0f\u8868\u793a\uff0c\u4f46HTTP Accept-Language \u6807\u5934\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002\u5206\u9694\u7b26\u662f\u7834\u6298\u53f7\u3002 \u6d88\u606f\u6587\u4ef6 \u6d88\u606f\u6587\u4ef6\u662f\u7eaf\u6587\u672c\u6587\u4ef6\uff0c\u8868\u793a\u5355\u4e2a\u8bed\u8a00\uff0c\u5305\u542b\u6240\u6709\u53ef\u7528\u7684\u7ffb\u8bd1\u5b57\u7b26\u4e32\u4ee5\u53ca\u5982\u4f55\u4ee5\u7ed9\u5b9a\u8bed\u8a00\u8868\u793a\u5b83\u4eec\u3002\u90ae\u4ef6\u6587\u4ef6\u5177\u6709.po\u6587\u4ef6\u6269\u5c55\u540d\u3002 \u7ffb\u8bd1\u5b57\u7b26\u4e32 \u53ef\u4ee5\u7ffb\u8bd1\u7684\u6587\u5b57\u3002 \u683c\u5f0f\u6587\u4ef6 \u683c\u5f0f\u6587\u4ef6\u662f\u4e00\u4e2aPython\u6a21\u5757\uff0c\u7528\u4e8e\u5b9a\u4e49\u7ed9\u5b9a\u8bed\u8a00\u73af\u5883\u7684\u6570\u636e\u683c\u5f0f\u3002 \u6587\u672c\u7ffb\u8bd1 \u65e5\u671f\u65f6\u95f4\u683c\u5f0f\u5316 \u65f6\u533a \u56fd\u9645\u5316","title":"Djangomessage"},{"location":"python/server/django/djangosignals/#django-signals","text":"Django\u5305\u542b\u4e00\u4e2a\u201c\u4fe1\u53f7\u8c03\u5ea6\u7a0b\u5e8f\u201d\uff0c\u5b83\u6709\u52a9\u4e8e\u5728\u6846\u67b6\u4e2d\u7684\u5176\u4ed6\u4f4d\u7f6e\u53d1\u751f\u64cd\u4f5c\u65f6\u901a\u77e5\u5206\u79bb\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4fe1\u53f7\u5141\u8bb8\u67d0\u4e9b\u53d1\u9001\u8005\u901a\u77e5\u4e00\u7ec4\u63a5\u6536\u5668\u5df2\u7ecf\u53d1\u751f\u4e86\u67d0\u4e9b\u52a8\u4f5c\u3002\u5f53\u8bb8\u591a\u4ee3\u7801\u7247\u6bb5\u53ef\u80fd\u5bf9\u76f8\u540c\u7684\u4e8b\u4ef6\u611f\u5174\u8da3\u65f6\uff0c\u5b83\u4eec\u7279\u522b\u6709\u7528\u3002 Django signals \u6709\u4e09\u90e8\u5206\u7ec4\u6210 class Signal receiver \u4fe1\u53f7 \u6ce8\u518c\u4fe1\u53f7\u7684\u4e24\u79cd\u65b9\u5f0f 1.\u4f7f\u7528Singal connect\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c 2.\u4f7f\u7528\u6ce8\u89e3\u51fd\u6570\u8fdb\u884c\u6ce8\u518c \u53ef\u4ee5\u901a\u8fc7 sender \u6765\u6807\u8bb0\u5904\u7406\u51fd\u6570\u5904\u7406\u7684\u662f\u54ea\u4e00\u4e2a\u65b9\u5f0f\u8005\u4f20\u9012\u7684\u4fe1\u606f","title":"Django signals"},{"location":"python/server/django/djangosignals/#_1","text":"from django.core.signals import request_finished from django.dispatch import receiver from django.dispatch import Signal /* \u6ce8\u518c\u4e00\u4e2a\u4fe1\u53f7 */ pizz_done = Signal ( providing_args = [ toppings , size ]) # \u4f7f\u7528\u4e00\u4e2a\u6ce8\u89e3\u65b9\u5f0f\u6ce8\u518c\u4e00\u4e2a\u8bf7\u6c42\u5b8c\u6210\u4fe1\u53f7\uff0c\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u5b8c\u6210\u662f\u90fd\u4f1a\u8c03\u7528\u8be5\u65b9\u6cd5(\u7cfb\u7edf\u5185\u7f6e\u7684\u4fe1\u53f7) # @receiver(request_finished) def my_callback ( sender , ** kwargs ): #\u8fd9\u4e2a\u662f\u4e0a\u9762\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u4fe1\u53f7,\u8c03\u7528`send`\u65b9\u6cd5\u53d1\u9001\u4fe1\u53f7 pizz_done . send ( sender = ABC , toppings = pizza , size = 20 ) print ( Request finished! ) @receiver ( pizz_done , sender = ABC ) def pizz_done_receiver ( sender , ** kwargs ): print ( \u6211\u5728 %s \u65f6\u95f4\u6536\u5230\u6765\u81ea %s \u7684\u4fe1\u53f7\uff0c\u8bf7\u6c42size\u4e3a %s % ( kwargs [ toppings ], sender , kwargs [ size ])) print ( id ( pizz_done_receiver )) def pizaa_done_receive ( sender , ** kwargs ): print ( \u4f7f\u7528connect\u8fde\u63a5 ) #\u4f7f\u7528`connect`\u65b9\u6cd5\u6dfb\u52a0\u63a5\u6536\u51fd\u6570\u5230Singal\u63a5\u6536\u5217\u8868\u4e2d pizz_done . connect ( pizaa_done_receive ) /* \u5728URL\u4e2d\u5bfc\u5165\u4e0a\u8ff0\u7684\u5e26\u5185\u5bb9,\u5728\u6d4f\u89c8\u5668\u4e2d\u670d\u52a1\u4e00\u4e0b\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8c03\u7528\u4e0a\u9762\u7684\u4fe1\u53f7\u673a\u5236 */ \u6211\u5728pizza\u65f6\u95f4\u6536\u5230\u6765\u81eaABC\u7684\u4fe1\u53f7\uff0c\u8bf7\u6c42url\u4e3a20 \u4f7f\u7528connect\u8fde\u63a5 Request finished!","title":"\u4f8b\u5b50:"},{"location":"python/server/django/djangosignals/#_2","text":"\u4f7f\u7528\u5230\u7684\u5173\u952e\u6280\u672f\u548c\u65b9\u6cd5: 1.threading:\u4e3b\u8981\u662f\u4f7f\u7528\u7ebf\u7a0b\u4e2d\u7684\u9501\u673a\u5236\uff0c\u4fdd\u8bc1Signal\u7c7b\u80fd\u591f\u5bf9\u7c7b\u4e2d\u7684\u63a5\u6536\u8005\u8fdb\u884c\u5904\u7406\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u64cd\u4f5c\u63a5\u6536\u8005\u76f8\u5173\u7684\u4fe1\u606f\u64cd\u4f5c\u7684\u539f\u5b50\u6027 2.weakref:\u5f31\u5f15\u7528\uff0c\u4fdd\u8bc1\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u53ef\u4ee5\u88ab\u56de\u6536 3.inspect:\u4f7f\u7528Python\u7684\u6a21\u5757\uff0c\u5bf9\u4f20\u5165\u53c2\u6570\u7684\u68c0\u67e5(\u5185\u7701\u9ad8\u7ea7\u64cd\u4f5c) 4. init : __init__ \u65b9\u6cd5\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4fe1\u53f7\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b9a\u4e49\u4e00\u4e2a list \u5217\u8868\u6765\u4fdd\u5b58\u8fde\u63a5\u5230\u4fe1\u53f7\u7684\u63a5\u6536\u8005\u3001\u4f7f\u7528 providing_args \u5217\u8868\u6765\u4fdd\u5b58\u81ea\u5b9a\u4e49\u7684\u53c2\u6570 5.connect:\u4e3b\u8981\u662f\u5173\u8054\u63a5\u6536\u8005\u548c\u53d1\u9001\u8005\u7684\u5173\u7cfb\u5e76\u4e14\u4f7f\u7528\u5f31\u5f15\u7528\u4fdd\u5b58\u63a5\u6536\u8005\u65b9\u6cd5 6.disconnect 7.has_listeners 8.send:\u4e3b\u8981\u7528\u6765\u53d1\u9001\u4fe1\u606f\u5230\u63a5\u6536\u8005 9.send_robust \u4e00\u4e0b\u51e0\u4e2a\u65b9\u6cd5\u662f\u5bf9\u5f31\u5f15\u7528\u4e2d\u7684\u63a5\u6536\u8005\u8fdb\u884c\u6e05\u7406\u64cd\u4f5c 10._clear_dead_receivers 11._live_receivers 12._remove_receiver import threading import weakref from django.utils.inspect import func_accepts_kwargs def _make_id ( target ): if hasattr ( target , __func__ ): return ( id ( target . __self__ ), id ( target . __func__ )) return id ( target ) NONE_ID = _make_id ( None ) # A marker for caching NO_RECEIVERS = object () class Signal : Base class for all signals Internal attributes: receivers { receiverkey (id) : weakref(receiver) } def __init__ ( self , providing_args = None , use_caching = False ): Create a new signal. providing_args A list of the arguments this signal can pass along in a send() call. self . receivers = [] if providing_args is None : providing_args = [] self . providing_args = set ( providing_args ) self . lock = threading . Lock () self . use_caching = use_caching # For convenience we create empty caches even if they are not used. # A note about caching: if use_caching is defined, then for each # distinct sender we cache the receivers that sender has in # sender_receivers_cache . The cache is cleaned when .connect() or # .disconnect() is called and populated on send(). self . sender_receivers_cache = weakref . WeakKeyDictionary () if use_caching else {} self . _dead_receivers = False def connect ( self , receiver , sender = None , weak = True , dispatch_uid = None ): Connect receiver to sender for signal. Arguments: receiver A function or an instance method which is to receive signals. Receivers must be hashable objects. If weak is True, then receiver must be weak referenceable. Receivers must be able to accept keyword arguments. If a receiver is connected with a dispatch_uid argument, it will not be added if another receiver was already connected with that dispatch_uid. sender The sender to which the receiver should respond. Must either be a Python object, or None to receive events from any sender. weak Whether to use weak references to the receiver. By default, the module will attempt to use weak references to the receiver objects. If this parameter is false, then strong references will be used. dispatch_uid An identifier used to uniquely identify a particular instance of a receiver. This will usually be a string, though it may be anything hashable. from django.conf import settings # If DEBUG is on, check that we got a good receiver if settings . configured and settings . DEBUG : assert callable ( receiver ), Signal receivers must be callable. # Check for **kwargs if not func_accepts_kwargs ( receiver ): raise ValueError ( Signal receivers must accept keyword arguments (**kwargs). ) if dispatch_uid : lookup_key = ( dispatch_uid , _make_id ( sender )) else : lookup_key = ( _make_id ( receiver ), _make_id ( sender )) if weak : ref = weakref . ref receiver_object = receiver # Check for bound methods if hasattr ( receiver , __self__ ) and hasattr ( receiver , __func__ ): ref = weakref . WeakMethod receiver_object = receiver . __self__ receiver = ref ( receiver ) weakref . finalize ( receiver_object , self . _remove_receiver ) with self . lock : self . _clear_dead_receivers () if not any ( r_key == lookup_key for r_key , _ in self . receivers ): self . receivers . append (( lookup_key , receiver )) self . sender_receivers_cache . clear () def disconnect ( self , receiver = None , sender = None , dispatch_uid = None ): Disconnect receiver from sender for signal. If weak references are used, disconnect need not be called. The receiver will be removed from dispatch automatically. Arguments: receiver The registered receiver to disconnect. May be none if dispatch_uid is specified. sender The registered sender to disconnect dispatch_uid the unique identifier of the receiver to disconnect if dispatch_uid : lookup_key = ( dispatch_uid , _make_id ( sender )) else : lookup_key = ( _make_id ( receiver ), _make_id ( sender )) disconnected = False with self . lock : self . _clear_dead_receivers () for index in range ( len ( self . receivers )): ( r_key , _ ) = self . receivers [ index ] if r_key == lookup_key : disconnected = True del self . receivers [ index ] break self . sender_receivers_cache . clear () return disconnected def has_listeners ( self , sender = None ): return bool ( self . _live_receivers ( sender )) def send ( self , sender , ** named ): Send signal from sender to all connected receivers. If any receiver raises an error, the error propagates back through send, terminating the dispatch loop. So it s possible that all receivers won t be called if an error is raised. Arguments: sender The sender of the signal. Either a specific object or None. named Named arguments which will be passed to receivers. Return a list of tuple pairs [(receiver, response), ... ]. if not self . receivers or self . sender_receivers_cache . get ( sender ) is NO_RECEIVERS : return [] return [ ( receiver , receiver ( signal = self , sender = sender , ** named )) for receiver in self . _live_receivers ( sender ) ] def send_robust ( self , sender , ** named ): Send signal from sender to all connected receivers catching errors. Arguments: sender The sender of the signal. Can be any Python object (normally one registered with a connect if you actually want something to occur). named Named arguments which will be passed to receivers. These arguments must be a subset of the argument names defined in providing_args. Return a list of tuple pairs [(receiver, response), ... ]. If any receiver raises an error (specifically any subclass of Exception), return the error instance as the result for that receiver. if not self . receivers or self . sender_receivers_cache . get ( sender ) is NO_RECEIVERS : return [] # Call each receiver with whatever arguments it can accept. # Return a list of tuple pairs [(receiver, response), ... ]. responses = [] for receiver in self . _live_receivers ( sender ): try : response = receiver ( signal = self , sender = sender , ** named ) except Exception as err : responses . append (( receiver , err )) else : responses . append (( receiver , response )) return responses def _clear_dead_receivers ( self ): # Note: caller is assumed to hold self.lock. if self . _dead_receivers : self . _dead_receivers = False self . receivers = [ r for r in self . receivers if not ( isinstance ( r [ 1 ], weakref . ReferenceType ) and r [ 1 ]() is None ) ] def _live_receivers ( self , sender ): Filter sequence of receivers to get resolved, live receivers. This checks for weak references and resolves them, then returning only live receivers. receivers = None if self . use_caching and not self . _dead_receivers : receivers = self . sender_receivers_cache . get ( sender ) # We could end up here with NO_RECEIVERS even if we do check this case in # .send() prior to calling _live_receivers() due to concurrent .send() call. if receivers is NO_RECEIVERS : return [] if receivers is None : with self . lock : self . _clear_dead_receivers () senderkey = _make_id ( sender ) receivers = [] for ( receiverkey , r_senderkey ), receiver in self . receivers : if r_senderkey == NONE_ID or r_senderkey == senderkey : receivers . append ( receiver ) if self . use_caching : if not receivers : self . sender_receivers_cache [ sender ] = NO_RECEIVERS else : # Note, we must cache the weakref versions. self . sender_receivers_cache [ sender ] = receivers non_weak_receivers = [] for receiver in receivers : if isinstance ( receiver , weakref . ReferenceType ): # Dereference the weak reference. receiver = receiver () if receiver is not None : non_weak_receivers . append ( receiver ) else : non_weak_receivers . append ( receiver ) return non_weak_receivers def _remove_receiver ( self , receiver = None ): # Mark that the self.receivers list has dead weakrefs. If so, we will # clean those up in connect, disconnect and _live_receivers while # holding self.lock. Note that doing the cleanup here isn t a good # idea, _remove_receiver() will be called as side effect of garbage # collection, and so the call can happen while we are already holding # self.lock. self . _dead_receivers = True","title":"\u6e90\u7801\u89e3\u6790"},{"location":"python/server/django/djangosignals/#receiver","text":"\u4f7f\u7528\u6ce8\u89e3\u7684\u65b9\u6cd5\u628a\u9700\u8981\u6ce8\u518c\u7684\u65b9\u6cd5\u6dfb\u52a0\u5230\u63a5\u6536\u5217\u8868\u4e2d def receiver ( signal , ** kwargs ): A decorator for connecting receivers to signals. Used by passing in the signal (or list of signals) and keyword arguments to connect:: @receiver(post_save, sender=MyModel) def signal_receiver(sender, **kwargs): ... @receiver([post_save, post_delete], sender=MyModel) def signals_receiver(sender, **kwargs): ... def _decorator ( func ): if isinstance ( signal , ( list , tuple )): for s in signal : s . connect ( func , ** kwargs ) else : signal . connect ( func , ** kwargs ) return func return _decorator","title":"@receiver"},{"location":"python/server/django/djangosignals/#_3","text":"Django\u4fe1\u53f7\u6587\u6863 Django \u5185\u7f6e\u4fe1\u53f7\u6587\u6863","title":"\u53c2\u8003:"},{"location":"python/server/django/djangosignals/#django","text":"","title":"Django \u6e90\u7801\u89e3\u6790"},{"location":"python/server/django/djangosignals/#functools","text":"","title":"functools\u6a21\u5757"},{"location":"python/server/django/djangosignals/#update_wrapper-and-wraps-decorator","text":"","title":"update_wrapper() and wraps() decorator"},{"location":"python/server/django/djangosignals/#total_ordering-class-decorator","text":"","title":"total_ordering class decorator"},{"location":"python/server/django/djangosignals/#cmp_to_key-function-converter","text":"","title":"cmp_to_key() function converter"},{"location":"python/server/django/djangosignals/#partial-argument-application","text":"","title":"partial() argument application"},{"location":"python/server/django/djangosignals/#lru-cache-function-decorator","text":"","title":"LRU Cache function decorator"},{"location":"python/server/django/djangosignals/#singledispatch-single-dispatch-generic-function-decorator","text":"\u4e0b\u5217\u5305\u7684\u4f7f\u7528: import collections.abc import inspect import warnings from math import ceil /usr/local/Cellar/python/3.7.2_2/Frameworks/Python.framework/Versions/3.7/lib/python3.7/functools.py","title":"singledispatch() - single-dispatch generic function decorator"},{"location":"python/server/django/djangosignals/#django_1","text":"Django\u4f5c\u4e3a\u4e00\u4e2aWeb\u6846\u67b6\uff0c\u9700\u8981\u52a8\u6001\u8f93\u51faHTML\u6587\u4ef6\uff0c\u9700\u8981\u52a8\u6001\u7684\u6e32\u67d3HTML\u6587\u4ef6\u548c\u63d2\u4ef6\u52a8\u6001\u7684\u5185\u5bb9\u5230HTML\u6807\u7b7e\u4e2d Django\u652f\u6301\u5185\u7f6e\u7684\u6a21\u677f\u5f15\u64ce\u548c\u7b2c\u4e09\u65b9\u6a21\u677f\u5f15\u64ce jinja2 Django\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6807\u51c6API\uff0c\u7528\u4e8e\u52a0\u8f7d\u548c\u5448\u73b0\u6a21\u677f\uff0c\u65e0\u8bba\u540e\u7aef\u5982\u4f55\u3002\u52a0\u8f7d\u5305\u62ec\u67e5\u627e\u7ed9\u5b9a\u6807\u8bc6\u7b26\u7684\u6a21\u677f\u5e76\u5bf9\u5176\u8fdb\u884c\u9884\u5904\u7406\uff0c\u901a\u5e38\u5c06\u5176\u7f16\u8bd1\u4e3a\u5185\u5b58\u4e2d\u8868\u793a\u3002\u6e32\u67d3\u610f\u5473\u7740\u4f7f\u7528\u4e0a\u4e0b\u6587\u6570\u636e\u63d2\u5165\u6a21\u677f\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002","title":"Django\u6a21\u677f"},{"location":"python/server/django/djangosignals/#_4","text":"\u4f7f\u7528\u8be5TEMPLATES\u8bbe\u7f6e\u914d\u7f6e\u6a21\u677f\u5f15\u64ce\u3002\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u5217\u8868\uff0c\u6bcf\u4e2a\u5f15\u64ce\u4e00\u4e2a\u3002\u9ed8\u8ba4\u503c\u4e3a\u7a7a\u3002\u5728 settings.py\u7531\u6240\u4ea7\u751f\u7684startproject\u547d\u4ee4\u5b9a\u4e49\u4e00\u4e2a\u66f4\u6709\u7528\u7684\u503c\uff1a TEMPLATES = [ { BACKEND : django.template.backends.django.DjangoTemplates , DIRS : [] , APP_DIRS : True, OPTIONS : { # ... some options here ... } , } , ] BACKEND\u662f\u5b9e\u73b0Django\u6a21\u677f\u540e\u7aefAPI\u7684\u6a21\u677f\u5f15\u64ce\u7c7b\u7684\u865a\u7ebfPython\u8def\u5f84\u3002\u5185\u7f6e\u540e\u7aef\u662fdjango.template.backends.django.DjangoTemplates\u548c django.template.backends.jinja2.Jinja2\u3002 \u7531\u4e8e\u5927\u591a\u6570\u5f15\u64ce\u4ece\u6587\u4ef6\u52a0\u8f7d\u6a21\u677f\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5f15\u64ce\u7684\u9876\u7ea7\u914d\u7f6e\u5305\u542b\u4e24\u4e2a\u5e38\u7528\u8bbe\u7f6e\uff1a DIRS \u5b9a\u4e49\u5f15\u64ce\u5e94\u6309\u641c\u7d22\u987a\u5e8f\u67e5\u627e\u6a21\u677f\u6e90\u6587\u4ef6\u7684\u76ee\u5f55\u5217\u8868\u3002 APP_DIRS\u544a\u8bc9\u5f15\u64ce\u662f\u5426\u5e94\u8be5\u5728\u5df2\u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u67e5\u627e\u6a21\u677f\u3002\u6bcf\u4e2a\u540e\u7aef\u90fd\u5b9a\u4e49\u4e86\u5e94\u8be5\u5b58\u50a8\u5176\u6a21\u677f\u7684\u5e94\u7528\u7a0b\u5e8f\u5185\u7684\u5b50\u76ee\u5f55\u7684\u5e38\u89c4\u540d\u79f0\u3002 \u867d\u7136\u4e0d\u5e38\u89c1\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u9009\u9879\u914d\u7f6e\u540c\u4e00\u540e\u7aef\u7684\u591a\u4e2a\u5b9e\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e94\u8be5NAME\u4e3a\u6bcf\u4e2a\u5f15\u64ce\u5b9a\u4e49\u552f\u4e00 \u7684\u3002 OPTIONS \u5305\u542b\u7279\u5b9a\u4e8e\u540e\u7aef\u7684\u8bbe\u7f6e\u3002","title":"\u914d\u7f6e"},{"location":"python/server/django/djangosignals/#_5","text":"1.Engine:env/lib/python3.7/site-packages/django/template/engine.py 2.Loader 3.Template 4.EngineHandler:env/lib/python3.7/site-packages/django/template/utils.py 5.BaseEngine:env/lib/python3.7/site-packages/django/template/backends/base.py","title":"\u5173\u952e\u7c7b"},{"location":"python/server/django/djangosignals/#_6","text":"\u8868\u5355\u5de5\u5177 Comment\u5de5\u5177","title":"\u8868\u5355"},{"location":"python/server/django/djangosignals/#django_2","text":"Django\u6a21\u677f\u8bed\u8a00 Django\u6a21\u677f\u8bed\u8a00 Django\u5185\u5efa\u6807\u7b7e\u548c\u8fc7\u6ee4 \u81ea\u5b9a\u4e49\u6807\u7b7e\u548c\u8fc7\u6ee4\u5668","title":"Django\u6a21\u677f\u8bed\u8a00"},{"location":"python/server/django/djangosignals/#_7","text":"Django\u57fa\u4e8e\u7c7b\u7684\u89c6\u56fe","title":"\u57fa\u4e8e\u7c7b\u7684\u89c6\u56fe"},{"location":"python/server/django/djangosignals/#_8","text":"HTTP\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u9001\u8bb8\u591a\u6807\u5934\uff0c\u4ee5\u544a\u77e5\u670d\u52a1\u5668\u6709\u5173\u4ed6\u4eec\u5df2\u7ecf\u770b\u8fc7\u7684\u8d44\u6e90\u7684\u526f\u672c\u3002\u8fd9\u901a\u5e38\u5728\u68c0\u7d22\u7f51\u9875\uff08\u4f7f\u7528HTTP GET\u8bf7\u6c42\uff09\u65f6\u4f7f\u7528\uff0c\u4ee5\u907f\u514d\u53d1\u9001\u5ba2\u6237\u7aef\u5df2\u68c0\u7d22\u7684\u5185\u5bb9\u7684\u6240\u6709\u6570\u636e\u3002\u7136\u800c\uff0c\u76f8\u540c\u7684\u6807\u5934\u53ef\u7528\u4e8e\u6240\u6709HTTP\u65b9\u6cd5\uff08POST\uff0cPUT\uff0cDELETE\u7b49\u7b49\uff09\u3002 ConditionalGetMiddleware django.views.decorators.http.condition\u88c5\u9970\u5668 \u5c0f\u5fc3\u88c5\u9970\u5668\u7684\u987a\u5e8f \u5f53condition()\u8fd4\u56de\u6761\u4ef6\u54cd\u5e94\u65f6\uff0c\u5b83\u4e0b\u9762\u7684\u4efb\u4f55\u88c5\u9970\u5668\u90fd\u5c06\u88ab\u8df3\u8fc7\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5e94\u7528\u4e8e\u54cd\u5e94\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u9700\u8981\u5e94\u7528\u4e8e\u5e38\u89c4\u89c6\u56fe\u54cd\u5e94\u548c\u6761\u4ef6\u54cd\u5e94\u7684\u88c5\u9970\u5668\u5fc5\u987b\u5728\u4e0a\u9762condition()\u3002\u7279\u522b\u662f vary_on_cookie() vary_on_headers()\u548c cache_control()\u5e94\u8be5\u662f\u7b2c\u4e00\u4f4d\u7684\uff0c\u56e0\u4e3aRFC 7232\u8981\u6c42\u5b83\u4eec\u8bbe\u7f6e\u7684\u6807\u5934\u51fa\u73b0\u5728304\u54cd\u5e94\u4e2d\u3002","title":"\u6761\u4ef6\u5904\u7406"},{"location":"python/server/django/djangosignals/#_9","text":"\u5728http\u5934\u90e8\u4f7f\u7528 Accept-Language \u6765\u6807\u8bb0\u8f93\u5165\u7684\u8bed\u8a00\u7c7b\u578b \u8b66\u544a\" \u7ffb\u8bd1\u548c\u683c\u5f0f\u5206\u522b\u7531USE_I18N\u548c USE_L10N\u8bbe\u7f6e\u63a7\u5236\u3002\u4f46\u662f\uff0c\u8fd9\u4e24\u4e2a\u7279\u5f81\u90fd\u6d89\u53ca\u56fd\u9645\u5316\u548c\u672c\u5730\u5316\u3002\u8bbe\u7f6e\u7684\u540d\u79f0\u662fDjango\u5386\u53f2\u7684\u4e0d\u5e78\u7ed3\u679c\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u6709\u52a9\u4e8e\u6211\u4eec\u5904\u7406\u5171\u540c\u8bed\u8a00\u7684\u5176\u4ed6\u672f\u8bed\uff1a \u533a\u57df\u8bbe\u7f6e\u540d\u79f0 \u533a\u57df\u8bbe\u7f6e\u540d\u79f0\uff0c\u8868\u5355\u7684\u8bed\u8a00\u89c4\u8303ll\u6216\u8868\u5355\u7684\u7ec4\u5408\u8bed\u8a00\u548c\u56fd\u5bb6/\u5730\u533a\u89c4\u8303ll_CC\u3002\u4f8b\u5982\uff1ait\uff0cde_AT\uff0ces\uff0cpt_BR\u3002\u8bed\u8a00\u90e8\u5206\u59cb\u7ec8\u4e3a\u5c0f\u5199\uff0c\u800c\u56fd\u5bb6/\u5730\u533a\u90e8\u5206\u4e3a\u5927\u5199\u3002\u5206\u9694\u7b26\u662f\u4e0b\u5212\u7ebf\u3002 \u8bed\u8a00\u4ee3\u7801 \u8868\u793a\u8bed\u8a00\u7684\u540d\u79f0\u3002\u6d4f\u89c8\u5668Accept-Language\u4f7f\u7528\u6b64\u683c\u5f0f\u53d1\u9001\u5b83\u4eec\u5728HTTP\u6807\u5934\u4e2d\u63a5\u53d7\u7684\u8bed\u8a00\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff1ait\uff0cde-at\uff0ces\uff0cpt-br\u3002\u8bed\u8a00\u4ee3\u7801\u901a\u5e38\u4ee5\u5c0f\u5199\u5f62\u5f0f\u8868\u793a\uff0c\u4f46HTTP Accept-Language \u6807\u5934\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002\u5206\u9694\u7b26\u662f\u7834\u6298\u53f7\u3002 \u6d88\u606f\u6587\u4ef6 \u6d88\u606f\u6587\u4ef6\u662f\u7eaf\u6587\u672c\u6587\u4ef6\uff0c\u8868\u793a\u5355\u4e2a\u8bed\u8a00\uff0c\u5305\u542b\u6240\u6709\u53ef\u7528\u7684\u7ffb\u8bd1\u5b57\u7b26\u4e32\u4ee5\u53ca\u5982\u4f55\u4ee5\u7ed9\u5b9a\u8bed\u8a00\u8868\u793a\u5b83\u4eec\u3002\u90ae\u4ef6\u6587\u4ef6\u5177\u6709.po\u6587\u4ef6\u6269\u5c55\u540d\u3002 \u7ffb\u8bd1\u5b57\u7b26\u4e32 \u53ef\u4ee5\u7ffb\u8bd1\u7684\u6587\u5b57\u3002 \u683c\u5f0f\u6587\u4ef6 \u683c\u5f0f\u6587\u4ef6\u662f\u4e00\u4e2aPython\u6a21\u5757\uff0c\u7528\u4e8e\u5b9a\u4e49\u7ed9\u5b9a\u8bed\u8a00\u73af\u5883\u7684\u6570\u636e\u683c\u5f0f\u3002 \u6587\u672c\u7ffb\u8bd1 \u65e5\u671f\u65f6\u95f4\u683c\u5f0f\u5316 \u65f6\u533a \u56fd\u9645\u5316","title":"\u56fd\u9645\u5316\u548c\u672c\u5730\u5316"},{"location":"python/server/django/middleware/","text":"Django\u4e2d\u95f4\u4ef6\u4f7f\u7528 WSGI https://wsgi.readthedocs.io/en/latest/ \u5982\u4f55\u4f7f\u7528wusgi\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f https://docs.djangoproject.com/en/2.2/howto/deployment/wsgi/ SessionMiddleWare\u3001Cookie Django\u4e3a\u533f\u540d\u4f1a\u8bdd\u63d0\u4f9b\u5168\u9762\u652f\u6301\u3002\u4f1a\u8bdd\u6846\u67b6\u5141\u8bb8\u60a8\u57fa\u4e8e\u6bcf\u4e2a\u7ad9\u70b9\u8bbf\u95ee\u8005\u5b58\u50a8\u548c\u68c0\u7d22\u4efb\u610f\u6570\u636e\u3002\u5b83\u5728\u670d\u52a1\u5668\u7aef\u5b58\u50a8\u6570\u636e\u5e76\u62bd\u8c61cookie\u7684\u53d1\u9001\u548c\u63a5\u6536\u3002 Cookie\u5305\u542b\u4f1a\u8bddID - \u800c\u4e0d\u662f\u6570\u636e\u672c\u8eab\uff08\u9664\u975e\u60a8\u4f7f\u7528\u57fa\u4e8ecookie\u7684\u540e\u7aef\uff09\u3002 django.contrib.sessions.middleware.SessionMiddleware Session\u4fdd\u5b58\u7684\u4f4d\u7f6e Session\u4fdd\u5b58\u7684\u4f4d\u7f6e *\u9ed8\u8ba4\u6570\u636e\u5e93\u4e2d *\u6587\u4ef6\u7cfb\u7edf\u4e2d * \u7f13\u5b58\u7cfb\u7edf\u4e2d \u5efa\u8bae\u4fdd\u7559\u8be5SESSION_COOKIE_HTTPONLY\u8bbe\u7f6eTrue\u4ee5\u9632\u6b62\u4eceJavaScript\u8bbf\u95ee\u5b58\u50a8\u7684\u6570\u636e\u3002 \u8b66\u544a \u5982\u679cSECRET_KEY\u6ca1\u6709\u4fdd\u5bc6\u5e76\u4e14\u60a8\u6b63\u5728\u4f7f\u7528\u5b83 PickleSerializer\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u4efb\u610f\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u3002 \u62e5\u6709\u7684\u653b\u51fb\u8005SECRET_KEY\u4e0d\u4ec5\u53ef\u4ee5\u751f\u6210\u4f2a\u9020\u7684\u4f1a\u8bdd\u6570\u636e\uff0c\u60a8\u7684\u7ad9\u70b9\u5c06\u4fe1\u4efb\u8be5\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u8fdc\u7a0b\u6267\u884c\u4efb\u610f\u4ee3\u7801\uff0c\u56e0\u4e3a\u6570\u636e\u662f\u4f7f\u7528pickle\u5e8f\u5217\u5316\u7684\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u57fa\u4e8ecookie\u7684\u4f1a\u8bdd\uff0c\u8bf7\u7279\u522b\u6ce8\u610f\u60a8\u7684\u5bc6\u94a5\u59cb\u7ec8\u4fdd\u5bc6\uff0c\u5bf9\u4e8e\u4efb\u4f55\u53ef\u8fdc\u7a0b\u8bbf\u95ee\u7684\u7cfb\u7edf\u3002 \u4f1a\u8bdd\u6570\u636e\u5df2\u7b7e\u540d\u4f46\u672a\u52a0\u5bc6 \u4f7f\u7528cookie\u540e\u7aef\u65f6\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u8bfb\u53d6\u4f1a\u8bdd\u6570\u636e\u3002 MAC\uff08\u6d88\u606f\u8ba4\u8bc1\u7801\uff09\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u514d\u53d7\u5ba2\u6237\u7aef\u7684\u66f4\u6539\uff0c\u4ee5\u4fbf\u4f1a\u8bdd\u6570\u636e\u5728\u88ab\u7be1\u6539\u65f6\u65e0\u6548\u3002\u5982\u679c\u5b58\u50a8cookie\u7684\u5ba2\u6237\u7aef\uff08\u4f8b\u5982\u7528\u6237\u7684\u6d4f\u89c8\u5668\uff09\u65e0\u6cd5\u5b58\u50a8\u6240\u6709\u4f1a\u8bddcookie\u5e76\u4e22\u5f03\u6570\u636e\uff0c\u5219\u4f1a\u53d1\u751f\u76f8\u540c\u7684\u5931\u6548\u3002\u5373\u4f7fDjango\u538b\u7f29\u6570\u636e\uff0c\u5b83\u4ecd\u7136\u5b8c\u5168\u6709\u53ef\u80fd\u8d85\u8fc7\u6bcf\u4e2acookie 4096\u5b57\u8282\u7684\u516c\u5171\u9650\u5236\u3002 \u6ca1\u6709\u4fdd\u9c9c \u8fd8\u8981\u6ce8\u610f\uff0c\u5c3d\u7ba1MAC\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u771f\u5b9e\u6027\uff08\u5b83\u662f\u7531\u60a8\u7684\u7ad9\u70b9\u751f\u6210\u7684\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u4eba\u751f\u6210\u7684\uff09\uff0c\u4ee5\u53ca\u6570\u636e\u7684\u5b8c\u6574\u6027\uff08\u5b83\u90fd\u662f\u6b63\u786e\u7684\uff09\uff0c\u4f46\u5b83\u65e0\u6cd5\u4fdd\u8bc1\u65b0\u9c9c\u5ea6\uff0c\u5373\u4f60\u88ab\u9001\u56de\u5ba2\u6237\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u4f1a\u8bdd\u6570\u636e\u7684\u67d0\u4e9b\u7528\u9014\uff0ccookie\u540e\u7aef\u53ef\u80fd\u4f1a\u8ba9\u60a8\u91cd\u64ad\u653b\u51fb\u3002\u4e0e\u4fdd\u5b58\u6bcf\u4e2a\u4f1a\u8bdd\u7684\u670d\u52a1\u5668\u7aef\u8bb0\u5f55\u5e76\u5728\u7528\u6237\u6ce8\u9500\u65f6\u4f7f\u5176\u65e0\u6548\u7684\u5176\u4ed6\u4f1a\u8bdd\u540e\u7aef\u4e0d\u540c\uff0c\u5f53\u7528\u6237\u6ce8\u9500\u65f6\uff0c\u57fa\u4e8ecookie\u7684\u4f1a\u8bdd\u4e0d\u4f1a\u5931\u6548\u3002\u56e0\u6b64\uff0c\u5982\u679c\u653b\u51fb\u8005\u7a83\u53d6\u7528\u6237\u7684cookie\uff0c\u5373\u4f7f\u7528\u6237\u9000\u51fa\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8be5cookie\u767b\u5f55\u8be5\u7528\u6237\u3002\u5982\u679cCookie\u6bd4\u60a8\u7684\u65e7\u7248\u672c\u65e7\uff0c\u5219\u53ea\u4f1a\u5c06\u5176\u89c6\u4e3a\u201c\u9648\u65e7\u201d SESSION_COOKIE_AGE\u3002 \u6027\u80fd \u6700\u540e\uff0cCookie\u7684\u5927\u5c0f\u4f1a\u5bf9\u60a8\u7f51\u7ad9\u7684\u901f\u5ea6\u4ea7\u751f\u5f71\u54cd\u3002 Django\u6a21\u677f setting\u4e2d\u914d\u7f6e TEMPLATES = [ { BACKEND : django.template.backends.django.DjangoTemplates , DIRS : [], APP_DIRS : True, OPTIONS : { context_processors : [ django.template.context_processors.debug , django.template.context_processors.request , django.contrib.auth.context_processors.auth , django.contrib.messages.context_processors.messages , ], }, } , ] \u5728View\u4e2d\u7ee7\u627f TemplateResponseMixin \u8fd9\u4e2a\u7c7b\u6765\u5bf9View\u4fa7\u83b7\u53d6\u6a21\u677f\u540d\u79f0\u7684\u5904\u7406\uff0c\u540c\u65f6\u4f7f\u7528 TemplateResponse \u5173\u8054View\u548cHTTTResponse\u7684\u903b\u8f91\u5904\u7406 class TemplateResponseMixin : A mixin that can be used to render a template. template_name = None template_engine = None response_class = TemplateResponse content_type = None def render_to_response ( self , context , ** response_kwargs ): Return a response, using the `response_class` for this view, with a template rendered with the given context. Pass response_kwargs to the constructor of the response class. response_kwargs . setdefault ( content_type , self . content_type ) return self . response_class ( request = self . request , template = self . get_template_names (), context = context , using = self . template_engine , ** response_kwargs ) def get_template_names ( self ): Return a list of template names to be used for the request. Must return a list. May not be called if render_to_response() is overridden. if self . template_name is None : raise ImproperlyConfigured ( TemplateResponseMixin requires either a definition of template_name or an implementation of get_template_names() ) else : return [ self . template_name ] \u8c03\u7528 python3.7/site-packages/django/template/loader.py \u6587\u4ef6\u8c03\u7528\u914d\u7f6e\u7684\u5f15\u64ce\u6a21\u5757\uff0c\u5728\u65b9\u6cd5 select_template \u4e2d\u8c03\u7528 django/template/__init__.py \u4e2d\u5bfc\u5165 EngineHandler \u5bf9 Engine \u505a\u4e00\u4e2a\u903b\u8f91\u5904\u7406\uff0c\u5728 Engine \u4e2d\u52a0\u8f7d``\u6a21\u677f\u7c7b def get_template ( self , template_name ): Return a compiled Template object for the given template name, handling template inheritance recursively. template , origin = self . find_template ( template_name ) if not hasattr ( template , render ): # template needs to be compiled template = Template ( template , origin , template_name , engine = self ) return template Template\u7c7b\u4e2d\u5bf9Html\u8282\u70b9\u6570\u636e\u7684\u586b\u5145\u548c\u6e32\u67d3","title":"\u4e2d\u95f4\u4ef6"},{"location":"python/server/django/middleware/#django","text":"","title":"Django\u4e2d\u95f4\u4ef6\u4f7f\u7528"},{"location":"python/server/django/middleware/#wsgi","text":"https://wsgi.readthedocs.io/en/latest/","title":"WSGI"},{"location":"python/server/django/middleware/#wusgi","text":"https://docs.djangoproject.com/en/2.2/howto/deployment/wsgi/","title":"\u5982\u4f55\u4f7f\u7528wusgi\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f"},{"location":"python/server/django/middleware/#sessionmiddlewarecookie","text":"Django\u4e3a\u533f\u540d\u4f1a\u8bdd\u63d0\u4f9b\u5168\u9762\u652f\u6301\u3002\u4f1a\u8bdd\u6846\u67b6\u5141\u8bb8\u60a8\u57fa\u4e8e\u6bcf\u4e2a\u7ad9\u70b9\u8bbf\u95ee\u8005\u5b58\u50a8\u548c\u68c0\u7d22\u4efb\u610f\u6570\u636e\u3002\u5b83\u5728\u670d\u52a1\u5668\u7aef\u5b58\u50a8\u6570\u636e\u5e76\u62bd\u8c61cookie\u7684\u53d1\u9001\u548c\u63a5\u6536\u3002 Cookie\u5305\u542b\u4f1a\u8bddID - \u800c\u4e0d\u662f\u6570\u636e\u672c\u8eab\uff08\u9664\u975e\u60a8\u4f7f\u7528\u57fa\u4e8ecookie\u7684\u540e\u7aef\uff09\u3002 django.contrib.sessions.middleware.SessionMiddleware","title":"SessionMiddleWare\u3001Cookie"},{"location":"python/server/django/middleware/#session","text":"Session\u4fdd\u5b58\u7684\u4f4d\u7f6e *\u9ed8\u8ba4\u6570\u636e\u5e93\u4e2d *\u6587\u4ef6\u7cfb\u7edf\u4e2d * \u7f13\u5b58\u7cfb\u7edf\u4e2d \u5efa\u8bae\u4fdd\u7559\u8be5SESSION_COOKIE_HTTPONLY\u8bbe\u7f6eTrue\u4ee5\u9632\u6b62\u4eceJavaScript\u8bbf\u95ee\u5b58\u50a8\u7684\u6570\u636e\u3002 \u8b66\u544a \u5982\u679cSECRET_KEY\u6ca1\u6709\u4fdd\u5bc6\u5e76\u4e14\u60a8\u6b63\u5728\u4f7f\u7528\u5b83 PickleSerializer\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u4efb\u610f\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u3002 \u62e5\u6709\u7684\u653b\u51fb\u8005SECRET_KEY\u4e0d\u4ec5\u53ef\u4ee5\u751f\u6210\u4f2a\u9020\u7684\u4f1a\u8bdd\u6570\u636e\uff0c\u60a8\u7684\u7ad9\u70b9\u5c06\u4fe1\u4efb\u8be5\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u8fdc\u7a0b\u6267\u884c\u4efb\u610f\u4ee3\u7801\uff0c\u56e0\u4e3a\u6570\u636e\u662f\u4f7f\u7528pickle\u5e8f\u5217\u5316\u7684\u3002 \u5982\u679c\u60a8\u4f7f\u7528\u57fa\u4e8ecookie\u7684\u4f1a\u8bdd\uff0c\u8bf7\u7279\u522b\u6ce8\u610f\u60a8\u7684\u5bc6\u94a5\u59cb\u7ec8\u4fdd\u5bc6\uff0c\u5bf9\u4e8e\u4efb\u4f55\u53ef\u8fdc\u7a0b\u8bbf\u95ee\u7684\u7cfb\u7edf\u3002 \u4f1a\u8bdd\u6570\u636e\u5df2\u7b7e\u540d\u4f46\u672a\u52a0\u5bc6 \u4f7f\u7528cookie\u540e\u7aef\u65f6\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u8bfb\u53d6\u4f1a\u8bdd\u6570\u636e\u3002 MAC\uff08\u6d88\u606f\u8ba4\u8bc1\u7801\uff09\u7528\u4e8e\u4fdd\u62a4\u6570\u636e\u514d\u53d7\u5ba2\u6237\u7aef\u7684\u66f4\u6539\uff0c\u4ee5\u4fbf\u4f1a\u8bdd\u6570\u636e\u5728\u88ab\u7be1\u6539\u65f6\u65e0\u6548\u3002\u5982\u679c\u5b58\u50a8cookie\u7684\u5ba2\u6237\u7aef\uff08\u4f8b\u5982\u7528\u6237\u7684\u6d4f\u89c8\u5668\uff09\u65e0\u6cd5\u5b58\u50a8\u6240\u6709\u4f1a\u8bddcookie\u5e76\u4e22\u5f03\u6570\u636e\uff0c\u5219\u4f1a\u53d1\u751f\u76f8\u540c\u7684\u5931\u6548\u3002\u5373\u4f7fDjango\u538b\u7f29\u6570\u636e\uff0c\u5b83\u4ecd\u7136\u5b8c\u5168\u6709\u53ef\u80fd\u8d85\u8fc7\u6bcf\u4e2acookie 4096\u5b57\u8282\u7684\u516c\u5171\u9650\u5236\u3002 \u6ca1\u6709\u4fdd\u9c9c \u8fd8\u8981\u6ce8\u610f\uff0c\u5c3d\u7ba1MAC\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u771f\u5b9e\u6027\uff08\u5b83\u662f\u7531\u60a8\u7684\u7ad9\u70b9\u751f\u6210\u7684\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u4eba\u751f\u6210\u7684\uff09\uff0c\u4ee5\u53ca\u6570\u636e\u7684\u5b8c\u6574\u6027\uff08\u5b83\u90fd\u662f\u6b63\u786e\u7684\uff09\uff0c\u4f46\u5b83\u65e0\u6cd5\u4fdd\u8bc1\u65b0\u9c9c\u5ea6\uff0c\u5373\u4f60\u88ab\u9001\u56de\u5ba2\u6237\u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u4f1a\u8bdd\u6570\u636e\u7684\u67d0\u4e9b\u7528\u9014\uff0ccookie\u540e\u7aef\u53ef\u80fd\u4f1a\u8ba9\u60a8\u91cd\u64ad\u653b\u51fb\u3002\u4e0e\u4fdd\u5b58\u6bcf\u4e2a\u4f1a\u8bdd\u7684\u670d\u52a1\u5668\u7aef\u8bb0\u5f55\u5e76\u5728\u7528\u6237\u6ce8\u9500\u65f6\u4f7f\u5176\u65e0\u6548\u7684\u5176\u4ed6\u4f1a\u8bdd\u540e\u7aef\u4e0d\u540c\uff0c\u5f53\u7528\u6237\u6ce8\u9500\u65f6\uff0c\u57fa\u4e8ecookie\u7684\u4f1a\u8bdd\u4e0d\u4f1a\u5931\u6548\u3002\u56e0\u6b64\uff0c\u5982\u679c\u653b\u51fb\u8005\u7a83\u53d6\u7528\u6237\u7684cookie\uff0c\u5373\u4f7f\u7528\u6237\u9000\u51fa\uff0c\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8be5cookie\u767b\u5f55\u8be5\u7528\u6237\u3002\u5982\u679cCookie\u6bd4\u60a8\u7684\u65e7\u7248\u672c\u65e7\uff0c\u5219\u53ea\u4f1a\u5c06\u5176\u89c6\u4e3a\u201c\u9648\u65e7\u201d SESSION_COOKIE_AGE\u3002 \u6027\u80fd \u6700\u540e\uff0cCookie\u7684\u5927\u5c0f\u4f1a\u5bf9\u60a8\u7f51\u7ad9\u7684\u901f\u5ea6\u4ea7\u751f\u5f71\u54cd\u3002","title":"Session\u4fdd\u5b58\u7684\u4f4d\u7f6e"},{"location":"python/server/django/middleware/#django_1","text":"","title":"Django\u6a21\u677f"},{"location":"python/server/django/middleware/#setting","text":"TEMPLATES = [ { BACKEND : django.template.backends.django.DjangoTemplates , DIRS : [], APP_DIRS : True, OPTIONS : { context_processors : [ django.template.context_processors.debug , django.template.context_processors.request , django.contrib.auth.context_processors.auth , django.contrib.messages.context_processors.messages , ], }, } , ]","title":"setting\u4e2d\u914d\u7f6e"},{"location":"python/server/django/middleware/#viewtemplateresponsemixinviewtemplateresponseviewhtttresponse","text":"class TemplateResponseMixin : A mixin that can be used to render a template. template_name = None template_engine = None response_class = TemplateResponse content_type = None def render_to_response ( self , context , ** response_kwargs ): Return a response, using the `response_class` for this view, with a template rendered with the given context. Pass response_kwargs to the constructor of the response class. response_kwargs . setdefault ( content_type , self . content_type ) return self . response_class ( request = self . request , template = self . get_template_names (), context = context , using = self . template_engine , ** response_kwargs ) def get_template_names ( self ): Return a list of template names to be used for the request. Must return a list. May not be called if render_to_response() is overridden. if self . template_name is None : raise ImproperlyConfigured ( TemplateResponseMixin requires either a definition of template_name or an implementation of get_template_names() ) else : return [ self . template_name ] \u8c03\u7528 python3.7/site-packages/django/template/loader.py \u6587\u4ef6\u8c03\u7528\u914d\u7f6e\u7684\u5f15\u64ce\u6a21\u5757\uff0c\u5728\u65b9\u6cd5 select_template \u4e2d\u8c03\u7528 django/template/__init__.py \u4e2d\u5bfc\u5165 EngineHandler \u5bf9 Engine \u505a\u4e00\u4e2a\u903b\u8f91\u5904\u7406\uff0c\u5728 Engine \u4e2d\u52a0\u8f7d``\u6a21\u677f\u7c7b def get_template ( self , template_name ): Return a compiled Template object for the given template name, handling template inheritance recursively. template , origin = self . find_template ( template_name ) if not hasattr ( template , render ): # template needs to be compiled template = Template ( template , origin , template_name , engine = self ) return template Template\u7c7b\u4e2d\u5bf9Html\u8282\u70b9\u6570\u636e\u7684\u586b\u5145\u548c\u6e32\u67d3","title":"\u5728View\u4e2d\u7ee7\u627fTemplateResponseMixin\u8fd9\u4e2a\u7c7b\u6765\u5bf9View\u4fa7\u83b7\u53d6\u6a21\u677f\u540d\u79f0\u7684\u5904\u7406\uff0c\u540c\u65f6\u4f7f\u7528TemplateResponse\u5173\u8054View\u548cHTTTResponse\u7684\u903b\u8f91\u5904\u7406"},{"location":"python/server/django/question/","text":"Django xadmin\u5e38\u89c1\u95ee\u9898 xadmin \u5e38\u89c1\u95ee\u9898 Xadmin \u9519\u8bef: \u6e90\u4ee3\u7801: def render(self, name, value, attrs=None): input_html = [ht for ht in super(AdminSplitDateTime, self).render(name, value, attrs).split( / gt; lt; ) if ht != ] # print(input_html) input_html[0] = input_html[0] + / gt; input_html[1] = lt; + input_html[1] return mark_safe( lt;div class= datetime clearfix gt; lt;div class= input-group date bootstrap-datepicker gt; lt;span class= input-group-addon gt; lt;i class= fa fa-calendar gt; lt;/i gt; lt;/span gt;%s lt;span class= input-group-btn gt; lt;button class= btn btn-default type= button gt;%s lt;/button gt; lt;/span gt; lt;/div gt; lt;div class= input-group time bootstrap-clockpicker gt; lt;span class= input-group-addon gt; lt;i class= fa fa-clock-o gt; lt;/i gt; lt;/span gt;%s lt;span class= input-group-btn gt; lt;button class= btn btn-default type= button gt;%s lt;/button gt; lt;/span gt; lt;/div gt; lt;/div gt; % ( input_html[0], _(u Today ), input_html[1], _(u Now ))) input_html\u5217\u8868\u7684\u5185\u5bb9:(\u4e3b\u8981\u5c31\u662f\u628a\u4e24\u4e2ainput\u62c6\u5206\u51fa\u6765) \u6e90\u4ee3\u7801: input_html = [ht for ht in super(AdminSplitDateTime, self).render(name, value, attrs).split( / gt; lt; ) if ht != ] `/ gt;\\n\\n lt;input` \u5206\u9694\u7b26\u5df2\u7ecf\u6539\u53d8\u4e86\uff0c\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u627e\u5230\u539f\u56e0(.split( / gt;/ gt;\\n\\n lt; lt; )),\u53ef\u4ee5\u52a0\u89e3\u51b3\u6389\u5f02\u5e38\u95ee\u9898 [ lt;input type= text name= PurchaseDate_0 value= 2019-06-16 class= date-field form-control admindatewidget size= 10 id= id_PurchaseDate_0 / gt;\\n\\n lt;input type= text name= PurchaseDate_1 value= 18:36:20 class= time-field form-control admintimewidget size= 8 id= id_PurchaseDate_1 / gt; ] \u9519\u8bef\u4fe1\u606f: IndexError at /xadmin/mwsApp/ordersmodel/34/update/ list index out of range Request Method: GET Request URL: http://127.0.0.1:9000/xadmin/mwsApp/ordersmodel/34/update/ Django Version: 2.0 Exception Type: IndexError Exception Value: list index out of range `Exception Location: /Users/cuco/PycharmProjects/GosundMWSERP/extra_apps/xadmin/widgets.py in render, line 83` Python Executable: /Users/cuco/PycharmProjects/GosundMWSERP/venv/bin/python \u89e3\u51b3\u65b9\u6848:","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"python/server/django/question/#django-xadmin","text":"xadmin \u5e38\u89c1\u95ee\u9898","title":"Django xadmin\u5e38\u89c1\u95ee\u9898"},{"location":"python/server/django/question/#xadmin","text":"\u6e90\u4ee3\u7801: def render(self, name, value, attrs=None): input_html = [ht for ht in super(AdminSplitDateTime, self).render(name, value, attrs).split( / gt; lt; ) if ht != ] # print(input_html) input_html[0] = input_html[0] + / gt; input_html[1] = lt; + input_html[1] return mark_safe( lt;div class= datetime clearfix gt; lt;div class= input-group date bootstrap-datepicker gt; lt;span class= input-group-addon gt; lt;i class= fa fa-calendar gt; lt;/i gt; lt;/span gt;%s lt;span class= input-group-btn gt; lt;button class= btn btn-default type= button gt;%s lt;/button gt; lt;/span gt; lt;/div gt; lt;div class= input-group time bootstrap-clockpicker gt; lt;span class= input-group-addon gt; lt;i class= fa fa-clock-o gt; lt;/i gt; lt;/span gt;%s lt;span class= input-group-btn gt; lt;button class= btn btn-default type= button gt;%s lt;/button gt; lt;/span gt; lt;/div gt; lt;/div gt; % ( input_html[0], _(u Today ), input_html[1], _(u Now ))) input_html\u5217\u8868\u7684\u5185\u5bb9:(\u4e3b\u8981\u5c31\u662f\u628a\u4e24\u4e2ainput\u62c6\u5206\u51fa\u6765) \u6e90\u4ee3\u7801: input_html = [ht for ht in super(AdminSplitDateTime, self).render(name, value, attrs).split( / gt; lt; ) if ht != ] `/ gt;\\n\\n lt;input` \u5206\u9694\u7b26\u5df2\u7ecf\u6539\u53d8\u4e86\uff0c\u8fd9\u4e2a\u5730\u65b9\u53ef\u4ee5\u627e\u5230\u539f\u56e0(.split( / gt;/ gt;\\n\\n lt; lt; )),\u53ef\u4ee5\u52a0\u89e3\u51b3\u6389\u5f02\u5e38\u95ee\u9898 [ lt;input type= text name= PurchaseDate_0 value= 2019-06-16 class= date-field form-control admindatewidget size= 10 id= id_PurchaseDate_0 / gt;\\n\\n lt;input type= text name= PurchaseDate_1 value= 18:36:20 class= time-field form-control admintimewidget size= 8 id= id_PurchaseDate_1 / gt; ] \u9519\u8bef\u4fe1\u606f: IndexError at /xadmin/mwsApp/ordersmodel/34/update/ list index out of range Request Method: GET Request URL: http://127.0.0.1:9000/xadmin/mwsApp/ordersmodel/34/update/ Django Version: 2.0 Exception Type: IndexError Exception Value: list index out of range `Exception Location: /Users/cuco/PycharmProjects/GosundMWSERP/extra_apps/xadmin/widgets.py in render, line 83` Python Executable: /Users/cuco/PycharmProjects/GosundMWSERP/venv/bin/python \u89e3\u51b3\u65b9\u6848:","title":"Xadmin \u9519\u8bef:"},{"location":"secret/reousrce/","text":"Android\u5b89\u5168\u5f00\u53d1\u4e4b\u5b89\u5168\u4f7f\u7528HTTPS https://www.torproject.org/ Rotating Anonymous HTTP Proxy Servers Crawlera \u626b\u63cf\u60a8\u7684\u5e94\u7528\u4ee5\u67e5\u627e\u5e76\u4fee\u590dOWASP OWASP Internet of Things Project \u4e0e IoT \u7f51\u7edc\u5a01\u80c1\u4f5c\u6597\u4e89 10 \u5927 IoT \u5b89\u5168\u6311\u6218 COVERITY SCAN STATIC ANALYSIS \u9759\u6001\u5206\u6790\u5de5\u5177","title":"\u5b89\u5168"},{"location":"shell/shellresource/","text":"shell/shellresource.md","title":"Shell"},{"location":"tools/VSCode/","text":"visualstudio \u5de5\u5177\u4f7f\u7528 \u7b80\u4ecb Visual Studio Code \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u5f3a\u5927\u7684\u7f16\u8f91\u5de5\u5177\uff0c\u80fd\u591f\u8fd0\u884c\u5728Ubuntu\u3001Windows\u3001Mac\u4e0a\uff0c\u5185\u5efa\u652f\u6301JavaScript\u3001TypeScript/Node.js,\u5bf9\u4e8e\u5176\u4ed6\u7684\u8bed\u8a00(C++,C#/Java/Python,PHP,Go)\u4e30\u5bcc\u7684\u6269\u5c55\u63d2\u4ef6\u7cfb\u7edf\u548c\u8fd0\u884c\u65f6\u3002 \u8c08\u8bba\u5982\u4f55\u8c03\u7528Visual Studio\u7ee7\u627f\u6811\u7a97\u53e3 \u5bfc\u822a\u4ee3\u7801 \u4f7f\u7528\u4ee3\u7801\u6620\u5c04\u6765\u6620\u5c04\u4f9d\u8d56\u9879 visual studio \u5c0f\u6280\u5de7 \u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u5c42\u6b21\u7ed3\u6784 \u4ee5\u53ca \u90e8\u5206\u5e38\u7528\u5feb\u6377\u952e \u4f7f\u7528Visual Studio code visualstudio Setting Electron is an open source library developed by GitHub for building cross-platform desktop applications with HTML, CSS, and JavaScript. Electron accomplishes this by combining Chromium and Node.js into a single runtime and apps can be packaged for Mac, Windows, and Linux. Setting Theme keybindings \u7f51\u7edc\u5f00\u53d1\u548c\u5de5\u5177\u914d\u7f6e electronjs electronjs chromium The Chromium projects include Chromium and Chromium OS, the open-source projects behind the Google Chrome browser and Google Chrome OS, respectively. This site houses the documentation and code related to the Chromium projects and is intended for developers interested in learning about and contributing to the open-source projects. chromium chrome chrome \u6dfb\u52a0\u7ec4\u4ef6\u548c\u5de5\u5177 Visual Studio Code is a small download by design and only includes the minimum number of components shared across most development workflows. Basic functionality like the editor, file management, window management, and preference settings are included. A JavaScript/TypeScript language service and Node.js debugger are also part of the base install. If you are used to working with larger, monolithic development tools (IDEs), you may be surprised that your scenarios aren't completely supported out of the box. For example, there isn't a File New Project dialog with pre-installed project templates. Most VS Code users will need to install additional components depending on their specific needs. Additional components and tools","title":"VSCode"},{"location":"tools/VSCode/#visualstudio","text":"","title":"visualstudio \u5de5\u5177\u4f7f\u7528"},{"location":"tools/VSCode/#_1","text":"Visual Studio Code \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u5f3a\u5927\u7684\u7f16\u8f91\u5de5\u5177\uff0c\u80fd\u591f\u8fd0\u884c\u5728Ubuntu\u3001Windows\u3001Mac\u4e0a\uff0c\u5185\u5efa\u652f\u6301JavaScript\u3001TypeScript/Node.js,\u5bf9\u4e8e\u5176\u4ed6\u7684\u8bed\u8a00(C++,C#/Java/Python,PHP,Go)\u4e30\u5bcc\u7684\u6269\u5c55\u63d2\u4ef6\u7cfb\u7edf\u548c\u8fd0\u884c\u65f6\u3002 \u8c08\u8bba\u5982\u4f55\u8c03\u7528Visual Studio\u7ee7\u627f\u6811\u7a97\u53e3 \u5bfc\u822a\u4ee3\u7801 \u4f7f\u7528\u4ee3\u7801\u6620\u5c04\u6765\u6620\u5c04\u4f9d\u8d56\u9879 visual studio \u5c0f\u6280\u5de7 \u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u5c42\u6b21\u7ed3\u6784 \u4ee5\u53ca \u90e8\u5206\u5e38\u7528\u5feb\u6377\u952e \u4f7f\u7528Visual Studio code visualstudio","title":"\u7b80\u4ecb"},{"location":"tools/VSCode/#setting","text":"Electron is an open source library developed by GitHub for building cross-platform desktop applications with HTML, CSS, and JavaScript. Electron accomplishes this by combining Chromium and Node.js into a single runtime and apps can be packaged for Mac, Windows, and Linux. Setting Theme keybindings","title":"Setting"},{"location":"tools/VSCode/#_2","text":"","title":"\u7f51\u7edc\u5f00\u53d1\u548c\u5de5\u5177\u914d\u7f6e"},{"location":"tools/VSCode/#electronjs","text":"electronjs","title":"electronjs"},{"location":"tools/VSCode/#chromium","text":"The Chromium projects include Chromium and Chromium OS, the open-source projects behind the Google Chrome browser and Google Chrome OS, respectively. This site houses the documentation and code related to the Chromium projects and is intended for developers interested in learning about and contributing to the open-source projects. chromium","title":"chromium"},{"location":"tools/VSCode/#chrome","text":"chrome","title":"chrome"},{"location":"tools/VSCode/#_3","text":"Visual Studio Code is a small download by design and only includes the minimum number of components shared across most development workflows. Basic functionality like the editor, file management, window management, and preference settings are included. A JavaScript/TypeScript language service and Node.js debugger are also part of the base install. If you are used to working with larger, monolithic development tools (IDEs), you may be surprised that your scenarios aren't completely supported out of the box. For example, there isn't a File New Project dialog with pre-installed project templates. Most VS Code users will need to install additional components depending on their specific needs. Additional components and tools","title":"\u6dfb\u52a0\u7ec4\u4ef6\u548c\u5de5\u5177"},{"location":"tools/admonition/","text":"Admonition Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings. Installation Add the following lines to your mkdocs.yml : markdown_extensions : - admonition Usage Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Changing the title By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Removing the title Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Embedded code blocks Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = 087652 ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Collapsible blocks The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default. Types Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note . Note Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso Abstract Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr Info Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo Tip Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important Success Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done Question Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq Warning Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention Failure Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing Danger Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error Bug Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug Example Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet Quote Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Admonition"},{"location":"tools/admonition/#admonition","text":"Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings.","title":"Admonition"},{"location":"tools/admonition/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - admonition","title":"Installation"},{"location":"tools/admonition/#usage","text":"Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Usage"},{"location":"tools/admonition/#changing-the-title","text":"By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Changing the title"},{"location":"tools/admonition/#removing-the-title","text":"Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Removing the title"},{"location":"tools/admonition/#embedded-code-blocks","text":"Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = 087652 ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.","title":"Embedded code blocks"},{"location":"tools/admonition/#collapsible-blocks","text":"The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default.","title":"Collapsible blocks"},{"location":"tools/admonition/#types","text":"Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note .","title":"Types"},{"location":"tools/admonition/#note","text":"Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso","title":"Note"},{"location":"tools/admonition/#abstract","text":"Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr","title":"Abstract"},{"location":"tools/admonition/#info","text":"Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo","title":"Info"},{"location":"tools/admonition/#tip","text":"Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important","title":"Tip"},{"location":"tools/admonition/#success","text":"Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done","title":"Success"},{"location":"tools/admonition/#question","text":"Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq","title":"Question"},{"location":"tools/admonition/#warning","text":"Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention","title":"Warning"},{"location":"tools/admonition/#failure","text":"Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing","title":"Failure"},{"location":"tools/admonition/#danger","text":"Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error","title":"Danger"},{"location":"tools/admonition/#bug","text":"Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug","title":"Bug"},{"location":"tools/admonition/#example","text":"Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet","title":"Example"},{"location":"tools/admonition/#quote","text":"Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Quote"},{"location":"tools/atom/","text":"Atom\u4f7f\u7528\u603b\u7ed3 Atom \u5b98\u7f51 Atom : Atom Mac package \u5b89\u88c5\u76ee\u5f55: /Users/cangck/.atom/packages atom\u3001Api \u6587\u6863\u8def\u5f84: Atom \u8ba8\u8bba\u793e\u533a atom.io/docs Atom \u6587\u6863 flight-manual.atom.io/ Atom Github\u4f7f\u7528 Github Proxy and Firewall Settings apm config set https-proxy YOUR_PROXY_ADDRESS If you are using a HTTP(S) proxy you can configure apm to use it by running: apm config set https-proxy YOUR_PROXY_ADDRESS You can run apm config get https-proxy to verify it has been set correctly. Atom \u5305\u7ba1\u7406\u5de5\u5177\u7684\u4f7f\u7528: apm help install atom\u8f6f\u4ef6\u6574\u4f53\u914d\u7f6e: cmd+,\u6253\u5f00Atom\u8bbe\u7f6e\u754c\u9762: \b\u8be5\u76ee\u5f55\u4e0b\u5305\u542b\u4e86\u6240\u6709\u7684Atom\u7684\u914d\u7f6e: Atom\u5feb\u6377\u547d\u4ee4: cmd-shift-p:\u6253\u5f00\u547d\u4ee4\u9762\u677f\u8f93\u5165\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1a Atom Selections Text selections in Atom support a number of actions, such as scoping deletion, indentation and search actions, and marking text for actions such as quoting and bracketing. Selections mirror many of the movement commands. They're actually exactly the same keybindings as the movement commands, but with a Shift key added in. Shift+Up or Ctrl+Shift+P - Select up Shift+Down or Ctrl+Shift+N - Select down Shift+Left or Ctrl+Shift+B - Select previous character Shift+Right or Ctrl+Shift+F - Select next character Alt+Shift+Left or Alt+Shift+B - Select to beginning of word Alt+Shift+Right or Alt+Shift+F - Select to end of word Cmd+Shift+Right or Ctrl+Shift+E - Select to end of line Cmd+Shift+Left or Ctrl+Shift+A - Select to first character of line Cmd+Shift+Up - Select to top of file Cmd+Shift+Down - Select to bottom of file In addition to the cursor movement selection commands, there are also a few commands that help with selecting specific areas of content. Cmd+A - Select the entire contents of the file Cmd+L - Select the entire line Ctrl+Shift+W - Select the current word Atom markdown \u7f16\u8f91\u5668\u914d\u7f6e: Atom\u7684Markdown\u63d2\u4ef6\uff0c\u57fa\u672c\u4e0a\u6ee1\u8db3\u4e86\u6211\u5bf9\u4e00\u4e2aMarkdown\u7f16\u8f91\u5668\u7684\u6240\u6709\u5e7b\u60f3\uff0c\u5b9e\u65f6\u6e32\u67d3\u3001\u540c\u6b65\u6eda\u52a8\uff0c\u516c\u5f0f\u3001\u4ee3\u7801\u3001\u56fe\u7247\u3001\u8868\u683c\u7684\u5feb\u6377\u64cd\u4f5c\u4e0e\u652f\u6301\uff0c\u4ee5\u53capdf\u6587\u4ef6\u5bfc\u51fa\u3001\u9884\u89c8\u7b49\u3002 1.\u589e\u5f3a\u9884\u89c8(markdown-preview-plus) Atom\u81ea\u5e26\u7684Markdown\u9884\u89c8\u63d2\u4ef6markdown-preview\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\uff0cmarkdown-preview-plus\u5bf9\u5176\u505a\u4e86\u529f\u80fd\u6269\u5c55\u548c\u589e\u5f3a\u3002 \u652f\u6301\u9884\u89c8\u5b9e\u65f6\u6e32\u67d3\u3002(Ctrl + Shift + M) \u652f\u6301Latex\u516c\u5f0f\u3002(Ctrl + Shift + X) \u6ce8:\u4f7f\u7528\u8be5\u63d2\u4ef6\u524d\uff0c\u9700\u8981\u5148\u7981\u7528markdown-preview 2.\u540c\u6b65\u6eda\u52a8(markdown-scroll-sync) \u540c\u6b65\u6eda\u52a8\u662fMarkdown\u7f16\u8f91\u5668\u7684\u5fc5\u5907\u529f\u80fd\uff0c\u65b9\u4fbf\u7ffb\u9605\u6587\u6863\u4fee\u6539\u65f6\u80fd\u5feb\u901f\u5b9a\u4f4d\u5230\u9884\u89c8\u7684\u4f4d\u7f6e\u3002 markdown-scroll-sync\u4e0d\u4ec5\u652f\u6301\u540c\u6b65\u6eda\u52a8\uff0c\u5728\u5149\u6807\u4f4d\u7f6e\u53d1\u751f\u53d8\u66f4\u65f6\u4e5f\u4f1a\u540c\u6b65\u6eda\u52a8\uff0c\u8fd9\u4e2a\u529f\u80fd\u5728\u5f88\u591aMarkdown\u7f16\u8f91\u5668\u4e2d\u4e0d\u5177\u5907\u3002 3.\u4ee3\u7801\u589e\u5f3a(language-markdown) \u4e00\u822c\u7684Markdown\u7f16\u8f91\u5668\u63d0\u4f9b\u4e86\u4ee3\u7801\u7740\u8272\u7b49\u57fa\u672c\u529f\u80fd\uff0clanguage-markdown\u9664\u4e86\u80fd\u7ed9\u4ee3\u7801\u7740\u8272\uff0c\u8fd8\u63d0\u4f9b\u4e86\u5feb\u6377\u7684\u4ee3\u7801\u7247\u6bb5\u751f\u6210\u7b49\u529f\u80fd\u3002 4\u56fe\u7247\u7c98\u8d34(markdown-image-paste) \u56fe\u7247\u529f\u80fd\u652f\u6301\u7684\u597d\u574f\u76f4\u63a5\u51b3\u5b9a\u4e86\u6211\u662f\u5426\u9009\u62e9\u4f7f\u7528\u4e00\u4e2aMarkdown\u7f16\u8f91\u5668\u3002\u4e5f\u6709\u4e0d\u5c11\u7f16\u8f91\u5668\u548c\u5728\u7ebf\u7684\u56fe\u5e8a\u7ed1\u5b9a\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u53d7\u9650\u4e8e\u7f51\u7edc\u3002\u867d\u7136Markdown\u652f\u6301\u63d2\u5165\u672c\u5730\u56fe\u7247\uff0c\u4f46\u662f\u6bcf\u6b21\u63d2\u5165\u65b0\u56fe\u7247\u90fd\u662f\u4e00\u5806\u91cd\u590d\u64cd\u4f5c\uff1a\u622a\u56fe\uff0d\u547d\u540d\uff0d\u4fdd\u5b58\uff0d\u63d2\u5165\u3002markdown-image-paste\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u4e00\u6b65\u5b8c\u6210\uff1a \u4f7f\u7528\u622a\u56fe\u5de5\u5177\u5c06\u56fe\u7247\u590d\u5236\u5230\u7cfb\u7edf\u526a\u5207\u677f\u3002 \u5728Markdown\u65b0\u8d77\u4e00\u884c\u8f93\u5165\u6587\u4ef6\u540d\u3002 Ctrl + V \u4f1a\u81ea\u52a8\u628a\u56fe\u7247\u4fdd\u5b58\u5230Markdown\u6587\u4ef6\u76f8\u540c\u76ee\u5f55\u4e0b(\u56e0\u6b64\u8981\u6c42Markdown\u6587\u4ef6\u5e94\u8be5\u5148\u4fdd\u5b58)\uff0c\u5e76\u547d\u540d\u4e3a\u521a\u8f93\u5165\u7684\u6587\u4ef6\u540d\uff0c\u540c\u65f6\u5728\u521a\u624d\u8f93\u5165\u6587\u4ef6\u540d\u884c\u5904\u751f\u6210img\u6807\u7b7e\u3002 4.\u8868\u683c\u7f16\u8f91(markdown-table-editor) \u4e00\u76f4\u5bf9Markdown\u7684table\u8bed\u6cd5\u5f88\u65e0\u7231\uff0c\u76f4\u5230\u9047\u5230\u4e86markdown-table-editor\uff0c\u8fd9\u64cd\u4f5c\u6548\u7387\u7b80\u76f4\u70b8\u4e86\uff01\u6587\u5b57\u5df2\u7ecf\u4e0d\u80fd\u8868\u8fbe\u6211\u7684\u6fc0\u52a8\u4e4b\u60c5\u4e86\uff0c\u76f4\u63a5\u770b\u56fe\u5427\u3002 5.pdf\u5bfc\u51fa(markdown-themeable-pdf\u3001pdf-view) \u4e0d\u5c11Markdown\u7f16\u8f91\u5668\u90fd\u4f1a\u63d0\u4f9bpdf\u5bfc\u51fa\u529f\u80fd\uff0c\u751a\u81f3\u5c06\u5176\u4f5c\u4e3a\u6536\u8d39\u529f\u80fd\u3002\u800cAtom\u7684markdown-themeable-pdf\u3001pdf-view\u63d2\u4ef6\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0pdf\u5bfc\u51fa\u548c\u9884\u89c8\u529f\u80fd\u3002 \u5b89\u88c5markdown-themeable-pdf\u65f6\u9047\u5230\u4e86\u4e00\u4e9b\u5751\uff0c\u5728\u6b64\u5206\u4eab\u4e00\u4e0b\uff1a \u7531\u4e8eGFW\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u8be5\u63d2\u4ef6\u4f7f\u7528\u7684phantomjs\u6a21\u5757\u65e0\u6cd5\u5b89\u88c5\u6210\u529f\uff0c\u4ece\u800c\u5bfc\u51fapdf\u62a5\u544a\u9519\u8bef\u3002 \u89e3\u51b3\u529e\u6cd5\u662f\uff1a \u4ece\u5b98\u7f51\u4e0b\u8f7dphantomjs\u4e8c\u8fdb\u5236\u5b89\u88c5\u5305\uff1a http://phantomjs.org/download.html \u89e3\u538b\u4e0b\u8f7d\u7684phantomjs-2.1.1-macosx.zip\u538b\u7f29\u6587\u4ef6\u3002 \u6dfb\u52a0index.js\u6587\u4ef6\u5230\u89e3\u538b\u540e\u7684\u76ee\u5f55\u3002 \u5c06\u6574\u4e2a\u76ee\u5f55\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\uff1a~/.atom/packages/markdown-themeable-pdf/node_modules/phantomjs-prebuilt\uff0c\u6ce8\u610f\u76ee\u5f55phantomjs-2.1.1-macosx\u88ab\u91cd\u547d\u540d\u4e3aphantomjs-prebuilt \u91cd\u542fAtom\uff0c\u53f3\u952e- Markdown to PDF\u5373\u53ef\uff0c\u751f\u6210\u7684pdf\u6587\u4ef6\u5728Markdown\u6587\u4ef6\u540c\u76ee\u5f55\u3002 \u5176\u4e2dindex.js\u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a module . exports = { path : __dirname + /bin/phantomjs } Link","title":"Atom"},{"location":"tools/atom/#atom","text":"Atom \u5b98\u7f51 Atom : Atom Mac package \u5b89\u88c5\u76ee\u5f55: /Users/cangck/.atom/packages atom\u3001Api \u6587\u6863\u8def\u5f84: Atom \u8ba8\u8bba\u793e\u533a atom.io/docs Atom \u6587\u6863 flight-manual.atom.io/ Atom Github\u4f7f\u7528 Github Proxy and Firewall Settings apm config set https-proxy YOUR_PROXY_ADDRESS If you are using a HTTP(S) proxy you can configure apm to use it by running: apm config set https-proxy YOUR_PROXY_ADDRESS You can run apm config get https-proxy to verify it has been set correctly. Atom \u5305\u7ba1\u7406\u5de5\u5177\u7684\u4f7f\u7528: apm help install","title":"Atom\u4f7f\u7528\u603b\u7ed3"},{"location":"tools/atom/#atom_1","text":"cmd+,\u6253\u5f00Atom\u8bbe\u7f6e\u754c\u9762: \b\u8be5\u76ee\u5f55\u4e0b\u5305\u542b\u4e86\u6240\u6709\u7684Atom\u7684\u914d\u7f6e:","title":"atom\u8f6f\u4ef6\u6574\u4f53\u914d\u7f6e:"},{"location":"tools/atom/#atom_2","text":"cmd-shift-p:\u6253\u5f00\u547d\u4ee4\u9762\u677f\u8f93\u5165\u9700\u8981\u6267\u884c\u7684\u547d\u4ee4\uff1a Atom Selections Text selections in Atom support a number of actions, such as scoping deletion, indentation and search actions, and marking text for actions such as quoting and bracketing. Selections mirror many of the movement commands. They're actually exactly the same keybindings as the movement commands, but with a Shift key added in. Shift+Up or Ctrl+Shift+P - Select up Shift+Down or Ctrl+Shift+N - Select down Shift+Left or Ctrl+Shift+B - Select previous character Shift+Right or Ctrl+Shift+F - Select next character Alt+Shift+Left or Alt+Shift+B - Select to beginning of word Alt+Shift+Right or Alt+Shift+F - Select to end of word Cmd+Shift+Right or Ctrl+Shift+E - Select to end of line Cmd+Shift+Left or Ctrl+Shift+A - Select to first character of line Cmd+Shift+Up - Select to top of file Cmd+Shift+Down - Select to bottom of file In addition to the cursor movement selection commands, there are also a few commands that help with selecting specific areas of content. Cmd+A - Select the entire contents of the file Cmd+L - Select the entire line Ctrl+Shift+W - Select the current word","title":"Atom\u5feb\u6377\u547d\u4ee4:"},{"location":"tools/atom/#atom-markdown","text":"Atom\u7684Markdown\u63d2\u4ef6\uff0c\u57fa\u672c\u4e0a\u6ee1\u8db3\u4e86\u6211\u5bf9\u4e00\u4e2aMarkdown\u7f16\u8f91\u5668\u7684\u6240\u6709\u5e7b\u60f3\uff0c\u5b9e\u65f6\u6e32\u67d3\u3001\u540c\u6b65\u6eda\u52a8\uff0c\u516c\u5f0f\u3001\u4ee3\u7801\u3001\u56fe\u7247\u3001\u8868\u683c\u7684\u5feb\u6377\u64cd\u4f5c\u4e0e\u652f\u6301\uff0c\u4ee5\u53capdf\u6587\u4ef6\u5bfc\u51fa\u3001\u9884\u89c8\u7b49\u3002 1.\u589e\u5f3a\u9884\u89c8(markdown-preview-plus) Atom\u81ea\u5e26\u7684Markdown\u9884\u89c8\u63d2\u4ef6markdown-preview\u529f\u80fd\u6bd4\u8f83\u7b80\u5355\uff0cmarkdown-preview-plus\u5bf9\u5176\u505a\u4e86\u529f\u80fd\u6269\u5c55\u548c\u589e\u5f3a\u3002 \u652f\u6301\u9884\u89c8\u5b9e\u65f6\u6e32\u67d3\u3002(Ctrl + Shift + M) \u652f\u6301Latex\u516c\u5f0f\u3002(Ctrl + Shift + X) \u6ce8:\u4f7f\u7528\u8be5\u63d2\u4ef6\u524d\uff0c\u9700\u8981\u5148\u7981\u7528markdown-preview 2.\u540c\u6b65\u6eda\u52a8(markdown-scroll-sync) \u540c\u6b65\u6eda\u52a8\u662fMarkdown\u7f16\u8f91\u5668\u7684\u5fc5\u5907\u529f\u80fd\uff0c\u65b9\u4fbf\u7ffb\u9605\u6587\u6863\u4fee\u6539\u65f6\u80fd\u5feb\u901f\u5b9a\u4f4d\u5230\u9884\u89c8\u7684\u4f4d\u7f6e\u3002 markdown-scroll-sync\u4e0d\u4ec5\u652f\u6301\u540c\u6b65\u6eda\u52a8\uff0c\u5728\u5149\u6807\u4f4d\u7f6e\u53d1\u751f\u53d8\u66f4\u65f6\u4e5f\u4f1a\u540c\u6b65\u6eda\u52a8\uff0c\u8fd9\u4e2a\u529f\u80fd\u5728\u5f88\u591aMarkdown\u7f16\u8f91\u5668\u4e2d\u4e0d\u5177\u5907\u3002 3.\u4ee3\u7801\u589e\u5f3a(language-markdown) \u4e00\u822c\u7684Markdown\u7f16\u8f91\u5668\u63d0\u4f9b\u4e86\u4ee3\u7801\u7740\u8272\u7b49\u57fa\u672c\u529f\u80fd\uff0clanguage-markdown\u9664\u4e86\u80fd\u7ed9\u4ee3\u7801\u7740\u8272\uff0c\u8fd8\u63d0\u4f9b\u4e86\u5feb\u6377\u7684\u4ee3\u7801\u7247\u6bb5\u751f\u6210\u7b49\u529f\u80fd\u3002 4\u56fe\u7247\u7c98\u8d34(markdown-image-paste) \u56fe\u7247\u529f\u80fd\u652f\u6301\u7684\u597d\u574f\u76f4\u63a5\u51b3\u5b9a\u4e86\u6211\u662f\u5426\u9009\u62e9\u4f7f\u7528\u4e00\u4e2aMarkdown\u7f16\u8f91\u5668\u3002\u4e5f\u6709\u4e0d\u5c11\u7f16\u8f91\u5668\u548c\u5728\u7ebf\u7684\u56fe\u5e8a\u7ed1\u5b9a\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u53d7\u9650\u4e8e\u7f51\u7edc\u3002\u867d\u7136Markdown\u652f\u6301\u63d2\u5165\u672c\u5730\u56fe\u7247\uff0c\u4f46\u662f\u6bcf\u6b21\u63d2\u5165\u65b0\u56fe\u7247\u90fd\u662f\u4e00\u5806\u91cd\u590d\u64cd\u4f5c\uff1a\u622a\u56fe\uff0d\u547d\u540d\uff0d\u4fdd\u5b58\uff0d\u63d2\u5165\u3002markdown-image-paste\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u4e00\u6b65\u5b8c\u6210\uff1a \u4f7f\u7528\u622a\u56fe\u5de5\u5177\u5c06\u56fe\u7247\u590d\u5236\u5230\u7cfb\u7edf\u526a\u5207\u677f\u3002 \u5728Markdown\u65b0\u8d77\u4e00\u884c\u8f93\u5165\u6587\u4ef6\u540d\u3002 Ctrl + V \u4f1a\u81ea\u52a8\u628a\u56fe\u7247\u4fdd\u5b58\u5230Markdown\u6587\u4ef6\u76f8\u540c\u76ee\u5f55\u4e0b(\u56e0\u6b64\u8981\u6c42Markdown\u6587\u4ef6\u5e94\u8be5\u5148\u4fdd\u5b58)\uff0c\u5e76\u547d\u540d\u4e3a\u521a\u8f93\u5165\u7684\u6587\u4ef6\u540d\uff0c\u540c\u65f6\u5728\u521a\u624d\u8f93\u5165\u6587\u4ef6\u540d\u884c\u5904\u751f\u6210img\u6807\u7b7e\u3002 4.\u8868\u683c\u7f16\u8f91(markdown-table-editor) \u4e00\u76f4\u5bf9Markdown\u7684table\u8bed\u6cd5\u5f88\u65e0\u7231\uff0c\u76f4\u5230\u9047\u5230\u4e86markdown-table-editor\uff0c\u8fd9\u64cd\u4f5c\u6548\u7387\u7b80\u76f4\u70b8\u4e86\uff01\u6587\u5b57\u5df2\u7ecf\u4e0d\u80fd\u8868\u8fbe\u6211\u7684\u6fc0\u52a8\u4e4b\u60c5\u4e86\uff0c\u76f4\u63a5\u770b\u56fe\u5427\u3002 5.pdf\u5bfc\u51fa(markdown-themeable-pdf\u3001pdf-view) \u4e0d\u5c11Markdown\u7f16\u8f91\u5668\u90fd\u4f1a\u63d0\u4f9bpdf\u5bfc\u51fa\u529f\u80fd\uff0c\u751a\u81f3\u5c06\u5176\u4f5c\u4e3a\u6536\u8d39\u529f\u80fd\u3002\u800cAtom\u7684markdown-themeable-pdf\u3001pdf-view\u63d2\u4ef6\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0pdf\u5bfc\u51fa\u548c\u9884\u89c8\u529f\u80fd\u3002 \u5b89\u88c5markdown-themeable-pdf\u65f6\u9047\u5230\u4e86\u4e00\u4e9b\u5751\uff0c\u5728\u6b64\u5206\u4eab\u4e00\u4e0b\uff1a \u7531\u4e8eGFW\u7684\u95ee\u9898\uff0c\u5bfc\u81f4\u8be5\u63d2\u4ef6\u4f7f\u7528\u7684phantomjs\u6a21\u5757\u65e0\u6cd5\u5b89\u88c5\u6210\u529f\uff0c\u4ece\u800c\u5bfc\u51fapdf\u62a5\u544a\u9519\u8bef\u3002 \u89e3\u51b3\u529e\u6cd5\u662f\uff1a \u4ece\u5b98\u7f51\u4e0b\u8f7dphantomjs\u4e8c\u8fdb\u5236\u5b89\u88c5\u5305\uff1a http://phantomjs.org/download.html \u89e3\u538b\u4e0b\u8f7d\u7684phantomjs-2.1.1-macosx.zip\u538b\u7f29\u6587\u4ef6\u3002 \u6dfb\u52a0index.js\u6587\u4ef6\u5230\u89e3\u538b\u540e\u7684\u76ee\u5f55\u3002 \u5c06\u6574\u4e2a\u76ee\u5f55\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\uff1a~/.atom/packages/markdown-themeable-pdf/node_modules/phantomjs-prebuilt\uff0c\u6ce8\u610f\u76ee\u5f55phantomjs-2.1.1-macosx\u88ab\u91cd\u547d\u540d\u4e3aphantomjs-prebuilt \u91cd\u542fAtom\uff0c\u53f3\u952e- Markdown to PDF\u5373\u53ef\uff0c\u751f\u6210\u7684pdf\u6587\u4ef6\u5728Markdown\u6587\u4ef6\u540c\u76ee\u5f55\u3002 \u5176\u4e2dindex.js\u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a module . exports = { path : __dirname + /bin/phantomjs }","title":"Atom markdown \u7f16\u8f91\u5668\u914d\u7f6e:"},{"location":"tools/atom/#link","text":"","title":"Link"},{"location":"tools/datareporting/","text":"\u6570\u636e\u53ef\u89c6\u5316\u7f51\u7ad9 Google Ads Overview Report datastudio AMP is a web component framework to easily create user-first AMP Progressive Web Apps are user experiences that have the reach of the web, and are: Progressive Web Apps","title":"\u6570\u636e\u5206\u6790"},{"location":"tools/datareporting/#_1","text":"Google Ads Overview Report datastudio AMP is a web component framework to easily create user-first AMP Progressive Web Apps are user experiences that have the reach of the web, and are: Progressive Web Apps","title":"\u6570\u636e\u53ef\u89c6\u5316\u7f51\u7ad9"},{"location":"tools/footnotes/","text":"Footnotes Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation. Installation Add the following lines to your mkdocs.yml : markdown_extensions : - footnotes Usage The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document. Inserting the reference The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Inserting the content The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference. on a single line Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page on multiple lines Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Footnotes"},{"location":"tools/footnotes/#footnotes","text":"Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation.","title":"Footnotes"},{"location":"tools/footnotes/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - footnotes","title":"Installation"},{"location":"tools/footnotes/#usage","text":"The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document.","title":"Usage"},{"location":"tools/footnotes/#inserting-the-reference","text":"The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Inserting the reference"},{"location":"tools/footnotes/#inserting-the-content","text":"The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference.","title":"Inserting the content"},{"location":"tools/footnotes/#on-a-single-line","text":"Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page","title":"on a single line"},{"location":"tools/footnotes/#on-multiple-lines","text":"Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"on multiple lines"},{"location":"tools/git/","text":"\u642d\u5efaGit\u4ed3\u5e93 git git\u6587\u6863 Git \b\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4ee3\u7801\u7ba1\u7406\u5de5\u5177\uff0c\u5bf9\u4ee3\u7801\u8fdb\u884c\u8ddf\u8e2a\uff0c\u80fd\u591f\u63d0\u4f9b\u56e2\u961f\u534f\u4f5c\u5f00\u53d1\uff0c\b\u7ba1\u7406\u6e90\u4ee3\u7801\uff0c\u76ee\u524d\u5f88\u591a\u8f6f\u4ef6\u90fd\b\u652f\u6301\bGit\u4ee3\u7801\u7ba1\u7406\u5de5\u5177\uff0cGithub\uff0cGitlab\u3001 CVS \u3001 SVN Git\u7684\u8bde\u751f \u5f88\u591a\u4eba\u90fd\u77e5\u9053\uff0cLinus\u57281991\u5e74\u521b\u5efa\u4e86\u5f00\u6e90\u7684Linux\uff0c\u4ece\u6b64\uff0cLinux\u7cfb\u7edf\u4e0d\u65ad\u53d1\u5c55\uff0c\u5df2\u7ecf\u6210\u4e3a\u6700\u5927\u7684\u670d\u52a1\u5668\u7cfb\u7edf\u8f6f\u4ef6\u4e86\u3002 Linus\u867d\u7136\u521b\u5efa\u4e86Linux\uff0c\u4f46Linux\u7684\u58ee\u5927\u662f\u9760\u5168\u4e16\u754c\u70ed\u5fc3\u7684\u5fd7\u613f\u8005\u53c2\u4e0e\u7684\uff0c\u8fd9\u4e48\u591a\u4eba\u5728\u4e16\u754c\u5404\u5730\u4e3aLinux\u7f16\u5199\u4ee3\u7801\uff0c\u90a3Linux\u7684\u4ee3\u7801\u662f\u5982\u4f55\u7ba1\u7406\u7684\u5462\uff1f \u4e8b\u5b9e\u662f\uff0c\u57282002\u5e74\u4ee5\u524d\uff0c\u4e16\u754c\u5404\u5730\u7684\u5fd7\u613f\u8005\u628a\u6e90\u4ee3\u7801\u6587\u4ef6\u901a\u8fc7 diff \u7684\u65b9\u5f0f\u53d1\u7ed9 Linus \uff0c\u7136\u540e\u7531Linus\u672c\u4eba\u901a\u8fc7\u624b\u5de5\u65b9\u5f0f\u5408\u5e76\u4ee3\u7801\uff01 \u4f60\u4e5f\u8bb8\u4f1a\u60f3\uff0c\u4e3a\u4ec0\u4e48Linus\u4e0d\u628aLinux\u4ee3\u7801\u653e\u5230\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u91cc\u5462\uff1f\u4e0d\u662f\u6709CVS\u3001SVN\u8fd9\u4e9b\u514d\u8d39\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5417\uff1f\u56e0\u4e3aLinus\u575a\u5b9a\u5730\u53cd\u5bf9CVS\u548cSVN\uff0c\u8fd9\u4e9b\u96c6\u4e2d\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e0d\u4f46\u901f\u5ea6\u6162\uff0c\u800c\u4e14\u5fc5\u987b\u8054\u7f51\u624d\u80fd\u4f7f\u7528\u3002\u6709\u4e00\u4e9b\u5546\u7528\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u867d\u7136\u6bd4CVS\u3001SVN\u597d\u7528\uff0c\u4f46\u90a3\u662f\u4ed8\u8d39\u7684\uff0c\u548cLinux\u7684\u5f00\u6e90\u7cbe\u795e\u4e0d\u7b26\u3002 \u4e0d\u8fc7\uff0c\u5230\u4e862002\u5e74\uff0cLinux\u7cfb\u7edf\u5df2\u7ecf\u53d1\u5c55\u4e86\u5341\u5e74\u4e86\uff0c\u4ee3\u7801\u5e93\u4e4b\u5927\u8ba9Linus\u5f88\u96be\u7ee7\u7eed\u901a\u8fc7\u624b\u5de5\u65b9\u5f0f\u7ba1\u7406\u4e86\uff0c\u793e\u533a\u7684\u5f1f\u5144\u4eec\u4e5f\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u8868\u8fbe\u4e86\u5f3a\u70c8\u4e0d\u6ee1\uff0c\u4e8e\u662fLinus\u9009\u62e9\u4e86\u4e00\u4e2a\u5546\u4e1a\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edfBitKeeper\uff0cBitKeeper\u7684\u4e1c\u5bb6BitMover\u516c\u53f8\u51fa\u4e8e\u4eba\u9053\u4e3b\u4e49\u7cbe\u795e\uff0c\u6388\u6743Linux\u793e\u533a\u514d\u8d39\u4f7f\u7528\u8fd9\u4e2a\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002 \u5b89\u5b9a\u56e2\u7ed3\u7684\u5927\u597d\u5c40\u9762\u57282005\u5e74\u5c31\u88ab\u6253\u7834\u4e86\uff0c\u539f\u56e0\u662fLinux\u793e\u533a\u725b\u4eba\u805a\u96c6\uff0c\u4e0d\u514d\u6cbe\u67d3\u4e86\u4e00\u4e9b\u6881\u5c71\u597d\u6c49\u7684\u6c5f\u6e56\u4e60\u6c14\u3002\u5f00\u53d1Samba\u7684Andrew\u8bd5\u56fe\u7834\u89e3BitKeeper\u7684\u534f\u8bae\uff08\u8fd9\u4e48\u5e72\u7684\u5176\u5b9e\u4e5f\u4e0d\u53ea\u4ed6\u4e00\u4e2a\uff09\uff0c\u88abBitMover\u516c\u53f8\u53d1\u73b0\u4e86\uff08\u76d1\u63a7\u5de5\u4f5c\u505a\u5f97\u4e0d\u9519\uff01\uff09\uff0c\u4e8e\u662fBitMover\u516c\u53f8\u6012\u4e86\uff0c\u8981\u6536\u56deLinux\u793e\u533a\u7684\u514d\u8d39\u4f7f\u7528\u6743\u3002 Linus\u53ef\u4ee5\u5411BitMover\u516c\u53f8\u9053\u4e2a\u6b49\uff0c\u4fdd\u8bc1\u4ee5\u540e\u4e25\u683c\u7ba1\u6559\u5f1f\u5144\u4eec\uff0c\u55ef\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5b9e\u9645\u60c5\u51b5\u662f\u8fd9\u6837\u7684\uff1a Linus\u82b1\u4e86\u4e24\u5468\u65f6\u95f4\u81ea\u5df1\u7528C\u5199\u4e86\u4e00\u4e2a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u8fd9\u5c31\u662fGit\uff01\u4e00\u4e2a\u6708\u4e4b\u5185\uff0cLinux\u7cfb\u7edf\u7684\u6e90\u7801\u5df2\u7ecf\u7531Git\u7ba1\u7406\u4e86\uff01\u725b\u662f\u600e\u4e48\u5b9a\u4e49\u7684\u5462\uff1f\u5927\u5bb6\u53ef\u4ee5\u4f53\u4f1a\u4e00\u4e0b\u3002 Git\u8fc5\u901f\u6210\u4e3a\u6700\u6d41\u884c\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5c24\u5176\u662f2008\u5e74\uff0cGitHub\u7f51\u7ad9\u4e0a\u7ebf\u4e86\uff0c\u5b83\u4e3a\u5f00\u6e90\u9879\u76ee\u514d\u8d39\u63d0\u4f9bGit\u5b58\u50a8\uff0c\u65e0\u6570\u5f00\u6e90\u9879\u76ee\u5f00\u59cb\u8fc1\u79fb\u81f3GitHub\uff0c\u5305\u62ecjQuery\uff0cPHP\uff0cRuby\u7b49\u7b49\u3002 \u5386\u53f2\u5c31\u662f\u8fd9\u4e48\u5076\u7136\uff0c\u5982\u679c\u4e0d\u662f\u5f53\u5e74BitMover\u516c\u53f8\u5a01\u80c1Linux\u793e\u533a\uff0c\u53ef\u80fd\u73b0\u5728\u6211\u4eec\u5c31\u6ca1\u6709\u514d\u8d39\u800c\u8d85\u7ea7\u597d\u7528\u7684Git\u4e86\u3002 \u96c6\u4e2d\u5f0fvs\u5206\u5e03\u5f0f Linus\u4e00\u76f4\u75db\u6068\u7684CVS\u53caSVN\u90fd\u662f\u96c6\u4e2d\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u800cGit\u662f\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u96c6\u4e2d\u5f0f\u548c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f \u5148\u8bf4\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7248\u672c\u5e93\u662f\u96c6\u4e2d\u5b58\u653e\u5728\u4e2d\u592e\u670d\u52a1\u5668\u7684\uff0c\u800c\u5e72\u6d3b\u7684\u65f6\u5019\uff0c\u7528\u7684\u90fd\u662f\u81ea\u5df1\u7684\u7535\u8111\uff0c\u6240\u4ee5\u8981\u5148\u4ece\u4e2d\u592e\u670d\u52a1\u5668\u53d6\u5f97\u6700\u65b0\u7684\u7248\u672c\uff0c\u7136\u540e\u5f00\u59cb\u5e72\u6d3b\uff0c\u5e72\u5b8c\u6d3b\u4e86\uff0c\u518d\u628a\u81ea\u5df1\u7684\u6d3b\u63a8\u9001\u7ed9\u4e2d\u592e\u670d\u52a1\u5668\u3002\u4e2d\u592e\u670d\u52a1\u5668\u5c31\u597d\u6bd4\u662f\u4e00\u4e2a\u56fe\u4e66\u9986\uff0c\u4f60\u8981\u6539\u4e00\u672c\u4e66\uff0c\u5fc5\u987b\u5148\u4ece\u56fe\u4e66\u9986\u501f\u51fa\u6765\uff0c\u7136\u540e\u56de\u5230\u5bb6\u81ea\u5df1\u6539\uff0c\u6539\u5b8c\u4e86\uff0c\u518d\u653e\u56de\u56fe\u4e66\u9986\u3002 \u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6700\u5927\u7684\u6bdb\u75c5\u5c31\u662f\u5fc5\u987b\u8054\u7f51\u624d\u80fd\u5de5\u4f5c\uff0c\u5982\u679c\u5728\u5c40\u57df\u7f51\u5185\u8fd8\u597d\uff0c\u5e26\u5bbd\u591f\u5927\uff0c\u901f\u5ea6\u591f\u5feb\uff0c\u53ef\u5982\u679c\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u9047\u5230\u7f51\u901f\u6162\u7684\u8bdd\uff0c\u53ef\u80fd\u63d0\u4ea4\u4e00\u4e2a10M\u7684\u6587\u4ef6\u5c31\u9700\u89815\u5206\u949f\uff0c\u8fd9\u8fd8\u4e0d\u5f97\u628a\u4eba\u7ed9\u618b\u6b7b\u554a\u3002 \u90a3\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e0e\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6709\u4f55\u4e0d\u540c\u5462\uff1f\u9996\u5148\uff0c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6839\u672c\u6ca1\u6709\u201c\u4e2d\u592e\u670d\u52a1\u5668\u201d\uff0c\u6bcf\u4e2a\u4eba\u7684\u7535\u8111\u4e0a\u90fd\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u8fd9\u6837\uff0c\u4f60\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u9700\u8981\u8054\u7f51\u4e86\uff0c\u56e0\u4e3a\u7248\u672c\u5e93\u5c31\u5728\u4f60\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u3002\u65e2\u7136\u6bcf\u4e2a\u4eba\u7535\u8111\u4e0a\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u90a3\u591a\u4e2a\u4eba\u5982\u4f55\u534f\u4f5c\u5462\uff1f\u6bd4\u65b9\u8bf4\u4f60\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u6539\u4e86\u6587\u4ef6A\uff0c\u4f60\u7684\u540c\u4e8b\u4e5f\u5728\u4ed6\u7684\u7535\u8111\u4e0a\u6539\u4e86\u6587\u4ef6A\uff0c\u8fd9\u65f6\uff0c\u4f60\u4eec\u4fe9\u4e4b\u95f4\u53ea\u9700\u628a\u5404\u81ea\u7684\u4fee\u6539\u63a8\u9001\u7ed9\u5bf9\u65b9\uff0c\u5c31\u53ef\u4ee5\u4e92\u76f8\u770b\u5230\u5bf9\u65b9\u7684\u4fee\u6539\u4e86\u3002 \u548c\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u76f8\u6bd4\uff0c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u8981\u9ad8\u5f88\u591a\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u7535\u8111\u91cc\u90fd\u6709\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u67d0\u4e00\u4e2a\u4eba\u7684\u7535\u8111\u574f\u6389\u4e86\u4e0d\u8981\u7d27\uff0c\u968f\u4fbf\u4ece\u5176\u4ed6\u4eba\u90a3\u91cc\u590d\u5236\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u7684\u4e2d\u592e\u670d\u52a1\u5668\u8981\u662f\u51fa\u4e86\u95ee\u9898\uff0c\u6240\u6709\u4eba\u90fd\u6ca1\u6cd5\u5e72\u6d3b\u4e86\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5f88\u5c11\u5728\u4e24\u4eba\u4e4b\u95f4\u7684\u7535\u8111\u4e0a\u63a8\u9001\u7248\u672c\u5e93\u7684\u4fee\u6539\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f60\u4eec\u4fe9\u4e0d\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\uff0c\u4e24\u53f0\u7535\u8111\u4e92\u76f8\u8bbf\u95ee\u4e0d\u4e86\uff0c\u4e5f\u53ef\u80fd\u4eca\u5929\u4f60\u7684\u540c\u4e8b\u75c5\u4e86\uff0c\u4ed6\u7684\u7535\u8111\u538b\u6839\u6ca1\u6709\u5f00\u673a\u3002\u56e0\u6b64\uff0c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u901a\u5e38\u4e5f\u6709\u4e00\u53f0\u5145\u5f53\u201c\u4e2d\u592e\u670d\u52a1\u5668\u201d\u7684\u7535\u8111\uff0c\u4f46\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u4f5c\u7528\u4ec5\u4ec5\u662f\u7528\u6765\u65b9\u4fbf\u201c\u4ea4\u6362\u201d\u5927\u5bb6\u7684\u4fee\u6539\uff0c\u6ca1\u6709\u5b83\u5927\u5bb6\u4e5f\u4e00\u6837\u5e72\u6d3b\uff0c\u53ea\u662f\u4ea4\u6362\u4fee\u6539\u4e0d\u65b9\u4fbf\u800c\u5df2\u3002 \u5f53\u7136\uff0cGit\u7684\u4f18\u52bf\u4e0d\u5355\u662f\u4e0d\u5fc5\u8054\u7f51\u8fd9\u4e48\u7b80\u5355\uff0c\u540e\u9762\u6211\u4eec\u8fd8\u4f1a\u770b\u5230Git\u6781\u5176\u5f3a\u5927\u7684\u5206\u652f\u7ba1\u7406\uff0c\u628aSVN\u7b49\u8fdc\u8fdc\u629b\u5728\u4e86\u540e\u9762\u3002 CVS\u4f5c\u4e3a\u6700\u65e9\u7684\u5f00\u6e90\u800c\u4e14\u514d\u8d39\u7684\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u76f4\u5230\u73b0\u5728\u8fd8\u6709\u4e0d\u5c11\u4eba\u5728\u7528\u3002\u7531\u4e8eCVS\u81ea\u8eab\u8bbe\u8ba1\u7684\u95ee\u9898\uff0c\u4f1a\u9020\u6210\u63d0\u4ea4\u6587\u4ef6\u4e0d\u5b8c\u6574\uff0c\u7248\u672c\u5e93\u83ab\u540d\u5176\u5999\u635f\u574f\u7684\u60c5\u51b5\u3002\u540c\u6837\u662f\u5f00\u6e90\u800c\u4e14\u514d\u8d39\u7684SVN\u4fee\u6b63\u4e86CVS\u7684\u4e00\u4e9b\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u662f\u76ee\u524d\u7528\u5f97\u6700\u591a\u7684\u96c6\u4e2d\u5f0f\u7248\u672c\u5e93\u63a7\u5236\u7cfb\u7edf\u3002 \u9664\u4e86\u514d\u8d39\u7684\u5916\uff0c\u8fd8\u6709\u6536\u8d39\u7684\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u6bd4\u5982IBM\u7684ClearCase\uff08\u4ee5\u524d\u662fRational\u516c\u53f8\u7684\uff0c\u88abIBM\u6536\u8d2d\u4e86\uff09\uff0c\u7279\u70b9\u662f\u5b89\u88c5\u6bd4Windows\u8fd8\u5927\uff0c\u8fd0\u884c\u6bd4\u8717\u725b\u8fd8\u6162\uff0c\u80fd\u7528ClearCase\u7684\u4e00\u822c\u662f\u4e16\u754c500\u5f3a\uff0c\u4ed6\u4eec\u6709\u4e2a\u5171\u540c\u7684\u7279\u70b9\u662f\u8d22\u5927\u6c14\u7c97\uff0c\u6216\u8005\u4eba\u50bb\u94b1\u591a\u3002 \u5fae\u8f6f\u81ea\u5df1\u4e5f\u6709\u4e00\u4e2a\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u53ebVSS\uff0c\u96c6\u6210\u5728Visual Studio\u4e2d\u3002\u7531\u4e8e\u5176\u53cd\u4eba\u7c7b\u7684\u8bbe\u8ba1\uff0c\u8fde\u5fae\u8f6f\u81ea\u5df1\u90fd\u4e0d\u597d\u610f\u601d\u7528\u4e86\u3002 \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u9664\u4e86Git\u4ee5\u53ca\u4fc3\u4f7fGit\u8bde\u751f\u7684BitKeeper\u5916\uff0c\u8fd8\u6709\u7c7b\u4f3cGit\u7684Mercurial\u548cBazaar\u7b49\u3002\u8fd9\u4e9b\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5404\u6709\u7279\u70b9\uff0c\u4f46\u6700\u5feb\u3001\u6700\u7b80\u5355\u4e5f\u6700\u6d41\u884c\u7684\u4f9d\u7136\u662fGit\uff01 Git \u5b89\u88c5 Git \u5b98\u7f51 Git\u6587\u6863 Download for Linux and Unix Link Windown Link Mac Link Git\u57fa\u7840\u6559\u7a0b Link \u652f\u6301WEb\u7248\u672c Link \b\b\u5b89\u88c5 Link \b\u53c2\u8003\u6587\u6863 Link \u914d\u7f6e\u6587\u4ef6github \b Link \u7248\u672c\u56de\u9000 \bGit \u4ee3\u7801\u5bf9\u6bcf\u4e00\u6b21\b\u63d0\u4ea4\u90fd\u4f5c\u4e3a\u4e00\u6b21\b\bcomment id\uff0c\u56de\u9000\u4e5f\u662f\u5728\u73b0\u6709\u7684\u5806\u6808\u53ea\u662f\u505a\u4e86\u4e00\u6b21\u57fa\u672c\uff0c\b\u5e76\u4e0d\u4f1a\u628a\u6700\u540e\u7684\u5185\u5bb9\u56de\u6eda\u6389 1.\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u7248\u672c \u67e5\u770b\u5f53\u524d\u7684\u63d0\u4ea4\u8bb0\u5f55 \u6700\u4e0a\u9762\u7684\b\b\u8bb0\u5f55\u662f\u6700\u65b0\u63d0\u4ea4\u7684 git@cuco:~/testing$ git log commit 8ae3a92ed8db9ede3f5c0799419c5abc1e222d49 ( HEAD - master, origin/master ) Author: Aige shenzhencuco@gmail.com Date: Tue Feb 19 15 :13:24 2019 +0800 \u6dfb\u52a0\u6d4b\u8bd5log commit 35ea583ac4ee6834f2de39cefd550c1e8782fb8f Author: Aige shenzhencuco@gmail.com Date: Tue Feb 19 15 :12:11 2019 +0800 test 2.\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u7248\u672c commit 35ea583ac4ee6834f2de39cefd550c1e8782fb8f git@cuco:~/testing$ git reset --hard 35ea583ac4ee6834f2de39cefd550c1e8782fb8f HEAD is now at 35ea583 test \u56de\u9000\u540e\u53ef\u4ee5\u770b\u5230\u7684\u63d0\u4ea4\u8bb0\u5f55: git@cuco:~/testing$ git log commit 35ea583ac4ee6834f2de39cefd550c1e8782fb8f ( HEAD - master ) Author: Aige shenzhencuco@gmail.com Date: Tue Feb 19 15 :12:11 2019 +0800 test 3.\u6b64\u65f6\b\u53c8\u60f3\b\b\u56de\u9000\u5230\b\u56de\u9000\u64cd\u4f5c\u7684\u6700\u540e\u4e00\u6b21\u63d0\u4ea4 \u67e5\u770b\u5168\u90e8\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u627e\u5230\u6700\u540e\b\b\u63d0\u4ea4\u7684comment id git@cuco:~/testing$ git reflog 35ea583 ( HEAD - master ) HEAD@ { 0 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 8ae3a92 ( origin/master ) HEAD@ { 1 } : pull: Fast-forward 35ea583 ( HEAD - master ) HEAD@ { 2 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 8ae3a92 ( origin/master ) HEAD@ { 3 } : reset: moving to 8ae3a92 35ea583 ( HEAD - master ) HEAD@ { 4 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 35ea583 ( HEAD - master ) HEAD@ { 5 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 8ae3a92 ( origin/master ) HEAD@ { 6 } : reset: moving to 8ae3a92ed8db9ede3f5c0799419c5abc1e222d49 8ae3a92 ( origin/master ) HEAD@ { 7 } : commit: \u6dfb\u52a0\u6d4b\u8bd5log 35ea583 ( HEAD - master ) HEAD@ { 8 } : commit ( initial ) : test 4.\u56de\u9000\u5230\u60f3\u8981\u7684\u7248\u672c git@cuco:~/testing$ git reset --hard 35ea583ac4ee6834f2de39cefd550c1e8782fb8f HEAD is now at 35ea583 test Git\u7684\b\u533a\u57df \b\u5de5\u4f5c\u533a--- \u6682\u5b58\u533a--- \b\u672c\u5730\u4ee3\u7801\u4ed3\u5e93--- \u8fdc\u7a0b\u4ee3\u7801\u5de5\u5177 \u573a\u666f1\uff1a\u5f53\u4f60\u6539\u4e71\u4e86\u5de5\u4f5c\u533a\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u60f3\u76f4\u63a5\u4e22\u5f03\u5de5\u4f5c\u533a\u7684\u4fee\u6539\u65f6\uff0c\u7528\u547d\u4ee4git checkout -- file\u3002 \u573a\u666f2\uff1a\u5f53\u4f60\u4e0d\u4f46\u6539\u4e71\u4e86\u5de5\u4f5c\u533a\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u8fd8\u6dfb\u52a0\u5230\u4e86\u6682\u5b58\u533a\u65f6\uff0c\u60f3\u4e22\u5f03\u4fee\u6539\uff0c\u5206\u4e24\u6b65\uff0c\u7b2c\u4e00\u6b65\u7528\u547d\u4ee4git reset HEAD \uff0c\u5c31\u56de\u5230\u4e86\u573a\u666f1\uff0c\u7b2c\u4e8c\u6b65\u6309\u573a\u666f1\u64cd\u4f5c\u3002 \u573a\u666f3\uff1a\u5df2\u7ecf\u63d0\u4ea4\u4e86\u4e0d\u5408\u9002\u7684\u4fee\u6539\u5230\u7248\u672c\u5e93\u65f6\uff0c\u60f3\u8981\u64a4\u9500\u672c\u6b21\u63d0\u4ea4\uff0c\u53c2\u8003\u7248\u672c\u56de\u9000\u4e00\u8282\uff0c\u4e0d\u8fc7\u524d\u63d0\u662f\u6ca1\u6709\u63a8\u9001\u5230\u8fdc\u7a0b\u5e93\u3002 \u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\b\u5173\u8054 \u8981\u5173\u8054\u4e00\u4e2a\u8fdc\u7a0b\u5e93\uff0c\u4f7f\u7528\u547d\u4ee4git remote add origin git@server-name:path/repo-name.git\uff1b \u5173\u8054\u540e\uff0c\u4f7f\u7528\u547d\u4ee4git push -u origin master\u7b2c\u4e00\u6b21\u63a8\u9001master\u5206\u652f\u7684\u6240\u6709\u5185\u5bb9\uff1b \u6b64\u540e\uff0c\u6bcf\u6b21\u672c\u5730\u63d0\u4ea4\u540e\uff0c\u53ea\u8981\u6709\u5fc5\u8981\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4git push origin master\u63a8\u9001\u6700\u65b0\u4fee\u6539\uff1b \u5408\u5e76\u5206\u652f Git\u9f13\u52b1\u5927\u91cf\u4f7f\u7528\u5206\u652f\uff1a \u67e5\u770b\u5206\u652f\uff1agit branch \u521b\u5efa\u5206\u652f\uff1agit branch lt;name gt; \u5207\u6362\u5206\u652f\uff1agit checkout lt;name gt; \u521b\u5efa+\u5207\u6362\u5206\u652f\uff1agit checkout -b lt;name gt; \u5408\u5e76\u67d0\u5206\u652f\u5230\u5f53\u524d\u5206\u652f\uff1agit merge lt;name gt; \u5220\u9664\u5206\u652f\uff1agit branch -d lt;name gt; \u6682\u5b58\u4ee3\u7801 \u5de5\u4f5c\u73b0\u573a\u8fd8\u5728\uff0cGit\u628astash\u5185\u5bb9\u5b58\u5728\u67d0\u4e2a\u5730\u65b9\u4e86\uff0c\u4f46\u662f\u9700\u8981\u6062\u590d\u4e00\u4e0b\uff0c\u6709\u4e24\u4e2a\u529e\u6cd5\uff1a \u4e00\u662f\u7528git stash apply\u6062\u590d\uff0c\u4f46\u662f\u6062\u590d\u540e\uff0cstash\u5185\u5bb9\u5e76\u4e0d\u5220\u9664\uff0c\u4f60\u9700\u8981\u7528git stash drop\u6765\u5220\u9664\uff1b \u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u7528git stash pop\uff0c\u6062\u590d\u7684\u540c\u65f6\u628astash\u5185\u5bb9\u4e5f\u5220\u4e86\uff1a \u518d\u7528git stash list\u67e5\u770b\uff0c\u5c31\u770b\u4e0d\u5230\u4efb\u4f55stash\u5185\u5bb9\u4e86\uff1a \u4fee\u590dbug\u65f6\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u521b\u5efa\u65b0\u7684bug\u5206\u652f\u8fdb\u884c\u4fee\u590d\uff0c\u7136\u540e\u5408\u5e76\uff0c\u6700\u540e\u5220\u9664\uff1b \u5f53\u624b\u5934\u5de5\u4f5c\u6ca1\u6709\u5b8c\u6210\u65f6\uff0c\u5148\u628a\u5de5\u4f5c\u73b0\u573agit stash\u4e00\u4e0b\uff0c\u7136\u540e\u53bb\u4fee\u590dbug\uff0c\u4fee\u590d\u540e\uff0c\u518dgit stash pop\uff0c\u56de\u5230\u5de5\u4f5c\u73b0\u573a\u3002 \b\u8fdc\u7a0b\u5206\u652f\u64cd\u4f5c \u67e5\u770b\u8fdc\u7a0b\u5e93\u4fe1\u606f\uff0c\u4f7f\u7528git remote -v\uff1b \u672c\u5730\u65b0\u5efa\u7684\u5206\u652f\u5982\u679c\u4e0d\u63a8\u9001\u5230\u8fdc\u7a0b\uff0c\u5bf9\u5176\u4ed6\u4eba\u5c31\u662f\u4e0d\u53ef\u89c1\u7684\uff1b \u4ece\u672c\u5730\u63a8\u9001\u5206\u652f\uff0c\u4f7f\u7528git push origin branch-name\uff0c\u5982\u679c\u63a8\u9001\u5931\u8d25\uff0c\u5148\u7528git pull\u6293\u53d6\u8fdc\u7a0b\u7684\u65b0\u63d0\u4ea4\uff1b \u5728\u672c\u5730\u521b\u5efa\u548c\u8fdc\u7a0b\u5206\u652f\u5bf9\u5e94\u7684\u5206\u652f\uff0c\u4f7f\u7528git checkout -b branch-name origin/branch-name\uff0c\u672c\u5730\u548c\u8fdc\u7a0b\u5206\u652f\u7684\u540d\u79f0\u6700\u597d\u4e00\u81f4\uff1b \u5efa\u7acb\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u7684\u5173\u8054\uff0c\u4f7f\u7528git branch --set-upstream branch-name origin/branch-name\uff1b \u4ece\u8fdc\u7a0b\u6293\u53d6\u5206\u652f\uff0c\u4f7f\u7528git pull\uff0c\u5982\u679c\u6709\u51b2\u7a81\uff0c\u8981\u5148\u5904\u7406\u51b2\u7a81\u3002 \u6253tag\u6807\u8bb0 \u547d\u4ee4git tag \u7528\u4e8e\u65b0\u5efa\u4e00\u4e2a\u6807\u7b7e\uff0c\u9ed8\u8ba4\u4e3aHEAD\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2acommit id\uff1b \u547d\u4ee4git tag -a -m \"blablabla...\"\u53ef\u4ee5\u6307\u5b9a\u6807\u7b7e\u4fe1\u606f\uff1b \u547d\u4ee4git tag\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u6807\u7b7e\u3002 \u547d\u4ee4git push origin \u53ef\u4ee5\u63a8\u9001\u4e00\u4e2a\u672c\u5730\u6807\u7b7e\uff1b \u547d\u4ee4git push origin --tags\u53ef\u4ee5\u63a8\u9001\u5168\u90e8\u672a\u63a8\u9001\u8fc7\u7684\u672c\u5730\u6807\u7b7e\uff1b \u547d\u4ee4git tag -d \u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u672c\u5730\u6807\u7b7e\uff1b \u547d\u4ee4git push origin :refs/tags/ \u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u8fdc\u7a0b\u6807\u7b7e\u3002 \u670d\u52a1\u5668\u4e0a\u7684 Git - \u751f\u6210 SSH \u516c\u94a5( https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5 ) Gitosis: \u914d\u7f6e https://github.com/sitaramc/gitolite \u7cfb\u7edf\u9700\u6c42 any unix system sh git 1.6.6 or later perl 5.8.8 or later openssh 5.0 or later a dedicated userid to host the repos (in this document, we assume it is \"git\", but it can be anything; substitute accordingly) this user id does NOT currently have any ssh pubkey-based access ideally, this user id has shell access ONLY by \"su - git\" from some other userid on the same server (this ensure minimal confusion for ssh newbies!) \u5b89\u88c5 \b\u53c2\u8003\u6587\u6863 Link # \u5207\u6362\u4e3a git \u7528\u6237 # su git [ git@server ~ ] $ cd ~ [ git@server ~ ] $ git clone git://github.com/sitaramc/gitolite \u4e0b\u8f7d\u6e90\u7801\u4e4b\u540e\u5b89\u88c5: # \u521b\u5efa ~/bin \u76ee\u5f55 [ git@server ~ ] $ mkdir bin # \u628a /home/git/bin \u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u91cc, \u901a\u8fc7\u4fee\u6539git \u5bb6\u4e0b\u9762\u7684.bashrc [ git@server ~ ] $ vim .bashrc # \u5728\u6587\u4ef6\u6700\u540e\u6dfb\u52a0 export PATH = /home/git/bin: $PATH # Install gitolite into $HOME/git/bin [ git@server ~ ] $ gitolite/install -ln [ git@server ~ ] $ \u4e0a\u4f20\u5ba2\u6237\u7aef\u7ba1\u7406\u5458\u7684SSH \u516c\u94a5 {#ssh_key} \u5ba2\u6237\u7aef\u5982\u679c\u751f\u6210ssh key, \u53c2\u8003: Github - Generating SSH Keys [ ahnniu@client ~ ] cd ~/.ssh [ ahnniu@client .ssh ] ls -al # \u5982\u679c\u4e0d\u5b58\u5728 id_rsa, id_rsa.pub \u5219\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u521b\u5efa [ ahnniu@client .ssh ] ssh-keygen -t rsa -C your_email@example.com # \u590d\u5236\u4e00\u4efdid_rsa.pub\u5e76\u91cd\u547d\u540d\u4e3a ahnniu.pub, \u6ce8 ahnniu\u4e3a gitolite\u7ba1\u7406\u5458\u7684\u7528\u6237\u540d [ ahnniu@client .ssh ] cp id_rsa.pub ahnniu.pub # \u901a\u8fc7ssh\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a(/home/git/)\uff0c\u7279\u522b\u6ce8\u610f\u6587\u4ef6\u7684owern\u5e94\u8be5\u4e3agit [ ahnniu@client .ssh ] scp ~/.ssh/ahnniu.pub git@192.168.2.223:/home/git/ \u8bbe\u7f6eGitolite [ git@server ~ ] $ cd ~ # \u57fa\u4e8e\u63d0\u4f9b\u7684ahnniu.pub \u521b\u5efa gitolite-admin \u7ba1\u7406\u4ed3\u5e93 [ git@server ~ ] $ gitolite setup -pk $HOME /ahnniu.pub Initialized empty Git repository in /home/git/repositories/gitolite-admin.git/ Initialized empty Git repository in /home/git/repositories/testing.git/ WARNING: /home/git/.ssh missing ; creating a new one ( this is normal on a brand new install ) WARNING: /home/git/.ssh/authorized_keys missing ; creating a new one ( this is normal on a brand new install ) \u81f3\u6b64\uff0cSSH\u65b9\u5f0f\u7684Git\u670d\u52a1\u5df2\u7ecf\u642d\u5efa\u597d\u4e86 \u5ba2\u6237\u7aefSSH\u65b9\u5f0fclone, push # \u9996\u5148\u9700\u786e\u4fdd\uff0c\u4e0a\u4f20\u7684\u7ba1\u7406\u5458key ahnniu.pub\u662f\u5728\u8fd9\u53f0\u7535\u8111\u4e0a\u751f\u6210\u7684\uff0c\u5426\u5219\u662f\u6ca1\u6709\u6743\u9650\u7684 [ ahnniu@client ~ ] git clone git@192.168.2.223:gitolite-admin.git Cloning into gitolite-admin ... remote: Counting objects: 6 , done . remote: Compressing objects: 100 % ( 4 /4 ) , done . remote: Total 6 ( delta 0 ) , reused 0 ( delta 0 ) Receiving objects: 100 % ( 6 /6 ) , done . Checking connectivity... done . \u56e2\u961f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5efa\u8bae\u7684Gitolite\u4f7f\u7528\u65b9\u5f0f Gitolite\u7684\u7ba1\u7406\u65b9\u5f0f \u6211\u8ba4\u4e3aGitolite\u662f\u5178\u578b\u7684\u5403\u81ea\u5df1\u7684\u72d7\u7cae\uff0c\u4ed6\u7684\u7ba1\u7406\u5b8c\u5168\u662f\u64cd\u4f5cGit\u6765\u5b8c\u6210\uff0c \u4ed6\u53ef\u4ee5\u5141\u8bb8\u591a\u4e2a\u7ba1\u7406\u5458\u540c\u65f6\u7ba1\u7406\uff0c\u56e0\u4e3a\u662f\u57fa\u4e8e\u4e00\u4e2agit\u4ed3\u5e93\uff0c\u90a3\u4e48\u901a\u8fc7merge\u53ef\u4ee5\u89e3\u51b3\u51b2\u7a81\u7684\u95ee\u9898 Gitolite\u6709\u4e00\u4e2agitolite-admin.git\u7684\u4ed3\u5e93, \u901a\u8fc7\u64cd\u4f5c\uff1a /keydir/ \u6765\u7ba1\u7406SSH\u7528\u6237 /conf/gitolite.conf \u6765\u7ba1\u7406repo\uff08\u589e\u5220\uff0c\u6743\u9650\uff09 \u4e0b\u9762\u6211\u4eec\u63a2\u8ba8\u5982\u679c\u901a\u8fc7gitolite\u6253\u9020Github\u90a3\u6837\u7684Git Server. Git\u4ed3\u5e93\u7684\u51e0\u79cd\u6743\u9650 Public / Private Public: \u4ed3\u5e93\u53ef\u4ee5\u7ed9\u4efb\u4f55\u4ebaClone,pull Private: \u4ed3\u5e93\u53ea\u80fd\u7ed9\u6307\u5b9a\u7684\u4ebaClone,pull \u51e0\u79cd\u6743\u9650\u7ec4 \u6743\u9650\u7ec4: Owner \u4ed3\u5e93\u7684\u62e5\u6709\u8005\uff0c\u53ef\u4ee5\u5bf9\u4ed3\u5e93\u505a\u4efb\u4f55\u60f3\u505a\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982push, \u4fee\u6539\u5176\u5b83\u4eba\u8bbf\u95ee\u8fd9\u4e2a\u4ed3\u5e93\u7684\u6743\u9650\uff0c\u751a\u81f3\u5220\u9664\uff0c\u81f3\u5c11\u9700\u8981\u6709\u4e00\u4e2a\u4eba \u6743\u9650\u7ec4: RW \u53ef\u8bfb\u5199\u7ec4, clone, push, pull \u6743\u9650\u7ec4: R \u53ef\u8bfb\u7ec4, clone, pull \u5176\u4e2d Owner\u5305\u542b RW, RW\u6743\u9650 \u5305\u542b R \u51c6\u5907\u5de5\u4f5c \u514b\u9686gitolite\u7ba1\u7406\u4ed3\u5e93 NOTE: \u9700\u4f7f\u7528\u5b89\u88c5Gitolite\u6307\u5b9a\u7684SSH Key\u5bf9\u5e94\u7684\u7535\u8111\uff08\u6216\u8005Copy \u5bf9\u5e94\u7684 id_rsa\u5230\u4f60\u4f7f\u7528\u7684\u7535\u8111~/.ssh\uff09, HTTP\u65b9\u5f0f\u597d\u50cf\u4e0d\u80fd\u64cd\u4f5cgitolite-admin.git\u4ed3\u5e93\u3002 \u5e38\u7528Git\u5f00\u53d1\u5de5\u5177 processon \u914d\u7f6e Git\u5bc6\u94a5\u516c\u94a5 \u751f\u6210\u5bc6\u94a5 ssh-keygen -t rsa -C \" \" ssh -i ~/.ssh/id_rsa \u67e5\u770b key cat ~/.ssh/id_rsa.pub \u6d4b\u8bd5\u5bc6\u94a5 ssh -T ssh -v Git config \u914d\u7f6e \u67e5\u770b git config --list cat .git/config \u7528\u6237\u76ee\u5f55 .gitconfig \u914d\u7f6e \u914d\u7f6e\u6838\u5fc3\u7f16\u8f91\u5668 git config --global core.editor vim \u5ffd\u7565\u6587\u4ef6\u6743\u9650 git config core.filemode false git config --global core.filemode false \u914d\u7f6e\u7528\u6237 \u5355\u4e2a\u9879\u76ee git config user.name \"liuwenrong\" git config user.email \" \" \u5168\u5c40\u7528\u6237 git config --global user.name \"liuwenrong\" git config --global user.email \" \" \u8bb0\u4f4f\u5bc6\u7801 git config --global credential.helper store \u914d\u7f6e\u8fdc\u7a0b\u670d\u52a1\u5668\u5730\u5740 git remote add simpleName url git remote add origin githup.xxx.git \u914d\u8272 git config --global color.status auto git config --global color.diff auto git config --global color.branch auto git config --global color.interactive auto \u57fa\u7840\u64cd\u4f5c \u5e38\u7528\u547d\u4ee4 git status \u67e5\u770b\u72b6\u6001,\u5982\u679c\u5bf9git\u4e0d\u719f\u6089,\u5efa\u8bae\u7ecf\u5e38\u6572\u8fd9\u547d\u4ee4 git add . \u6dfb\u52a0\u5230\u4ed3\u5e93(\u9488\u5bf9\u65b0\u589e\u52a0\u7684\u6587\u4ef6) \u5f53add . \u51fa\u9519\u65f6,\u8bd5\u8bd5 git add --all git commit -s -a -m \"\u6ce8\u91ca\u5fc5\u586b\" \u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93 -s\u81ea\u52a8\u52a0\u4e0aSigned-off-by, -a \u5168\u90e8\u63d0\u4ea4,-m \u6ce8\u91caMsg git push [\u5206\u652f\u540d \u4e0d\u586b\u9ed8\u8ba4\u5f53\u524d\u5206\u652f] \u63d0\u4ea4\u5230\u8fdc\u7a0b\u670d\u52a1\u5668 git push origin dev git rebase git log \u67e5\u770b\u5f53\u524d\u5206\u652f\u7684\u63d0\u4ea4\u70b9\u4fe1\u606f git log origin/dev \u67e5\u770b\u672c\u5730.git\u4ed3\u5e93\u7684dev\u5206\u652flog \u4e0d\u8fc7\u8981\u770b\u6700\u65b0\u7684\u670d\u52a1\u5668\u63d0\u4ea4\u70b9 \u9700\u8981git fetch git log origin dev \u65e0\u6548 \u8fd8\u662f\u67e5\u770b\u672c\u5730\u5206\u652f git log FETCH_HEAD \u67e5\u770b\u8fdc\u7a0b\u5206\u652f\u7684\u63d0\u4ea4\u70b9log \u5176\u4ed6\u7b5b\u9009\u6761\u4ef6 --author= \u6839\u636e\u7528\u6237 --branchName [branchName] \u6839\u636e\u5206\u652f \u6bd4\u5982\uff1a\u5728\u5f53\u524d\u5206\u652f\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3av1\u7684\u6587\u4ef6\uff0c\u540c\u65f6\u8fd8\u5b58\u5728\u4e00\u4e2a\u540d\u4e3av1\u7684\u5206\u652f git log v1 -- \u6b64\u65f6\u7684v1\u4ee3\u8868\u7684\u662f\u5206\u652f\u540d\u5b57\uff08\uff0d\uff0d\u540e\u8fb9\u662f\u7a7a\u7684\uff09 git log -- v1 \u6b64\u65f6\u7684v1\u4ee3\u8868\u7684\u662f\u540d\u4e3av1\u7684\u6587\u4ef6 git log v1 \uff0d\uff0d v1 \u4ee3\u8868v1\u5206\u652f\u4e0b\u7684v1\u6587\u4ef6 git log --author=liuwenrong R6002_608 -- R6002_608\u5206\u652f\u4e0bliuwenrong\u7684\u6240\u6709\u63d0\u4ea4 git show \u67e5\u770b\u672c\u6b21\u63d0\u4ea4\u7684\u4fee\u6539 Tag \u63d0\u4ea4\u4ee3\u7801\u6d41\u7a0b git add . git commit -s -a -m '\u6ce8\u91ca' git commit -s -a \u4f1a\u8fdb\u5165\u7f16\u8f91\u5668 \u5f53\u51fa\u73b0 .git/index.lock\u65f6 \u591a\u5904\u7f16\u8f91\u6587\u4ef6,git\u9501\u4f4f\u4e86 \u53ef\u4ee5 rm .git/index.lock \u5220\u9664\u8be5\u6587\u4ef6\u540e,\u7ee7\u7eed\u6267\u884ccommit\u547d\u4ee4 git fetch origin dev \u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u5230\u672c\u5730\u4ed3\u5e93(\u7a7a\u683c) git rebase origin/dev \u672c\u5730\u4ed3\u5e93\u548c\u672c\u5730\u4ee3\u7801\u5408\u5e76(\u659c\u6760) git fetch \u8fdc\u7a0b\u4e3b\u673a\u540d \u5206\u652f\u540d git fetch \u8fdc\u7a0b\u4e3b\u673a\u540d \u5c06\u67d0\u4e2a\u8fdc\u7a0b\u4e3b\u673a\u7684\u66f4\u65b0\uff0c\u5168\u90e8\u53d6\u56de\u672c\u5730\u3002 git fetch\u53d6\u56de\u6240\u6709\u5206\u652f(branch)\u7684\u66f4\u65b0\u3002\u5982\u679c\u53ea\u60f3\u53d6\u56de\u7279\u5b9a\u5206\u652f\u7684\u66f4\u65b0\uff0c\u53ef\u4ee5\u6307\u5b9a\u5206\u652f\u540d\u3002 git rebase refs/remotes/origin/dev git rebase \u7b80\u5199 \u5982\u679c \u53d1\u751f\u51b2\u7a81 (\u4fee\u6539\u51b2\u7a81\u540e) git add . git rebase --continue push \u5230\u670d\u52a1\u5668 git push origin dev \u63d0\u4ea4\u5230\u670d\u52a1\u5668 \u5982\u679c\u662f\u7b2c\u4e00\u6b21push git push -u origin master \u7b2c\u4e00\u6b21push\u5230\u67d0\u4e2a\u65b0\u7684\u5206\u652f git push set-upstream [\u670d\u52a1\u5668\u7b80\u5199origin] [\u5206\u652f\u540d] \u4fee\u6539\u63d0\u4ea4\u4fe1\u606f \u4fee\u6539commit Msg\u4fe1\u606f git commit -s --amend [-v] \u63a5\u7740\u4fee\u6539\u5f53\u524d\u8fd9\u4e2a commit \u7684 messagen -v\u662f\u7f16\u8f91\u5668(\u53ef\u4e0d\u5199) git commit --amend --author=\"liuwenrong \" \u6ce8:\u53cc\u5f15\u53f7 TFS_555725:liuwenrong_sys_task: add network Signed-off-by: liuwenrong \u4fee\u6539\u5012\u6570\u7b2c\u4e8c\u4e2a\u63d0\u4ea4\u70b9Msg\u548c\u5185\u5bb9 git reset --soft commitId \u6216\u8005 git reset --soft HEAD^ \u56de\u9000\u63d0\u4ea4,\u4f46\u4ee3\u7801\u8fd8\u5728 git add . \u5c06\u5012\u6570\u7b2c\u4e00\u4e2a\u7684\u63d0\u4ea4\u5185\u5bb9\u4e5f\u52a0\u8fdb\u6765 git commit --amend git push origin HEAD --force \u5220\u9664\u6682\u5b58\u533a\u91cc\u7684\u6587\u4ef6 git rm --cache \u6587\u4ef6\u540d \u4f7f\u7528\u573a\u666f 1. \u628a\u5df2\u7ecfadd\u8ffd\u8e2a\u7684\u6587\u4ef6\u52a0\u5230.gitignore\u4e2d git rm -r --cache packages/SystemUI/.idea/ \u5220\u9664\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6587\u4ef6 git rm -f \u5982\u679c\u6587\u4ef6\u6ca1\u6709\u52a0\u5230\u6682\u5b58\u533a \u5148\u6267\u884c git add \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u5168\u90e8\u9700\u8981\u5220\u9664 git add . git rm -f -r \u6587\u4ef6\u5939 \u68c0\u51fa git checkout \u5207\u6362\u5206\u652f git checkout dev git checkout master git checkout ()\u63d0\u4ea4\u70b9\u54c8\u5e0c\u503c) \u5207\u6362\u5230\u8be5\u63d0\u4ea4\u70b9\u7684\u4ee3\u7801 \u68c0\u51fa\u6587\u4ef6/\u4ece\u672c\u5730\u4ed3\u5e93\u6062\u590d\u67d0\u6587\u4ef6 git checkout -- xx.java \u5982\u679c\u8be5\u6587\u4ef6\u5df2\u7ecf add \u5230\u6682\u5b58\u961f\u5217\u4e2d\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u5c31\u4e0d\u7075\u5149\u55bd \u9700\u8981\u5148\u8ba9\u8fd9\u4e2a\u6587\u4ef6\u53d6\u6d88\u6682\u5b58\uff1a git reset HEAD --+ \u9700\u8981\u53d6\u6d88\u6682\u5b58\u7684\u6587\u4ef6\u540d \u65b0\u5efa\u5e76\u5207\u6362\u5206\u652f git checkout -b xx git checkout -b dev \u65b0\u5efa\u5e76\u5207\u6362\u5230dev\u5206\u652f git checkout -b dev origin/dev \u65b0\u5efa\u672c\u5730\u5206\u652fdev\u5e76\u5173\u8054\u5230.git\u4ed3\u5e93\u7684dev\u5206\u652f git checkout -b dev origin/JV_8953_Dev Branch dev set up to track remote branch JV_8953_Dev from origin. Switched to a new branch \"dev\" git checkout dev(\u8fdc\u7a0b\u6709\u8fd9\u4e2a\u540c\u540d\u7684\u5206\u652f\u5c31\u4f1a\u5173\u8054) \u6ce8:\u6ca1\u6709 -b branch \u5206\u652f \u67e5\u770b\u5206\u652f git branch -a \u5168\u90e8\u5206\u652f git branch -r \u67e5\u770b\u8fdc\u7a0b\u5206\u652f git branch \u67e5\u770b\u672c\u5730\u5206\u652f git branch -v \u67e5\u770b\u5206\u652f\u6700\u540e\u4fee\u6539 git branch -vv \u67e5\u770b\u672c\u5730\u5206\u652f-\u5173\u8054\u670d\u52a1\u5668\u5206\u652f \u4ee5\u53ca\u6700\u540e\u7684\u63d0\u4ea4 \u5206\u652f\u64cd\u4f5c git branch xx \u521b\u5efaxx\u5206\u652f git branch -d xx \u5220\u9664xx\u5206\u652f(\u9700\u5728\u5176\u4ed6\u5206\u652f\u4e0b\u64cd\u4f5c) \u672a\u5408\u5e76\u4e0d\u80fd\u5220\u9664\u6210\u529f git branch -D xx \u5f3a\u5236\u5220\u9664xx\u5206\u652f(\u9700\u5728\u5176\u4ed6\u5206\u652f\u4e0b\u64cd\u4f5c) git branch 2f865e5 \u5728\u67d0\u4e2a\u63d0\u4ea4\u70b9\u5904\u65b0\u5efa\u4e00\u4e2a\u5206\u652f git branch --set-upstream-to=origin/JV_LauncherBS_Dev git rebase \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u670d\u52a1\u5668\u5206\u652f git branch --set-upstream dev_lwr coolyota/coolyota \u5173\u8054\u670d\u52a1\u5668 git branch --track dev coolyota/coolyota_dev \u6ca1\u7528 \u5206\u652f\u91cd\u547d\u540d git branch -m oldbranchname newbranchname Android Ignore \u9879\u76ee git clone Coolpad coolyota Y3 \u5e38\u89c1\u95ee\u9898 int\u6d41\u6709\u683c\u5f0f\u95ee\u9898,abort\u4e86\u672c\u6b21\u63d0\u4ea4 git reset --soft git commit -s -a \u5b50\u4e3b\u9898 \u5b50\u4e3b\u9898 repo\u540e\u5904\u4e8e\u6ca1\u6709\u5206\u652f\u72b6\u6001 git checkout JV_8953_Dev \u5207\u6362\u5230Dev\u5e76\u5173\u8054\u670d\u52a1\u5668Dev\u5206\u652f git checkout -b dev yulong/JV_8953_Dev \u5f53\u5173\u8054\u4e86\u51e0\u4e2a\u670d\u52a1\u5668\u5982 origin yulong zeusis \u670d\u52a1\u5668\u4ee3\u7801\u8986\u76d6\u672c\u5730\u63d0\u4ea4 git fetch --all git reset --hard yulong/JV_8953_Dev \u4e0d\u505a\u4efb\u4f55\u5408\u5e76,Rebase HEAD\u6307\u5411\u521a\u521a\u4e0b\u8f7d\u7684\u6700\u65b0\u7684\u7248\u672c Int\u5206\u652f\u8986\u76d6Dev\u5206\u652f git branch \u67e5\u770b\u672c\u5730\u5206\u652f\u540d \u5982:dev,int \u6216\u8005JV_8953_Dev,JV_8953_Int git checkout dev(\u6216\u8005JV_8953_Dev) git reset --hard int(\u6216\u8005JV_8953_Int) //\u5148\u5c06\u672c\u5730\u7684dev\u5206\u652f\u91cd\u7f6e\u6210int\u5206\u652f git push yulong JV_8953_Dev --force //\u518d\u63a8\u9001\u5230\u8fdc\u7a0bDev\u4ed3\u5e93 \u5b50\u4e3b\u9898 cherry-pick \u6709\u51b2\u7a81 dev\u5206\u652f\u6267\u884c\u4e86git pull \u6216\u8005fetch+merge\u547d\u4ee4\u5bfc\u81f4 merger\u4f1a\u5bfc\u81f4\u8be5commitId\u7684parentId\u4e0d\u662fint\u5206\u652f \u7684\u6700\u65b0\u63d0\u4ea4\u70b9 \u89e3\u51b3: dev \u56de\u9000\u4ee3\u7801\u540e \u7528rebase\u5408\u5e76 git reset --hard (commitId\u5408\u5e76\u4e4b\u524d\u7684\u63d0\u4ea4\u70b9) git fetch git rebase (commitId int\u5206\u652f\u6700\u65b0\u7684\u70b9\u5bf9\u5e94\u7684dev\u4e2d\u63d0\u4ea4\u70b9) \u5982\u679c\u6709\u51b2\u7a81,\u89e3\u51b3\u540e git add. git rebase --continue git checkout int git cherry-pick (commitID \u521a\u624ddev\u5206\u652frebase\u540e\u7684\u63d0\u4ea4\u70b9) \u5b50\u4e3b\u9898 \u5408\u5e76\u63d0\u4ea4\u70b9 JV_8953_Dev\u5206\u652f\u4e0a \u4e00\u4e2a\u529f\u80fd\u70b9\u65b0\u5efa\u672c\u5730\u5206\u652fgit checkout -b [local_function] \u5982: git checkout -b power \u5f53\u524d\u5904\u4e8e\u529f\u80fd\u5206\u652f\u4e0a\u5982:power\u5206\u652f \u6539\u5b8c\u4ee3\u7801,\u751f\u6210\u4e86\u591a\u4e2a\u63d0\u4ea4\u70b9,\u5408\u5e76\u6210\u4e00\u4e2a\u63d0\u4ea4\u70b9 git log commit 333 commit 222 commit 111 git reset --soft 111 \u91cd\u7f6e\u4e86222\u548c333\u7684\u63d0\u4ea4,\u4f46\u672c\u5730\u4ee3\u7801\u8fd8\u5728 git status \u67e5\u770b\u72b6\u6001/\u53ef\u4ee5\u4e0d\u6267\u884c git commit -s --amend \u4fee\u6539111\u63d0\u4ea4\u70b9\u7684msg TFS_565687:liuwenrong_sys_add:Modify A Screen theme and wallpaper sys app_BLauncher add fix opt \u4e0d\u7ba1\u6ce8\u91ca\u662f\u5426\u4fee\u6539,commitId\u90fd\u4f1a\u53d8 git status \u67e5\u770b\u72b6\u6001/\u53ef\u4ee5\u4e0d\u6267\u884c git branch -a \u67e5\u770b\u6240\u6709\u5206\u652f git checkout JV_8953_Dev \u540e\u5904\u4e8eDev\u5206\u652f\u4e0a: \u7136\u540e\u5c06\u529f\u80fd\u5206\u652f\u5408\u5e76\u8fc7\u6765 git rebase [local_fuction] git rebase [commit-id] \u4e5f\u53ef\u4ee5\u662f\u5408\u5e76\u67d0\u4e00\u4e2a\u63d0\u4ea4\u70b9 git pull --rebase \u62c9\u53d6\u670d\u52a1\u5668\u4ee3\u7801\u8ddf\u672c\u5730\u4ee3\u7801\u5408\u5e76 \u6709\u51b2\u7a81,\u89e3\u51b3\u5373\u53ef \u540c\u4e00\u4e2a\u63d0\u4ea4commitId\u4f1a\u53d8 git push yulong HEAD:JV_8953_Dev \u5f53\u540c\u65f6\u6709yulong\u548czeusis\u7684\u8fdc\u7a0b\u670d\u52a1\u5668,\u5fc5\u987b\u6307\u5b9a \u8981\u8d70\u8bfb git push coolyota HEAD:refs/for/coolyota_msm8953_dev Dev\u4e0a\u9a8c\u8bc1\u901a\u8fc7\u540e Dev\u5206\u652f\u4e0a git log \u67e5\u770b\u63d0\u4ea4\u70b9ID,\u4ee5\u4fbf\u63a5\u4e0b\u6765cherry-pick git branch -a \u67e5\u770b\u6240\u6709\u5206\u652f/\u5982\u679c\u81ea\u5df1\u8bb0\u4f4f\u4e86\u540d\u53ef\u4ee5\u4e0d\u67e5\u770b git checkout JV_8953_Int Release\u5206\u652f \u8d70\u8bfb git push coolyota HEAD:refs/for/CP_LauncherB_Release Int\u5206\u652f\u4e0a git cherry-pick [commit-1] [commit-2] \u5c06\u8981\u63d0\u4ea4\u7684\u70b9\u5408\u5e76\u5230Int\u6d41 git push HEAD:JV_8953_Int git push \u53ef\u4ee5\u7b80\u5199,\u8868\u793a\u5f53\u524d\u5206\u652f \u8d70\u8bfb git push yulong HEAD:refs/for/JV_8953_Int git push --no-thin yulong HEAD:refs/for/JV_8953_Int git push coolyota HEAD:refs/for/coolyota_msm8953_int \u5b50\u4e3b\u9898 \u56de\u9000\u5230\u6700\u8fd1\u4e00\u6b21\u7684\u63d0\u4ea4 git reset --hard HEAD git pull \u81ea\u7531\u4e3b\u9898 \u66f4\u65b0\u4ee3\u7801/\u5408\u5e76 git rebase \u7b80\u4ecb \u5728\u628a\u4ece\u5176\u4ed6\u5f00\u53d1\u8005\u5904\u62c9\u53d6\u7684\u63d0\u4ea4 \u5e94\u7528\u5230\u672c\u5730 \u5c06\u5f53\u524d\u5206\u652f\u548c\u4e0a\u6e38\u5206\u652f\u8fdb\u884c\u5408\u5e76 \u4f8b: dev\u6709\u4e00\u4e2acommitId \u65b0\u5efa\u4e00\u4e2a\u5206\u652fpower \u6b64\u65f6,Dev\u4e0a\u6709\u65b0\u7684\u63d0\u4ea4\u70b9CommitId git rebase dev \u5c06Dev\u7684\u63d0\u4ea4\u5408\u5e76\u8fc7\u6765 \u6b64\u6b21\u64cd\u4f5c\u53ef\u80fd\u63d0\u793aerror,\u8865\u4e01\u5931\u8d25,\u4f46\u4e0d\u5f71\u54cd\u6b63\u5e38rebase \u683c\u5f0f git rebase [-i | --interactive] [options] [--onto ] [] git rebase [-i | --interactive] [options] \u2013onto \u2013root [] git rebase \u2013continue | \u2013skip | \u2013abort fetch+rebase fetch+merge \u56de\u9000/\u64a4\u9500 git reset \u5b50\u4e3b\u9898 \u653e\u5f03\u672c\u5730\u4ee3\u7801 git reset --hard FETCH_HEAD \u5982\u679c\u60f3\u653e\u5f03\u672c\u5730\u7684\u6587\u4ef6\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528git reset --hard FETCH_HEAD\uff0cFETCH_HEAD\u8868\u793a\u4e0a\u4e00\u6b21\u6210\u529fgit pull\u4e4b\u540e\u5f62\u6210\u7684commit\u70b9\u3002\u7136\u540egit pull. \u5b50\u4e3b\u9898 git reset --hard commit_id \u56de\u9000\u5230\u4e0a\u4e00\u63d0\u4ea4\u70b9,\u5de5\u4f5c\u533a\u4ee3\u7801\u4e5f\u4f1a\u56de\u9000 \u4ee3\u7801\u56de\u9000\u5230\u5f53\u524d\u63d0\u4ea4\u70b9,\u5de5\u4f5c\u533a\u4ee3\u7801\u4e5f\u4f1a\u56de\u9000 \u56de\u9000\u5f53\u524d\u63d0\u4ea4\u70b9\u7684add\u548ccommit\u4ee5\u53ca\u4ee3\u7801\u64cd\u4f5c git reset --soft commit_id \u56de\u9000\u5f53\u524d\u63d0\u4ea4\u70b9\u4e4b\u524d\u7684commit\u64cd\u4f5c,\u4f1a\u4fdd\u7559\u672c\u5730\u4ee3\u7801 git reset commit_id \u56de\u9000\u5f53\u524d\u63d0\u4ea4\u70b9\u4e4b\u524d\u7684add\u548ccommit\u7684\u64cd\u4f5c git reset --hard HEAD~3 \u4f1a\u5c06\u6700\u65b0\u76843\u6b21\u63d0\u4ea4\u5168\u90e8\u91cd\u7f6e\uff0c\u5c31\u50cf\u6ca1\u6709\u63d0\u4ea4\u8fc7\u4e00\u6837\u3002 git reset \u64a4\u9500\u4e0a\u4e00\u6b21add . \u6ce8: \u8981\u56de\u9000\u5df2\u7ecfpush\u5230\u670d\u52a1\u5668\u7684\u63d0\u4ea4\u70b9,\u53ea\u80fd\u4f7f\u7528git revert git revert \u56de\u9000\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u63d0\u4ea4\u70b9,\u9002\u7528\u4e8e\u4e0a\u4e00\u63d0\u4ea4\u70b9\u5df2\u7ecfpush\u5230\u670d\u52a1\u5668\u4e86, git revert HEAD \u64a4\u9500\u5f53\u524d\u7684\u63d0\u4ea4\u70b9,\u56de\u5230\u524d\u4e00\u4e2a\u63d0\u4ea4\u70b9\u7684\u4ee3\u7801,\u4f46\u4f1a\u751f\u6210\u65b0\u7684\u63d0\u4ea4\u70b9,\u8fd9\u5c31\u662f\u4e0ereset --hard\u7684\u533a\u522b,\u6ce8:\u4f46\u672c\u5730\u6709\u4fee\u6539\u4f1a\u5931\u8d25 git revert HEAD~1 -m 1 git revert HEAD~1 \u53ea\u64a4\u9500\u5012\u6570\u7b2c\u4e8c\u6b21 commit,\u4f1a\u4fdd\u7559\u5012\u6570\u7b2c\u4e00\u6b21\u7684\u63d0\u4ea4\u70b9 git revert HEAD~1 -m 0 git revert commit \uff08\u6bd4\u5982\uff1a fa042ce \uff09\u64a4\u9500\u6307\u5b9a\u7684\u7248\u672c \u6ce8: \u672c\u5730revert\u4e0d\u4f1a\u751f\u6210ChangerId git checkout -- pull \u4f1a\u5f71\u54cdgithub\u7aef\u7684network\u56fe \u4e0d\u5efa\u8bae\u4f7f\u7528pull git pull \u8fdc\u7a0b\u4e3b\u673a\u540d \u8fdc\u7a0b\u5206\u652f\u540d : \u672c\u5730\u5206\u652f\u540d \u53d6\u56deorigin\u4e3b\u673a\u7684next\u5206\u652f\uff0c\u4e0e\u672c\u5730\u7684master\u5206\u652f\u5408\u5e76\uff0c\u9700\u8981\u5199\u6210\u4e0b\u9762\u8fd9\u6837 git pull origin next:master \u8fdc\u7a0b\u5206\u652f\u662f\u4e0e\u5f53\u524d\u5206\u652f\u5408\u5e76\uff0c\u5219\u5192\u53f7\u540e\u9762\u7684\u90e8\u5206\u53ef\u4ee5\u7701\u7565 git pull origin next \u5b9e\u8d28\u4e0a\uff0c\u8fd9\u7b49\u540c\u4e8e\u5148\u505agit fetch\uff0c\u518d\u505agit merge git fetch origin git merge origin/next \u5982\u679c\u5408\u5e76\u9700\u8981\u91c7\u7528rebase\u6a21\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u2013rebase\u9009\u9879\u3002 git pull --rebase \u8fdc\u7a0b\u4e3b\u673a\u540d \u8fdc\u7a0b\u5206\u652f\u540d : \u672c\u5730\u5206\u652f\u540d push \u5230\u8fdc\u7a0b\u670d\u52a1\u5668 git push --set-upstream origin dev \u63d0\u4ea4\u5230\u670d\u52a1\u5668\u5e76\u5728\u670d\u52a1\u5668\u65b0\u5efadev\u5206\u652f \u4e3e\u4f8b git push --set-upstream iReader R1001_BtPage git push --set-upstream iReader R1001_Dict git push \u8fdc\u7a0b\u4e3b\u673a\u540d \u672c\u5730\u5206\u652f\u540d : \u8fdc\u7a0b\u5206\u652f\u540d git push origin dev:develop git push iReader audioRemote:R1001_audio git push origin \u5c06\u5f53\u524d\u5206\u652f\u63a8\u9001\u5230origin\u4e3b\u673a\u7684\u5bf9\u5e94\u5206\u652f \u5408\u5e76\u5206\u652f merge\u662f\u5408\u5e76\u5168\u90e8\u63d0\u4ea4 cherry-pick\u9009\u62e9\u5408\u5e76 merge \u5408\u5e76dev\u5206\u652f git checkout master \u5207\u6362\u81f3master\u5206\u652f git merge --no-ff dev \u5982\u679c\u51fa\u73b0\u5408\u5e76\u51b2\u7a81\u5c31 \u627e\u76f8\u5e94\u6587\u4ef6\u6539\u51b2\u7a81 \u6539\u5b8c\u6267\u884c git add . \u548c git commit -a -m \"msg\" \u5982\u679c\u51fa\u73b0vi \u7f16\u8f91\u754c\u9762 \u5219\u8f93\u5165 \u5907\u6ce8 \u540e\u6309Esc : wq \u4fdd\u5b58\u9000\u51fa git cherry-pick \u5982\u679c\u5c06Dev\u4e2d\u7684\u4e00\u4e2acommitId\u5408\u5e76\u5230master dev\u5206\u652f\u4e0bgit log\u67e5\u770bCommitId\u5e76\u590d\u5236\u8981\u5408\u5e76\u7684CommitId (\u4e00\u4e2a\u63d0\u4ea4\u70b9\u5bf9\u5e94\u4e00\u4e2a\u54c8\u5e0c\u503c) git checkout master git cherry-pick git cherry-pick .. \u6216\u8005git cherry-pick ^.. \u524d\u8005\u8868\u793a\u628a \u5230 \u4e4b\u95f4(\u5de6\u5f00\u53f3\u95ed\uff0c\u4e0d\u5305\u542bstart-commit-id)\u7684\u63d0\u4ea4cherry-pick\u5230\u5f53\u524d\u5206\u652f\uff1b \u540e\u8005\u8868\u793a\u628a \u5230 \u4e4b\u95f4(\u95ed\u533a\u95f4\uff0c\u5305\u542bstart-commit-id)\u7684\u63d0\u4ea4cherry-pick\u5230\u5f53\u524d\u5206\u652f\u3002 \u9644\u5f00\u53d1\u5e38\u7528\u547d\u4ee4 \u5ffd\u7565\u6587\u4ef6.gitignore Android Studio\u4e0b\u7684.gitignore log \u67e5\u770b\u63d0\u4ea4\u4fe1\u606f git log \u67e5\u770b\u63d0\u4ea4\u4fe1\u606f gl=git log --oneline --all --graph --decorate $* \u6240\u6709\u4ed3\u7684\u76f4\u7ebf\u63d0\u4ea4\u56fe \u5e38\u89c1\u9519\u8bef \u4e2d\u7ea7 git remote \u4e00\u4e2aGit\u9879\u76ee\u7ed1\u5b9a\u591a\u4e2a\u8fdc\u7a0b\u670d\u52a1\u5668 git remote add origin [ur] \u589e\u52a0\u4e00\u4e2a\u8fdc\u7a0b\u8def\u5f84\u7b80\u5199\u4e3aorigin git remote add githup [githup:...] \u628aGitHub\u9879\u76ee\u8def\u5f84\u8bbe\u7f6e\u4e3agithup push\u5230\u4e0d\u540c\u670d\u52a1\u5668 push origin dev \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668 git remote -v git remote show origin \u66ff\u6362\u8fdc\u7a0b\u670d\u52a1\u5668url git remote set-url origin [url] \u91cd\u547d\u540d git remote rename oldName newName \u5b50\u4e3b\u9898 \u538b\u7f29\u6216\u4fee\u6539\u591a\u4e2aCommit git rebase -i HEAD~[number_of_commits] git rebase -i HEAD~2 \u538b\u7f29:\u628a\u8981\u4fee\u6539\u7684\u63d0\u4ea4\u70b9 pick\u6539\u6210s\u6216\u8005squash \u4fee\u6539 pick\u6539\u6210 r\u6216reword \u67e5\u770b\u6587\u4ef6\u8c01\u4fee\u6539\u8fc7 git blame (fileName)","title":"Git"},{"location":"tools/git/#git","text":"","title":"\u642d\u5efaGit\u4ed3\u5e93"},{"location":"tools/git/#git_1","text":"git\u6587\u6863 Git \b\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u4ee3\u7801\u7ba1\u7406\u5de5\u5177\uff0c\u5bf9\u4ee3\u7801\u8fdb\u884c\u8ddf\u8e2a\uff0c\u80fd\u591f\u63d0\u4f9b\u56e2\u961f\u534f\u4f5c\u5f00\u53d1\uff0c\b\u7ba1\u7406\u6e90\u4ee3\u7801\uff0c\u76ee\u524d\u5f88\u591a\u8f6f\u4ef6\u90fd\b\u652f\u6301\bGit\u4ee3\u7801\u7ba1\u7406\u5de5\u5177\uff0cGithub\uff0cGitlab\u3001 CVS \u3001 SVN","title":"git"},{"location":"tools/git/#git_2","text":"\u5f88\u591a\u4eba\u90fd\u77e5\u9053\uff0cLinus\u57281991\u5e74\u521b\u5efa\u4e86\u5f00\u6e90\u7684Linux\uff0c\u4ece\u6b64\uff0cLinux\u7cfb\u7edf\u4e0d\u65ad\u53d1\u5c55\uff0c\u5df2\u7ecf\u6210\u4e3a\u6700\u5927\u7684\u670d\u52a1\u5668\u7cfb\u7edf\u8f6f\u4ef6\u4e86\u3002 Linus\u867d\u7136\u521b\u5efa\u4e86Linux\uff0c\u4f46Linux\u7684\u58ee\u5927\u662f\u9760\u5168\u4e16\u754c\u70ed\u5fc3\u7684\u5fd7\u613f\u8005\u53c2\u4e0e\u7684\uff0c\u8fd9\u4e48\u591a\u4eba\u5728\u4e16\u754c\u5404\u5730\u4e3aLinux\u7f16\u5199\u4ee3\u7801\uff0c\u90a3Linux\u7684\u4ee3\u7801\u662f\u5982\u4f55\u7ba1\u7406\u7684\u5462\uff1f \u4e8b\u5b9e\u662f\uff0c\u57282002\u5e74\u4ee5\u524d\uff0c\u4e16\u754c\u5404\u5730\u7684\u5fd7\u613f\u8005\u628a\u6e90\u4ee3\u7801\u6587\u4ef6\u901a\u8fc7 diff \u7684\u65b9\u5f0f\u53d1\u7ed9 Linus \uff0c\u7136\u540e\u7531Linus\u672c\u4eba\u901a\u8fc7\u624b\u5de5\u65b9\u5f0f\u5408\u5e76\u4ee3\u7801\uff01 \u4f60\u4e5f\u8bb8\u4f1a\u60f3\uff0c\u4e3a\u4ec0\u4e48Linus\u4e0d\u628aLinux\u4ee3\u7801\u653e\u5230\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u91cc\u5462\uff1f\u4e0d\u662f\u6709CVS\u3001SVN\u8fd9\u4e9b\u514d\u8d39\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5417\uff1f\u56e0\u4e3aLinus\u575a\u5b9a\u5730\u53cd\u5bf9CVS\u548cSVN\uff0c\u8fd9\u4e9b\u96c6\u4e2d\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e0d\u4f46\u901f\u5ea6\u6162\uff0c\u800c\u4e14\u5fc5\u987b\u8054\u7f51\u624d\u80fd\u4f7f\u7528\u3002\u6709\u4e00\u4e9b\u5546\u7528\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u867d\u7136\u6bd4CVS\u3001SVN\u597d\u7528\uff0c\u4f46\u90a3\u662f\u4ed8\u8d39\u7684\uff0c\u548cLinux\u7684\u5f00\u6e90\u7cbe\u795e\u4e0d\u7b26\u3002 \u4e0d\u8fc7\uff0c\u5230\u4e862002\u5e74\uff0cLinux\u7cfb\u7edf\u5df2\u7ecf\u53d1\u5c55\u4e86\u5341\u5e74\u4e86\uff0c\u4ee3\u7801\u5e93\u4e4b\u5927\u8ba9Linus\u5f88\u96be\u7ee7\u7eed\u901a\u8fc7\u624b\u5de5\u65b9\u5f0f\u7ba1\u7406\u4e86\uff0c\u793e\u533a\u7684\u5f1f\u5144\u4eec\u4e5f\u5bf9\u8fd9\u79cd\u65b9\u5f0f\u8868\u8fbe\u4e86\u5f3a\u70c8\u4e0d\u6ee1\uff0c\u4e8e\u662fLinus\u9009\u62e9\u4e86\u4e00\u4e2a\u5546\u4e1a\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edfBitKeeper\uff0cBitKeeper\u7684\u4e1c\u5bb6BitMover\u516c\u53f8\u51fa\u4e8e\u4eba\u9053\u4e3b\u4e49\u7cbe\u795e\uff0c\u6388\u6743Linux\u793e\u533a\u514d\u8d39\u4f7f\u7528\u8fd9\u4e2a\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002 \u5b89\u5b9a\u56e2\u7ed3\u7684\u5927\u597d\u5c40\u9762\u57282005\u5e74\u5c31\u88ab\u6253\u7834\u4e86\uff0c\u539f\u56e0\u662fLinux\u793e\u533a\u725b\u4eba\u805a\u96c6\uff0c\u4e0d\u514d\u6cbe\u67d3\u4e86\u4e00\u4e9b\u6881\u5c71\u597d\u6c49\u7684\u6c5f\u6e56\u4e60\u6c14\u3002\u5f00\u53d1Samba\u7684Andrew\u8bd5\u56fe\u7834\u89e3BitKeeper\u7684\u534f\u8bae\uff08\u8fd9\u4e48\u5e72\u7684\u5176\u5b9e\u4e5f\u4e0d\u53ea\u4ed6\u4e00\u4e2a\uff09\uff0c\u88abBitMover\u516c\u53f8\u53d1\u73b0\u4e86\uff08\u76d1\u63a7\u5de5\u4f5c\u505a\u5f97\u4e0d\u9519\uff01\uff09\uff0c\u4e8e\u662fBitMover\u516c\u53f8\u6012\u4e86\uff0c\u8981\u6536\u56deLinux\u793e\u533a\u7684\u514d\u8d39\u4f7f\u7528\u6743\u3002 Linus\u53ef\u4ee5\u5411BitMover\u516c\u53f8\u9053\u4e2a\u6b49\uff0c\u4fdd\u8bc1\u4ee5\u540e\u4e25\u683c\u7ba1\u6559\u5f1f\u5144\u4eec\uff0c\u55ef\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5b9e\u9645\u60c5\u51b5\u662f\u8fd9\u6837\u7684\uff1a Linus\u82b1\u4e86\u4e24\u5468\u65f6\u95f4\u81ea\u5df1\u7528C\u5199\u4e86\u4e00\u4e2a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u8fd9\u5c31\u662fGit\uff01\u4e00\u4e2a\u6708\u4e4b\u5185\uff0cLinux\u7cfb\u7edf\u7684\u6e90\u7801\u5df2\u7ecf\u7531Git\u7ba1\u7406\u4e86\uff01\u725b\u662f\u600e\u4e48\u5b9a\u4e49\u7684\u5462\uff1f\u5927\u5bb6\u53ef\u4ee5\u4f53\u4f1a\u4e00\u4e0b\u3002 Git\u8fc5\u901f\u6210\u4e3a\u6700\u6d41\u884c\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u5c24\u5176\u662f2008\u5e74\uff0cGitHub\u7f51\u7ad9\u4e0a\u7ebf\u4e86\uff0c\u5b83\u4e3a\u5f00\u6e90\u9879\u76ee\u514d\u8d39\u63d0\u4f9bGit\u5b58\u50a8\uff0c\u65e0\u6570\u5f00\u6e90\u9879\u76ee\u5f00\u59cb\u8fc1\u79fb\u81f3GitHub\uff0c\u5305\u62ecjQuery\uff0cPHP\uff0cRuby\u7b49\u7b49\u3002 \u5386\u53f2\u5c31\u662f\u8fd9\u4e48\u5076\u7136\uff0c\u5982\u679c\u4e0d\u662f\u5f53\u5e74BitMover\u516c\u53f8\u5a01\u80c1Linux\u793e\u533a\uff0c\u53ef\u80fd\u73b0\u5728\u6211\u4eec\u5c31\u6ca1\u6709\u514d\u8d39\u800c\u8d85\u7ea7\u597d\u7528\u7684Git\u4e86\u3002","title":"Git\u7684\u8bde\u751f"},{"location":"tools/git/#vs","text":"Linus\u4e00\u76f4\u75db\u6068\u7684CVS\u53caSVN\u90fd\u662f\u96c6\u4e2d\u5f0f\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u800cGit\u662f\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u96c6\u4e2d\u5f0f\u548c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6709\u4ec0\u4e48\u533a\u522b\u5462\uff1f \u5148\u8bf4\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7248\u672c\u5e93\u662f\u96c6\u4e2d\u5b58\u653e\u5728\u4e2d\u592e\u670d\u52a1\u5668\u7684\uff0c\u800c\u5e72\u6d3b\u7684\u65f6\u5019\uff0c\u7528\u7684\u90fd\u662f\u81ea\u5df1\u7684\u7535\u8111\uff0c\u6240\u4ee5\u8981\u5148\u4ece\u4e2d\u592e\u670d\u52a1\u5668\u53d6\u5f97\u6700\u65b0\u7684\u7248\u672c\uff0c\u7136\u540e\u5f00\u59cb\u5e72\u6d3b\uff0c\u5e72\u5b8c\u6d3b\u4e86\uff0c\u518d\u628a\u81ea\u5df1\u7684\u6d3b\u63a8\u9001\u7ed9\u4e2d\u592e\u670d\u52a1\u5668\u3002\u4e2d\u592e\u670d\u52a1\u5668\u5c31\u597d\u6bd4\u662f\u4e00\u4e2a\u56fe\u4e66\u9986\uff0c\u4f60\u8981\u6539\u4e00\u672c\u4e66\uff0c\u5fc5\u987b\u5148\u4ece\u56fe\u4e66\u9986\u501f\u51fa\u6765\uff0c\u7136\u540e\u56de\u5230\u5bb6\u81ea\u5df1\u6539\uff0c\u6539\u5b8c\u4e86\uff0c\u518d\u653e\u56de\u56fe\u4e66\u9986\u3002 \u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6700\u5927\u7684\u6bdb\u75c5\u5c31\u662f\u5fc5\u987b\u8054\u7f51\u624d\u80fd\u5de5\u4f5c\uff0c\u5982\u679c\u5728\u5c40\u57df\u7f51\u5185\u8fd8\u597d\uff0c\u5e26\u5bbd\u591f\u5927\uff0c\u901f\u5ea6\u591f\u5feb\uff0c\u53ef\u5982\u679c\u5728\u4e92\u8054\u7f51\u4e0a\uff0c\u9047\u5230\u7f51\u901f\u6162\u7684\u8bdd\uff0c\u53ef\u80fd\u63d0\u4ea4\u4e00\u4e2a10M\u7684\u6587\u4ef6\u5c31\u9700\u89815\u5206\u949f\uff0c\u8fd9\u8fd8\u4e0d\u5f97\u628a\u4eba\u7ed9\u618b\u6b7b\u554a\u3002 \u90a3\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4e0e\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6709\u4f55\u4e0d\u540c\u5462\uff1f\u9996\u5148\uff0c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u6839\u672c\u6ca1\u6709\u201c\u4e2d\u592e\u670d\u52a1\u5668\u201d\uff0c\u6bcf\u4e2a\u4eba\u7684\u7535\u8111\u4e0a\u90fd\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u8fd9\u6837\uff0c\u4f60\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u9700\u8981\u8054\u7f51\u4e86\uff0c\u56e0\u4e3a\u7248\u672c\u5e93\u5c31\u5728\u4f60\u81ea\u5df1\u7684\u7535\u8111\u4e0a\u3002\u65e2\u7136\u6bcf\u4e2a\u4eba\u7535\u8111\u4e0a\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u90a3\u591a\u4e2a\u4eba\u5982\u4f55\u534f\u4f5c\u5462\uff1f\u6bd4\u65b9\u8bf4\u4f60\u5728\u81ea\u5df1\u7535\u8111\u4e0a\u6539\u4e86\u6587\u4ef6A\uff0c\u4f60\u7684\u540c\u4e8b\u4e5f\u5728\u4ed6\u7684\u7535\u8111\u4e0a\u6539\u4e86\u6587\u4ef6A\uff0c\u8fd9\u65f6\uff0c\u4f60\u4eec\u4fe9\u4e4b\u95f4\u53ea\u9700\u628a\u5404\u81ea\u7684\u4fee\u6539\u63a8\u9001\u7ed9\u5bf9\u65b9\uff0c\u5c31\u53ef\u4ee5\u4e92\u76f8\u770b\u5230\u5bf9\u65b9\u7684\u4fee\u6539\u4e86\u3002 \u548c\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u76f8\u6bd4\uff0c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u8981\u9ad8\u5f88\u591a\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u7535\u8111\u91cc\u90fd\u6709\u5b8c\u6574\u7684\u7248\u672c\u5e93\uff0c\u67d0\u4e00\u4e2a\u4eba\u7684\u7535\u8111\u574f\u6389\u4e86\u4e0d\u8981\u7d27\uff0c\u968f\u4fbf\u4ece\u5176\u4ed6\u4eba\u90a3\u91cc\u590d\u5236\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002\u800c\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u7684\u4e2d\u592e\u670d\u52a1\u5668\u8981\u662f\u51fa\u4e86\u95ee\u9898\uff0c\u6240\u6709\u4eba\u90fd\u6ca1\u6cd5\u5e72\u6d3b\u4e86\u3002 \u5728\u5b9e\u9645\u4f7f\u7528\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5f88\u5c11\u5728\u4e24\u4eba\u4e4b\u95f4\u7684\u7535\u8111\u4e0a\u63a8\u9001\u7248\u672c\u5e93\u7684\u4fee\u6539\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f60\u4eec\u4fe9\u4e0d\u5728\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\uff0c\u4e24\u53f0\u7535\u8111\u4e92\u76f8\u8bbf\u95ee\u4e0d\u4e86\uff0c\u4e5f\u53ef\u80fd\u4eca\u5929\u4f60\u7684\u540c\u4e8b\u75c5\u4e86\uff0c\u4ed6\u7684\u7535\u8111\u538b\u6839\u6ca1\u6709\u5f00\u673a\u3002\u56e0\u6b64\uff0c\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u901a\u5e38\u4e5f\u6709\u4e00\u53f0\u5145\u5f53\u201c\u4e2d\u592e\u670d\u52a1\u5668\u201d\u7684\u7535\u8111\uff0c\u4f46\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u4f5c\u7528\u4ec5\u4ec5\u662f\u7528\u6765\u65b9\u4fbf\u201c\u4ea4\u6362\u201d\u5927\u5bb6\u7684\u4fee\u6539\uff0c\u6ca1\u6709\u5b83\u5927\u5bb6\u4e5f\u4e00\u6837\u5e72\u6d3b\uff0c\u53ea\u662f\u4ea4\u6362\u4fee\u6539\u4e0d\u65b9\u4fbf\u800c\u5df2\u3002 \u5f53\u7136\uff0cGit\u7684\u4f18\u52bf\u4e0d\u5355\u662f\u4e0d\u5fc5\u8054\u7f51\u8fd9\u4e48\u7b80\u5355\uff0c\u540e\u9762\u6211\u4eec\u8fd8\u4f1a\u770b\u5230Git\u6781\u5176\u5f3a\u5927\u7684\u5206\u652f\u7ba1\u7406\uff0c\u628aSVN\u7b49\u8fdc\u8fdc\u629b\u5728\u4e86\u540e\u9762\u3002 CVS\u4f5c\u4e3a\u6700\u65e9\u7684\u5f00\u6e90\u800c\u4e14\u514d\u8d39\u7684\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u76f4\u5230\u73b0\u5728\u8fd8\u6709\u4e0d\u5c11\u4eba\u5728\u7528\u3002\u7531\u4e8eCVS\u81ea\u8eab\u8bbe\u8ba1\u7684\u95ee\u9898\uff0c\u4f1a\u9020\u6210\u63d0\u4ea4\u6587\u4ef6\u4e0d\u5b8c\u6574\uff0c\u7248\u672c\u5e93\u83ab\u540d\u5176\u5999\u635f\u574f\u7684\u60c5\u51b5\u3002\u540c\u6837\u662f\u5f00\u6e90\u800c\u4e14\u514d\u8d39\u7684SVN\u4fee\u6b63\u4e86CVS\u7684\u4e00\u4e9b\u7a33\u5b9a\u6027\u95ee\u9898\uff0c\u662f\u76ee\u524d\u7528\u5f97\u6700\u591a\u7684\u96c6\u4e2d\u5f0f\u7248\u672c\u5e93\u63a7\u5236\u7cfb\u7edf\u3002 \u9664\u4e86\u514d\u8d39\u7684\u5916\uff0c\u8fd8\u6709\u6536\u8d39\u7684\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u6bd4\u5982IBM\u7684ClearCase\uff08\u4ee5\u524d\u662fRational\u516c\u53f8\u7684\uff0c\u88abIBM\u6536\u8d2d\u4e86\uff09\uff0c\u7279\u70b9\u662f\u5b89\u88c5\u6bd4Windows\u8fd8\u5927\uff0c\u8fd0\u884c\u6bd4\u8717\u725b\u8fd8\u6162\uff0c\u80fd\u7528ClearCase\u7684\u4e00\u822c\u662f\u4e16\u754c500\u5f3a\uff0c\u4ed6\u4eec\u6709\u4e2a\u5171\u540c\u7684\u7279\u70b9\u662f\u8d22\u5927\u6c14\u7c97\uff0c\u6216\u8005\u4eba\u50bb\u94b1\u591a\u3002 \u5fae\u8f6f\u81ea\u5df1\u4e5f\u6709\u4e00\u4e2a\u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u53ebVSS\uff0c\u96c6\u6210\u5728Visual Studio\u4e2d\u3002\u7531\u4e8e\u5176\u53cd\u4eba\u7c7b\u7684\u8bbe\u8ba1\uff0c\u8fde\u5fae\u8f6f\u81ea\u5df1\u90fd\u4e0d\u597d\u610f\u601d\u7528\u4e86\u3002 \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u9664\u4e86Git\u4ee5\u53ca\u4fc3\u4f7fGit\u8bde\u751f\u7684BitKeeper\u5916\uff0c\u8fd8\u6709\u7c7b\u4f3cGit\u7684Mercurial\u548cBazaar\u7b49\u3002\u8fd9\u4e9b\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u5404\u6709\u7279\u70b9\uff0c\u4f46\u6700\u5feb\u3001\u6700\u7b80\u5355\u4e5f\u6700\u6d41\u884c\u7684\u4f9d\u7136\u662fGit\uff01","title":"\u96c6\u4e2d\u5f0fvs\u5206\u5e03\u5f0f"},{"location":"tools/git/#git_3","text":"Git \u5b98\u7f51 Git\u6587\u6863 Download for Linux and Unix Link Windown Link Mac Link Git\u57fa\u7840\u6559\u7a0b Link \u652f\u6301WEb\u7248\u672c Link \b\b\u5b89\u88c5 Link \b\u53c2\u8003\u6587\u6863 Link \u914d\u7f6e\u6587\u4ef6github \b Link","title":"Git \u5b89\u88c5"},{"location":"tools/git/#_1","text":"\bGit \u4ee3\u7801\u5bf9\u6bcf\u4e00\u6b21\b\u63d0\u4ea4\u90fd\u4f5c\u4e3a\u4e00\u6b21\b\bcomment id\uff0c\u56de\u9000\u4e5f\u662f\u5728\u73b0\u6709\u7684\u5806\u6808\u53ea\u662f\u505a\u4e86\u4e00\u6b21\u57fa\u672c\uff0c\b\u5e76\u4e0d\u4f1a\u628a\u6700\u540e\u7684\u5185\u5bb9\u56de\u6eda\u6389 1.\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u7248\u672c \u67e5\u770b\u5f53\u524d\u7684\u63d0\u4ea4\u8bb0\u5f55 \u6700\u4e0a\u9762\u7684\b\b\u8bb0\u5f55\u662f\u6700\u65b0\u63d0\u4ea4\u7684 git@cuco:~/testing$ git log commit 8ae3a92ed8db9ede3f5c0799419c5abc1e222d49 ( HEAD - master, origin/master ) Author: Aige shenzhencuco@gmail.com Date: Tue Feb 19 15 :13:24 2019 +0800 \u6dfb\u52a0\u6d4b\u8bd5log commit 35ea583ac4ee6834f2de39cefd550c1e8782fb8f Author: Aige shenzhencuco@gmail.com Date: Tue Feb 19 15 :12:11 2019 +0800 test 2.\u56de\u9000\u5230\u4e0a\u4e00\u4e2a\u7248\u672c commit 35ea583ac4ee6834f2de39cefd550c1e8782fb8f git@cuco:~/testing$ git reset --hard 35ea583ac4ee6834f2de39cefd550c1e8782fb8f HEAD is now at 35ea583 test \u56de\u9000\u540e\u53ef\u4ee5\u770b\u5230\u7684\u63d0\u4ea4\u8bb0\u5f55: git@cuco:~/testing$ git log commit 35ea583ac4ee6834f2de39cefd550c1e8782fb8f ( HEAD - master ) Author: Aige shenzhencuco@gmail.com Date: Tue Feb 19 15 :12:11 2019 +0800 test 3.\u6b64\u65f6\b\u53c8\u60f3\b\b\u56de\u9000\u5230\b\u56de\u9000\u64cd\u4f5c\u7684\u6700\u540e\u4e00\u6b21\u63d0\u4ea4 \u67e5\u770b\u5168\u90e8\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u627e\u5230\u6700\u540e\b\b\u63d0\u4ea4\u7684comment id git@cuco:~/testing$ git reflog 35ea583 ( HEAD - master ) HEAD@ { 0 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 8ae3a92 ( origin/master ) HEAD@ { 1 } : pull: Fast-forward 35ea583 ( HEAD - master ) HEAD@ { 2 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 8ae3a92 ( origin/master ) HEAD@ { 3 } : reset: moving to 8ae3a92 35ea583 ( HEAD - master ) HEAD@ { 4 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 35ea583 ( HEAD - master ) HEAD@ { 5 } : reset: moving to 35ea583ac4ee6834f2de39cefd550c1e8782fb8f 8ae3a92 ( origin/master ) HEAD@ { 6 } : reset: moving to 8ae3a92ed8db9ede3f5c0799419c5abc1e222d49 8ae3a92 ( origin/master ) HEAD@ { 7 } : commit: \u6dfb\u52a0\u6d4b\u8bd5log 35ea583 ( HEAD - master ) HEAD@ { 8 } : commit ( initial ) : test 4.\u56de\u9000\u5230\u60f3\u8981\u7684\u7248\u672c git@cuco:~/testing$ git reset --hard 35ea583ac4ee6834f2de39cefd550c1e8782fb8f HEAD is now at 35ea583 test","title":"\u7248\u672c\u56de\u9000"},{"location":"tools/git/#git_4","text":"\b\u5de5\u4f5c\u533a--- \u6682\u5b58\u533a--- \b\u672c\u5730\u4ee3\u7801\u4ed3\u5e93--- \u8fdc\u7a0b\u4ee3\u7801\u5de5\u5177 \u573a\u666f1\uff1a\u5f53\u4f60\u6539\u4e71\u4e86\u5de5\u4f5c\u533a\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u60f3\u76f4\u63a5\u4e22\u5f03\u5de5\u4f5c\u533a\u7684\u4fee\u6539\u65f6\uff0c\u7528\u547d\u4ee4git checkout -- file\u3002 \u573a\u666f2\uff1a\u5f53\u4f60\u4e0d\u4f46\u6539\u4e71\u4e86\u5de5\u4f5c\u533a\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u8fd8\u6dfb\u52a0\u5230\u4e86\u6682\u5b58\u533a\u65f6\uff0c\u60f3\u4e22\u5f03\u4fee\u6539\uff0c\u5206\u4e24\u6b65\uff0c\u7b2c\u4e00\u6b65\u7528\u547d\u4ee4git reset HEAD \uff0c\u5c31\u56de\u5230\u4e86\u573a\u666f1\uff0c\u7b2c\u4e8c\u6b65\u6309\u573a\u666f1\u64cd\u4f5c\u3002 \u573a\u666f3\uff1a\u5df2\u7ecf\u63d0\u4ea4\u4e86\u4e0d\u5408\u9002\u7684\u4fee\u6539\u5230\u7248\u672c\u5e93\u65f6\uff0c\u60f3\u8981\u64a4\u9500\u672c\u6b21\u63d0\u4ea4\uff0c\u53c2\u8003\u7248\u672c\u56de\u9000\u4e00\u8282\uff0c\u4e0d\u8fc7\u524d\u63d0\u662f\u6ca1\u6709\u63a8\u9001\u5230\u8fdc\u7a0b\u5e93\u3002","title":"Git\u7684\b\u533a\u57df"},{"location":"tools/git/#_2","text":"\u8981\u5173\u8054\u4e00\u4e2a\u8fdc\u7a0b\u5e93\uff0c\u4f7f\u7528\u547d\u4ee4git remote add origin git@server-name:path/repo-name.git\uff1b \u5173\u8054\u540e\uff0c\u4f7f\u7528\u547d\u4ee4git push -u origin master\u7b2c\u4e00\u6b21\u63a8\u9001master\u5206\u652f\u7684\u6240\u6709\u5185\u5bb9\uff1b \u6b64\u540e\uff0c\u6bcf\u6b21\u672c\u5730\u63d0\u4ea4\u540e\uff0c\u53ea\u8981\u6709\u5fc5\u8981\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4git push origin master\u63a8\u9001\u6700\u65b0\u4fee\u6539\uff1b","title":"\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\b\u5173\u8054"},{"location":"tools/git/#_3","text":"Git\u9f13\u52b1\u5927\u91cf\u4f7f\u7528\u5206\u652f\uff1a \u67e5\u770b\u5206\u652f\uff1agit branch \u521b\u5efa\u5206\u652f\uff1agit branch lt;name gt; \u5207\u6362\u5206\u652f\uff1agit checkout lt;name gt; \u521b\u5efa+\u5207\u6362\u5206\u652f\uff1agit checkout -b lt;name gt; \u5408\u5e76\u67d0\u5206\u652f\u5230\u5f53\u524d\u5206\u652f\uff1agit merge lt;name gt; \u5220\u9664\u5206\u652f\uff1agit branch -d lt;name gt;","title":"\u5408\u5e76\u5206\u652f"},{"location":"tools/git/#_4","text":"\u5de5\u4f5c\u73b0\u573a\u8fd8\u5728\uff0cGit\u628astash\u5185\u5bb9\u5b58\u5728\u67d0\u4e2a\u5730\u65b9\u4e86\uff0c\u4f46\u662f\u9700\u8981\u6062\u590d\u4e00\u4e0b\uff0c\u6709\u4e24\u4e2a\u529e\u6cd5\uff1a \u4e00\u662f\u7528git stash apply\u6062\u590d\uff0c\u4f46\u662f\u6062\u590d\u540e\uff0cstash\u5185\u5bb9\u5e76\u4e0d\u5220\u9664\uff0c\u4f60\u9700\u8981\u7528git stash drop\u6765\u5220\u9664\uff1b \u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u7528git stash pop\uff0c\u6062\u590d\u7684\u540c\u65f6\u628astash\u5185\u5bb9\u4e5f\u5220\u4e86\uff1a \u518d\u7528git stash list\u67e5\u770b\uff0c\u5c31\u770b\u4e0d\u5230\u4efb\u4f55stash\u5185\u5bb9\u4e86\uff1a \u4fee\u590dbug\u65f6\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u521b\u5efa\u65b0\u7684bug\u5206\u652f\u8fdb\u884c\u4fee\u590d\uff0c\u7136\u540e\u5408\u5e76\uff0c\u6700\u540e\u5220\u9664\uff1b \u5f53\u624b\u5934\u5de5\u4f5c\u6ca1\u6709\u5b8c\u6210\u65f6\uff0c\u5148\u628a\u5de5\u4f5c\u73b0\u573agit stash\u4e00\u4e0b\uff0c\u7136\u540e\u53bb\u4fee\u590dbug\uff0c\u4fee\u590d\u540e\uff0c\u518dgit stash pop\uff0c\u56de\u5230\u5de5\u4f5c\u73b0\u573a\u3002","title":"\u6682\u5b58\u4ee3\u7801"},{"location":"tools/git/#_5","text":"\u67e5\u770b\u8fdc\u7a0b\u5e93\u4fe1\u606f\uff0c\u4f7f\u7528git remote -v\uff1b \u672c\u5730\u65b0\u5efa\u7684\u5206\u652f\u5982\u679c\u4e0d\u63a8\u9001\u5230\u8fdc\u7a0b\uff0c\u5bf9\u5176\u4ed6\u4eba\u5c31\u662f\u4e0d\u53ef\u89c1\u7684\uff1b \u4ece\u672c\u5730\u63a8\u9001\u5206\u652f\uff0c\u4f7f\u7528git push origin branch-name\uff0c\u5982\u679c\u63a8\u9001\u5931\u8d25\uff0c\u5148\u7528git pull\u6293\u53d6\u8fdc\u7a0b\u7684\u65b0\u63d0\u4ea4\uff1b \u5728\u672c\u5730\u521b\u5efa\u548c\u8fdc\u7a0b\u5206\u652f\u5bf9\u5e94\u7684\u5206\u652f\uff0c\u4f7f\u7528git checkout -b branch-name origin/branch-name\uff0c\u672c\u5730\u548c\u8fdc\u7a0b\u5206\u652f\u7684\u540d\u79f0\u6700\u597d\u4e00\u81f4\uff1b \u5efa\u7acb\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u7684\u5173\u8054\uff0c\u4f7f\u7528git branch --set-upstream branch-name origin/branch-name\uff1b \u4ece\u8fdc\u7a0b\u6293\u53d6\u5206\u652f\uff0c\u4f7f\u7528git pull\uff0c\u5982\u679c\u6709\u51b2\u7a81\uff0c\u8981\u5148\u5904\u7406\u51b2\u7a81\u3002","title":"\b\u8fdc\u7a0b\u5206\u652f\u64cd\u4f5c"},{"location":"tools/git/#tag","text":"\u547d\u4ee4git tag \u7528\u4e8e\u65b0\u5efa\u4e00\u4e2a\u6807\u7b7e\uff0c\u9ed8\u8ba4\u4e3aHEAD\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2acommit id\uff1b \u547d\u4ee4git tag -a -m \"blablabla...\"\u53ef\u4ee5\u6307\u5b9a\u6807\u7b7e\u4fe1\u606f\uff1b \u547d\u4ee4git tag\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u6807\u7b7e\u3002 \u547d\u4ee4git push origin \u53ef\u4ee5\u63a8\u9001\u4e00\u4e2a\u672c\u5730\u6807\u7b7e\uff1b \u547d\u4ee4git push origin --tags\u53ef\u4ee5\u63a8\u9001\u5168\u90e8\u672a\u63a8\u9001\u8fc7\u7684\u672c\u5730\u6807\u7b7e\uff1b \u547d\u4ee4git tag -d \u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u672c\u5730\u6807\u7b7e\uff1b \u547d\u4ee4git push origin :refs/tags/ \u53ef\u4ee5\u5220\u9664\u4e00\u4e2a\u8fdc\u7a0b\u6807\u7b7e\u3002","title":"\u6253tag\u6807\u8bb0"},{"location":"tools/git/#git-ssh-httpsgit-scmcombookzhv2e69c8de58aa1e599a8e4b88ae79a84-git-e7949fe68890-ssh-e585ace992a5","text":"","title":"\u670d\u52a1\u5668\u4e0a\u7684 Git - \u751f\u6210 SSH \u516c\u94a5(https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5)"},{"location":"tools/git/#gitosis","text":"\u914d\u7f6e https://github.com/sitaramc/gitolite \u7cfb\u7edf\u9700\u6c42 any unix system sh git 1.6.6 or later perl 5.8.8 or later openssh 5.0 or later a dedicated userid to host the repos (in this document, we assume it is \"git\", but it can be anything; substitute accordingly) this user id does NOT currently have any ssh pubkey-based access ideally, this user id has shell access ONLY by \"su - git\" from some other userid on the same server (this ensure minimal confusion for ssh newbies!)","title":"Gitosis:"},{"location":"tools/git/#_6","text":"\b\u53c2\u8003\u6587\u6863 Link # \u5207\u6362\u4e3a git \u7528\u6237 # su git [ git@server ~ ] $ cd ~ [ git@server ~ ] $ git clone git://github.com/sitaramc/gitolite \u4e0b\u8f7d\u6e90\u7801\u4e4b\u540e\u5b89\u88c5: # \u521b\u5efa ~/bin \u76ee\u5f55 [ git@server ~ ] $ mkdir bin # \u628a /home/git/bin \u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf\u91cc, \u901a\u8fc7\u4fee\u6539git \u5bb6\u4e0b\u9762\u7684.bashrc [ git@server ~ ] $ vim .bashrc # \u5728\u6587\u4ef6\u6700\u540e\u6dfb\u52a0 export PATH = /home/git/bin: $PATH # Install gitolite into $HOME/git/bin [ git@server ~ ] $ gitolite/install -ln [ git@server ~ ] $ \u4e0a\u4f20\u5ba2\u6237\u7aef\u7ba1\u7406\u5458\u7684SSH \u516c\u94a5 {#ssh_key} \u5ba2\u6237\u7aef\u5982\u679c\u751f\u6210ssh key, \u53c2\u8003: Github - Generating SSH Keys [ ahnniu@client ~ ] cd ~/.ssh [ ahnniu@client .ssh ] ls -al # \u5982\u679c\u4e0d\u5b58\u5728 id_rsa, id_rsa.pub \u5219\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u521b\u5efa [ ahnniu@client .ssh ] ssh-keygen -t rsa -C your_email@example.com # \u590d\u5236\u4e00\u4efdid_rsa.pub\u5e76\u91cd\u547d\u540d\u4e3a ahnniu.pub, \u6ce8 ahnniu\u4e3a gitolite\u7ba1\u7406\u5458\u7684\u7528\u6237\u540d [ ahnniu@client .ssh ] cp id_rsa.pub ahnniu.pub # \u901a\u8fc7ssh\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a(/home/git/)\uff0c\u7279\u522b\u6ce8\u610f\u6587\u4ef6\u7684owern\u5e94\u8be5\u4e3agit [ ahnniu@client .ssh ] scp ~/.ssh/ahnniu.pub git@192.168.2.223:/home/git/ \u8bbe\u7f6eGitolite [ git@server ~ ] $ cd ~ # \u57fa\u4e8e\u63d0\u4f9b\u7684ahnniu.pub \u521b\u5efa gitolite-admin \u7ba1\u7406\u4ed3\u5e93 [ git@server ~ ] $ gitolite setup -pk $HOME /ahnniu.pub Initialized empty Git repository in /home/git/repositories/gitolite-admin.git/ Initialized empty Git repository in /home/git/repositories/testing.git/ WARNING: /home/git/.ssh missing ; creating a new one ( this is normal on a brand new install ) WARNING: /home/git/.ssh/authorized_keys missing ; creating a new one ( this is normal on a brand new install ) \u81f3\u6b64\uff0cSSH\u65b9\u5f0f\u7684Git\u670d\u52a1\u5df2\u7ecf\u642d\u5efa\u597d\u4e86 \u5ba2\u6237\u7aefSSH\u65b9\u5f0fclone, push # \u9996\u5148\u9700\u786e\u4fdd\uff0c\u4e0a\u4f20\u7684\u7ba1\u7406\u5458key ahnniu.pub\u662f\u5728\u8fd9\u53f0\u7535\u8111\u4e0a\u751f\u6210\u7684\uff0c\u5426\u5219\u662f\u6ca1\u6709\u6743\u9650\u7684 [ ahnniu@client ~ ] git clone git@192.168.2.223:gitolite-admin.git Cloning into gitolite-admin ... remote: Counting objects: 6 , done . remote: Compressing objects: 100 % ( 4 /4 ) , done . remote: Total 6 ( delta 0 ) , reused 0 ( delta 0 ) Receiving objects: 100 % ( 6 /6 ) , done . Checking connectivity... done . \u56e2\u961f\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5efa\u8bae\u7684Gitolite\u4f7f\u7528\u65b9\u5f0f Gitolite\u7684\u7ba1\u7406\u65b9\u5f0f \u6211\u8ba4\u4e3aGitolite\u662f\u5178\u578b\u7684\u5403\u81ea\u5df1\u7684\u72d7\u7cae\uff0c\u4ed6\u7684\u7ba1\u7406\u5b8c\u5168\u662f\u64cd\u4f5cGit\u6765\u5b8c\u6210\uff0c \u4ed6\u53ef\u4ee5\u5141\u8bb8\u591a\u4e2a\u7ba1\u7406\u5458\u540c\u65f6\u7ba1\u7406\uff0c\u56e0\u4e3a\u662f\u57fa\u4e8e\u4e00\u4e2agit\u4ed3\u5e93\uff0c\u90a3\u4e48\u901a\u8fc7merge\u53ef\u4ee5\u89e3\u51b3\u51b2\u7a81\u7684\u95ee\u9898 Gitolite\u6709\u4e00\u4e2agitolite-admin.git\u7684\u4ed3\u5e93, \u901a\u8fc7\u64cd\u4f5c\uff1a /keydir/ \u6765\u7ba1\u7406SSH\u7528\u6237 /conf/gitolite.conf \u6765\u7ba1\u7406repo\uff08\u589e\u5220\uff0c\u6743\u9650\uff09 \u4e0b\u9762\u6211\u4eec\u63a2\u8ba8\u5982\u679c\u901a\u8fc7gitolite\u6253\u9020Github\u90a3\u6837\u7684Git Server. Git\u4ed3\u5e93\u7684\u51e0\u79cd\u6743\u9650 Public / Private Public: \u4ed3\u5e93\u53ef\u4ee5\u7ed9\u4efb\u4f55\u4ebaClone,pull Private: \u4ed3\u5e93\u53ea\u80fd\u7ed9\u6307\u5b9a\u7684\u4ebaClone,pull \u51e0\u79cd\u6743\u9650\u7ec4 \u6743\u9650\u7ec4: Owner \u4ed3\u5e93\u7684\u62e5\u6709\u8005\uff0c\u53ef\u4ee5\u5bf9\u4ed3\u5e93\u505a\u4efb\u4f55\u60f3\u505a\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982push, \u4fee\u6539\u5176\u5b83\u4eba\u8bbf\u95ee\u8fd9\u4e2a\u4ed3\u5e93\u7684\u6743\u9650\uff0c\u751a\u81f3\u5220\u9664\uff0c\u81f3\u5c11\u9700\u8981\u6709\u4e00\u4e2a\u4eba \u6743\u9650\u7ec4: RW \u53ef\u8bfb\u5199\u7ec4, clone, push, pull \u6743\u9650\u7ec4: R \u53ef\u8bfb\u7ec4, clone, pull \u5176\u4e2d Owner\u5305\u542b RW, RW\u6743\u9650 \u5305\u542b R \u51c6\u5907\u5de5\u4f5c \u514b\u9686gitolite\u7ba1\u7406\u4ed3\u5e93 NOTE: \u9700\u4f7f\u7528\u5b89\u88c5Gitolite\u6307\u5b9a\u7684SSH Key\u5bf9\u5e94\u7684\u7535\u8111\uff08\u6216\u8005Copy \u5bf9\u5e94\u7684 id_rsa\u5230\u4f60\u4f7f\u7528\u7684\u7535\u8111~/.ssh\uff09, HTTP\u65b9\u5f0f\u597d\u50cf\u4e0d\u80fd\u64cd\u4f5cgitolite-admin.git\u4ed3\u5e93\u3002","title":"\u5b89\u88c5"},{"location":"tools/git/#git_5","text":"processon \u914d\u7f6e Git\u5bc6\u94a5\u516c\u94a5 \u751f\u6210\u5bc6\u94a5 ssh-keygen -t rsa -C \" \" ssh -i ~/.ssh/id_rsa \u67e5\u770b key cat ~/.ssh/id_rsa.pub \u6d4b\u8bd5\u5bc6\u94a5 ssh -T ssh -v Git config \u914d\u7f6e \u67e5\u770b git config --list cat .git/config \u7528\u6237\u76ee\u5f55 .gitconfig \u914d\u7f6e \u914d\u7f6e\u6838\u5fc3\u7f16\u8f91\u5668 git config --global core.editor vim \u5ffd\u7565\u6587\u4ef6\u6743\u9650 git config core.filemode false git config --global core.filemode false \u914d\u7f6e\u7528\u6237 \u5355\u4e2a\u9879\u76ee git config user.name \"liuwenrong\" git config user.email \" \" \u5168\u5c40\u7528\u6237 git config --global user.name \"liuwenrong\" git config --global user.email \" \" \u8bb0\u4f4f\u5bc6\u7801 git config --global credential.helper store \u914d\u7f6e\u8fdc\u7a0b\u670d\u52a1\u5668\u5730\u5740 git remote add simpleName url git remote add origin githup.xxx.git \u914d\u8272 git config --global color.status auto git config --global color.diff auto git config --global color.branch auto git config --global color.interactive auto \u57fa\u7840\u64cd\u4f5c \u5e38\u7528\u547d\u4ee4 git status \u67e5\u770b\u72b6\u6001,\u5982\u679c\u5bf9git\u4e0d\u719f\u6089,\u5efa\u8bae\u7ecf\u5e38\u6572\u8fd9\u547d\u4ee4 git add . \u6dfb\u52a0\u5230\u4ed3\u5e93(\u9488\u5bf9\u65b0\u589e\u52a0\u7684\u6587\u4ef6) \u5f53add . \u51fa\u9519\u65f6,\u8bd5\u8bd5 git add --all git commit -s -a -m \"\u6ce8\u91ca\u5fc5\u586b\" \u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93 -s\u81ea\u52a8\u52a0\u4e0aSigned-off-by, -a \u5168\u90e8\u63d0\u4ea4,-m \u6ce8\u91caMsg git push [\u5206\u652f\u540d \u4e0d\u586b\u9ed8\u8ba4\u5f53\u524d\u5206\u652f] \u63d0\u4ea4\u5230\u8fdc\u7a0b\u670d\u52a1\u5668 git push origin dev git rebase git log \u67e5\u770b\u5f53\u524d\u5206\u652f\u7684\u63d0\u4ea4\u70b9\u4fe1\u606f git log origin/dev \u67e5\u770b\u672c\u5730.git\u4ed3\u5e93\u7684dev\u5206\u652flog \u4e0d\u8fc7\u8981\u770b\u6700\u65b0\u7684\u670d\u52a1\u5668\u63d0\u4ea4\u70b9 \u9700\u8981git fetch git log origin dev \u65e0\u6548 \u8fd8\u662f\u67e5\u770b\u672c\u5730\u5206\u652f git log FETCH_HEAD \u67e5\u770b\u8fdc\u7a0b\u5206\u652f\u7684\u63d0\u4ea4\u70b9log \u5176\u4ed6\u7b5b\u9009\u6761\u4ef6 --author= \u6839\u636e\u7528\u6237 --branchName [branchName] \u6839\u636e\u5206\u652f \u6bd4\u5982\uff1a\u5728\u5f53\u524d\u5206\u652f\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3av1\u7684\u6587\u4ef6\uff0c\u540c\u65f6\u8fd8\u5b58\u5728\u4e00\u4e2a\u540d\u4e3av1\u7684\u5206\u652f git log v1 -- \u6b64\u65f6\u7684v1\u4ee3\u8868\u7684\u662f\u5206\u652f\u540d\u5b57\uff08\uff0d\uff0d\u540e\u8fb9\u662f\u7a7a\u7684\uff09 git log -- v1 \u6b64\u65f6\u7684v1\u4ee3\u8868\u7684\u662f\u540d\u4e3av1\u7684\u6587\u4ef6 git log v1 \uff0d\uff0d v1 \u4ee3\u8868v1\u5206\u652f\u4e0b\u7684v1\u6587\u4ef6 git log --author=liuwenrong R6002_608 -- R6002_608\u5206\u652f\u4e0bliuwenrong\u7684\u6240\u6709\u63d0\u4ea4 git show \u67e5\u770b\u672c\u6b21\u63d0\u4ea4\u7684\u4fee\u6539 Tag \u63d0\u4ea4\u4ee3\u7801\u6d41\u7a0b git add . git commit -s -a -m '\u6ce8\u91ca' git commit -s -a \u4f1a\u8fdb\u5165\u7f16\u8f91\u5668 \u5f53\u51fa\u73b0 .git/index.lock\u65f6 \u591a\u5904\u7f16\u8f91\u6587\u4ef6,git\u9501\u4f4f\u4e86 \u53ef\u4ee5 rm .git/index.lock \u5220\u9664\u8be5\u6587\u4ef6\u540e,\u7ee7\u7eed\u6267\u884ccommit\u547d\u4ee4 git fetch origin dev \u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u5230\u672c\u5730\u4ed3\u5e93(\u7a7a\u683c) git rebase origin/dev \u672c\u5730\u4ed3\u5e93\u548c\u672c\u5730\u4ee3\u7801\u5408\u5e76(\u659c\u6760) git fetch \u8fdc\u7a0b\u4e3b\u673a\u540d \u5206\u652f\u540d git fetch \u8fdc\u7a0b\u4e3b\u673a\u540d \u5c06\u67d0\u4e2a\u8fdc\u7a0b\u4e3b\u673a\u7684\u66f4\u65b0\uff0c\u5168\u90e8\u53d6\u56de\u672c\u5730\u3002 git fetch\u53d6\u56de\u6240\u6709\u5206\u652f(branch)\u7684\u66f4\u65b0\u3002\u5982\u679c\u53ea\u60f3\u53d6\u56de\u7279\u5b9a\u5206\u652f\u7684\u66f4\u65b0\uff0c\u53ef\u4ee5\u6307\u5b9a\u5206\u652f\u540d\u3002 git rebase refs/remotes/origin/dev git rebase \u7b80\u5199 \u5982\u679c \u53d1\u751f\u51b2\u7a81 (\u4fee\u6539\u51b2\u7a81\u540e) git add . git rebase --continue push \u5230\u670d\u52a1\u5668 git push origin dev \u63d0\u4ea4\u5230\u670d\u52a1\u5668 \u5982\u679c\u662f\u7b2c\u4e00\u6b21push git push -u origin master \u7b2c\u4e00\u6b21push\u5230\u67d0\u4e2a\u65b0\u7684\u5206\u652f git push set-upstream [\u670d\u52a1\u5668\u7b80\u5199origin] [\u5206\u652f\u540d] \u4fee\u6539\u63d0\u4ea4\u4fe1\u606f \u4fee\u6539commit Msg\u4fe1\u606f git commit -s --amend [-v] \u63a5\u7740\u4fee\u6539\u5f53\u524d\u8fd9\u4e2a commit \u7684 messagen -v\u662f\u7f16\u8f91\u5668(\u53ef\u4e0d\u5199) git commit --amend --author=\"liuwenrong \" \u6ce8:\u53cc\u5f15\u53f7 TFS_555725:liuwenrong_sys_task: add network Signed-off-by: liuwenrong \u4fee\u6539\u5012\u6570\u7b2c\u4e8c\u4e2a\u63d0\u4ea4\u70b9Msg\u548c\u5185\u5bb9 git reset --soft commitId \u6216\u8005 git reset --soft HEAD^ \u56de\u9000\u63d0\u4ea4,\u4f46\u4ee3\u7801\u8fd8\u5728 git add . \u5c06\u5012\u6570\u7b2c\u4e00\u4e2a\u7684\u63d0\u4ea4\u5185\u5bb9\u4e5f\u52a0\u8fdb\u6765 git commit --amend git push origin HEAD --force \u5220\u9664\u6682\u5b58\u533a\u91cc\u7684\u6587\u4ef6 git rm --cache \u6587\u4ef6\u540d \u4f7f\u7528\u573a\u666f 1. \u628a\u5df2\u7ecfadd\u8ffd\u8e2a\u7684\u6587\u4ef6\u52a0\u5230.gitignore\u4e2d git rm -r --cache packages/SystemUI/.idea/ \u5220\u9664\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6587\u4ef6 git rm -f \u5982\u679c\u6587\u4ef6\u6ca1\u6709\u52a0\u5230\u6682\u5b58\u533a \u5148\u6267\u884c git add \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u5168\u90e8\u9700\u8981\u5220\u9664 git add . git rm -f -r \u6587\u4ef6\u5939 \u68c0\u51fa git checkout \u5207\u6362\u5206\u652f git checkout dev git checkout master git checkout ()\u63d0\u4ea4\u70b9\u54c8\u5e0c\u503c) \u5207\u6362\u5230\u8be5\u63d0\u4ea4\u70b9\u7684\u4ee3\u7801 \u68c0\u51fa\u6587\u4ef6/\u4ece\u672c\u5730\u4ed3\u5e93\u6062\u590d\u67d0\u6587\u4ef6 git checkout -- xx.java \u5982\u679c\u8be5\u6587\u4ef6\u5df2\u7ecf add \u5230\u6682\u5b58\u961f\u5217\u4e2d\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u5c31\u4e0d\u7075\u5149\u55bd \u9700\u8981\u5148\u8ba9\u8fd9\u4e2a\u6587\u4ef6\u53d6\u6d88\u6682\u5b58\uff1a git reset HEAD --+ \u9700\u8981\u53d6\u6d88\u6682\u5b58\u7684\u6587\u4ef6\u540d \u65b0\u5efa\u5e76\u5207\u6362\u5206\u652f git checkout -b xx git checkout -b dev \u65b0\u5efa\u5e76\u5207\u6362\u5230dev\u5206\u652f git checkout -b dev origin/dev \u65b0\u5efa\u672c\u5730\u5206\u652fdev\u5e76\u5173\u8054\u5230.git\u4ed3\u5e93\u7684dev\u5206\u652f git checkout -b dev origin/JV_8953_Dev Branch dev set up to track remote branch JV_8953_Dev from origin. Switched to a new branch \"dev\" git checkout dev(\u8fdc\u7a0b\u6709\u8fd9\u4e2a\u540c\u540d\u7684\u5206\u652f\u5c31\u4f1a\u5173\u8054) \u6ce8:\u6ca1\u6709 -b branch \u5206\u652f \u67e5\u770b\u5206\u652f git branch -a \u5168\u90e8\u5206\u652f git branch -r \u67e5\u770b\u8fdc\u7a0b\u5206\u652f git branch \u67e5\u770b\u672c\u5730\u5206\u652f git branch -v \u67e5\u770b\u5206\u652f\u6700\u540e\u4fee\u6539 git branch -vv \u67e5\u770b\u672c\u5730\u5206\u652f-\u5173\u8054\u670d\u52a1\u5668\u5206\u652f \u4ee5\u53ca\u6700\u540e\u7684\u63d0\u4ea4 \u5206\u652f\u64cd\u4f5c git branch xx \u521b\u5efaxx\u5206\u652f git branch -d xx \u5220\u9664xx\u5206\u652f(\u9700\u5728\u5176\u4ed6\u5206\u652f\u4e0b\u64cd\u4f5c) \u672a\u5408\u5e76\u4e0d\u80fd\u5220\u9664\u6210\u529f git branch -D xx \u5f3a\u5236\u5220\u9664xx\u5206\u652f(\u9700\u5728\u5176\u4ed6\u5206\u652f\u4e0b\u64cd\u4f5c) git branch 2f865e5 \u5728\u67d0\u4e2a\u63d0\u4ea4\u70b9\u5904\u65b0\u5efa\u4e00\u4e2a\u5206\u652f git branch --set-upstream-to=origin/JV_LauncherBS_Dev git rebase \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u670d\u52a1\u5668\u5206\u652f git branch --set-upstream dev_lwr coolyota/coolyota \u5173\u8054\u670d\u52a1\u5668 git branch --track dev coolyota/coolyota_dev \u6ca1\u7528 \u5206\u652f\u91cd\u547d\u540d git branch -m oldbranchname newbranchname Android Ignore \u9879\u76ee git clone Coolpad coolyota Y3 \u5e38\u89c1\u95ee\u9898 int\u6d41\u6709\u683c\u5f0f\u95ee\u9898,abort\u4e86\u672c\u6b21\u63d0\u4ea4 git reset --soft git commit -s -a \u5b50\u4e3b\u9898 \u5b50\u4e3b\u9898 repo\u540e\u5904\u4e8e\u6ca1\u6709\u5206\u652f\u72b6\u6001 git checkout JV_8953_Dev \u5207\u6362\u5230Dev\u5e76\u5173\u8054\u670d\u52a1\u5668Dev\u5206\u652f git checkout -b dev yulong/JV_8953_Dev \u5f53\u5173\u8054\u4e86\u51e0\u4e2a\u670d\u52a1\u5668\u5982 origin yulong zeusis \u670d\u52a1\u5668\u4ee3\u7801\u8986\u76d6\u672c\u5730\u63d0\u4ea4 git fetch --all git reset --hard yulong/JV_8953_Dev \u4e0d\u505a\u4efb\u4f55\u5408\u5e76,Rebase HEAD\u6307\u5411\u521a\u521a\u4e0b\u8f7d\u7684\u6700\u65b0\u7684\u7248\u672c Int\u5206\u652f\u8986\u76d6Dev\u5206\u652f git branch \u67e5\u770b\u672c\u5730\u5206\u652f\u540d \u5982:dev,int \u6216\u8005JV_8953_Dev,JV_8953_Int git checkout dev(\u6216\u8005JV_8953_Dev) git reset --hard int(\u6216\u8005JV_8953_Int) //\u5148\u5c06\u672c\u5730\u7684dev\u5206\u652f\u91cd\u7f6e\u6210int\u5206\u652f git push yulong JV_8953_Dev --force //\u518d\u63a8\u9001\u5230\u8fdc\u7a0bDev\u4ed3\u5e93 \u5b50\u4e3b\u9898 cherry-pick \u6709\u51b2\u7a81 dev\u5206\u652f\u6267\u884c\u4e86git pull \u6216\u8005fetch+merge\u547d\u4ee4\u5bfc\u81f4 merger\u4f1a\u5bfc\u81f4\u8be5commitId\u7684parentId\u4e0d\u662fint\u5206\u652f \u7684\u6700\u65b0\u63d0\u4ea4\u70b9 \u89e3\u51b3: dev \u56de\u9000\u4ee3\u7801\u540e \u7528rebase\u5408\u5e76 git reset --hard (commitId\u5408\u5e76\u4e4b\u524d\u7684\u63d0\u4ea4\u70b9) git fetch git rebase (commitId int\u5206\u652f\u6700\u65b0\u7684\u70b9\u5bf9\u5e94\u7684dev\u4e2d\u63d0\u4ea4\u70b9) \u5982\u679c\u6709\u51b2\u7a81,\u89e3\u51b3\u540e git add. git rebase --continue git checkout int git cherry-pick (commitID \u521a\u624ddev\u5206\u652frebase\u540e\u7684\u63d0\u4ea4\u70b9) \u5b50\u4e3b\u9898 \u5408\u5e76\u63d0\u4ea4\u70b9 JV_8953_Dev\u5206\u652f\u4e0a \u4e00\u4e2a\u529f\u80fd\u70b9\u65b0\u5efa\u672c\u5730\u5206\u652fgit checkout -b [local_function] \u5982: git checkout -b power \u5f53\u524d\u5904\u4e8e\u529f\u80fd\u5206\u652f\u4e0a\u5982:power\u5206\u652f \u6539\u5b8c\u4ee3\u7801,\u751f\u6210\u4e86\u591a\u4e2a\u63d0\u4ea4\u70b9,\u5408\u5e76\u6210\u4e00\u4e2a\u63d0\u4ea4\u70b9 git log commit 333 commit 222 commit 111 git reset --soft 111 \u91cd\u7f6e\u4e86222\u548c333\u7684\u63d0\u4ea4,\u4f46\u672c\u5730\u4ee3\u7801\u8fd8\u5728 git status \u67e5\u770b\u72b6\u6001/\u53ef\u4ee5\u4e0d\u6267\u884c git commit -s --amend \u4fee\u6539111\u63d0\u4ea4\u70b9\u7684msg TFS_565687:liuwenrong_sys_add:Modify A Screen theme and wallpaper sys app_BLauncher add fix opt \u4e0d\u7ba1\u6ce8\u91ca\u662f\u5426\u4fee\u6539,commitId\u90fd\u4f1a\u53d8 git status \u67e5\u770b\u72b6\u6001/\u53ef\u4ee5\u4e0d\u6267\u884c git branch -a \u67e5\u770b\u6240\u6709\u5206\u652f git checkout JV_8953_Dev \u540e\u5904\u4e8eDev\u5206\u652f\u4e0a: \u7136\u540e\u5c06\u529f\u80fd\u5206\u652f\u5408\u5e76\u8fc7\u6765 git rebase [local_fuction] git rebase [commit-id] \u4e5f\u53ef\u4ee5\u662f\u5408\u5e76\u67d0\u4e00\u4e2a\u63d0\u4ea4\u70b9 git pull --rebase \u62c9\u53d6\u670d\u52a1\u5668\u4ee3\u7801\u8ddf\u672c\u5730\u4ee3\u7801\u5408\u5e76 \u6709\u51b2\u7a81,\u89e3\u51b3\u5373\u53ef \u540c\u4e00\u4e2a\u63d0\u4ea4commitId\u4f1a\u53d8 git push yulong HEAD:JV_8953_Dev \u5f53\u540c\u65f6\u6709yulong\u548czeusis\u7684\u8fdc\u7a0b\u670d\u52a1\u5668,\u5fc5\u987b\u6307\u5b9a \u8981\u8d70\u8bfb git push coolyota HEAD:refs/for/coolyota_msm8953_dev Dev\u4e0a\u9a8c\u8bc1\u901a\u8fc7\u540e Dev\u5206\u652f\u4e0a git log \u67e5\u770b\u63d0\u4ea4\u70b9ID,\u4ee5\u4fbf\u63a5\u4e0b\u6765cherry-pick git branch -a \u67e5\u770b\u6240\u6709\u5206\u652f/\u5982\u679c\u81ea\u5df1\u8bb0\u4f4f\u4e86\u540d\u53ef\u4ee5\u4e0d\u67e5\u770b git checkout JV_8953_Int Release\u5206\u652f \u8d70\u8bfb git push coolyota HEAD:refs/for/CP_LauncherB_Release Int\u5206\u652f\u4e0a git cherry-pick [commit-1] [commit-2] \u5c06\u8981\u63d0\u4ea4\u7684\u70b9\u5408\u5e76\u5230Int\u6d41 git push HEAD:JV_8953_Int git push \u53ef\u4ee5\u7b80\u5199,\u8868\u793a\u5f53\u524d\u5206\u652f \u8d70\u8bfb git push yulong HEAD:refs/for/JV_8953_Int git push --no-thin yulong HEAD:refs/for/JV_8953_Int git push coolyota HEAD:refs/for/coolyota_msm8953_int \u5b50\u4e3b\u9898 \u56de\u9000\u5230\u6700\u8fd1\u4e00\u6b21\u7684\u63d0\u4ea4 git reset --hard HEAD git pull \u81ea\u7531\u4e3b\u9898 \u66f4\u65b0\u4ee3\u7801/\u5408\u5e76 git rebase \u7b80\u4ecb \u5728\u628a\u4ece\u5176\u4ed6\u5f00\u53d1\u8005\u5904\u62c9\u53d6\u7684\u63d0\u4ea4 \u5e94\u7528\u5230\u672c\u5730 \u5c06\u5f53\u524d\u5206\u652f\u548c\u4e0a\u6e38\u5206\u652f\u8fdb\u884c\u5408\u5e76 \u4f8b: dev\u6709\u4e00\u4e2acommitId \u65b0\u5efa\u4e00\u4e2a\u5206\u652fpower \u6b64\u65f6,Dev\u4e0a\u6709\u65b0\u7684\u63d0\u4ea4\u70b9CommitId git rebase dev \u5c06Dev\u7684\u63d0\u4ea4\u5408\u5e76\u8fc7\u6765 \u6b64\u6b21\u64cd\u4f5c\u53ef\u80fd\u63d0\u793aerror,\u8865\u4e01\u5931\u8d25,\u4f46\u4e0d\u5f71\u54cd\u6b63\u5e38rebase \u683c\u5f0f git rebase [-i | --interactive] [options] [--onto ] [] git rebase [-i | --interactive] [options] \u2013onto \u2013root [] git rebase \u2013continue | \u2013skip | \u2013abort fetch+rebase fetch+merge \u56de\u9000/\u64a4\u9500 git reset \u5b50\u4e3b\u9898 \u653e\u5f03\u672c\u5730\u4ee3\u7801 git reset --hard FETCH_HEAD \u5982\u679c\u60f3\u653e\u5f03\u672c\u5730\u7684\u6587\u4ef6\u4fee\u6539\uff0c\u53ef\u4ee5\u4f7f\u7528git reset --hard FETCH_HEAD\uff0cFETCH_HEAD\u8868\u793a\u4e0a\u4e00\u6b21\u6210\u529fgit pull\u4e4b\u540e\u5f62\u6210\u7684commit\u70b9\u3002\u7136\u540egit pull. \u5b50\u4e3b\u9898 git reset --hard commit_id \u56de\u9000\u5230\u4e0a\u4e00\u63d0\u4ea4\u70b9,\u5de5\u4f5c\u533a\u4ee3\u7801\u4e5f\u4f1a\u56de\u9000 \u4ee3\u7801\u56de\u9000\u5230\u5f53\u524d\u63d0\u4ea4\u70b9,\u5de5\u4f5c\u533a\u4ee3\u7801\u4e5f\u4f1a\u56de\u9000 \u56de\u9000\u5f53\u524d\u63d0\u4ea4\u70b9\u7684add\u548ccommit\u4ee5\u53ca\u4ee3\u7801\u64cd\u4f5c git reset --soft commit_id \u56de\u9000\u5f53\u524d\u63d0\u4ea4\u70b9\u4e4b\u524d\u7684commit\u64cd\u4f5c,\u4f1a\u4fdd\u7559\u672c\u5730\u4ee3\u7801 git reset commit_id \u56de\u9000\u5f53\u524d\u63d0\u4ea4\u70b9\u4e4b\u524d\u7684add\u548ccommit\u7684\u64cd\u4f5c git reset --hard HEAD~3 \u4f1a\u5c06\u6700\u65b0\u76843\u6b21\u63d0\u4ea4\u5168\u90e8\u91cd\u7f6e\uff0c\u5c31\u50cf\u6ca1\u6709\u63d0\u4ea4\u8fc7\u4e00\u6837\u3002 git reset \u64a4\u9500\u4e0a\u4e00\u6b21add . \u6ce8: \u8981\u56de\u9000\u5df2\u7ecfpush\u5230\u670d\u52a1\u5668\u7684\u63d0\u4ea4\u70b9,\u53ea\u80fd\u4f7f\u7528git revert git revert \u56de\u9000\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u63d0\u4ea4\u70b9,\u9002\u7528\u4e8e\u4e0a\u4e00\u63d0\u4ea4\u70b9\u5df2\u7ecfpush\u5230\u670d\u52a1\u5668\u4e86, git revert HEAD \u64a4\u9500\u5f53\u524d\u7684\u63d0\u4ea4\u70b9,\u56de\u5230\u524d\u4e00\u4e2a\u63d0\u4ea4\u70b9\u7684\u4ee3\u7801,\u4f46\u4f1a\u751f\u6210\u65b0\u7684\u63d0\u4ea4\u70b9,\u8fd9\u5c31\u662f\u4e0ereset --hard\u7684\u533a\u522b,\u6ce8:\u4f46\u672c\u5730\u6709\u4fee\u6539\u4f1a\u5931\u8d25 git revert HEAD~1 -m 1 git revert HEAD~1 \u53ea\u64a4\u9500\u5012\u6570\u7b2c\u4e8c\u6b21 commit,\u4f1a\u4fdd\u7559\u5012\u6570\u7b2c\u4e00\u6b21\u7684\u63d0\u4ea4\u70b9 git revert HEAD~1 -m 0 git revert commit \uff08\u6bd4\u5982\uff1a fa042ce \uff09\u64a4\u9500\u6307\u5b9a\u7684\u7248\u672c \u6ce8: \u672c\u5730revert\u4e0d\u4f1a\u751f\u6210ChangerId git checkout -- pull \u4f1a\u5f71\u54cdgithub\u7aef\u7684network\u56fe \u4e0d\u5efa\u8bae\u4f7f\u7528pull git pull \u8fdc\u7a0b\u4e3b\u673a\u540d \u8fdc\u7a0b\u5206\u652f\u540d : \u672c\u5730\u5206\u652f\u540d \u53d6\u56deorigin\u4e3b\u673a\u7684next\u5206\u652f\uff0c\u4e0e\u672c\u5730\u7684master\u5206\u652f\u5408\u5e76\uff0c\u9700\u8981\u5199\u6210\u4e0b\u9762\u8fd9\u6837 git pull origin next:master \u8fdc\u7a0b\u5206\u652f\u662f\u4e0e\u5f53\u524d\u5206\u652f\u5408\u5e76\uff0c\u5219\u5192\u53f7\u540e\u9762\u7684\u90e8\u5206\u53ef\u4ee5\u7701\u7565 git pull origin next \u5b9e\u8d28\u4e0a\uff0c\u8fd9\u7b49\u540c\u4e8e\u5148\u505agit fetch\uff0c\u518d\u505agit merge git fetch origin git merge origin/next \u5982\u679c\u5408\u5e76\u9700\u8981\u91c7\u7528rebase\u6a21\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u2013rebase\u9009\u9879\u3002 git pull --rebase \u8fdc\u7a0b\u4e3b\u673a\u540d \u8fdc\u7a0b\u5206\u652f\u540d : \u672c\u5730\u5206\u652f\u540d push \u5230\u8fdc\u7a0b\u670d\u52a1\u5668 git push --set-upstream origin dev \u63d0\u4ea4\u5230\u670d\u52a1\u5668\u5e76\u5728\u670d\u52a1\u5668\u65b0\u5efadev\u5206\u652f \u4e3e\u4f8b git push --set-upstream iReader R1001_BtPage git push --set-upstream iReader R1001_Dict git push \u8fdc\u7a0b\u4e3b\u673a\u540d \u672c\u5730\u5206\u652f\u540d : \u8fdc\u7a0b\u5206\u652f\u540d git push origin dev:develop git push iReader audioRemote:R1001_audio git push origin \u5c06\u5f53\u524d\u5206\u652f\u63a8\u9001\u5230origin\u4e3b\u673a\u7684\u5bf9\u5e94\u5206\u652f \u5408\u5e76\u5206\u652f merge\u662f\u5408\u5e76\u5168\u90e8\u63d0\u4ea4 cherry-pick\u9009\u62e9\u5408\u5e76 merge \u5408\u5e76dev\u5206\u652f git checkout master \u5207\u6362\u81f3master\u5206\u652f git merge --no-ff dev \u5982\u679c\u51fa\u73b0\u5408\u5e76\u51b2\u7a81\u5c31 \u627e\u76f8\u5e94\u6587\u4ef6\u6539\u51b2\u7a81 \u6539\u5b8c\u6267\u884c git add . \u548c git commit -a -m \"msg\" \u5982\u679c\u51fa\u73b0vi \u7f16\u8f91\u754c\u9762 \u5219\u8f93\u5165 \u5907\u6ce8 \u540e\u6309Esc : wq \u4fdd\u5b58\u9000\u51fa git cherry-pick \u5982\u679c\u5c06Dev\u4e2d\u7684\u4e00\u4e2acommitId\u5408\u5e76\u5230master dev\u5206\u652f\u4e0bgit log\u67e5\u770bCommitId\u5e76\u590d\u5236\u8981\u5408\u5e76\u7684CommitId (\u4e00\u4e2a\u63d0\u4ea4\u70b9\u5bf9\u5e94\u4e00\u4e2a\u54c8\u5e0c\u503c) git checkout master git cherry-pick git cherry-pick .. \u6216\u8005git cherry-pick ^.. \u524d\u8005\u8868\u793a\u628a \u5230 \u4e4b\u95f4(\u5de6\u5f00\u53f3\u95ed\uff0c\u4e0d\u5305\u542bstart-commit-id)\u7684\u63d0\u4ea4cherry-pick\u5230\u5f53\u524d\u5206\u652f\uff1b \u540e\u8005\u8868\u793a\u628a \u5230 \u4e4b\u95f4(\u95ed\u533a\u95f4\uff0c\u5305\u542bstart-commit-id)\u7684\u63d0\u4ea4cherry-pick\u5230\u5f53\u524d\u5206\u652f\u3002 \u9644\u5f00\u53d1\u5e38\u7528\u547d\u4ee4 \u5ffd\u7565\u6587\u4ef6.gitignore Android Studio\u4e0b\u7684.gitignore log \u67e5\u770b\u63d0\u4ea4\u4fe1\u606f git log \u67e5\u770b\u63d0\u4ea4\u4fe1\u606f gl=git log --oneline --all --graph --decorate $* \u6240\u6709\u4ed3\u7684\u76f4\u7ebf\u63d0\u4ea4\u56fe \u5e38\u89c1\u9519\u8bef \u4e2d\u7ea7 git remote \u4e00\u4e2aGit\u9879\u76ee\u7ed1\u5b9a\u591a\u4e2a\u8fdc\u7a0b\u670d\u52a1\u5668 git remote add origin [ur] \u589e\u52a0\u4e00\u4e2a\u8fdc\u7a0b\u8def\u5f84\u7b80\u5199\u4e3aorigin git remote add githup [githup:...] \u628aGitHub\u9879\u76ee\u8def\u5f84\u8bbe\u7f6e\u4e3agithup push\u5230\u4e0d\u540c\u670d\u52a1\u5668 push origin dev \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668 git remote -v git remote show origin \u66ff\u6362\u8fdc\u7a0b\u670d\u52a1\u5668url git remote set-url origin [url] \u91cd\u547d\u540d git remote rename oldName newName \u5b50\u4e3b\u9898 \u538b\u7f29\u6216\u4fee\u6539\u591a\u4e2aCommit git rebase -i HEAD~[number_of_commits] git rebase -i HEAD~2 \u538b\u7f29:\u628a\u8981\u4fee\u6539\u7684\u63d0\u4ea4\u70b9 pick\u6539\u6210s\u6216\u8005squash \u4fee\u6539 pick\u6539\u6210 r\u6216reword \u67e5\u770b\u6587\u4ef6\u8c01\u4fee\u6539\u8fc7 git blame (fileName)","title":"\u5e38\u7528Git\u5f00\u53d1\u5de5\u5177"},{"location":"tools/markdown/","text":"markdown \u5b98\u7f51\u5730\u5740: markdown","title":"Markdown"},{"location":"tools/markdown/#markdown","text":"\u5b98\u7f51\u5730\u5740: markdown","title":"markdown"},{"location":"tools/material/","text":"Material for MkDocs \u5b89\u88c5\u4f7f\u7528 MkDocs\b\u662f\u4e00\u5957\u9759\u6001\u5de5\u7a0b\u6587\u6863\u7f51\u7ad9\u6a21\u677f\uff0c\b\u4f7f\u7528\u7684\u662fmarkdown\u8bed\u6cd5\u7f16\u5199\u7684\u9875\u9762\uff0c\u540c\u65f6Material \bfor MkDocs\u5728Mkdocs\u4e0a\b\u4f7f\u7528\u4e86google\u7684\u6750\u6599\u8bbe\u8ba1\u5f00\u53d1\u7684\u7f51\u7ad9\u6a21\u677f\uff0c\b\u901a\u8fc7\u914d\u7f6e\u65b9\u5f0f\u80fd\u591f\b\u5feb\u901f\u642d\u5efa\u5de5\u7a0b\u6587\u6863\u9879\u76ee\uff0c\u540c\u65f6\u53ef\u4ee5\u53d1\u5e03\u5230githubpage\uff0cAmazon S3\uff0c\u5176\u4ed6\u81ea\u5df1\u642d\u5efa\u7684\u670d\u52a1\u5668\u4e0a \u5b98\u7f51: Material for MkDocs \b\u5b98\u7f51: MkDocs \u5b9a\u5236\u4e3b\u9898 \u5b9a\u5236\u4e3b\u9898: MkDocs\u5b9a\u5236\u4e3b\u9898 \u5b9a\u5236\u81ea\u5df1\u7684\u6837\u5b50: Styling your docs MkDocs GitHub\u5b9a\u5236\u4e3b\u9898: MkDocs Deploying \u53d1\u5e03\u5230GitHub: \u53d1\u5e03\u5230Github Hosting a Static Website on Amazon S3: Hosting a Static Website on Amazon S3 \u53d1\u5e03GitHub: \u53d1\u5e03GitHub Python\u652f\u6301 python --version # Python 2.7.13 pip --version # pip 9.0.1 Install MkDocs Installing and verifying MkDocs is as simple as: pip install mkdocs mkdocs --version # mkdocs, version 0.17.1 \u6ce8: Material requires MkDocs = 0.17.1. Installing Material using pip Material can be installed with pip: pip install mkdocs-material using choco If you're on Windows you can use Chocolatey to install Material: choco install mkdocs-material This will install all required dependencies like Python and MkDocs. cloning from GitHub Material can also be used without a system-wide installation by cloning the repository into a subfolder of your project's root directory: git clone https://github.com/squidfunk/mkdocs-material.git This is especially useful if you want to extend the theme and override some parts of the theme. The theme will reside in the folder mkdocs-material/material. \u5f00\u542f\u672c\u5730\u670d\u52a1\u5668 mkdocs serve deploying \u53d1\u5e03\u7ad9\u70b9 deploying GitHub page :\u53d1\u5e03\u7ad9\u70b9\u5230github\u4e0a Amazon s3 :\u53d1\u5e03\u7ad9\u70b9\u5230s3\u4e0a mkdocs gh-deploy mkdocs gh-deploy --help ghp-import github page \u53d1\u5e03\u5de5\u5177","title":"Material for MkDocs"},{"location":"tools/material/#material-for-mkdocs","text":"MkDocs\b\u662f\u4e00\u5957\u9759\u6001\u5de5\u7a0b\u6587\u6863\u7f51\u7ad9\u6a21\u677f\uff0c\b\u4f7f\u7528\u7684\u662fmarkdown\u8bed\u6cd5\u7f16\u5199\u7684\u9875\u9762\uff0c\u540c\u65f6Material \bfor MkDocs\u5728Mkdocs\u4e0a\b\u4f7f\u7528\u4e86google\u7684\u6750\u6599\u8bbe\u8ba1\u5f00\u53d1\u7684\u7f51\u7ad9\u6a21\u677f\uff0c\b\u901a\u8fc7\u914d\u7f6e\u65b9\u5f0f\u80fd\u591f\b\u5feb\u901f\u642d\u5efa\u5de5\u7a0b\u6587\u6863\u9879\u76ee\uff0c\u540c\u65f6\u53ef\u4ee5\u53d1\u5e03\u5230githubpage\uff0cAmazon S3\uff0c\u5176\u4ed6\u81ea\u5df1\u642d\u5efa\u7684\u670d\u52a1\u5668\u4e0a \u5b98\u7f51: Material for MkDocs \b\u5b98\u7f51: MkDocs","title":"Material for MkDocs \u5b89\u88c5\u4f7f\u7528"},{"location":"tools/material/#_1","text":"\u5b9a\u5236\u4e3b\u9898: MkDocs\u5b9a\u5236\u4e3b\u9898 \u5b9a\u5236\u81ea\u5df1\u7684\u6837\u5b50: Styling your docs MkDocs GitHub\u5b9a\u5236\u4e3b\u9898: MkDocs","title":"\u5b9a\u5236\u4e3b\u9898"},{"location":"tools/material/#deploying","text":"\u53d1\u5e03\u5230GitHub: \u53d1\u5e03\u5230Github Hosting a Static Website on Amazon S3: Hosting a Static Website on Amazon S3 \u53d1\u5e03GitHub: \u53d1\u5e03GitHub","title":"Deploying"},{"location":"tools/material/#python","text":"python --version # Python 2.7.13 pip --version # pip 9.0.1","title":"Python\u652f\u6301"},{"location":"tools/material/#install-mkdocs","text":"Installing and verifying MkDocs is as simple as: pip install mkdocs mkdocs --version # mkdocs, version 0.17.1 \u6ce8: Material requires MkDocs = 0.17.1.","title":"Install MkDocs"},{"location":"tools/material/#installing-material","text":"","title":"Installing Material"},{"location":"tools/material/#using-pip","text":"Material can be installed with pip: pip install mkdocs-material","title":"using pip"},{"location":"tools/material/#using-choco","text":"If you're on Windows you can use Chocolatey to install Material: choco install mkdocs-material This will install all required dependencies like Python and MkDocs.","title":"using choco"},{"location":"tools/material/#cloning-from-github","text":"Material can also be used without a system-wide installation by cloning the repository into a subfolder of your project's root directory: git clone https://github.com/squidfunk/mkdocs-material.git This is especially useful if you want to extend the theme and override some parts of the theme. The theme will reside in the folder mkdocs-material/material.","title":"cloning from GitHub"},{"location":"tools/material/#_2","text":"mkdocs serve","title":"\u5f00\u542f\u672c\u5730\u670d\u52a1\u5668"},{"location":"tools/material/#deploying_1","text":"\u53d1\u5e03\u7ad9\u70b9 deploying GitHub page :\u53d1\u5e03\u7ad9\u70b9\u5230github\u4e0a Amazon s3 :\u53d1\u5e03\u7ad9\u70b9\u5230s3\u4e0a mkdocs gh-deploy mkdocs gh-deploy --help ghp-import github page \u53d1\u5e03\u5de5\u5177","title":"deploying"},{"location":"tools/metadata/","text":"Metadata The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context. Installation Add the following lines to your mkdocs.yml : markdown_extensions : - meta Usage Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material. Setting a hero text Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts Linking sources When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output. Redirecting to another page It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url . Overrides Page title The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title. Page description The page description can also be overridden on a per-document level: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value. Disqus As describe in the getting started guide , the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Metadata"},{"location":"tools/metadata/#metadata","text":"The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context.","title":"Metadata"},{"location":"tools/metadata/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - meta","title":"Installation"},{"location":"tools/metadata/#usage","text":"Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material.","title":"Usage"},{"location":"tools/metadata/#setting-a-hero-text","text":"Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts","title":"Setting a hero text"},{"location":"tools/metadata/#linking-sources","text":"When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output.","title":"Linking sources"},{"location":"tools/metadata/#redirecting-to-another-page","text":"It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url .","title":"Redirecting to another page"},{"location":"tools/metadata/#overrides","text":"","title":"Overrides"},{"location":"tools/metadata/#page-title","text":"The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title.","title":"Page title"},{"location":"tools/metadata/#page-description","text":"The page description can also be overridden on a per-document level: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value.","title":"Page description"},{"location":"tools/metadata/#disqus","text":"As describe in the getting started guide , the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Disqus"},{"location":"tools/networktools/","text":"\u7f51\u7edc\u7ba1\u7406\u5de5\u5177 \u6f0f\u6d1e \u8de8\u7ad9\uff0csql\u6ce8\u5165\u6f0f\u6d1e \u7aef\u53e3\u626b\u63cf\u5de5\u5177 Mac\u81ea\u5e26Network Utility ip\u5730\u5740\u67e5\u8be2 \u5e26\u5730\u56fe\u7684ip\u5730\u5740\u67e5\u8be2 \u7aef\u53e3\u626b\u63cf\u5de5\u5177Port Scanning Networking Tool SuperScan \u63d2\u5ea7\u8fde\u63a5\u5230\u81ea\u5df1\u7535\u8111\u4e0a\u7684\u8bbe\u5907 \u7cfb\u7edf\u548c\u7f51\u7edc\u76d1\u63a7 AngryipIP\u5730\u5740\u626b\u63cf\u5de5\u5177 \u5e38\u89c1\u7684\u516b\u4e2a\u7f51\u7edcIP\u5730\u5740\u626b\u63cf\u5de5\u5177 \u7f51\u7edc\u4f18\u5316\u76d1\u63a7 solarwinds \u6f0f\u6d1e\u626b\u63cf\u5de5\u5177 \u6f0f\u6d1e\u626b\u63cf\u5de5\u5177 nmap x-scan web\u7ad9\u70b9\u7684\u5185\u5bb9\u4f2a\u9020\u548c\u540e\u9762\u7a0b\u5e8f Webshell WebShell\u5927\u96c6\u5408 WebShellkiller \u7f51\u7ad9\u540e\u95e8\u67e5\u6740\u5de5\u5177 ARP\u6b3a\u9a97 \u6f0f\u6d1e\u626b\u63cf\u4e3b\u8981\u662f\u5229\u7528\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177\u5bf9\u4e00\u7ec4\u76ee\u6807ip\u8fdb\u884c\u626b\u63cf\uff0c\u901a\u8fc7\u626b\u63cf\u80fd\u5f97\u5230\u5927\u91cf\u76f8\u5173\u7684ip\u3001\u670d\u52a1\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u4fe1\u606f\u3002\u6f0f\u6d1e\u626b\u63cf\u53ef\u5206\u4e3a\u7cfb\u7edf\u6f0f\u6d1e\u626b\u63cf\u548cweb\u6f0f\u6d1e\u626b\u63cf \u4e3b\u8981\u626b\u63cf\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u6f0f\u6d1e\uff0c\u5982\uff1a \u25c6\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u6f0f\u6d1e \u25c6\u65e7\u7684\u6216\u4f5c\u5e9f\u7684\u8f6f\u4ef6\u7248\u672c \u25c6\u7279\u7edc\u7ece\u6728\u9a6c\u6216\u540e\u95e8\u7a0b\u5e8f \u25c6\u81f4\u547d\u7684\u7279\u6743\u76f8\u5173\u7684\u6f0f\u6d1e \u25c6\u62d2\u7edd\u670d\u52a1\u6f0f\u6d1e \u25c6web\u548ccgi\u6f0f\u6d1e \u6f0f\u6d1e\u5e93\u4fe1\u606f\u5bf9\u4e8e\u6f0f\u6d1e\u626b\u63cf\u6709\u5f88\u591a\u5e2e\u52a9\uff0c\u5b83\u7684\u6765\u6e90\u4e3b\u8981\u662fiss\u7684x-force \u6f0f\u6d1e\u5e93\uff0c\u5b89\u5168\u7126\u70b9\u7684bugtraq\u6570\u636e\u5e93\u3001http\uff1a//cve.mitre.org\u4e0a\u7ef4\u62a4\u7684cve\u5217\u8868\u3002 \u6f0f\u6d1e\u626b\u63cf\u63a8\u8350\u5de5\u5177\uff1a\u542f\u660e\u7684\u5929\u955c\u6f0f\u6d1e\u626b\u63cf\u7cfb\u5217\u548cweb\u6f0f\u6d1e\u626b\u63cf\u7684Acunetix.Web.Vulnerability.Scanner4 \u7f51\u7ad9 \u5b89\u5168\u4fe1\u606f\u7f51\u7ad9 Bug\u7f51\u7ad9 Sql\u6ce8\u5165\u5de5\u5177 [mssql\u4e13\u7528\u5165\u4fb5\u5de5\u5177]","title":"\u7aef\u53e3\u626b\u63cf\u5de5\u5177"},{"location":"tools/networktools/#_1","text":"","title":"\u7f51\u7edc\u7ba1\u7406\u5de5\u5177"},{"location":"tools/networktools/#_2","text":"\u8de8\u7ad9\uff0csql\u6ce8\u5165\u6f0f\u6d1e","title":"\u6f0f\u6d1e"},{"location":"tools/networktools/#_3","text":"Mac\u81ea\u5e26Network Utility ip\u5730\u5740\u67e5\u8be2 \u5e26\u5730\u56fe\u7684ip\u5730\u5740\u67e5\u8be2 \u7aef\u53e3\u626b\u63cf\u5de5\u5177Port Scanning Networking Tool SuperScan \u63d2\u5ea7\u8fde\u63a5\u5230\u81ea\u5df1\u7535\u8111\u4e0a\u7684\u8bbe\u5907 \u7cfb\u7edf\u548c\u7f51\u7edc\u76d1\u63a7 AngryipIP\u5730\u5740\u626b\u63cf\u5de5\u5177 \u5e38\u89c1\u7684\u516b\u4e2a\u7f51\u7edcIP\u5730\u5740\u626b\u63cf\u5de5\u5177","title":"\u7aef\u53e3\u626b\u63cf\u5de5\u5177"},{"location":"tools/networktools/#_4","text":"solarwinds","title":"\u7f51\u7edc\u4f18\u5316\u76d1\u63a7"},{"location":"tools/networktools/#_5","text":"\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177 nmap x-scan web\u7ad9\u70b9\u7684\u5185\u5bb9\u4f2a\u9020\u548c\u540e\u9762\u7a0b\u5e8f Webshell WebShell\u5927\u96c6\u5408 WebShellkiller \u7f51\u7ad9\u540e\u95e8\u67e5\u6740\u5de5\u5177 ARP\u6b3a\u9a97 \u6f0f\u6d1e\u626b\u63cf\u4e3b\u8981\u662f\u5229\u7528\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177\u5bf9\u4e00\u7ec4\u76ee\u6807ip\u8fdb\u884c\u626b\u63cf\uff0c\u901a\u8fc7\u626b\u63cf\u80fd\u5f97\u5230\u5927\u91cf\u76f8\u5173\u7684ip\u3001\u670d\u52a1\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6f0f\u6d1e\u4fe1\u606f\u3002\u6f0f\u6d1e\u626b\u63cf\u53ef\u5206\u4e3a\u7cfb\u7edf\u6f0f\u6d1e\u626b\u63cf\u548cweb\u6f0f\u6d1e\u626b\u63cf \u4e3b\u8981\u626b\u63cf\u4e00\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u6f0f\u6d1e\uff0c\u5982\uff1a \u25c6\u64cd\u4f5c\u7cfb\u7edf\u6216\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u6f0f\u6d1e \u25c6\u65e7\u7684\u6216\u4f5c\u5e9f\u7684\u8f6f\u4ef6\u7248\u672c \u25c6\u7279\u7edc\u7ece\u6728\u9a6c\u6216\u540e\u95e8\u7a0b\u5e8f \u25c6\u81f4\u547d\u7684\u7279\u6743\u76f8\u5173\u7684\u6f0f\u6d1e \u25c6\u62d2\u7edd\u670d\u52a1\u6f0f\u6d1e \u25c6web\u548ccgi\u6f0f\u6d1e \u6f0f\u6d1e\u5e93\u4fe1\u606f\u5bf9\u4e8e\u6f0f\u6d1e\u626b\u63cf\u6709\u5f88\u591a\u5e2e\u52a9\uff0c\u5b83\u7684\u6765\u6e90\u4e3b\u8981\u662fiss\u7684x-force \u6f0f\u6d1e\u5e93\uff0c\u5b89\u5168\u7126\u70b9\u7684bugtraq\u6570\u636e\u5e93\u3001http\uff1a//cve.mitre.org\u4e0a\u7ef4\u62a4\u7684cve\u5217\u8868\u3002 \u6f0f\u6d1e\u626b\u63cf\u63a8\u8350\u5de5\u5177\uff1a\u542f\u660e\u7684\u5929\u955c\u6f0f\u6d1e\u626b\u63cf\u7cfb\u5217\u548cweb\u6f0f\u6d1e\u626b\u63cf\u7684Acunetix.Web.Vulnerability.Scanner4","title":"\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177"},{"location":"tools/networktools/#_6","text":"\u5b89\u5168\u4fe1\u606f\u7f51\u7ad9 Bug\u7f51\u7ad9 Sql\u6ce8\u5165\u5de5\u5177 [mssql\u4e13\u7528\u5165\u4fb5\u5de5\u5177]","title":"\u7f51\u7ad9"},{"location":"tools/permalinks/","text":"Permalinks Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document. Installation To enable permalinks, add the following to your mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link Usage When enabled, permalinks are inserted automatically.","title":"Permalinks"},{"location":"tools/permalinks/#permalinks","text":"Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document.","title":"Permalinks"},{"location":"tools/permalinks/#installation","text":"To enable permalinks, add the following to your mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link","title":"Installation"},{"location":"tools/permalinks/#usage","text":"When enabled, permalinks are inserted automatically.","title":"Usage"},{"location":"tools/toolsresource/","text":"Hbuilder \u524d\u7aef\u5f00\u53d1\u5de5\u5177","title":"Toolsresource"},{"location":"tools/vim/","text":"NERDTree \u5feb\u6377\u952e \u4ece\u6b64\u4f7f\u7528vim\u4ee3\u66ffsi\u770b\u4ee3\u7801 vim\u4ee3\u7801\u6298\u53e0\u529f\u80fd vim+cscope+ctags\u770b\u6e90\u4ee3\u7801\u7684\u65b9\u6cd5 VIM\u63d2\u4ef6: CTRLP ctrlp TagList\u63d2\u4ef6\u663e\u793a\u6587\u4ef6\u51fd\u6570\u5217\u8868 \u5982\u4f55\u7528Vim\u642d\u5efaIDE\uff1f \u901a\u8fc7Vim+\u5c11\u91cf\u63d2\u4ef6\u914d\u7f6e\u4e00\u4e2a\u9ad8\u6548\u7b80\u6d01\u7684IDE VIM \u4ee3\u7801\u6298\u53e0 Vim\u5982\u4f55\u5b9e\u73b0\u51fd\u6570\u5217\u8868 \u8ba9\u4f60\u7684vim\u80fd\u591f\u67e5\u770b\u51fd\u6570\u5217\u8868 vim\u4e2dtaglist\u4f7f\u7528(\u6bd4\u8f83\u8be6\u7ec6\u7684) Mac Vim IDE\u5f00\u53d1\u73af\u5883\u914d\u7f6e(Ctags, Taglist, Cscope, Omni, Supertab, \u6587\u4ef6\u5e03\u5c40) vim\u624b\u518c \u6211\u7684\u914d\u7f6e vim\u8fdb\u9636 vi/vim\u4f7f\u7528\u8fdb\u9636: \u7a0b\u5e8f\u5458\u7684\u5229\u5668 \u2013 cscope \u5982\u4f55\u5728\u7ec8\u7aef\u67e5\u770b\u56fe\u7247 Cscope\u7684\u4f7f\u7528\uff08\u9886\u7565Vim + Cscope\u7684\u5f3a\u5927\u9b45\u529b\uff09 NERDTree \u5feb\u6377\u952e\u8f91\u5f55 Vim - \u914d\u7f6eIDE\u4e00\u822c\u7684python\u73af\u5883 \u628avim\u914d\u7f6e\u6210\u987a\u624b\u7684python\u8f7b\u91cf\u7ea7IDE \u628avim\u914d\u7f6e\u6210\u987a\u624b\u7684python\u8f7b\u91cf\u7ea7IDE ctags\u4f7f\u7528\u8be6\u89e3","title":"Vim"},{"location":"tools/vscode/ReactNative/","text":"ReactNative \u5f00\u53d1\u73af\u5883\u914d\u7f6e vscode \u642d\u5efareact-native Vscode \u5f00\u53d1ReactNative\u9700\u8981\u7684\u5de5\u5177 vscode typings eslint: \u9759\u6001\u4ee3\u7801\u89e3\u51b3 Git history Dash React Native Tools Debug \u5f00\u53d1\u5de5\u5177 webpack-server RN\u6253\u79bb\u7ebf\u5305\u7bc7 ES6\u5f00\u53d1 JS\u5f00\u53d1\u6559\u7a0b \u70ed\u66f4\u65b0 ReactNavogator reactnativeexpress \u5bfc\u822a\u53c2\u6570\u5904\u7406 react-native-screens \u56fe\u6807\u5e93expo/vector-icons \u5b89\u88c5\u56fe\u6807\u5e93 react-native-vector-icons iconfont Vscode \u5b89\u88c5\u4ee3\u7801\u63d0\u793a: 2.1 \u5168\u5c40\u5b89\u88c5typings npm install -g typings 1 2.2 \u4f7f\u7528typings\u5b89\u88c5\u76f8\u5173\u4ee3\u7801\u63d0\u793a\u5305 \u5148\u8fdb\u5165\u4f60\u7684react-native\u9879\u76ee\u4e2d\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b: typings install dt~react-native --save --g npm install expo-font Auto Close Tag Auto Complete Tag AutoFileName Auto Rename Tag Auto Import Path Intellisense Color Highlight","title":"ReactNative \u5f00\u53d1\u73af\u5883\u914d\u7f6e"},{"location":"tools/vscode/ReactNative/#reactnative","text":"vscode \u642d\u5efareact-native Vscode \u5f00\u53d1ReactNative\u9700\u8981\u7684\u5de5\u5177 vscode typings eslint: \u9759\u6001\u4ee3\u7801\u89e3\u51b3 Git history Dash React Native Tools Debug \u5f00\u53d1\u5de5\u5177 webpack-server RN\u6253\u79bb\u7ebf\u5305\u7bc7 ES6\u5f00\u53d1 JS\u5f00\u53d1\u6559\u7a0b \u70ed\u66f4\u65b0 ReactNavogator reactnativeexpress \u5bfc\u822a\u53c2\u6570\u5904\u7406 react-native-screens \u56fe\u6807\u5e93expo/vector-icons \u5b89\u88c5\u56fe\u6807\u5e93 react-native-vector-icons iconfont Vscode \u5b89\u88c5\u4ee3\u7801\u63d0\u793a: 2.1 \u5168\u5c40\u5b89\u88c5typings npm install -g typings 1 2.2 \u4f7f\u7528typings\u5b89\u88c5\u76f8\u5173\u4ee3\u7801\u63d0\u793a\u5305 \u5148\u8fdb\u5165\u4f60\u7684react-native\u9879\u76ee\u4e2d\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b: typings install dt~react-native --save --g npm install expo-font Auto Close Tag Auto Complete Tag AutoFileName Auto Rename Tag Auto Import Path Intellisense Color Highlight","title":"ReactNative \u5f00\u53d1\u73af\u5883\u914d\u7f6e"}]}